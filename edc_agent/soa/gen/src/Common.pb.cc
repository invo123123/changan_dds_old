// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common.proto

#include "Common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Soa {
constexpr PB_APAsetnotice::PB_APAsetnotice(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : apa_custompoint_()
  , apa_guidepiont_()
  , ad_apaselfdefnslot_()
  , ad_radsdstnpoint_(nullptr)
  , ad_apatarslotsts_(nullptr)
  , apa_parknotice_5_(0u)
  , apa_voicenotice_1_(0u)
  , apa_customreq_(0u)
  , apa_window_notice_(0u)
  , apa_systemfailureflag_(0u)
  , apa_condition_notice_(0u)
  , apa_recomendreq_(0u)
  , apa_radslocalpathflag_(0u)
  , apa_radsglobalpathflag_(0u)
  , apa_remaindistance_(0u)
  , apa_radsnotice_(0u)
  , apa_soundnotice_(0u)
  , apa_hzpparknotice_(0u)
  , apa_hzprecomendreq_(0u)
  , apa_mapmanagementsts_(0u)
  , apa_hzplocalpathflag_(0u)
  , apa_hzpglobalpathflag_(0u)
  , apa_parkingpathflag_(0u)
  , apa_avoidpedestrians_(0u)
  , apa_avoidvehicle_(0u)
  , apa_drivedistance_(0u)
  , apa_abnormalexit_(0u)
  , apa_hzplearingpathflag_(0u)
  , apa_controlnotice_(0u)
  , apa_hzppathwindow_(0u)
  , apa_educatingmodests_(0u)
  , apa_slotnotice_(0u)
  , apa_customparknotice_(0u)
  , apa_messagereq_(0u)
  , ad_aparoadtrfcinfo_(0u)
  , ad_apawaittime_(0u)
  , ad_apaselfdefnvalid_(0u)
  , ad_apaviewag_(0u)
  , ad_apaguiding_(0u)
  , ad_apaaudiormnset_(0u){}
struct PB_APAsetnoticeDefaultTypeInternal {
  constexpr PB_APAsetnoticeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_APAsetnoticeDefaultTypeInternal() {}
  union {
    PB_APAsetnotice _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_APAsetnoticeDefaultTypeInternal _PB_APAsetnotice_default_instance_;
constexpr PB_ReturnCode::PB_ReturnCode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : code_(0u){}
struct PB_ReturnCodeDefaultTypeInternal {
  constexpr PB_ReturnCodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ReturnCodeDefaultTypeInternal() {}
  union {
    PB_ReturnCode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ReturnCodeDefaultTypeInternal _PB_ReturnCode_default_instance_;
constexpr PB_RWiperFltSt::PB_RWiperFltSt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : wiperfltst_(0u)
  , wshrfltst_(0u){}
struct PB_RWiperFltStDefaultTypeInternal {
  constexpr PB_RWiperFltStDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_RWiperFltStDefaultTypeInternal() {}
  union {
    PB_RWiperFltSt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_RWiperFltStDefaultTypeInternal _PB_RWiperFltSt_default_instance_;
constexpr PB_FunEnEvt::PB_FunEnEvt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : funentyp_(0u)
  , result_(0u)
  , funenfailreson_(0u){}
struct PB_FunEnEvtDefaultTypeInternal {
  constexpr PB_FunEnEvtDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_FunEnEvtDefaultTypeInternal() {}
  union {
    PB_FunEnEvt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_FunEnEvtDefaultTypeInternal _PB_FunEnEvt_default_instance_;
constexpr PB_TurnLiFltInfo::PB_TurnLiFltInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : fl_fltst_(0u)
  , fr_fltst_(0u)
  , rl_fltst_(0u)
  , rr_fltst_(0u){}
struct PB_TurnLiFltInfoDefaultTypeInternal {
  constexpr PB_TurnLiFltInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TurnLiFltInfoDefaultTypeInternal() {}
  union {
    PB_TurnLiFltInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TurnLiFltInfoDefaultTypeInternal _PB_TurnLiFltInfo_default_instance_;
constexpr PB_HUset_ADLanechangeStyle::PB_HUset_ADLanechangeStyle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_adlanechangestyle_(0u){}
struct PB_HUset_ADLanechangeStyleDefaultTypeInternal {
  constexpr PB_HUset_ADLanechangeStyleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_ADLanechangeStyleDefaultTypeInternal() {}
  union {
    PB_HUset_ADLanechangeStyle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_ADLanechangeStyleDefaultTypeInternal _PB_HUset_ADLanechangeStyle_default_instance_;
constexpr PB_EDC_APACustSlotData::PB_EDC_APACustSlotData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apacustslot_(){}
struct PB_EDC_APACustSlotDataDefaultTypeInternal {
  constexpr PB_EDC_APACustSlotDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_APACustSlotDataDefaultTypeInternal() {}
  union {
    PB_EDC_APACustSlotData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_APACustSlotDataDefaultTypeInternal _PB_EDC_APACustSlotData_default_instance_;
constexpr PB_HUset_NIDAudioWarStyle::PB_HUset_NIDAudioWarStyle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_nidaudiowarstyle_(0u){}
struct PB_HUset_NIDAudioWarStyleDefaultTypeInternal {
  constexpr PB_HUset_NIDAudioWarStyleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_NIDAudioWarStyleDefaultTypeInternal() {}
  union {
    PB_HUset_NIDAudioWarStyle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_NIDAudioWarStyleDefaultTypeInternal _PB_HUset_NIDAudioWarStyle_default_instance_;
constexpr PB_HUset_LASIntellgentModeSelection::PB_HUset_LASIntellgentModeSelection(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_lasintellgentmodeselection_(0u){}
struct PB_HUset_LASIntellgentModeSelectionDefaultTypeInternal {
  constexpr PB_HUset_LASIntellgentModeSelectionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_LASIntellgentModeSelectionDefaultTypeInternal() {}
  union {
    PB_HUset_LASIntellgentModeSelection _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_LASIntellgentModeSelectionDefaultTypeInternal _PB_HUset_LASIntellgentModeSelection_default_instance_;
constexpr PB_HUset_SEAOnOff::PB_HUset_SEAOnOff(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_seaonoff_(0u){}
struct PB_HUset_SEAOnOffDefaultTypeInternal {
  constexpr PB_HUset_SEAOnOffDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_SEAOnOffDefaultTypeInternal() {}
  union {
    PB_HUset_SEAOnOff _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_SEAOnOffDefaultTypeInternal _PB_HUset_SEAOnOff_default_instance_;
constexpr PB_AD_RPAVoiceCtrlFbData::PB_AD_RPAVoiceCtrlFbData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_rpavoicectrlfb_(0u){}
struct PB_AD_RPAVoiceCtrlFbDataDefaultTypeInternal {
  constexpr PB_AD_RPAVoiceCtrlFbDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_RPAVoiceCtrlFbDataDefaultTypeInternal() {}
  union {
    PB_AD_RPAVoiceCtrlFbData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_RPAVoiceCtrlFbDataDefaultTypeInternal _PB_AD_RPAVoiceCtrlFbData_default_instance_;
constexpr PB_UploadResult::PB_UploadResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : filehandle_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , taskid_(uint64_t{0u}){}
struct PB_UploadResultDefaultTypeInternal {
  constexpr PB_UploadResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_UploadResultDefaultTypeInternal() {}
  union {
    PB_UploadResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_UploadResultDefaultTypeInternal _PB_UploadResult_default_instance_;
constexpr PB_HUset_RelOverSpdWarnOffset::PB_HUset_RelOverSpdWarnOffset(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_reloverspdwarnoffset_(0u){}
struct PB_HUset_RelOverSpdWarnOffsetDefaultTypeInternal {
  constexpr PB_HUset_RelOverSpdWarnOffsetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_RelOverSpdWarnOffsetDefaultTypeInternal() {}
  union {
    PB_HUset_RelOverSpdWarnOffset _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_RelOverSpdWarnOffsetDefaultTypeInternal _PB_HUset_RelOverSpdWarnOffset_default_instance_;
constexpr PB_EleAirSuspHighModCHASts::PB_EleAirSuspHighModCHASts(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vmcactecasmodechasts_(0u){}
struct PB_EleAirSuspHighModCHAStsDefaultTypeInternal {
  constexpr PB_EleAirSuspHighModCHAStsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EleAirSuspHighModCHAStsDefaultTypeInternal() {}
  union {
    PB_EleAirSuspHighModCHASts _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EleAirSuspHighModCHAStsDefaultTypeInternal _PB_EleAirSuspHighModCHASts_default_instance_;
constexpr PB_Destination::PB_Destination(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lng_(0)
  , lat_(0)
  , type_(0){}
struct PB_DestinationDefaultTypeInternal {
  constexpr PB_DestinationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_DestinationDefaultTypeInternal() {}
  union {
    PB_Destination _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_DestinationDefaultTypeInternal _PB_Destination_default_instance_;
constexpr PB_CampWarningSet::PB_CampWarningSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : campwarningsettype_(0u)
  , campwarningsetswitch_(0u)
  , campwarningsethonk_(0u)
  , campwarningsetlight_(0u)
  , campwarningsetphone_(0u){}
struct PB_CampWarningSetDefaultTypeInternal {
  constexpr PB_CampWarningSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_CampWarningSetDefaultTypeInternal() {}
  union {
    PB_CampWarningSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_CampWarningSetDefaultTypeInternal _PB_CampWarningSet_default_instance_;
constexpr PB_HUset_LaneChangeReq::PB_HUset_LaneChangeReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_lanechangereq_(0u){}
struct PB_HUset_LaneChangeReqDefaultTypeInternal {
  constexpr PB_HUset_LaneChangeReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_LaneChangeReqDefaultTypeInternal() {}
  union {
    PB_HUset_LaneChangeReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_LaneChangeReqDefaultTypeInternal _PB_HUset_LaneChangeReq_default_instance_;
constexpr PB_TailGateSysSwFltSt_Struct::PB_TailGateSysSwFltSt_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tailgatesysswfltst_()
  , _tailgatesysswfltst_cached_byte_size_(0){}
struct PB_TailGateSysSwFltSt_StructDefaultTypeInternal {
  constexpr PB_TailGateSysSwFltSt_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TailGateSysSwFltSt_StructDefaultTypeInternal() {}
  union {
    PB_TailGateSysSwFltSt_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TailGateSysSwFltSt_StructDefaultTypeInternal _PB_TailGateSysSwFltSt_Struct_default_instance_;
constexpr PB_HUset_LASWarningModeSelection::PB_HUset_LASWarningModeSelection(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_laswarningmodeselection_(0u){}
struct PB_HUset_LASWarningModeSelectionDefaultTypeInternal {
  constexpr PB_HUset_LASWarningModeSelectionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_LASWarningModeSelectionDefaultTypeInternal() {}
  union {
    PB_HUset_LASWarningModeSelection _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_LASWarningModeSelectionDefaultTypeInternal _PB_HUset_LASWarningModeSelection_default_instance_;
constexpr PB_EleAirSuspIntenModSts::PB_EleAirSuspIntenModSts(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : suspintenmodsts_(0u){}
struct PB_EleAirSuspIntenModStsDefaultTypeInternal {
  constexpr PB_EleAirSuspIntenModStsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EleAirSuspIntenModStsDefaultTypeInternal() {}
  union {
    PB_EleAirSuspIntenModSts _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EleAirSuspIntenModStsDefaultTypeInternal _PB_EleAirSuspIntenModSts_default_instance_;
constexpr PB_C2_ADASStorageTimes::PB_C2_ADASStorageTimes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : stospeedadjust_(0u)
  , stotimeintervaladjust_(0u)
  , stotargetdecelerate_(0u)
  , stospeeduptolimitation_(0u)
  , stospeeddownlimitation_(0u)
  , stosetcruisespeed_(0u)
  , stoldc_(0u)
  , stoldcdes_(0u)
  , stoudlcleft_(0u)
  , stoudlcright_(0u)
  , stoudlcdes_(0u)
  , stoobsavoid_(0u)
  , stoobsavoiddes_(0u)
  , stolanechange_(0u)
  , stolanechangedes_(0u)
  , stointersectionassist_(0u)
  , ntersectionassistdes_(0u)
  , storampassist_(0u)
  , storampassistdes_(0u)
  , stolanechangefre_(0u)
  , stosmartspeedlimitation_(0u)
  , stoaccrec_(0u)
  , stoiaccrec_(0u)
  , stonidrec_(0u)
  , stoacctoiacc_(0u)
  , stoacctonid_(0u)
  , stoiacctonid_(0u)
  , stonidtoiacc_(0u)
  , stonidtoacc_(0u)
  , stoiacctoacc_(0u)
  , stolongtakeover_(0u)
  , stolattakeover_(0u)
  , stoeyesoff_(0u)
  , stohandsoff_(0u)
  , stosilentstate_(0u)
  , stosilentstateclear_(0u)
  , stoldw_(0u)
  , stolca_(0u)
  , stostartreminder_(0u)
  , stofcw_(0u)
  , stoldwpunish_(0u)
  , stooverspeed_(0u)
  , stodrivemode_(0u)
  , reserved1_(0u)
  , reserved2_(0u)
  , reserved3_(0u)
  , reserved4_(0u)
  , reserved5_(0u)
  , reserved6_(0u)
  , reserved7_(0u){}
struct PB_C2_ADASStorageTimesDefaultTypeInternal {
  constexpr PB_C2_ADASStorageTimesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_C2_ADASStorageTimesDefaultTypeInternal() {}
  union {
    PB_C2_ADASStorageTimes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_C2_ADASStorageTimesDefaultTypeInternal _PB_C2_ADASStorageTimes_default_instance_;
constexpr PB_RequestInfo::PB_RequestInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : request_id_(0u)
  , session_id_(0u){}
struct PB_RequestInfoDefaultTypeInternal {
  constexpr PB_RequestInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_RequestInfoDefaultTypeInternal() {}
  union {
    PB_RequestInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_RequestInfoDefaultTypeInternal _PB_RequestInfo_default_instance_;
constexpr PB_TrigEvt::PB_TrigEvt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : functype_(0u)
  , notitrigevt_(0u){}
struct PB_TrigEvtDefaultTypeInternal {
  constexpr PB_TrigEvtDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TrigEvtDefaultTypeInternal() {}
  union {
    PB_TrigEvt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TrigEvtDefaultTypeInternal _PB_TrigEvt_default_instance_;
constexpr PB_C2DmdPrmInfo::PB_C2DmdPrmInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vcufrntwhlacttq_(0u)
  , vcufrntwhlreqtq_(0u)
  , vcurewhlacttq_(0u)
  , vcurewhlreqtq_(0u)
  , vcuvehwhlreqtq_(0u)
  , vcupttqreal_(0u)
  , vcuaccrpedlposn_(0u)
  , vcucalcnaccrpedlposn_(0u)
  , vcupttqlimmax_(0u)
  , vcupttqlimmin_(0u)
  , vcufrntwhlacttqvld_(0u)
  , vcufrntwhlreqtqvld_(0u)
  , vcurewhlacttqvld_(0u)
  , vcurewhlreqtqvld_(0u)
  , vcuvehwhlreqtqvld_(0u)
  , vcupttqrealvld_(0u)
  , vcupttqlimmaxvld_(0u)
  , vcupttqlimminvld_(0u)
  , vcuaccrpedlposnvld_(0u)
  , vcucalcnaccrpedlposnvld_(0u)
  , vcuaccpedshield_(0u)
  , vcuovrdmodreq_(0u)
  , vcucomfltsts_(0u)
  , vcupttqreqavl_(0u)
  , vcushiftlvlposn_(0u)
  , vcugearshiftpositon_(0u)
  , vcushiftpostionvalid_(0u)
  , vcuapadriverinterruption_(0u)
  , vcuaparequestenable_(0u)
  , reserved1_(0u)
  , reserved2_(0u)
  , reserved3_(0u)
  , reserved4_(0u)
  , reserved5_(0u)
  , reserved6_(0u)
  , reserved7_(0u)
  , reserved8_(0u){}
struct PB_C2DmdPrmInfoDefaultTypeInternal {
  constexpr PB_C2DmdPrmInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_C2DmdPrmInfoDefaultTypeInternal() {}
  union {
    PB_C2DmdPrmInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_C2DmdPrmInfoDefaultTypeInternal _PB_C2DmdPrmInfo_default_instance_;
constexpr PB_ViuGearShiftPosnInfo::PB_ViuGearShiftPosnInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : viugearshiftposn_(0u)
  , viugearshiftposnvld_(0u){}
struct PB_ViuGearShiftPosnInfoDefaultTypeInternal {
  constexpr PB_ViuGearShiftPosnInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ViuGearShiftPosnInfoDefaultTypeInternal() {}
  union {
    PB_ViuGearShiftPosnInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ViuGearShiftPosnInfoDefaultTypeInternal _PB_ViuGearShiftPosnInfo_default_instance_;
constexpr PB_uint8_Struct::PB_uint8_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(0u){}
struct PB_uint8_StructDefaultTypeInternal {
  constexpr PB_uint8_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_uint8_StructDefaultTypeInternal() {}
  union {
    PB_uint8_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_uint8_StructDefaultTypeInternal _PB_uint8_Struct_default_instance_;
constexpr PB_BLERpaCmdRsp::PB_BLERpaCmdRsp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blerpacmdrspdata_()
  , _blerpacmdrspdata_cached_byte_size_(0)
  , keyindex_(0u){}
struct PB_BLERpaCmdRspDefaultTypeInternal {
  constexpr PB_BLERpaCmdRspDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_BLERpaCmdRspDefaultTypeInternal() {}
  union {
    PB_BLERpaCmdRsp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_BLERpaCmdRspDefaultTypeInternal _PB_BLERpaCmdRsp_default_instance_;
constexpr PB_PosnLiFltInfo::PB_PosnLiFltInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : fl_fltst_(0u)
  , fr_fltst_(0u)
  , rl_fltst_(0u)
  , rr_fltst_(0u){}
struct PB_PosnLiFltInfoDefaultTypeInternal {
  constexpr PB_PosnLiFltInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_PosnLiFltInfoDefaultTypeInternal() {}
  union {
    PB_PosnLiFltInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_PosnLiFltInfoDefaultTypeInternal _PB_PosnLiFltInfo_default_instance_;
constexpr PB_APAControleReq::PB_APAControleReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : apacontrolenable_(0u)
  , heartbeat_(0u){}
struct PB_APAControleReqDefaultTypeInternal {
  constexpr PB_APAControleReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_APAControleReqDefaultTypeInternal() {}
  union {
    PB_APAControleReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_APAControleReqDefaultTypeInternal _PB_APAControleReq_default_instance_;
constexpr PB_EDCset_EducatingModeOnOff::PB_EDCset_EducatingModeOnOff(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_educatingmodeonoff_(0u){}
struct PB_EDCset_EducatingModeOnOffDefaultTypeInternal {
  constexpr PB_EDCset_EducatingModeOnOffDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDCset_EducatingModeOnOffDefaultTypeInternal() {}
  union {
    PB_EDCset_EducatingModeOnOff _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDCset_EducatingModeOnOffDefaultTypeInternal _PB_EDCset_EducatingModeOnOff_default_instance_;
constexpr PB_EDC_RADSDrvrReqData::PB_EDC_RADSDrvrReqData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_radsdrvrreq_(0u){}
struct PB_EDC_RADSDrvrReqDataDefaultTypeInternal {
  constexpr PB_EDC_RADSDrvrReqDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_RADSDrvrReqDataDefaultTypeInternal() {}
  union {
    PB_EDC_RADSDrvrReqData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_RADSDrvrReqDataDefaultTypeInternal _PB_EDC_RADSDrvrReqData_default_instance_;
constexpr PB_MirrStsInfo::PB_MirrStsInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lemirrfoldctrl_(0u)
  , rimirrfoldctrl_(0u)
  , lemirrheat_(0u)
  , rimirrheat_(0u)
  , lemirrposnx_(0u)
  , lemirrposny_(0u)
  , rimirrposnx_(0u)
  , rimirrposny_(0u)
  , lemirrtarposnx_(0u)
  , lemirrtarposny_(0u)
  , rimirrtarposnx_(0u)
  , rimirrtarposny_(0u){}
struct PB_MirrStsInfoDefaultTypeInternal {
  constexpr PB_MirrStsInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_MirrStsInfoDefaultTypeInternal() {}
  union {
    PB_MirrStsInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_MirrStsInfoDefaultTypeInternal _PB_MirrStsInfo_default_instance_;
constexpr PB_EleAirSuspHighModSts::PB_EleAirSuspHighModSts(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : susphighmodsts_(0u){}
struct PB_EleAirSuspHighModStsDefaultTypeInternal {
  constexpr PB_EleAirSuspHighModStsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EleAirSuspHighModStsDefaultTypeInternal() {}
  union {
    PB_EleAirSuspHighModSts _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EleAirSuspHighModStsDefaultTypeInternal _PB_EleAirSuspHighModSts_default_instance_;
constexpr PB_AD_APAFctnStaData::PB_AD_APAFctnStaData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_apasysenasta_(0u)
  , ad_apasta_(0u)
  , ad_rpasta_(0u)
  , ad_rmasta_(0u)
  , ad_radssta_(0u){}
struct PB_AD_APAFctnStaDataDefaultTypeInternal {
  constexpr PB_AD_APAFctnStaDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_APAFctnStaDataDefaultTypeInternal() {}
  union {
    PB_AD_APAFctnStaData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_APAFctnStaDataDefaultTypeInternal _PB_AD_APAFctnStaData_default_instance_;
constexpr PB_HUset_ADStartStyle::PB_HUset_ADStartStyle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_adstartstyle_(0u){}
struct PB_HUset_ADStartStyleDefaultTypeInternal {
  constexpr PB_HUset_ADStartStyleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_ADStartStyleDefaultTypeInternal() {}
  union {
    PB_HUset_ADStartStyle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_ADStartStyleDefaultTypeInternal _PB_HUset_ADStartStyle_default_instance_;
constexpr PB_ADASCruiseSet::PB_ADASCruiseSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_curisemode_(0u)
  , ad_idaenablestatus_(0u)
  , ad_idastatus_(0u)
  , ad_lanechangefrequency_(0u)
  , ad_udlcenablestatus_(0u)
  , ad_nidaudiowarstyle_(0u)
  , ad_cslaenablestatus_(0u)
  , ad_cslmodestatus_(0u)
  , ad_overspeedsoundwarningenst_(0u)
  , ad_cslwarnoffsettp_(0u)
  , ad_absoverspdwarnoffset_(0u)
  , ad_reloverspdwarnoffset_(0u)
  , ad_autodrivestyle_(0u)
  , ad_adaccstyle_(0u)
  , ad_adstartstyle_(0u)
  , ad_adcurvestyle_(0u)
  , ad_adlanechangestyle_(0u)
  , ad_vehiclestartremindenable_(0u)
  , ad_rcwenablestatus_(0u)
  , ad_seamodestatus_(0u)
  , ad_bsdlcasetting_(0u)
  , ad_bsdlcaremindmode_(0u){}
struct PB_ADASCruiseSetDefaultTypeInternal {
  constexpr PB_ADASCruiseSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ADASCruiseSetDefaultTypeInternal() {}
  union {
    PB_ADASCruiseSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ADASCruiseSetDefaultTypeInternal _PB_ADASCruiseSet_default_instance_;
constexpr PB_HUset_CSLWarnOffsetTp::PB_HUset_CSLWarnOffsetTp(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_cslwarnoffsettp_(0u){}
struct PB_HUset_CSLWarnOffsetTpDefaultTypeInternal {
  constexpr PB_HUset_CSLWarnOffsetTpDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_CSLWarnOffsetTpDefaultTypeInternal() {}
  union {
    PB_HUset_CSLWarnOffsetTp _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_CSLWarnOffsetTpDefaultTypeInternal _PB_HUset_CSLWarnOffsetTp_default_instance_;
constexpr PB_DoorDrvStAll_Struct::PB_DoorDrvStAll_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : doordrvstall_()
  , _doordrvstall_cached_byte_size_(0){}
struct PB_DoorDrvStAll_StructDefaultTypeInternal {
  constexpr PB_DoorDrvStAll_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_DoorDrvStAll_StructDefaultTypeInternal() {}
  union {
    PB_DoorDrvStAll_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_DoorDrvStAll_StructDefaultTypeInternal _PB_DoorDrvStAll_Struct_default_instance_;
constexpr PB_LaneLedFltSt::PB_LaneLedFltSt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lelaneledfltst_(0u)
  , rilaneledfltst_(0u){}
struct PB_LaneLedFltStDefaultTypeInternal {
  constexpr PB_LaneLedFltStDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_LaneLedFltStDefaultTypeInternal() {}
  union {
    PB_LaneLedFltSt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_LaneLedFltStDefaultTypeInternal _PB_LaneLedFltSt_default_instance_;
constexpr PB_EDCset_NIDSelfLrngReq::PB_EDCset_NIDSelfLrngReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_nidselflrngreq_(0u){}
struct PB_EDCset_NIDSelfLrngReqDefaultTypeInternal {
  constexpr PB_EDCset_NIDSelfLrngReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDCset_NIDSelfLrngReqDefaultTypeInternal() {}
  union {
    PB_EDCset_NIDSelfLrngReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDCset_NIDSelfLrngReqDefaultTypeInternal _PB_EDCset_NIDSelfLrngReq_default_instance_;
constexpr PB_EDCset_PopUpWindowOperate::PB_EDCset_PopUpWindowOperate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_popupwindowoperate_(0u){}
struct PB_EDCset_PopUpWindowOperateDefaultTypeInternal {
  constexpr PB_EDCset_PopUpWindowOperateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDCset_PopUpWindowOperateDefaultTypeInternal() {}
  union {
    PB_EDCset_PopUpWindowOperate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDCset_PopUpWindowOperateDefaultTypeInternal _PB_EDCset_PopUpWindowOperate_default_instance_;
constexpr PB_ResponseInfo::PB_ResponseInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : request_id_(0u)
  , session_id_(0u)
  , vehfield_(0u)
  , sourcemod_(0u)
  , rtncode_(0u){}
struct PB_ResponseInfoDefaultTypeInternal {
  constexpr PB_ResponseInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ResponseInfoDefaultTypeInternal() {}
  union {
    PB_ResponseInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ResponseInfoDefaultTypeInternal _PB_ResponseInfo_default_instance_;
constexpr PB_FileEntity::PB_FileEntity(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : payload_()
  , _payload_cached_byte_size_(0)
  , verifycode_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PB_FileEntityDefaultTypeInternal {
  constexpr PB_FileEntityDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_FileEntityDefaultTypeInternal() {}
  union {
    PB_FileEntity _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_FileEntityDefaultTypeInternal _PB_FileEntity_default_instance_;
constexpr PB_HUset_AutoDriveStyle::PB_HUset_AutoDriveStyle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_autodrivestyle_(0u){}
struct PB_HUset_AutoDriveStyleDefaultTypeInternal {
  constexpr PB_HUset_AutoDriveStyleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_AutoDriveStyleDefaultTypeInternal() {}
  union {
    PB_HUset_AutoDriveStyle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_AutoDriveStyleDefaultTypeInternal _PB_HUset_AutoDriveStyle_default_instance_;
constexpr PB_C2TripSum::PB_C2TripSum(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : c2_useridnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , ads_totalmiles_(0)
  , ads_nidmiles_(0)
  , ads_safefuntritime_(0u)
  , ads_aebtritime_(0u)
  , ads_aestritime_(0u)
  , ads_elktritime_(0u)
  , ads_throughramptime_(0u)
  , ads_throughintersectiontime_(0u)
  , ads_lanechangetime_(0u)
  , ads_takeovertime_(0u)
  , ads_obsavoidtime_(0u)
  , ads_nidlongestmiles_(0)
  , apa_usetime_(0u)
  , apa_savetime_(0u)
  , ads_adsusetime_(0u){}
struct PB_C2TripSumDefaultTypeInternal {
  constexpr PB_C2TripSumDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_C2TripSumDefaultTypeInternal() {}
  union {
    PB_C2TripSum _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_C2TripSumDefaultTypeInternal _PB_C2TripSum_default_instance_;
constexpr PB_BLERpaCmdReq::PB_BLERpaCmdReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blerpadata_()
  , _blerpadata_cached_byte_size_(0)
  , keyindex_(0u){}
struct PB_BLERpaCmdReqDefaultTypeInternal {
  constexpr PB_BLERpaCmdReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_BLERpaCmdReqDefaultTypeInternal() {}
  union {
    PB_BLERpaCmdReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_BLERpaCmdReqDefaultTypeInternal _PB_BLERpaCmdReq_default_instance_;
constexpr PB_uint32_Struct::PB_uint32_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(0u){}
struct PB_uint32_StructDefaultTypeInternal {
  constexpr PB_uint32_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_uint32_StructDefaultTypeInternal() {}
  union {
    PB_uint32_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_uint32_StructDefaultTypeInternal _PB_uint32_Struct_default_instance_;
constexpr PB_MFSSwtInfo::PB_MFSSwtInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mfsswtll_(0u)
  , mfsswtpressll_(0u)
  , mfsswtlr_(0u)
  , mfsswtpresslr_(0u)
  , mfsswtlok_(0u)
  , mfsswtpresslok_(0u)
  , mfsswtlu_(0u)
  , mfsswtpresslu_(0u)
  , mfsswtlp_(0u)
  , mfsswtpresslp_(0u)
  , mfsswtlone_(0u)
  , mfsswtpresslone_(0u)
  , mfsswtltwo_(0u)
  , mfsswtpressltwo_(0u)
  , mfsswtrl_(0u)
  , mfsswtpressrl_(0u)
  , mfsswtrr_(0u)
  , mfsswtpressrr_(0u)
  , mfsswtrok_(0u)
  , mfsswtpressrok_(0u)
  , mfsswtru_(0u)
  , mfsswtpressru_(0u)
  , mfsswtrp_(0u)
  , mfsswtpressrp_(0u)
  , mfsswtrone_(0u)
  , mfsswtpressrone_(0u)
  , mfsswtrtwo_(0u)
  , mfsswtpressrtwo_(0u)
  , mfsswtrolllu_(0u)
  , mfsswtrolllp_(0u)
  , mfsswtrollru_(0u)
  , mfsswtrollrp_(0u){}
struct PB_MFSSwtInfoDefaultTypeInternal {
  constexpr PB_MFSSwtInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_MFSSwtInfoDefaultTypeInternal() {}
  union {
    PB_MFSSwtInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_MFSSwtInfoDefaultTypeInternal _PB_MFSSwtInfo_default_instance_;
constexpr PB_Point2Dguideline_Struct::PB_Point2Dguideline_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : seq_(){}
struct PB_Point2Dguideline_StructDefaultTypeInternal {
  constexpr PB_Point2Dguideline_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_Point2Dguideline_StructDefaultTypeInternal() {}
  union {
    PB_Point2Dguideline_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_Point2Dguideline_StructDefaultTypeInternal _PB_Point2Dguideline_Struct_default_instance_;
constexpr PB_EDCset_MainScreenOperate::PB_EDCset_MainScreenOperate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_mainscreenoperate_(0u){}
struct PB_EDCset_MainScreenOperateDefaultTypeInternal {
  constexpr PB_EDCset_MainScreenOperateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDCset_MainScreenOperateDefaultTypeInternal() {}
  union {
    PB_EDCset_MainScreenOperate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDCset_MainScreenOperateDefaultTypeInternal _PB_EDCset_MainScreenOperate_default_instance_;
constexpr PB_FogActCtrlInfo::PB_FogActCtrlInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_actctrlst_(0u)
  , ri_actctrlst_(0u)
  , le_reactctrlst_(0u)
  , ri_reactctrlst_(0u){}
struct PB_FogActCtrlInfoDefaultTypeInternal {
  constexpr PB_FogActCtrlInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_FogActCtrlInfoDefaultTypeInternal() {}
  union {
    PB_FogActCtrlInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_FogActCtrlInfoDefaultTypeInternal _PB_FogActCtrlInfo_default_instance_;
constexpr PB_VIUPwrPortRstInfo_Struct::PB_VIUPwrPortRstInfo_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : viupwrportrstinfo_(){}
struct PB_VIUPwrPortRstInfo_StructDefaultTypeInternal {
  constexpr PB_VIUPwrPortRstInfo_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_VIUPwrPortRstInfo_StructDefaultTypeInternal() {}
  union {
    PB_VIUPwrPortRstInfo_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_VIUPwrPortRstInfo_StructDefaultTypeInternal _PB_VIUPwrPortRstInfo_Struct_default_instance_;
constexpr PB_AD_APAVoiceCtrlFbData::PB_AD_APAVoiceCtrlFbData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_apavoicectrlfb_(0u){}
struct PB_AD_APAVoiceCtrlFbDataDefaultTypeInternal {
  constexpr PB_AD_APAVoiceCtrlFbDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_APAVoiceCtrlFbDataDefaultTypeInternal() {}
  union {
    PB_AD_APAVoiceCtrlFbData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_APAVoiceCtrlFbDataDefaultTypeInternal _PB_AD_APAVoiceCtrlFbData_default_instance_;
constexpr PB_PwrCtr::PB_PwrCtr(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pwrpinid_(0u)
  , ctrcmd_(0u)
  , hldupti_(0u)
  , ioposition_(0u){}
struct PB_PwrCtrDefaultTypeInternal {
  constexpr PB_PwrCtrDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_PwrCtrDefaultTypeInternal() {}
  union {
    PB_PwrCtr _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_PwrCtrDefaultTypeInternal _PB_PwrCtr_default_instance_;
constexpr PB_ADAS_MapTrafficSign::PB_ADAS_MapTrafficSign(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : warning_reversecurve_(0u)
  , warning_continuousdetours_(0u)
  , warning_pedestrian_(0u)
  , warning_slip_(0u)
  , warning_tunnel_(0u)
  , warning_slow_(0u)
  , warning_roadworks_(0u)
  , prohibitory_driveinto_(0u)
  , prohibitory_motorvehicles_(0u)
  , prohibitory_turnright_(0u)
  , prohibitory_straight_(0u)
  , prohibitory_uturn_(0u)
  , prohibitory_overtake_(0u)
  , prohibitory_vehicleparking_(0u)
  , prohibitory_vehparklongtime_(0u)
  , prohibitory_speedlimit_(0u)
  , prohibitory_stoptogiveway_(0u)
  , prohibitory_enter_(0u)
  , prohibitory_honking_(0u)
  , prohibitory_givewaytooncoming_(0u)
  , indication_oneway_(0u)
  , indication_walk_(0u)
  , indication_mainroadpriority_(0u)
  , indication_pedestriancrossing_(0u)
  , indication_buslane_(0u)
  , warning_reversecurve_dis_(0u)
  , warning_continuousdetours_dis_(0u)
  , warning_pedestrian_dis_(0u)
  , warning_slip_dis_(0u)
  , warning_tunnel_dis_(0u)
  , warning_slow_dis_(0u)
  , warning_roadworks_dis_(0u)
  , prohibitory_driveinto_dis_(0u)
  , prohibitory_motorvehicles_dis_(0u)
  , prohibitory_turnright_dis_(0u)
  , prohibitory_straight_dis_(0u)
  , prohibitory_uturn_dis_(0u)
  , prohibitory_overtake_dis_(0u)
  , prohibitory_vehpark_dis_(0u)
  , prohibitory_vehparklongt_dis_(0u)
  , prohibitory_speedlimit_dis_(0u)
  , prohibitory_stoptogiveway_dis_(0u)
  , prohibitory_enter_dis_(0u)
  , prohibitory_honking_dis_(0u)
  , prohibitory_givewayoncom_dis_(0u)
  , indication_oneway_dis_(0u)
  , indication_walk_dis_(0u)
  , indication_mainroadpri_dis_(0u)
  , indication_pedestriancro_dis_(0u)
  , indication_buslane_dis_(0u){}
struct PB_ADAS_MapTrafficSignDefaultTypeInternal {
  constexpr PB_ADAS_MapTrafficSignDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ADAS_MapTrafficSignDefaultTypeInternal() {}
  union {
    PB_ADAS_MapTrafficSign _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ADAS_MapTrafficSignDefaultTypeInternal _PB_ADAS_MapTrafficSign_default_instance_;
constexpr PB_HUset_VC_ACCactive::PB_HUset_VC_ACCactive(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_vc_accactive_(0u){}
struct PB_HUset_VC_ACCactiveDefaultTypeInternal {
  constexpr PB_HUset_VC_ACCactiveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_VC_ACCactiveDefaultTypeInternal() {}
  union {
    PB_HUset_VC_ACCactive _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_VC_ACCactiveDefaultTypeInternal _PB_HUset_VC_ACCactive_default_instance_;
constexpr PB_EDC_APADrvrReqSlotIDData::PB_EDC_APADrvrReqSlotIDData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apadrvrreqslotid_(0){}
struct PB_EDC_APADrvrReqSlotIDDataDefaultTypeInternal {
  constexpr PB_EDC_APADrvrReqSlotIDDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_APADrvrReqSlotIDDataDefaultTypeInternal() {}
  union {
    PB_EDC_APADrvrReqSlotIDData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_APADrvrReqSlotIDDataDefaultTypeInternal _PB_EDC_APADrvrReqSlotIDData_default_instance_;
constexpr PB_int32_Struct::PB_int32_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(0){}
struct PB_int32_StructDefaultTypeInternal {
  constexpr PB_int32_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_int32_StructDefaultTypeInternal() {}
  union {
    PB_int32_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_int32_StructDefaultTypeInternal _PB_int32_Struct_default_instance_;
constexpr PB_DDSPayload_Struct::PB_DDSPayload_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : seq_()
  , _seq_cached_byte_size_(0){}
struct PB_DDSPayload_StructDefaultTypeInternal {
  constexpr PB_DDSPayload_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_DDSPayload_StructDefaultTypeInternal() {}
  union {
    PB_DDSPayload_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_DDSPayload_StructDefaultTypeInternal _PB_DDSPayload_Struct_default_instance_;
constexpr PB_FWiperFltSt::PB_FWiperFltSt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : wiperfltst_(0u)
  , wshrfltst_(0u)
  , linerrst_(0u)
  , moterrst_(0u)
  , supvoltlost_(0u)
  , supvolthist_(0u)
  , blkst_(0u)
  , overtempst_(0u)
  , timeoutst_(0u){}
struct PB_FWiperFltStDefaultTypeInternal {
  constexpr PB_FWiperFltStDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_FWiperFltStDefaultTypeInternal() {}
  union {
    PB_FWiperFltSt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_FWiperFltStDefaultTypeInternal _PB_FWiperFltSt_default_instance_;
constexpr PB_HUset_LaneChangeFrequency::PB_HUset_LaneChangeFrequency(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_lanechangefrequency_(0u){}
struct PB_HUset_LaneChangeFrequencyDefaultTypeInternal {
  constexpr PB_HUset_LaneChangeFrequencyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_LaneChangeFrequencyDefaultTypeInternal() {}
  union {
    PB_HUset_LaneChangeFrequency _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_LaneChangeFrequencyDefaultTypeInternal _PB_HUset_LaneChangeFrequency_default_instance_;
constexpr PB_HUset_ForwardColliAstSenStyle::PB_HUset_ForwardColliAstSenStyle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_forwardcolliastsenstyle_(0u){}
struct PB_HUset_ForwardColliAstSenStyleDefaultTypeInternal {
  constexpr PB_HUset_ForwardColliAstSenStyleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_ForwardColliAstSenStyleDefaultTypeInternal() {}
  union {
    PB_HUset_ForwardColliAstSenStyle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_ForwardColliAstSenStyleDefaultTypeInternal _PB_HUset_ForwardColliAstSenStyle_default_instance_;
constexpr PB_LoBeamActCtrlInfo::PB_LoBeamActCtrlInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_actctrlst_(0u)
  , ri_actctrlst_(0u){}
struct PB_LoBeamActCtrlInfoDefaultTypeInternal {
  constexpr PB_LoBeamActCtrlInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_LoBeamActCtrlInfoDefaultTypeInternal() {}
  union {
    PB_LoBeamActCtrlInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_LoBeamActCtrlInfoDefaultTypeInternal _PB_LoBeamActCtrlInfo_default_instance_;
constexpr PB_BLERpaCmdRspData_Struct::PB_BLERpaCmdRspData_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blerpacmdrspdata_()
  , _blerpacmdrspdata_cached_byte_size_(0){}
struct PB_BLERpaCmdRspData_StructDefaultTypeInternal {
  constexpr PB_BLERpaCmdRspData_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_BLERpaCmdRspData_StructDefaultTypeInternal() {}
  union {
    PB_BLERpaCmdRspData_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_BLERpaCmdRspData_StructDefaultTypeInternal _PB_BLERpaCmdRspData_Struct_default_instance_;
constexpr PB_HUset_ELKEnable::PB_HUset_ELKEnable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_elkenable_(0u){}
struct PB_HUset_ELKEnableDefaultTypeInternal {
  constexpr PB_HUset_ELKEnableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_ELKEnableDefaultTypeInternal() {}
  union {
    PB_HUset_ELKEnable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_ELKEnableDefaultTypeInternal _PB_HUset_ELKEnable_default_instance_;
constexpr PB_HUset_VC_CruiseSetSpeed::PB_HUset_VC_CruiseSetSpeed(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_vc_cruisesetspeed_(0u){}
struct PB_HUset_VC_CruiseSetSpeedDefaultTypeInternal {
  constexpr PB_HUset_VC_CruiseSetSpeedDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_VC_CruiseSetSpeedDefaultTypeInternal() {}
  union {
    PB_HUset_VC_CruiseSetSpeed _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_VC_CruiseSetSpeedDefaultTypeInternal _PB_HUset_VC_CruiseSetSpeed_default_instance_;
constexpr PB_TireWarnInfo::PB_TireWarnInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tireplowwarnfl_(0u)
  , tireplowwarnfr_(0u)
  , tireplowwarnrl_(0u)
  , tireplowwarnrr_(0u)
  , tirepleakwarnfl_(0u)
  , tirepleakwarnfr_(0u)
  , tirepleakwarnrl_(0u)
  , tirepleakwarnrr_(0u)
  , tpmssysfailrwarn_(0u){}
struct PB_TireWarnInfoDefaultTypeInternal {
  constexpr PB_TireWarnInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TireWarnInfoDefaultTypeInternal() {}
  union {
    PB_TireWarnInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TireWarnInfoDefaultTypeInternal _PB_TireWarnInfo_default_instance_;
constexpr PB_C2_ADASScore::PB_C2_ADASScore(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : c2_useridnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , c2_autodrivinscorereason_(0u)
  , c2_autodrivingscore_(0)
  , c2_iacctrip_(0)
  , c2_nidhighspeedtrip_(0)
  , c2_nidcitytrip_(0)
  , c2_autodrivingscorethistrip_(0u){}
struct PB_C2_ADASScoreDefaultTypeInternal {
  constexpr PB_C2_ADASScoreDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_C2_ADASScoreDefaultTypeInternal() {}
  union {
    PB_C2_ADASScore _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_C2_ADASScoreDefaultTypeInternal _PB_C2_ADASScore_default_instance_;
constexpr PB_EDCset_slot_ID::PB_EDCset_slot_ID(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_slot_id_(0u){}
struct PB_EDCset_slot_IDDefaultTypeInternal {
  constexpr PB_EDCset_slot_IDDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDCset_slot_IDDefaultTypeInternal() {}
  union {
    PB_EDCset_slot_ID _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDCset_slot_IDDefaultTypeInternal _PB_EDCset_slot_ID_default_instance_;
constexpr PB_SwitSetResult::PB_SwitSetResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0u)
  , switfailreson_(0u){}
struct PB_SwitSetResultDefaultTypeInternal {
  constexpr PB_SwitSetResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_SwitSetResultDefaultTypeInternal() {}
  union {
    PB_SwitSetResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_SwitSetResultDefaultTypeInternal _PB_SwitSetResult_default_instance_;
constexpr PB_HzrdKeySwtSt::PB_HzrdKeySwtSt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hzrdswst_(0u)
  , hzrdst_(0u){}
struct PB_HzrdKeySwtStDefaultTypeInternal {
  constexpr PB_HzrdKeySwtStDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HzrdKeySwtStDefaultTypeInternal() {}
  union {
    PB_HzrdKeySwtSt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HzrdKeySwtStDefaultTypeInternal _PB_HzrdKeySwtSt_default_instance_;
constexpr PB_ClusterTurnLiSt::PB_ClusterTurnLiSt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lesideturnlist_(0u)
  , risideturnlist_(0u){}
struct PB_ClusterTurnLiStDefaultTypeInternal {
  constexpr PB_ClusterTurnLiStDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ClusterTurnLiStDefaultTypeInternal() {}
  union {
    PB_ClusterTurnLiSt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ClusterTurnLiStDefaultTypeInternal _PB_ClusterTurnLiSt_default_instance_;
constexpr PB_LoBeamFltInfo::PB_LoBeamFltInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_fltst_(0u)
  , ri_fltst_(0u){}
struct PB_LoBeamFltInfoDefaultTypeInternal {
  constexpr PB_LoBeamFltInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_LoBeamFltInfoDefaultTypeInternal() {}
  union {
    PB_LoBeamFltInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_LoBeamFltInfoDefaultTypeInternal _PB_LoBeamFltInfo_default_instance_;
constexpr PB_EDC_APAAudioRmnSetData::PB_EDC_APAAudioRmnSetData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apaaudiormnset_(0u){}
struct PB_EDC_APAAudioRmnSetDataDefaultTypeInternal {
  constexpr PB_EDC_APAAudioRmnSetDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_APAAudioRmnSetDataDefaultTypeInternal() {}
  union {
    PB_EDC_APAAudioRmnSetData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_APAAudioRmnSetDataDefaultTypeInternal _PB_EDC_APAAudioRmnSetData_default_instance_;
constexpr PB_SentrySwitchParam::PB_SentrySwitchParam(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : switsettyp_(0u)
  , switfirstsetconf_(0u)
  , source_(0u){}
struct PB_SentrySwitchParamDefaultTypeInternal {
  constexpr PB_SentrySwitchParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_SentrySwitchParamDefaultTypeInternal() {}
  union {
    PB_SentrySwitchParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_SentrySwitchParamDefaultTypeInternal _PB_SentrySwitchParam_default_instance_;
constexpr PB_ADAS_MapCommonSignal::PB_ADAS_MapCommonSignal(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : mapdataupdatestatus_(0u)
  , navstatus_(0u)
  , navguigancestatus_(0u)
  , mapmatchstatus_(0u)
  , navcountrycode_(0u)
  , navspeedlimitunits_(0u){}
struct PB_ADAS_MapCommonSignalDefaultTypeInternal {
  constexpr PB_ADAS_MapCommonSignalDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ADAS_MapCommonSignalDefaultTypeInternal() {}
  union {
    PB_ADAS_MapCommonSignal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ADAS_MapCommonSignalDefaultTypeInternal _PB_ADAS_MapCommonSignal_default_instance_;
constexpr PB_APA_availablepoint_Struct::PB_APA_availablepoint_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : seq_(){}
struct PB_APA_availablepoint_StructDefaultTypeInternal {
  constexpr PB_APA_availablepoint_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_APA_availablepoint_StructDefaultTypeInternal() {}
  union {
    PB_APA_availablepoint_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_APA_availablepoint_StructDefaultTypeInternal _PB_APA_availablepoint_Struct_default_instance_;
constexpr PB_HUset_RedLightRemindEnable::PB_HUset_RedLightRemindEnable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_redlightremindenable_(0u){}
struct PB_HUset_RedLightRemindEnableDefaultTypeInternal {
  constexpr PB_HUset_RedLightRemindEnableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_RedLightRemindEnableDefaultTypeInternal() {}
  union {
    PB_HUset_RedLightRemindEnable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_RedLightRemindEnableDefaultTypeInternal _PB_HUset_RedLightRemindEnable_default_instance_;
constexpr PB_AD_BSDLCAOnOffSet::PB_AD_BSDLCAOnOffSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_bsdlcaonoff_(0u){}
struct PB_AD_BSDLCAOnOffSetDefaultTypeInternal {
  constexpr PB_AD_BSDLCAOnOffSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_BSDLCAOnOffSetDefaultTypeInternal() {}
  union {
    PB_AD_BSDLCAOnOffSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_BSDLCAOnOffSetDefaultTypeInternal _PB_AD_BSDLCAOnOffSet_default_instance_;
constexpr PB_EDC_APAPOCDirSelData::PB_EDC_APAPOCDirSelData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apapocdirsel_(0u){}
struct PB_EDC_APAPOCDirSelDataDefaultTypeInternal {
  constexpr PB_EDC_APAPOCDirSelDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_APAPOCDirSelDataDefaultTypeInternal() {}
  union {
    PB_EDC_APAPOCDirSelData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_APAPOCDirSelDataDefaultTypeInternal _PB_EDC_APAPOCDirSelData_default_instance_;
constexpr PB_SeatInfo::PB_SeatInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pinchstsfr_(0u)
  , pinchstshei_(0u)
  , pinchstsbr_(0u)
  , pinchstscus_(0u)
  , pinchstslegfr_(0u)
  , pinchstsleghei_(0u)
  , reserved1_(0u)
  , reserved2_(0u)
  , reserved3_(0u)
  , reserved4_(0u)
  , reserved5_(0u)
  , reserved6_(0u)
  , reserved7_(0u)
  , reserved8_(0u){}
struct PB_SeatInfoDefaultTypeInternal {
  constexpr PB_SeatInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_SeatInfoDefaultTypeInternal() {}
  union {
    PB_SeatInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_SeatInfoDefaultTypeInternal _PB_SeatInfo_default_instance_;
constexpr PB_HUset_CSLAEnable::PB_HUset_CSLAEnable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_cslaenable_(0u){}
struct PB_HUset_CSLAEnableDefaultTypeInternal {
  constexpr PB_HUset_CSLAEnableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_CSLAEnableDefaultTypeInternal() {}
  union {
    PB_HUset_CSLAEnable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_CSLAEnableDefaultTypeInternal _PB_HUset_CSLAEnable_default_instance_;
constexpr PB_HUset_OverspeedSoundWarEnable::PB_HUset_OverspeedSoundWarEnable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_overspeedsoundwarenable_(0u){}
struct PB_HUset_OverspeedSoundWarEnableDefaultTypeInternal {
  constexpr PB_HUset_OverspeedSoundWarEnableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_OverspeedSoundWarEnableDefaultTypeInternal() {}
  union {
    PB_HUset_OverspeedSoundWarEnable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_OverspeedSoundWarEnableDefaultTypeInternal _PB_HUset_OverspeedSoundWarEnable_default_instance_;
constexpr PB_DTCArrayInfo_Struct::PB_DTCArrayInfo_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : seq_()
  , _seq_cached_byte_size_(0){}
struct PB_DTCArrayInfo_StructDefaultTypeInternal {
  constexpr PB_DTCArrayInfo_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_DTCArrayInfo_StructDefaultTypeInternal() {}
  union {
    PB_DTCArrayInfo_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_DTCArrayInfo_StructDefaultTypeInternal _PB_DTCArrayInfo_Struct_default_instance_;
constexpr PB_AD_APAFctnIndnMsgData::PB_AD_APAFctnIndnMsgData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_apaunavlreas_(0u)
  , ad_apaprocinfo_(0u)
  , ad_apaabnormexitreas_(0u)
  , ad_radsunavlreas_(0u)
  , ad_radsprocinfo_(0u)
  , ad_radsexitreas_(0u){}
struct PB_AD_APAFctnIndnMsgDataDefaultTypeInternal {
  constexpr PB_AD_APAFctnIndnMsgDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_APAFctnIndnMsgDataDefaultTypeInternal() {}
  union {
    PB_AD_APAFctnIndnMsgData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_APAFctnIndnMsgDataDefaultTypeInternal _PB_AD_APAFctnIndnMsgData_default_instance_;
constexpr PB_TurnLiCtrlCmd::PB_TurnLiCtrlCmd(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : turnlictrlposn_(0u)
  , turnlioffdurn_(0u)
  , turnliondurn_(0u)
  , turnlipri_(0u)
  , turnlicnt_(0u)
  , turnlirecover_(0u)
  , flowingefc_(0u){}
struct PB_TurnLiCtrlCmdDefaultTypeInternal {
  constexpr PB_TurnLiCtrlCmdDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TurnLiCtrlCmdDefaultTypeInternal() {}
  union {
    PB_TurnLiCtrlCmd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TurnLiCtrlCmdDefaultTypeInternal _PB_TurnLiCtrlCmd_default_instance_;
constexpr PB_double_Struct::PB_double_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(0){}
struct PB_double_StructDefaultTypeInternal {
  constexpr PB_double_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_double_StructDefaultTypeInternal() {}
  union {
    PB_double_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_double_StructDefaultTypeInternal _PB_double_Struct_default_instance_;
constexpr PB_RLSSts::PB_RLSSts(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rlsst_(0u)
  , rlserrorst_(0u)
  , rainfalllevel_(0u)
  , rlscomerror_(0u)
  , wiprspd_(0u){}
struct PB_RLSStsDefaultTypeInternal {
  constexpr PB_RLSStsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_RLSStsDefaultTypeInternal() {}
  union {
    PB_RLSSts _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_RLSStsDefaultTypeInternal _PB_RLSSts_default_instance_;
constexpr PB_String_Struct::PB_String_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct PB_String_StructDefaultTypeInternal {
  constexpr PB_String_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_String_StructDefaultTypeInternal() {}
  union {
    PB_String_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_String_StructDefaultTypeInternal _PB_String_Struct_default_instance_;
constexpr PB_PosnLiActCtrlInfo::PB_PosnLiActCtrlInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : fl_actctrlst_(0u)
  , fr_actctrlst_(0u)
  , rl_actctrlst_(0u)
  , rr_actctrlst_(0u){}
struct PB_PosnLiActCtrlInfoDefaultTypeInternal {
  constexpr PB_PosnLiActCtrlInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_PosnLiActCtrlInfoDefaultTypeInternal() {}
  union {
    PB_PosnLiActCtrlInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_PosnLiActCtrlInfoDefaultTypeInternal _PB_PosnLiActCtrlInfo_default_instance_;
constexpr PB_HUset_LASModeSelection::PB_HUset_LASModeSelection(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_lasmodeselection_(0u){}
struct PB_HUset_LASModeSelectionDefaultTypeInternal {
  constexpr PB_HUset_LASModeSelectionDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_LASModeSelectionDefaultTypeInternal() {}
  union {
    PB_HUset_LASModeSelection _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_LASModeSelectionDefaultTypeInternal _PB_HUset_LASModeSelection_default_instance_;
constexpr PB_LineCurve::PB_LineCurve(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : linecruve_5m_(0)
  , linecruve_10m_(0)
  , linecruve_15m_(0)
  , linecruve_20m_(0)
  , linecruve_25m_(0)
  , linecruve_30m_(0){}
struct PB_LineCurveDefaultTypeInternal {
  constexpr PB_LineCurveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_LineCurveDefaultTypeInternal() {}
  union {
    PB_LineCurve _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_LineCurveDefaultTypeInternal _PB_LineCurve_default_instance_;
constexpr PB_DrSeatSts::PB_DrSeatSts(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : seatadjswtfr_(0u)
  , seatadjswthei_(0u)
  , seatadjswtbr_(0u)
  , seatadjswtcus_(0u)
  , seatadjswtlegfr_(0u)
  , seatadjswtleghei_(0u)
  , seatadjswtzerogravity_(0u)
  , frinitializedsts_(0u)
  , heiinitializedsts_(0u)
  , brinitializedsts_(0u)
  , cusinitializedsts_(0u)
  , legfrinitializedsts_(0u)
  , legheiinitializedsts_(0u)
  , seatheat_(0u)
  , seatvent_(0u)
  , frstopstsreason_(0u)
  , heistopstsreason_(0u)
  , brstopstsreason_(0u)
  , cusstopstsreason_(0u)
  , legfrstopstsreason_(0u)
  , legheistopstsreason_(0u)
  , drseatsbr_(0u){}
struct PB_DrSeatStsDefaultTypeInternal {
  constexpr PB_DrSeatStsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_DrSeatStsDefaultTypeInternal() {}
  union {
    PB_DrSeatSts _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_DrSeatStsDefaultTypeInternal _PB_DrSeatSts_default_instance_;
constexpr PB_AD_SEAOnOffStsSet::PB_AD_SEAOnOffStsSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_seaonoffsts_(0u){}
struct PB_AD_SEAOnOffStsSetDefaultTypeInternal {
  constexpr PB_AD_SEAOnOffStsSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_SEAOnOffStsSetDefaultTypeInternal() {}
  union {
    PB_AD_SEAOnOffStsSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_SEAOnOffStsSetDefaultTypeInternal _PB_AD_SEAOnOffStsSet_default_instance_;
constexpr PB_ObjStTypeDoorAll_Struct::PB_ObjStTypeDoorAll_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : objsttypedoorall_()
  , _objsttypedoorall_cached_byte_size_(0){}
struct PB_ObjStTypeDoorAll_StructDefaultTypeInternal {
  constexpr PB_ObjStTypeDoorAll_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ObjStTypeDoorAll_StructDefaultTypeInternal() {}
  union {
    PB_ObjStTypeDoorAll_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ObjStTypeDoorAll_StructDefaultTypeInternal _PB_ObjStTypeDoorAll_Struct_default_instance_;
constexpr PB_HUset_ForwardColliAstType::PB_HUset_ForwardColliAstType(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_forwardcolliasttype_(0u){}
struct PB_HUset_ForwardColliAstTypeDefaultTypeInternal {
  constexpr PB_HUset_ForwardColliAstTypeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_ForwardColliAstTypeDefaultTypeInternal() {}
  union {
    PB_HUset_ForwardColliAstType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_ForwardColliAstTypeDefaultTypeInternal _PB_HUset_ForwardColliAstType_default_instance_;
constexpr PB_HUset_VehicleStartRemindEnable::PB_HUset_VehicleStartRemindEnable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_vehiclestartremindenable_(0u){}
struct PB_HUset_VehicleStartRemindEnableDefaultTypeInternal {
  constexpr PB_HUset_VehicleStartRemindEnableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_VehicleStartRemindEnableDefaultTypeInternal() {}
  union {
    PB_HUset_VehicleStartRemindEnable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_VehicleStartRemindEnableDefaultTypeInternal _PB_HUset_VehicleStartRemindEnable_default_instance_;
constexpr PB_FWiperStsInfo::PB_FWiperStsInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : fwiperlogicsts_(0u)
  , washlogicsts_(0u)
  , wiperpossts_(0u)
  , washactualsts_(0u)
  , wiperrunningst_(0u)
  , motangle_(0u)
  , wiprmotspd_(0u)
  , wiperactst_(0u)
  , parkareast_(0u)
  , srvposst_(0u)
  , tunposst_(0u)
  , movedir_(0u)
  , fusbmovedtimes_(0u)
  , frntwiperswt_(0u)
  , wshrswt_(0u)
  , wiperintgeartimehard_(0u){}
struct PB_FWiperStsInfoDefaultTypeInternal {
  constexpr PB_FWiperStsInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_FWiperStsInfoDefaultTypeInternal() {}
  union {
    PB_FWiperStsInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_FWiperStsInfoDefaultTypeInternal _PB_FWiperStsInfo_default_instance_;
constexpr PB_UserNotiConfirEvt::PB_UserNotiConfirEvt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : functype_(0u)
  , noticonfirevt_(0u){}
struct PB_UserNotiConfirEvtDefaultTypeInternal {
  constexpr PB_UserNotiConfirEvtDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_UserNotiConfirEvtDefaultTypeInternal() {}
  union {
    PB_UserNotiConfirEvt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_UserNotiConfirEvtDefaultTypeInternal _PB_UserNotiConfirEvt_default_instance_;
constexpr PB_Point2DArray_Struct::PB_Point2DArray_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : point2darray_(){}
struct PB_Point2DArray_StructDefaultTypeInternal {
  constexpr PB_Point2DArray_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_Point2DArray_StructDefaultTypeInternal() {}
  union {
    PB_Point2DArray_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_Point2DArray_StructDefaultTypeInternal _PB_Point2DArray_Struct_default_instance_;
constexpr PB_BrkLiActCtrlInfo::PB_BrkLiActCtrlInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_actctrlst_(0u)
  , ri_actctrlst_(0u)
  , chsml_actctrlst_(0u){}
struct PB_BrkLiActCtrlInfoDefaultTypeInternal {
  constexpr PB_BrkLiActCtrlInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_BrkLiActCtrlInfoDefaultTypeInternal() {}
  union {
    PB_BrkLiActCtrlInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_BrkLiActCtrlInfoDefaultTypeInternal _PB_BrkLiActCtrlInfo_default_instance_;
constexpr PB_EDC_APADynamicOperateData::PB_EDC_APADynamicOperateData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apadynamicoperate_(0u){}
struct PB_EDC_APADynamicOperateDataDefaultTypeInternal {
  constexpr PB_EDC_APADynamicOperateDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_APADynamicOperateDataDefaultTypeInternal() {}
  union {
    PB_EDC_APADynamicOperateData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_APADynamicOperateDataDefaultTypeInternal _PB_EDC_APADynamicOperateData_default_instance_;
constexpr PB_RvsLiFltInfo::PB_RvsLiFltInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_fltst_(0u)
  , ri_fltst_(0u){}
struct PB_RvsLiFltInfoDefaultTypeInternal {
  constexpr PB_RvsLiFltInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_RvsLiFltInfoDefaultTypeInternal() {}
  union {
    PB_RvsLiFltInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_RvsLiFltInfoDefaultTypeInternal _PB_RvsLiFltInfo_default_instance_;
constexpr PB_AD_NIDSelfLrngFbset::PB_AD_NIDSelfLrngFbset(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_nidselflrngfb_(0u){}
struct PB_AD_NIDSelfLrngFbsetDefaultTypeInternal {
  constexpr PB_AD_NIDSelfLrngFbsetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_NIDSelfLrngFbsetDefaultTypeInternal() {}
  union {
    PB_AD_NIDSelfLrngFbset _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_NIDSelfLrngFbsetDefaultTypeInternal _PB_AD_NIDSelfLrngFbset_default_instance_;
constexpr PB_VideoParam::PB_VideoParam(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : camera_(0u)
  , recordtime_(0u){}
struct PB_VideoParamDefaultTypeInternal {
  constexpr PB_VideoParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_VideoParamDefaultTypeInternal() {}
  union {
    PB_VideoParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_VideoParamDefaultTypeInternal _PB_VideoParam_default_instance_;
constexpr PB_ADAS_MapNavigationSignal::PB_ADAS_MapNavigationSignal(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : curvedistance_(0u)
  , entercurveinfo_(0u)
  , rampdistance_(0u)
  , enterrampinfo_(0u)
  , rampinfo_(0u)
  , rampside_(0u)
  , navcurrentroadtype_(0u)
  , forwardroadtype_(0u)
  , lanecnt_(0u)
  , navspeedlimittype_(0u)
  , navspeedlimit_(0u)
  , speedlimitdistance_(0u)
  , entertunnelinfo_(0u)
  , tunneldistance_(0u)
  , tunnellength_(0u)
  , enterslopeinfo_(0u)
  , slopedistance_(0u)
  , fallingrockinfo_(0u)
  , fallingrockdis_(0u)
  , tollinfo_(0u)
  , tolldis_(0u)
  , construction_info_(0u)
  , construction_dis_(0u)
  , trafficaccident_info_(0u)
  , trafficaccident_dis_(0u)
  , branchinfo_(0u)
  , branch_dis_(0u)
  , numchangeoflanes_dist_(0u)
  , lane_changtype_(0u)
  , road_trafficflow_(0u)
  , roadcurvature_(0u)
  , roadcurvature_10m_(0u)
  , roadcurvature_20m_(0u)
  , roadcurvature_30m_(0u)
  , roadcurvature_40m_(0u)
  , roadcurvature_50m_(0u)
  , roadcurvature_60m_(0u)
  , roadcurvature_70m_(0u)
  , roadcurvature_80m_(0u)
  , roadcurvature_90m_(0u)
  , roadcurvature_100m_(0u)
  , roadcurvaturefar_(0u)
  , roadcurvature_300m_(0u)
  , roadcurvature_400m_(0u)
  , roadcurvature_600m_(0u)
  , slopegradient_(0u)
  , slopegradientfar_(0u)
  , slopegradient_300m_(0u)
  , slopegradient_10m_(0u)
  , slopegradient_20m_(0u)
  , slopegradient_30m_(0u)
  , slopegradient_40m_(0u)
  , slopegradient_50m_(0u)
  , slopegradient_100m_(0u)
  , intervalvelocityinfo_(0u)
  , intervalvelocitydis_(0u)
  , accidentprone_(0u)
  , accidentpronedistance_(0u)
  , laneconfluence_(0u)
  , laneconfluencedis_(0u)
  , bridgeinfo_(0u)
  , bridgedis_(0u)
  , weathertype_(0u)
  , serviceroad_(0u)
  , serviceroaddis_(0u)
  , lanetype_id1_(0u)
  , lanetype_id2_(0u)
  , lanetype_id3_(0u)
  , lanetype_id4_(0u)
  , lanetype_id5_(0u)
  , lanetype_id6_(0u)
  , ehrheartflag_(0u)
  , ehpheartflag_(0u)
  , adas_posn_pathldx_(0u)
  , adas_posn_offset_(0u)
  , byroad_(0u)
  , long_ramp_dis_(0u)
  , long_ramp_side_(0u)
  , llong_tunnel_len_(0u){}
struct PB_ADAS_MapNavigationSignalDefaultTypeInternal {
  constexpr PB_ADAS_MapNavigationSignalDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ADAS_MapNavigationSignalDefaultTypeInternal() {}
  union {
    PB_ADAS_MapNavigationSignal _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ADAS_MapNavigationSignalDefaultTypeInternal _PB_ADAS_MapNavigationSignal_default_instance_;
constexpr PB_APAReqreply::PB_APAReqreply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : reply_(0u){}
struct PB_APAReqreplyDefaultTypeInternal {
  constexpr PB_APAReqreplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_APAReqreplyDefaultTypeInternal() {}
  union {
    PB_APAReqreply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_APAReqreplyDefaultTypeInternal _PB_APAReqreply_default_instance_;
constexpr PB_ReevTotalMilg::PB_ReevTotalMilg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : futotalmilg_(0u)
  , evtotalmilg_(0u){}
struct PB_ReevTotalMilgDefaultTypeInternal {
  constexpr PB_ReevTotalMilgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ReevTotalMilgDefaultTypeInternal() {}
  union {
    PB_ReevTotalMilg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ReevTotalMilgDefaultTypeInternal _PB_ReevTotalMilg_default_instance_;
constexpr PB_int8_Struct::PB_int8_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(0){}
struct PB_int8_StructDefaultTypeInternal {
  constexpr PB_int8_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_int8_StructDefaultTypeInternal() {}
  union {
    PB_int8_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_int8_StructDefaultTypeInternal _PB_int8_Struct_default_instance_;
constexpr PB_OperationInfo::PB_OperationInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : request_id_(0u)
  , session_id_(0u)
  , service_st_(0u){}
struct PB_OperationInfoDefaultTypeInternal {
  constexpr PB_OperationInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_OperationInfoDefaultTypeInternal() {}
  union {
    PB_OperationInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_OperationInfoDefaultTypeInternal _PB_OperationInfo_default_instance_;
constexpr PB_BrkLiFltInfo::PB_BrkLiFltInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_fltst_(0u)
  , ri_fltst_(0u)
  , chsml_fltst_(0u){}
struct PB_BrkLiFltInfoDefaultTypeInternal {
  constexpr PB_BrkLiFltInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_BrkLiFltInfoDefaultTypeInternal() {}
  union {
    PB_BrkLiFltInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_BrkLiFltInfoDefaultTypeInternal _PB_BrkLiFltInfo_default_instance_;
constexpr PB_HUset_BSDLCASetting::PB_HUset_BSDLCASetting(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_bsdlcasetting_(0u){}
struct PB_HUset_BSDLCASettingDefaultTypeInternal {
  constexpr PB_HUset_BSDLCASettingDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_BSDLCASettingDefaultTypeInternal() {}
  union {
    PB_HUset_BSDLCASetting _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_BSDLCASettingDefaultTypeInternal _PB_HUset_BSDLCASetting_default_instance_;
constexpr PB_InfoSetResult::PB_InfoSetResult(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : result_(0u)
  , infosetfailreson_(0u){}
struct PB_InfoSetResultDefaultTypeInternal {
  constexpr PB_InfoSetResultDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_InfoSetResultDefaultTypeInternal() {}
  union {
    PB_InfoSetResult _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_InfoSetResultDefaultTypeInternal _PB_InfoSetResult_default_instance_;
constexpr PB_EDCset_APAvoicecontrol::PB_EDCset_APAvoicecontrol(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apavoicecontrol_(0u){}
struct PB_EDCset_APAvoicecontrolDefaultTypeInternal {
  constexpr PB_EDCset_APAvoicecontrolDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDCset_APAvoicecontrolDefaultTypeInternal() {}
  union {
    PB_EDCset_APAvoicecontrol _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDCset_APAvoicecontrolDefaultTypeInternal _PB_EDCset_APAvoicecontrol_default_instance_;
constexpr PB_RMAset_APP_MainScreenOperate::PB_RMAset_APP_MainScreenOperate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rma_app_mainscreenoperate_(0u){}
struct PB_RMAset_APP_MainScreenOperateDefaultTypeInternal {
  constexpr PB_RMAset_APP_MainScreenOperateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_RMAset_APP_MainScreenOperateDefaultTypeInternal() {}
  union {
    PB_RMAset_APP_MainScreenOperate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_RMAset_APP_MainScreenOperateDefaultTypeInternal _PB_RMAset_APP_MainScreenOperate_default_instance_;
constexpr PB_DDSData_Msg::PB_DDSData_Msg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : payload_()
  , _payload_cached_byte_size_(0)
  , topic_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , timestamp_(0){}
struct PB_DDSData_MsgDefaultTypeInternal {
  constexpr PB_DDSData_MsgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_DDSData_MsgDefaultTypeInternal() {}
  union {
    PB_DDSData_Msg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_DDSData_MsgDefaultTypeInternal _PB_DDSData_Msg_default_instance_;
constexpr PB_GpsTime_Struct::PB_GpsTime_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gpstime_()
  , _gpstime_cached_byte_size_(0){}
struct PB_GpsTime_StructDefaultTypeInternal {
  constexpr PB_GpsTime_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_GpsTime_StructDefaultTypeInternal() {}
  union {
    PB_GpsTime_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_GpsTime_StructDefaultTypeInternal _PB_GpsTime_Struct_default_instance_;
constexpr PB_EDC_APAVoiceCtrlData::PB_EDC_APAVoiceCtrlData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apavoicectrl_(0u){}
struct PB_EDC_APAVoiceCtrlDataDefaultTypeInternal {
  constexpr PB_EDC_APAVoiceCtrlDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_APAVoiceCtrlDataDefaultTypeInternal() {}
  union {
    PB_EDC_APAVoiceCtrlData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_APAVoiceCtrlDataDefaultTypeInternal _PB_EDC_APAVoiceCtrlData_default_instance_;
constexpr PB_HUset_CuriseMode::PB_HUset_CuriseMode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_curisemode_(0u){}
struct PB_HUset_CuriseModeDefaultTypeInternal {
  constexpr PB_HUset_CuriseModeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_CuriseModeDefaultTypeInternal() {}
  union {
    PB_HUset_CuriseMode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_CuriseModeDefaultTypeInternal _PB_HUset_CuriseMode_default_instance_;
constexpr PB_APAFunctionReq::PB_APAFunctionReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : apafunction_(0u){}
struct PB_APAFunctionReqDefaultTypeInternal {
  constexpr PB_APAFunctionReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_APAFunctionReqDefaultTypeInternal() {}
  union {
    PB_APAFunctionReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_APAFunctionReqDefaultTypeInternal _PB_APAFunctionReq_default_instance_;
constexpr PB_HUset_VC_CruiseSetDistance::PB_HUset_VC_CruiseSetDistance(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_vc_cruisesetdistance_(0u){}
struct PB_HUset_VC_CruiseSetDistanceDefaultTypeInternal {
  constexpr PB_HUset_VC_CruiseSetDistanceDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_VC_CruiseSetDistanceDefaultTypeInternal() {}
  union {
    PB_HUset_VC_CruiseSetDistance _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_VC_CruiseSetDistanceDefaultTypeInternal _PB_HUset_VC_CruiseSetDistance_default_instance_;
constexpr PB_EDC_RPAVoiceCtrlData::PB_EDC_RPAVoiceCtrlData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_rpavoicectrl_(0u){}
struct PB_EDC_RPAVoiceCtrlDataDefaultTypeInternal {
  constexpr PB_EDC_RPAVoiceCtrlDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_RPAVoiceCtrlDataDefaultTypeInternal() {}
  union {
    PB_EDC_RPAVoiceCtrlData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_RPAVoiceCtrlDataDefaultTypeInternal _PB_EDC_RPAVoiceCtrlData_default_instance_;
constexpr PB_HUset_ADACCStyle::PB_HUset_ADACCStyle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_adaccstyle_(0u){}
struct PB_HUset_ADACCStyleDefaultTypeInternal {
  constexpr PB_HUset_ADACCStyleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_ADACCStyleDefaultTypeInternal() {}
  union {
    PB_HUset_ADACCStyle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_ADACCStyleDefaultTypeInternal _PB_HUset_ADACCStyle_default_instance_;
constexpr PB_APAFunctionRes::PB_APAFunctionRes(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : apafunction_(0u){}
struct PB_APAFunctionResDefaultTypeInternal {
  constexpr PB_APAFunctionResDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_APAFunctionResDefaultTypeInternal() {}
  union {
    PB_APAFunctionRes _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_APAFunctionResDefaultTypeInternal _PB_APAFunctionRes_default_instance_;
constexpr PB_HiBeamActCtrlInfo::PB_HiBeamActCtrlInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_actctrlst_(0u)
  , ri_actctrlst_(0u){}
struct PB_HiBeamActCtrlInfoDefaultTypeInternal {
  constexpr PB_HiBeamActCtrlInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HiBeamActCtrlInfoDefaultTypeInternal() {}
  union {
    PB_HiBeamActCtrlInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HiBeamActCtrlInfoDefaultTypeInternal _PB_HiBeamActCtrlInfo_default_instance_;
constexpr PB_TurnLiActCtrlInfo::PB_TurnLiActCtrlInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : fl_actctrlst_(0u)
  , fr_actctrlst_(0u)
  , rl_actctrlst_(0u)
  , rr_actctrlst_(0u){}
struct PB_TurnLiActCtrlInfoDefaultTypeInternal {
  constexpr PB_TurnLiActCtrlInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TurnLiActCtrlInfoDefaultTypeInternal() {}
  union {
    PB_TurnLiActCtrlInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TurnLiActCtrlInfoDefaultTypeInternal _PB_TurnLiActCtrlInfo_default_instance_;
constexpr PB_SeatPosInfo::PB_SeatPosInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : poscmdreqfr_(0u)
  , poscmdreqhei_(0u)
  , poscmdreqbr_(0u)
  , poscmdreqcus_(0u)
  , poscmdreqlegfr_(0u)
  , poscmdreqleghei_(0u)
  , axisposfr_(0u)
  , axisposhei_(0u)
  , axisposbr_(0u)
  , axisposcus_(0u)
  , axisposlegfr_(0u)
  , axisposleghei_(0u)
  , axisactivemovigstsfr_(0u)
  , axisactivemovigstshei_(0u)
  , axisactivemovigstsbr_(0u)
  , axisactivemovigstscus_(0u)
  , axisactivemovigstslegfr_(0u)
  , axisactivemovigstsleghei_(0u)
  , ntctemp_(0){}
struct PB_SeatPosInfoDefaultTypeInternal {
  constexpr PB_SeatPosInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_SeatPosInfoDefaultTypeInternal() {}
  union {
    PB_SeatPosInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_SeatPosInfoDefaultTypeInternal _PB_SeatPosInfo_default_instance_;
constexpr PB_BLEPhyKeyBascInfo::PB_BLEPhyKeyBascInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keydatacnt_(0u)
  , keystcnt_(0u)
  , blephykeypowlflag_(0u)
  , blephykeychrst_(0u)
  , blephykeypowper_(0u)
  , compsitest_(0u)
  , unlockkeyst_(0u)
  , lockkeyst_(0u)
  , defkey1st_(0u)
  , defkey2st_(0u)
  , insidekeyst_(0u){}
struct PB_BLEPhyKeyBascInfoDefaultTypeInternal {
  constexpr PB_BLEPhyKeyBascInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_BLEPhyKeyBascInfoDefaultTypeInternal() {}
  union {
    PB_BLEPhyKeyBascInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_BLEPhyKeyBascInfoDefaultTypeInternal _PB_BLEPhyKeyBascInfo_default_instance_;
constexpr PB_TailGateSysSwSt_Struct::PB_TailGateSysSwSt_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tailgatesysswst_()
  , _tailgatesysswst_cached_byte_size_(0){}
struct PB_TailGateSysSwSt_StructDefaultTypeInternal {
  constexpr PB_TailGateSysSwSt_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TailGateSysSwSt_StructDefaultTypeInternal() {}
  union {
    PB_TailGateSysSwSt_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TailGateSysSwSt_StructDefaultTypeInternal _PB_TailGateSysSwSt_Struct_default_instance_;
constexpr PB_HUset_BSDLCAOnOff::PB_HUset_BSDLCAOnOff(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_bsdlcaonoff_(0u){}
struct PB_HUset_BSDLCAOnOffDefaultTypeInternal {
  constexpr PB_HUset_BSDLCAOnOffDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_BSDLCAOnOffDefaultTypeInternal() {}
  union {
    PB_HUset_BSDLCAOnOff _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_BSDLCAOnOffDefaultTypeInternal _PB_HUset_BSDLCAOnOff_default_instance_;
constexpr PB_uint64_Struct::PB_uint64_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(uint64_t{0u}){}
struct PB_uint64_StructDefaultTypeInternal {
  constexpr PB_uint64_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_uint64_StructDefaultTypeInternal() {}
  union {
    PB_uint64_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_uint64_StructDefaultTypeInternal _PB_uint64_Struct_default_instance_;
constexpr PB_C2_GetADASScore::PB_C2_GetADASScore(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : c2_useridnumber_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , c2_autodrivingscore_(0)
  , c2_iacctrip_(0)
  , c2_nidhighspeedtrip_(0)
  , c2_nidcitytrip_(0){}
struct PB_C2_GetADASScoreDefaultTypeInternal {
  constexpr PB_C2_GetADASScoreDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_C2_GetADASScoreDefaultTypeInternal() {}
  union {
    PB_C2_GetADASScore _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_C2_GetADASScoreDefaultTypeInternal _PB_C2_GetADASScore_default_instance_;
constexpr PB_HUset_RCWEnable::PB_HUset_RCWEnable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_rcwenable_(0u){}
struct PB_HUset_RCWEnableDefaultTypeInternal {
  constexpr PB_HUset_RCWEnableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_RCWEnableDefaultTypeInternal() {}
  union {
    PB_HUset_RCWEnable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_RCWEnableDefaultTypeInternal _PB_HUset_RCWEnable_default_instance_;
constexpr PB_HUset_SEAMode::PB_HUset_SEAMode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_seamode_(0u){}
struct PB_HUset_SEAModeDefaultTypeInternal {
  constexpr PB_HUset_SEAModeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_SEAModeDefaultTypeInternal() {}
  union {
    PB_HUset_SEAMode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_SEAModeDefaultTypeInternal _PB_HUset_SEAMode_default_instance_;
constexpr PB_Track_Point1::PB_Track_Point1(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pointx_(0)
  , pointy_(0){}
struct PB_Track_Point1DefaultTypeInternal {
  constexpr PB_Track_Point1DefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_Track_Point1DefaultTypeInternal() {}
  union {
    PB_Track_Point1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_Track_Point1DefaultTypeInternal _PB_Track_Point1_default_instance_;
constexpr PB_PwrPortCtr_Struct::PB_PwrPortCtr_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pwrportctr_(){}
struct PB_PwrPortCtr_StructDefaultTypeInternal {
  constexpr PB_PwrPortCtr_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_PwrPortCtr_StructDefaultTypeInternal() {}
  union {
    PB_PwrPortCtr_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_PwrPortCtr_StructDefaultTypeInternal _PB_PwrPortCtr_Struct_default_instance_;
constexpr PB_FogFltInfo::PB_FogFltInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_fltst_(0u)
  , ri_fltst_(0u)
  , le_refltst_(0u)
  , ri_refltst_(0u){}
struct PB_FogFltInfoDefaultTypeInternal {
  constexpr PB_FogFltInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_FogFltInfoDefaultTypeInternal() {}
  union {
    PB_FogFltInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_FogFltInfoDefaultTypeInternal _PB_FogFltInfo_default_instance_;
constexpr PB_EDC_APASelfdefnSlotData::PB_EDC_APASelfdefnSlotData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apaselfdefnslot_(){}
struct PB_EDC_APASelfdefnSlotDataDefaultTypeInternal {
  constexpr PB_EDC_APASelfdefnSlotDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_APASelfdefnSlotDataDefaultTypeInternal() {}
  union {
    PB_EDC_APASelfdefnSlotData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_APASelfdefnSlotDataDefaultTypeInternal _PB_EDC_APASelfdefnSlotData_default_instance_;
constexpr PB_ObjStTypeCurPosVITAll_Struct::PB_ObjStTypeCurPosVITAll_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : objsttypecurposvitall_()
  , _objsttypecurposvitall_cached_byte_size_(0){}
struct PB_ObjStTypeCurPosVITAll_StructDefaultTypeInternal {
  constexpr PB_ObjStTypeCurPosVITAll_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ObjStTypeCurPosVITAll_StructDefaultTypeInternal() {}
  union {
    PB_ObjStTypeCurPosVITAll_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ObjStTypeCurPosVITAll_StructDefaultTypeInternal _PB_ObjStTypeCurPosVITAll_Struct_default_instance_;
constexpr PB_EDC_APAParkOutSelectData::PB_EDC_APAParkOutSelectData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apaparkoutselect_(0u){}
struct PB_EDC_APAParkOutSelectDataDefaultTypeInternal {
  constexpr PB_EDC_APAParkOutSelectDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_APAParkOutSelectDataDefaultTypeInternal() {}
  union {
    PB_EDC_APAParkOutSelectData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_APAParkOutSelectDataDefaultTypeInternal _PB_EDC_APAParkOutSelectData_default_instance_;
constexpr PB_CamLinesCurve::PB_CamLinesCurve(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : all_lines_curve_(nullptr)
  , all_lines_curve_valid_(nullptr)
  , time_stamp_(0)
  , frame_index_(0){}
struct PB_CamLinesCurveDefaultTypeInternal {
  constexpr PB_CamLinesCurveDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_CamLinesCurveDefaultTypeInternal() {}
  union {
    PB_CamLinesCurve _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_CamLinesCurveDefaultTypeInternal _PB_CamLinesCurve_default_instance_;
constexpr PB_APA_apaguidepoint_Struct::PB_APA_apaguidepoint_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : seq_(){}
struct PB_APA_apaguidepoint_StructDefaultTypeInternal {
  constexpr PB_APA_apaguidepoint_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_APA_apaguidepoint_StructDefaultTypeInternal() {}
  union {
    PB_APA_apaguidepoint_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_APA_apaguidepoint_StructDefaultTypeInternal _PB_APA_apaguidepoint_Struct_default_instance_;
constexpr PB_TurnLiSt::PB_TurnLiSt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lesideturnlist_(0u)
  , risideturnlist_(0u){}
struct PB_TurnLiStDefaultTypeInternal {
  constexpr PB_TurnLiStDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TurnLiStDefaultTypeInternal() {}
  union {
    PB_TurnLiSt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TurnLiStDefaultTypeInternal _PB_TurnLiSt_default_instance_;
constexpr PB_HUset_CESEnable::PB_HUset_CESEnable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_cesenable_(0u){}
struct PB_HUset_CESEnableDefaultTypeInternal {
  constexpr PB_HUset_CESEnableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_CESEnableDefaultTypeInternal() {}
  union {
    PB_HUset_CESEnable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_CESEnableDefaultTypeInternal _PB_HUset_CESEnable_default_instance_;
constexpr PB_HUset_IDAEnable::PB_HUset_IDAEnable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_idaenable_(0u){}
struct PB_HUset_IDAEnableDefaultTypeInternal {
  constexpr PB_HUset_IDAEnableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_IDAEnableDefaultTypeInternal() {}
  union {
    PB_HUset_IDAEnable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_IDAEnableDefaultTypeInternal _PB_HUset_IDAEnable_default_instance_;
constexpr PB_HUset_RearColliAstType::PB_HUset_RearColliAstType(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_rearcolliasttype_(0u){}
struct PB_HUset_RearColliAstTypeDefaultTypeInternal {
  constexpr PB_HUset_RearColliAstTypeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_RearColliAstTypeDefaultTypeInternal() {}
  union {
    PB_HUset_RearColliAstType _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_RearColliAstTypeDefaultTypeInternal _PB_HUset_RearColliAstType_default_instance_;
constexpr PB_VideoRequestParam::PB_VideoRequestParam(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : triggertype_(0u)
  , beforetime_(0u)
  , backtime_(0u)
  , camera_(0u)
  , taskid_(uint64_t{0u}){}
struct PB_VideoRequestParamDefaultTypeInternal {
  constexpr PB_VideoRequestParamDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_VideoRequestParamDefaultTypeInternal() {}
  union {
    PB_VideoRequestParam _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_VideoRequestParamDefaultTypeInternal _PB_VideoRequestParam_default_instance_;
constexpr PB_ThrLiActCtrlInfo::PB_ThrLiActCtrlInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : frntactctrlst_(0u)
  , reactctrlst_(0u){}
struct PB_ThrLiActCtrlInfoDefaultTypeInternal {
  constexpr PB_ThrLiActCtrlInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ThrLiActCtrlInfoDefaultTypeInternal() {}
  union {
    PB_ThrLiActCtrlInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ThrLiActCtrlInfoDefaultTypeInternal _PB_ThrLiActCtrlInfo_default_instance_;
constexpr PB_TurnLiKeySwtSt::PB_TurnLiKeySwtSt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : turnliswtst_(0u)
  , turnlikeyswt_(0u){}
struct PB_TurnLiKeySwtStDefaultTypeInternal {
  constexpr PB_TurnLiKeySwtStDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TurnLiKeySwtStDefaultTypeInternal() {}
  union {
    PB_TurnLiKeySwtSt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TurnLiKeySwtStDefaultTypeInternal _PB_TurnLiKeySwtSt_default_instance_;
constexpr PB_SenMoInfoSet::PB_SenMoInfoSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : senopenmode_(0u)
  , senelecfen_(0u){}
struct PB_SenMoInfoSetDefaultTypeInternal {
  constexpr PB_SenMoInfoSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_SenMoInfoSetDefaultTypeInternal() {}
  union {
    PB_SenMoInfoSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_SenMoInfoSetDefaultTypeInternal _PB_SenMoInfoSet_default_instance_;
constexpr PB_MFSFltStInfo::PB_MFSFltStInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : diaginfosw_(0u)
  , lincommerr_(0u){}
struct PB_MFSFltStInfoDefaultTypeInternal {
  constexpr PB_MFSFltStInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_MFSFltStInfoDefaultTypeInternal() {}
  union {
    PB_MFSFltStInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_MFSFltStInfoDefaultTypeInternal _PB_MFSFltStInfo_default_instance_;
constexpr PB_HUset_AbsOverSpdWarnOffset::PB_HUset_AbsOverSpdWarnOffset(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_absoverspdwarnoffset_(0u){}
struct PB_HUset_AbsOverSpdWarnOffsetDefaultTypeInternal {
  constexpr PB_HUset_AbsOverSpdWarnOffsetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_AbsOverSpdWarnOffsetDefaultTypeInternal() {}
  union {
    PB_HUset_AbsOverSpdWarnOffset _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_AbsOverSpdWarnOffsetDefaultTypeInternal _PB_HUset_AbsOverSpdWarnOffset_default_instance_;
constexpr PB_uint16_Struct::PB_uint16_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(0u){}
struct PB_uint16_StructDefaultTypeInternal {
  constexpr PB_uint16_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_uint16_StructDefaultTypeInternal() {}
  union {
    PB_uint16_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_uint16_StructDefaultTypeInternal _PB_uint16_Struct_default_instance_;
constexpr PB_LogoActCtrlInfo::PB_LogoActCtrlInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : frntactctrlst_(0u)
  , reactctrlst_(0u){}
struct PB_LogoActCtrlInfoDefaultTypeInternal {
  constexpr PB_LogoActCtrlInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_LogoActCtrlInfoDefaultTypeInternal() {}
  union {
    PB_LogoActCtrlInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_LogoActCtrlInfoDefaultTypeInternal _PB_LogoActCtrlInfo_default_instance_;
constexpr PB_HornCtrlCmd::PB_HornCtrlCmd(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : horncmdprio_(0u)
  , horncmd_(0u)
  , horncount_(0u)
  , hornontime_(0u)
  , hornofftime_(0u){}
struct PB_HornCtrlCmdDefaultTypeInternal {
  constexpr PB_HornCtrlCmdDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HornCtrlCmdDefaultTypeInternal() {}
  union {
    PB_HornCtrlCmd _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HornCtrlCmdDefaultTypeInternal _PB_HornCtrlCmd_default_instance_;
constexpr PB_DRLActCtrlInfo::PB_DRLActCtrlInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_actctrlst_(0u)
  , ri_actctrlst_(0u){}
struct PB_DRLActCtrlInfoDefaultTypeInternal {
  constexpr PB_DRLActCtrlInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_DRLActCtrlInfoDefaultTypeInternal() {}
  union {
    PB_DRLActCtrlInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_DRLActCtrlInfoDefaultTypeInternal _PB_DRLActCtrlInfo_default_instance_;
constexpr PB_AD_APADynguidanceData::PB_AD_APADynguidanceData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_apaguidepiont_()
  , ad_apatarpose_(nullptr)
  , ad_apasyspahflg_(0u)
  , ad_aparemaindst_(0)
  , ad_aparoadtrfcinfo_(0u){}
struct PB_AD_APADynguidanceDataDefaultTypeInternal {
  constexpr PB_AD_APADynguidanceDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_APADynguidanceDataDefaultTypeInternal() {}
  union {
    PB_AD_APADynguidanceData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_APADynguidanceDataDefaultTypeInternal _PB_AD_APADynguidanceData_default_instance_;
constexpr PB_HUset_IACCFamlrRdModSwt::PB_HUset_IACCFamlrRdModSwt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_iaccfamlrrdmodswt_(0u){}
struct PB_HUset_IACCFamlrRdModSwtDefaultTypeInternal {
  constexpr PB_HUset_IACCFamlrRdModSwtDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_IACCFamlrRdModSwtDefaultTypeInternal() {}
  union {
    PB_HUset_IACCFamlrRdModSwt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_IACCFamlrRdModSwtDefaultTypeInternal _PB_HUset_IACCFamlrRdModSwt_default_instance_;
constexpr PB_OperationCode::PB_OperationCode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : request_id_(0u)
  , session_id_(0u)
  , vehfield_(0u)
  , sourcemod_(0u)
  , rtncode_(0u)
  , counter_(0u){}
struct PB_OperationCodeDefaultTypeInternal {
  constexpr PB_OperationCodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_OperationCodeDefaultTypeInternal() {}
  union {
    PB_OperationCode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_OperationCodeDefaultTypeInternal _PB_OperationCode_default_instance_;
constexpr PB_AD_RedLightReEnSet::PB_AD_RedLightReEnSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_redlightremindenable_(0u){}
struct PB_AD_RedLightReEnSetDefaultTypeInternal {
  constexpr PB_AD_RedLightReEnSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_RedLightReEnSetDefaultTypeInternal() {}
  union {
    PB_AD_RedLightReEnSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_RedLightReEnSetDefaultTypeInternal _PB_AD_RedLightReEnSet_default_instance_;
constexpr PB_AD_APADynrecommdData::PB_AD_APADynrecommdData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_apapocdirrecommd_(0u)
  , ad_apaparkinmoderecommd_(0u)
  , ad_apagetoff_(0u)
  , ad_apacustavlsta_(0u){}
struct PB_AD_APADynrecommdDataDefaultTypeInternal {
  constexpr PB_AD_APADynrecommdDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_APADynrecommdDataDefaultTypeInternal() {}
  union {
    PB_AD_APADynrecommdData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_APADynrecommdDataDefaultTypeInternal _PB_AD_APADynrecommdData_default_instance_;
constexpr PB_TarposeData::PB_TarposeData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : x_(0)
  , y_(0)
  , theta_(0){}
struct PB_TarposeDataDefaultTypeInternal {
  constexpr PB_TarposeDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TarposeDataDefaultTypeInternal() {}
  union {
    PB_TarposeData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TarposeDataDefaultTypeInternal _PB_TarposeData_default_instance_;
constexpr PB_HUset_UDLCEnable::PB_HUset_UDLCEnable(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_udlcenable_(0u){}
struct PB_HUset_UDLCEnableDefaultTypeInternal {
  constexpr PB_HUset_UDLCEnableDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_UDLCEnableDefaultTypeInternal() {}
  union {
    PB_HUset_UDLCEnable _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_UDLCEnableDefaultTypeInternal _PB_HUset_UDLCEnable_default_instance_;
constexpr PB_C2_IACCFamlrRdModSwtFbSet::PB_C2_IACCFamlrRdModSwtFbSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : c2_iaccfamlrrdmodswtfb_(0u){}
struct PB_C2_IACCFamlrRdModSwtFbSetDefaultTypeInternal {
  constexpr PB_C2_IACCFamlrRdModSwtFbSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_C2_IACCFamlrRdModSwtFbSetDefaultTypeInternal() {}
  union {
    PB_C2_IACCFamlrRdModSwtFbSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_C2_IACCFamlrRdModSwtFbSetDefaultTypeInternal _PB_C2_IACCFamlrRdModSwtFbSet_default_instance_;
constexpr PB_Point2DStruct::PB_Point2DStruct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : x_(0)
  , y_(0)
  , theta_(0){}
struct PB_Point2DStructDefaultTypeInternal {
  constexpr PB_Point2DStructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_Point2DStructDefaultTypeInternal() {}
  union {
    PB_Point2DStruct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_Point2DStructDefaultTypeInternal _PB_Point2DStruct_default_instance_;
constexpr PB_RvsLiActCtrlInfo::PB_RvsLiActCtrlInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_actctrlst_(0u)
  , ri_actctrlst_(0u){}
struct PB_RvsLiActCtrlInfoDefaultTypeInternal {
  constexpr PB_RvsLiActCtrlInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_RvsLiActCtrlInfoDefaultTypeInternal() {}
  union {
    PB_RvsLiActCtrlInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_RvsLiActCtrlInfoDefaultTypeInternal _PB_RvsLiActCtrlInfo_default_instance_;
constexpr PB_PhyStWinAll_Struct::PB_PhyStWinAll_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : phystwinall_()
  , _phystwinall_cached_byte_size_(0){}
struct PB_PhyStWinAll_StructDefaultTypeInternal {
  constexpr PB_PhyStWinAll_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_PhyStWinAll_StructDefaultTypeInternal() {}
  union {
    PB_PhyStWinAll_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_PhyStWinAll_StructDefaultTypeInternal _PB_PhyStWinAll_Struct_default_instance_;
constexpr PB_CrashStsInfo::PB_CrashStsInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : srscrashoutpsts_(0u)
  , srscrashoutpstschks_(0u)
  , srscrashoutfront_(0u)
  , srscrashoutleft_(0u)
  , srscrashoutmicro_(0u)
  , srscrashoutrear_(0u)
  , srscrashoutright_(0u)
  , srscrashoutrollover_(0u)
  , srscrashoutcedr_(0u)
  , srswarnlampsts_(0u)
  , lostcomfltsts1_(0u)
  , lostcomfltsts2_(0u)
  , reserved1_(0u)
  , reserved2_(0u)
  , reserved3_(0u)
  , reserved4_(0u){}
struct PB_CrashStsInfoDefaultTypeInternal {
  constexpr PB_CrashStsInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_CrashStsInfoDefaultTypeInternal() {}
  union {
    PB_CrashStsInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_CrashStsInfoDefaultTypeInternal _PB_CrashStsInfo_default_instance_;
constexpr PB_GpsDatas::PB_GpsDatas(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gpstime_()
  , _gpstime_cached_byte_size_(0)
  , lng_(0u)
  , lat_(0u)
  , alti_(0u)
  , satnum_(0u)
  , heading_(0u)
  , status_(0u)
  , ns_(0u)
  , ew_(0u)
  , speed_(0u)
  , decline_(0u)
  , direction_(0u){}
struct PB_GpsDatasDefaultTypeInternal {
  constexpr PB_GpsDatasDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_GpsDatasDefaultTypeInternal() {}
  union {
    PB_GpsDatas _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_GpsDatasDefaultTypeInternal _PB_GpsDatas_default_instance_;
constexpr PB_float_Struct::PB_float_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : data_(0){}
struct PB_float_StructDefaultTypeInternal {
  constexpr PB_float_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_float_StructDefaultTypeInternal() {}
  union {
    PB_float_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_float_StructDefaultTypeInternal _PB_float_Struct_default_instance_;
constexpr PB_HUset_ADCurveStyle::PB_HUset_ADCurveStyle(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_adcurvestyle_(0u){}
struct PB_HUset_ADCurveStyleDefaultTypeInternal {
  constexpr PB_HUset_ADCurveStyleDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_ADCurveStyleDefaultTypeInternal() {}
  union {
    PB_HUset_ADCurveStyle _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_ADCurveStyleDefaultTypeInternal _PB_HUset_ADCurveStyle_default_instance_;
constexpr PB_TarSlotData::PB_TarSlotData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_apatarslot_()
  , ad_apapreviewsts_(0u){}
struct PB_TarSlotDataDefaultTypeInternal {
  constexpr PB_TarSlotDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TarSlotDataDefaultTypeInternal() {}
  union {
    PB_TarSlotData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TarSlotDataDefaultTypeInternal _PB_TarSlotData_default_instance_;
constexpr PB_LineCurveValid::PB_LineCurveValid(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : linecruvevalid_5m_(0u)
  , linecruvevalid_10m_(0u)
  , linecruvevalid_15m_(0u)
  , linecruvevalid_20m_(0u)
  , linecruvevalid_25m_(0u)
  , linecruvevalid_30m_(0u){}
struct PB_LineCurveValidDefaultTypeInternal {
  constexpr PB_LineCurveValidDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_LineCurveValidDefaultTypeInternal() {}
  union {
    PB_LineCurveValid _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_LineCurveValidDefaultTypeInternal _PB_LineCurveValid_default_instance_;
constexpr PB_BucSwtSts::PB_BucSwtSts(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : srsdrvrbucswtsts_(0u)
  , srspassbucswtsts_(0u)
  , srsle2ndbucswtsts_(0u)
  , srsmid2ndbucswtsts_(0u)
  , srsri2ndbucswtsts_(0u)
  , srsle3rdbucswtsts_(0u)
  , srsmid3rdbucswtsts_(0u)
  , srsri3rdbucswtsts_(0u)
  , lostcomfltsts1_(0u)
  , reserved1_(0u)
  , reserved2_(0u)
  , reserved3_(0u){}
struct PB_BucSwtStsDefaultTypeInternal {
  constexpr PB_BucSwtStsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_BucSwtStsDefaultTypeInternal() {}
  union {
    PB_BucSwtSts _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_BucSwtStsDefaultTypeInternal _PB_BucSwtSts_default_instance_;
constexpr PB_VIUPwrPinRstInfo::PB_VIUPwrPinRstInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : pwrpinid_(0u)
  , pwrpinrstcnt_(0u){}
struct PB_VIUPwrPinRstInfoDefaultTypeInternal {
  constexpr PB_VIUPwrPinRstInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_VIUPwrPinRstInfoDefaultTypeInternal() {}
  union {
    PB_VIUPwrPinRstInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_VIUPwrPinRstInfoDefaultTypeInternal _PB_VIUPwrPinRstInfo_default_instance_;
constexpr PB_DRLFltInfo::PB_DRLFltInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_fltst_(0u)
  , ri_fltst_(0u){}
struct PB_DRLFltInfoDefaultTypeInternal {
  constexpr PB_DRLFltInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_DRLFltInfoDefaultTypeInternal() {}
  union {
    PB_DRLFltInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_DRLFltInfoDefaultTypeInternal _PB_DRLFltInfo_default_instance_;
constexpr PB_TurnLiFltMonrSt::PB_TurnLiFltMonrSt(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lesideturnliflt_(0u)
  , risideturnliflt_(0u)
  , turnlifblineflt_(0u){}
struct PB_TurnLiFltMonrStDefaultTypeInternal {
  constexpr PB_TurnLiFltMonrStDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_TurnLiFltMonrStDefaultTypeInternal() {}
  union {
    PB_TurnLiFltMonrSt _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_TurnLiFltMonrStDefaultTypeInternal _PB_TurnLiFltMonrSt_default_instance_;
constexpr PB_HiBeamFltInfo::PB_HiBeamFltInfo(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : le_fltst_(0u)
  , ri_fltst_(0u){}
struct PB_HiBeamFltInfoDefaultTypeInternal {
  constexpr PB_HiBeamFltInfoDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HiBeamFltInfoDefaultTypeInternal() {}
  union {
    PB_HiBeamFltInfo _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HiBeamFltInfoDefaultTypeInternal _PB_HiBeamFltInfo_default_instance_;
constexpr PB_EDC_APAParkInSelectData::PB_EDC_APAParkInSelectData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apaparkinselect_(0u){}
struct PB_EDC_APAParkInSelectDataDefaultTypeInternal {
  constexpr PB_EDC_APAParkInSelectDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_APAParkInSelectDataDefaultTypeInternal() {}
  union {
    PB_EDC_APAParkInSelectData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_APAParkInSelectDataDefaultTypeInternal _PB_EDC_APAParkInSelectData_default_instance_;
constexpr PB_ADASSecureSet::PB_ADASSecureSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_elkenable_(0u)
  , ad_cesenable_(0u)
  , ad_lasmodeselectionstatus_(0u)
  , ad_lasintellgentmodeselectionstatus_(0u)
  , ad_laswarningmodeselectionsts_(0u)
  , ad_forwardcolliasttype_(0u)
  , ad_forwardcolliastsenstyle_(0u)
  , ad_rearcolliasttype_(0u){}
struct PB_ADASSecureSetDefaultTypeInternal {
  constexpr PB_ADASSecureSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_ADASSecureSetDefaultTypeInternal() {}
  union {
    PB_ADASSecureSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_ADASSecureSetDefaultTypeInternal _PB_ADASSecureSet_default_instance_;
constexpr PB_HUset_CSLmode::PB_HUset_CSLmode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_cslmode_(0u){}
struct PB_HUset_CSLmodeDefaultTypeInternal {
  constexpr PB_HUset_CSLmodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_CSLmodeDefaultTypeInternal() {}
  union {
    PB_HUset_CSLmode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_CSLmodeDefaultTypeInternal _PB_HUset_CSLmode_default_instance_;
constexpr PB_AD_APACustSlotData::PB_AD_APACustSlotData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ad_apacustslotini_()
  , ad_apacustslotvld_(0u){}
struct PB_AD_APACustSlotDataDefaultTypeInternal {
  constexpr PB_AD_APACustSlotDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_AD_APACustSlotDataDefaultTypeInternal() {}
  union {
    PB_AD_APACustSlotData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_AD_APACustSlotDataDefaultTypeInternal _PB_AD_APACustSlotData_default_instance_;
constexpr PB_HUset_BSDLCARemindmode::PB_HUset_BSDLCARemindmode(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : hu_bsdlcaremindmode_(0u){}
struct PB_HUset_BSDLCARemindmodeDefaultTypeInternal {
  constexpr PB_HUset_BSDLCARemindmodeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_HUset_BSDLCARemindmodeDefaultTypeInternal() {}
  union {
    PB_HUset_BSDLCARemindmode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_HUset_BSDLCARemindmodeDefaultTypeInternal _PB_HUset_BSDLCARemindmode_default_instance_;
constexpr PB_SenWarningSet::PB_SenWarningSet(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : senwarningsettype_(0u)
  , senwarningsetswitch_(0u)
  , senwarningsethonk_(0u)
  , senwarningsetlight_(0u)
  , senwarningsetphone_(0u){}
struct PB_SenWarningSetDefaultTypeInternal {
  constexpr PB_SenWarningSetDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_SenWarningSetDefaultTypeInternal() {}
  union {
    PB_SenWarningSet _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_SenWarningSetDefaultTypeInternal _PB_SenWarningSet_default_instance_;
constexpr PB_BLERpaData_Struct::PB_BLERpaData_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : blerpadata_()
  , _blerpadata_cached_byte_size_(0){}
struct PB_BLERpaData_StructDefaultTypeInternal {
  constexpr PB_BLERpaData_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_BLERpaData_StructDefaultTypeInternal() {}
  union {
    PB_BLERpaData_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_BLERpaData_StructDefaultTypeInternal _PB_BLERpaData_Struct_default_instance_;
constexpr PB_EDC_APADrvrReqOnOffData::PB_EDC_APADrvrReqOnOffData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : edc_apadrvrreqonoff_(0u){}
struct PB_EDC_APADrvrReqOnOffDataDefaultTypeInternal {
  constexpr PB_EDC_APADrvrReqOnOffDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EDC_APADrvrReqOnOffDataDefaultTypeInternal() {}
  union {
    PB_EDC_APADrvrReqOnOffData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EDC_APADrvrReqOnOffDataDefaultTypeInternal _PB_EDC_APADrvrReqOnOffData_default_instance_;
constexpr PB_EleAirSuspAutoModSts::PB_EleAirSuspAutoModSts(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : vmcautomodsts_(0u){}
struct PB_EleAirSuspAutoModStsDefaultTypeInternal {
  constexpr PB_EleAirSuspAutoModStsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_EleAirSuspAutoModStsDefaultTypeInternal() {}
  union {
    PB_EleAirSuspAutoModSts _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_EleAirSuspAutoModStsDefaultTypeInternal _PB_EleAirSuspAutoModSts_default_instance_;
constexpr PB_BattHVSts::PB_BattHVSts(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : bcuopermod_(0u){}
struct PB_BattHVStsDefaultTypeInternal {
  constexpr PB_BattHVStsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_BattHVStsDefaultTypeInternal() {}
  union {
    PB_BattHVSts _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_BattHVStsDefaultTypeInternal _PB_BattHVSts_default_instance_;
constexpr PB_LockStAll_Struct::PB_LockStAll_Struct(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : lockstall_()
  , _lockstall_cached_byte_size_(0){}
struct PB_LockStAll_StructDefaultTypeInternal {
  constexpr PB_LockStAll_StructDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_LockStAll_StructDefaultTypeInternal() {}
  union {
    PB_LockStAll_Struct _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_LockStAll_StructDefaultTypeInternal _PB_LockStAll_Struct_default_instance_;
}  // namespace Soa
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Common_2eproto[189];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Common_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Common_2eproto = nullptr;

const uint32_t TableStruct_Common_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_parknotice_5_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_voicenotice_1_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_customreq_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_window_notice_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_systemfailureflag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_condition_notice_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_recomendreq_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_radslocalpathflag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_radsglobalpathflag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_remaindistance_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_radsnotice_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_soundnotice_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_hzpparknotice_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_hzprecomendreq_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_mapmanagementsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_hzplocalpathflag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_hzpglobalpathflag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_parkingpathflag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_avoidpedestrians_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_avoidvehicle_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_drivedistance_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_abnormalexit_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_hzplearingpathflag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_controlnotice_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_hzppathwindow_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_educatingmodests_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_slotnotice_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_customparknotice_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_custompoint_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_guidepiont_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, apa_messagereq_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, ad_aparoadtrfcinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, ad_apawaittime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, ad_radsdstnpoint_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, ad_apaselfdefnslot_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, ad_apaselfdefnvalid_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, ad_apaviewag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, ad_apaguiding_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, ad_apaaudiormnset_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAsetnotice, ad_apatarslotsts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ReturnCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ReturnCode, code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RWiperFltSt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RWiperFltSt, wiperfltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RWiperFltSt, wshrfltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FunEnEvt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FunEnEvt, funentyp_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FunEnEvt, result_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FunEnEvt, funenfailreson_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiFltInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiFltInfo, fl_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiFltInfo, fr_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiFltInfo, rl_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiFltInfo, rr_fltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ADLanechangeStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ADLanechangeStyle, hu_adlanechangestyle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APACustSlotData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APACustSlotData, edc_apacustslot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_NIDAudioWarStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_NIDAudioWarStyle, hu_nidaudiowarstyle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_LASIntellgentModeSelection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_LASIntellgentModeSelection, hu_lasintellgentmodeselection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_SEAOnOff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_SEAOnOff, hu_seaonoff_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_RPAVoiceCtrlFbData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_RPAVoiceCtrlFbData, ad_rpavoicectrlfb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_UploadResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_UploadResult, filehandle_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_UploadResult, taskid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_RelOverSpdWarnOffset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_RelOverSpdWarnOffset, hu_reloverspdwarnoffset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EleAirSuspHighModCHASts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EleAirSuspHighModCHASts, vmcactecasmodechasts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Destination, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Destination, type_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Destination, lng_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Destination, lat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CampWarningSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CampWarningSet, campwarningsettype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CampWarningSet, campwarningsetswitch_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CampWarningSet, campwarningsethonk_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CampWarningSet, campwarningsetlight_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CampWarningSet, campwarningsetphone_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_LaneChangeReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_LaneChangeReq, hu_lanechangereq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TailGateSysSwFltSt_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TailGateSysSwFltSt_Struct, tailgatesysswfltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_LASWarningModeSelection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_LASWarningModeSelection, hu_laswarningmodeselection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EleAirSuspIntenModSts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EleAirSuspIntenModSts, suspintenmodsts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stospeedadjust_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stotimeintervaladjust_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stotargetdecelerate_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stospeeduptolimitation_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stospeeddownlimitation_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stosetcruisespeed_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoldc_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoldcdes_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoudlcleft_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoudlcright_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoudlcdes_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoobsavoid_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoobsavoiddes_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stolanechange_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stolanechangedes_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stointersectionassist_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, ntersectionassistdes_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, storampassist_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, storampassistdes_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stolanechangefre_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stosmartspeedlimitation_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoaccrec_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoiaccrec_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stonidrec_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoacctoiacc_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoacctonid_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoiacctonid_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stonidtoiacc_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stonidtoacc_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoiacctoacc_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stolongtakeover_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stolattakeover_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoeyesoff_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stohandsoff_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stosilentstate_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stosilentstateclear_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoldw_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stolca_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stostartreminder_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stofcw_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stoldwpunish_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stooverspeed_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, stodrivemode_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, reserved1_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, reserved2_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, reserved3_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, reserved4_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, reserved5_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, reserved6_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASStorageTimes, reserved7_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RequestInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RequestInfo, request_id_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RequestInfo, session_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TrigEvt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TrigEvt, functype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TrigEvt, notitrigevt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcufrntwhlacttq_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcufrntwhlreqtq_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcurewhlacttq_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcurewhlreqtq_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcuvehwhlreqtq_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcupttqreal_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcuaccrpedlposn_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcucalcnaccrpedlposn_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcupttqlimmax_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcupttqlimmin_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcufrntwhlacttqvld_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcufrntwhlreqtqvld_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcurewhlacttqvld_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcurewhlreqtqvld_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcuvehwhlreqtqvld_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcupttqrealvld_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcupttqlimmaxvld_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcupttqlimminvld_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcuaccrpedlposnvld_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcucalcnaccrpedlposnvld_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcuaccpedshield_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcuovrdmodreq_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcucomfltsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcupttqreqavl_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcushiftlvlposn_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcugearshiftpositon_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcushiftpostionvalid_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcuapadriverinterruption_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, vcuaparequestenable_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, reserved1_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, reserved2_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, reserved3_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, reserved4_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, reserved5_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, reserved6_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, reserved7_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2DmdPrmInfo, reserved8_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ViuGearShiftPosnInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ViuGearShiftPosnInfo, viugearshiftposn_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ViuGearShiftPosnInfo, viugearshiftposnvld_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_uint8_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_uint8_Struct, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLERpaCmdRsp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLERpaCmdRsp, blerpacmdrspdata_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLERpaCmdRsp, keyindex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PosnLiFltInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PosnLiFltInfo, fl_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PosnLiFltInfo, fr_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PosnLiFltInfo, rl_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PosnLiFltInfo, rr_fltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAControleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAControleReq, apacontrolenable_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAControleReq, heartbeat_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_EducatingModeOnOff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_EducatingModeOnOff, edc_educatingmodeonoff_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_RADSDrvrReqData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_RADSDrvrReqData, edc_radsdrvrreq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, lemirrfoldctrl_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, rimirrfoldctrl_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, lemirrheat_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, rimirrheat_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, lemirrposnx_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, lemirrposny_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, rimirrposnx_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, rimirrposny_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, lemirrtarposnx_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, lemirrtarposny_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, rimirrtarposnx_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MirrStsInfo, rimirrtarposny_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EleAirSuspHighModSts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EleAirSuspHighModSts, susphighmodsts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnStaData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnStaData, ad_apasysenasta_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnStaData, ad_apasta_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnStaData, ad_rpasta_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnStaData, ad_rmasta_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnStaData, ad_radssta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ADStartStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ADStartStyle, hu_adstartstyle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_curisemode_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_idaenablestatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_idastatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_lanechangefrequency_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_udlcenablestatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_nidaudiowarstyle_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_cslaenablestatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_cslmodestatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_overspeedsoundwarningenst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_cslwarnoffsettp_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_absoverspdwarnoffset_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_reloverspdwarnoffset_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_autodrivestyle_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_adaccstyle_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_adstartstyle_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_adcurvestyle_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_adlanechangestyle_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_vehiclestartremindenable_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_rcwenablestatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_seamodestatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_bsdlcasetting_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASCruiseSet, ad_bsdlcaremindmode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_CSLWarnOffsetTp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_CSLWarnOffsetTp, hu_cslwarnoffsettp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DoorDrvStAll_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DoorDrvStAll_Struct, doordrvstall_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LaneLedFltSt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LaneLedFltSt, lelaneledfltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LaneLedFltSt, rilaneledfltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_NIDSelfLrngReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_NIDSelfLrngReq, edc_nidselflrngreq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_PopUpWindowOperate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_PopUpWindowOperate, edc_popupwindowoperate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ResponseInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ResponseInfo, request_id_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ResponseInfo, session_id_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ResponseInfo, vehfield_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ResponseInfo, sourcemod_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ResponseInfo, rtncode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FileEntity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FileEntity, verifycode_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FileEntity, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_AutoDriveStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_AutoDriveStyle, hu_autodrivestyle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_totalmiles_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_nidmiles_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_safefuntritime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_aebtritime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_aestritime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_elktritime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_throughramptime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_throughintersectiontime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_lanechangetime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_takeovertime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_obsavoidtime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_nidlongestmiles_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, apa_usetime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, apa_savetime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, c2_useridnumber_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2TripSum, ads_adsusetime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLERpaCmdReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLERpaCmdReq, blerpadata_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLERpaCmdReq, keyindex_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_uint32_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_uint32_Struct, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtll_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpressll_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtlr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpresslr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtlok_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpresslok_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtlu_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpresslu_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtlp_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpresslp_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtlone_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpresslone_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtltwo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpressltwo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtrl_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpressrl_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtrr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpressrr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtrok_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpressrok_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtru_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpressru_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtrp_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpressrp_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtrone_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpressrone_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtrtwo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtpressrtwo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtrolllu_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtrolllp_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtrollru_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSSwtInfo, mfsswtrollrp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Point2Dguideline_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Point2Dguideline_Struct, seq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_MainScreenOperate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_MainScreenOperate, edc_mainscreenoperate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FogActCtrlInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FogActCtrlInfo, le_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FogActCtrlInfo, ri_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FogActCtrlInfo, le_reactctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FogActCtrlInfo, ri_reactctrlst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VIUPwrPortRstInfo_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VIUPwrPortRstInfo_Struct, viupwrportrstinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAVoiceCtrlFbData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAVoiceCtrlFbData, ad_apavoicectrlfb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PwrCtr, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PwrCtr, pwrpinid_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PwrCtr, ctrcmd_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PwrCtr, hldupti_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PwrCtr, ioposition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_reversecurve_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_continuousdetours_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_pedestrian_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_slip_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_tunnel_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_slow_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_roadworks_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_driveinto_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_motorvehicles_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_turnright_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_straight_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_uturn_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_overtake_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_vehicleparking_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_vehparklongtime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_speedlimit_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_stoptogiveway_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_enter_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_honking_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_givewaytooncoming_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, indication_oneway_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, indication_walk_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, indication_mainroadpriority_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, indication_pedestriancrossing_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, indication_buslane_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_reversecurve_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_continuousdetours_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_pedestrian_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_slip_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_tunnel_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_slow_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, warning_roadworks_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_driveinto_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_motorvehicles_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_turnright_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_straight_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_uturn_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_overtake_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_vehpark_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_vehparklongt_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_speedlimit_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_stoptogiveway_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_enter_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_honking_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, prohibitory_givewayoncom_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, indication_oneway_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, indication_walk_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, indication_mainroadpri_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, indication_pedestriancro_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapTrafficSign, indication_buslane_dis_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_VC_ACCactive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_VC_ACCactive, hu_vc_accactive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APADrvrReqSlotIDData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APADrvrReqSlotIDData, edc_apadrvrreqslotid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_int32_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_int32_Struct, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DDSPayload_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DDSPayload_Struct, seq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperFltSt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperFltSt, wiperfltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperFltSt, wshrfltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperFltSt, linerrst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperFltSt, moterrst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperFltSt, supvoltlost_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperFltSt, supvolthist_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperFltSt, blkst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperFltSt, overtempst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperFltSt, timeoutst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_LaneChangeFrequency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_LaneChangeFrequency, hu_lanechangefrequency_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ForwardColliAstSenStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ForwardColliAstSenStyle, hu_forwardcolliastsenstyle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LoBeamActCtrlInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LoBeamActCtrlInfo, le_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LoBeamActCtrlInfo, ri_actctrlst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLERpaCmdRspData_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLERpaCmdRspData_Struct, blerpacmdrspdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ELKEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ELKEnable, hu_elkenable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_VC_CruiseSetSpeed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_VC_CruiseSetSpeed, hu_vc_cruisesetspeed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TireWarnInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TireWarnInfo, tireplowwarnfl_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TireWarnInfo, tireplowwarnfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TireWarnInfo, tireplowwarnrl_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TireWarnInfo, tireplowwarnrr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TireWarnInfo, tirepleakwarnfl_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TireWarnInfo, tirepleakwarnfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TireWarnInfo, tirepleakwarnrl_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TireWarnInfo, tirepleakwarnrr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TireWarnInfo, tpmssysfailrwarn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASScore, c2_autodrivinscorereason_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASScore, c2_useridnumber_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASScore, c2_autodrivingscore_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASScore, c2_iacctrip_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASScore, c2_nidhighspeedtrip_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASScore, c2_nidcitytrip_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_ADASScore, c2_autodrivingscorethistrip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_slot_ID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_slot_ID, edc_slot_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SwitSetResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SwitSetResult, result_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SwitSetResult, switfailreson_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HzrdKeySwtSt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HzrdKeySwtSt, hzrdswst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HzrdKeySwtSt, hzrdst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ClusterTurnLiSt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ClusterTurnLiSt, lesideturnlist_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ClusterTurnLiSt, risideturnlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LoBeamFltInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LoBeamFltInfo, le_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LoBeamFltInfo, ri_fltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APAAudioRmnSetData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APAAudioRmnSetData, edc_apaaudiormnset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SentrySwitchParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SentrySwitchParam, switsettyp_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SentrySwitchParam, switfirstsetconf_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SentrySwitchParam, source_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapCommonSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapCommonSignal, mapdataupdatestatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapCommonSignal, navstatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapCommonSignal, navguigancestatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapCommonSignal, mapmatchstatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapCommonSignal, navcountrycode_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapCommonSignal, navspeedlimitunits_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APA_availablepoint_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APA_availablepoint_Struct, seq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_RedLightRemindEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_RedLightRemindEnable, hu_redlightremindenable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_BSDLCAOnOffSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_BSDLCAOnOffSet, ad_bsdlcaonoff_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APAPOCDirSelData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APAPOCDirSelData, edc_apapocdirsel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, pinchstsfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, pinchstshei_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, pinchstsbr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, pinchstscus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, pinchstslegfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, pinchstsleghei_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, reserved1_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, reserved2_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, reserved3_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, reserved4_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, reserved5_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, reserved6_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, reserved7_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatInfo, reserved8_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_CSLAEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_CSLAEnable, hu_cslaenable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_OverspeedSoundWarEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_OverspeedSoundWarEnable, hu_overspeedsoundwarenable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DTCArrayInfo_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DTCArrayInfo_Struct, seq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnIndnMsgData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnIndnMsgData, ad_apaunavlreas_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnIndnMsgData, ad_apaprocinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnIndnMsgData, ad_apaabnormexitreas_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnIndnMsgData, ad_radsunavlreas_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnIndnMsgData, ad_radsprocinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APAFctnIndnMsgData, ad_radsexitreas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiCtrlCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiCtrlCmd, turnlictrlposn_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiCtrlCmd, turnlioffdurn_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiCtrlCmd, turnliondurn_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiCtrlCmd, turnlipri_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiCtrlCmd, turnlicnt_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiCtrlCmd, turnlirecover_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiCtrlCmd, flowingefc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_double_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_double_Struct, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RLSSts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RLSSts, rlsst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RLSSts, rlserrorst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RLSSts, rainfalllevel_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RLSSts, rlscomerror_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RLSSts, wiprspd_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_String_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_String_Struct, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PosnLiActCtrlInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PosnLiActCtrlInfo, fl_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PosnLiActCtrlInfo, fr_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PosnLiActCtrlInfo, rl_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PosnLiActCtrlInfo, rr_actctrlst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_LASModeSelection, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_LASModeSelection, hu_lasmodeselection_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurve, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurve, linecruve_5m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurve, linecruve_10m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurve, linecruve_15m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurve, linecruve_20m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurve, linecruve_25m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurve, linecruve_30m_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, seatadjswtfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, seatadjswthei_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, seatadjswtbr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, seatadjswtcus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, seatadjswtlegfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, seatadjswtleghei_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, seatadjswtzerogravity_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, frinitializedsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, heiinitializedsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, brinitializedsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, cusinitializedsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, legfrinitializedsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, legheiinitializedsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, seatheat_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, seatvent_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, frstopstsreason_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, heistopstsreason_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, brstopstsreason_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, cusstopstsreason_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, legfrstopstsreason_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, legheistopstsreason_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DrSeatSts, drseatsbr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_SEAOnOffStsSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_SEAOnOffStsSet, ad_seaonoffsts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ObjStTypeDoorAll_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ObjStTypeDoorAll_Struct, objsttypedoorall_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ForwardColliAstType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ForwardColliAstType, hu_forwardcolliasttype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_VehicleStartRemindEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_VehicleStartRemindEnable, hu_vehiclestartremindenable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, fwiperlogicsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, washlogicsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, wiperpossts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, washactualsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, wiperrunningst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, motangle_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, wiprmotspd_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, wiperactst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, parkareast_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, srvposst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, tunposst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, movedir_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, fusbmovedtimes_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, frntwiperswt_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, wshrswt_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FWiperStsInfo, wiperintgeartimehard_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_UserNotiConfirEvt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_UserNotiConfirEvt, functype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_UserNotiConfirEvt, noticonfirevt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Point2DArray_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Point2DArray_Struct, point2darray_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BrkLiActCtrlInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BrkLiActCtrlInfo, le_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BrkLiActCtrlInfo, ri_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BrkLiActCtrlInfo, chsml_actctrlst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APADynamicOperateData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APADynamicOperateData, edc_apadynamicoperate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RvsLiFltInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RvsLiFltInfo, le_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RvsLiFltInfo, ri_fltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_NIDSelfLrngFbset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_NIDSelfLrngFbset, ad_nidselflrngfb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VideoParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VideoParam, camera_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VideoParam, recordtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, curvedistance_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, entercurveinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, rampdistance_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, enterrampinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, rampinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, rampside_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, navcurrentroadtype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, forwardroadtype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, lanecnt_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, navspeedlimittype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, navspeedlimit_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, speedlimitdistance_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, entertunnelinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, tunneldistance_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, tunnellength_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, enterslopeinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, slopedistance_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, fallingrockinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, fallingrockdis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, tollinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, tolldis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, construction_info_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, construction_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, trafficaccident_info_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, trafficaccident_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, branchinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, branch_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, numchangeoflanes_dist_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, lane_changtype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, road_trafficflow_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_10m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_20m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_30m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_40m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_50m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_60m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_70m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_80m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_90m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_100m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvaturefar_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_300m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_400m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, roadcurvature_600m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, slopegradient_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, slopegradientfar_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, slopegradient_300m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, slopegradient_10m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, slopegradient_20m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, slopegradient_30m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, slopegradient_40m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, slopegradient_50m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, slopegradient_100m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, intervalvelocityinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, intervalvelocitydis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, accidentprone_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, accidentpronedistance_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, laneconfluence_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, laneconfluencedis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, bridgeinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, bridgedis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, weathertype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, serviceroad_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, serviceroaddis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, lanetype_id1_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, lanetype_id2_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, lanetype_id3_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, lanetype_id4_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, lanetype_id5_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, lanetype_id6_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, ehrheartflag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, ehpheartflag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, adas_posn_pathldx_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, adas_posn_offset_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, byroad_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, long_ramp_dis_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, long_ramp_side_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADAS_MapNavigationSignal, llong_tunnel_len_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAReqreply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAReqreply, reply_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ReevTotalMilg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ReevTotalMilg, futotalmilg_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ReevTotalMilg, evtotalmilg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_int8_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_int8_Struct, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationInfo, request_id_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationInfo, session_id_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationInfo, service_st_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BrkLiFltInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BrkLiFltInfo, le_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BrkLiFltInfo, ri_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BrkLiFltInfo, chsml_fltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_BSDLCASetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_BSDLCASetting, hu_bsdlcasetting_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_InfoSetResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_InfoSetResult, result_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_InfoSetResult, infosetfailreson_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_APAvoicecontrol, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDCset_APAvoicecontrol, edc_apavoicecontrol_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RMAset_APP_MainScreenOperate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RMAset_APP_MainScreenOperate, rma_app_mainscreenoperate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DDSData_Msg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DDSData_Msg, topic_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DDSData_Msg, timestamp_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DDSData_Msg, payload_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsTime_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsTime_Struct, gpstime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APAVoiceCtrlData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APAVoiceCtrlData, edc_apavoicectrl_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_CuriseMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_CuriseMode, hu_curisemode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAFunctionReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAFunctionReq, apafunction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_VC_CruiseSetDistance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_VC_CruiseSetDistance, hu_vc_cruisesetdistance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_RPAVoiceCtrlData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_RPAVoiceCtrlData, edc_rpavoicectrl_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ADACCStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ADACCStyle, hu_adaccstyle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAFunctionRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APAFunctionRes, apafunction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HiBeamActCtrlInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HiBeamActCtrlInfo, le_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HiBeamActCtrlInfo, ri_actctrlst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiActCtrlInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiActCtrlInfo, fl_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiActCtrlInfo, fr_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiActCtrlInfo, rl_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiActCtrlInfo, rr_actctrlst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, poscmdreqfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, poscmdreqhei_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, poscmdreqbr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, poscmdreqcus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, poscmdreqlegfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, poscmdreqleghei_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisposfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisposhei_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisposbr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisposcus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisposlegfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisposleghei_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisactivemovigstsfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisactivemovigstshei_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisactivemovigstsbr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisactivemovigstscus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisactivemovigstslegfr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, axisactivemovigstsleghei_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SeatPosInfo, ntctemp_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, keydatacnt_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, keystcnt_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, blephykeypowlflag_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, blephykeychrst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, blephykeypowper_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, compsitest_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, unlockkeyst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, lockkeyst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, defkey1st_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, defkey2st_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLEPhyKeyBascInfo, insidekeyst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TailGateSysSwSt_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TailGateSysSwSt_Struct, tailgatesysswst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_BSDLCAOnOff, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_BSDLCAOnOff, hu_bsdlcaonoff_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_uint64_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_uint64_Struct, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_GetADASScore, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_GetADASScore, c2_useridnumber_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_GetADASScore, c2_autodrivingscore_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_GetADASScore, c2_iacctrip_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_GetADASScore, c2_nidhighspeedtrip_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_GetADASScore, c2_nidcitytrip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_RCWEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_RCWEnable, hu_rcwenable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_SEAMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_SEAMode, hu_seamode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Track_Point1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Track_Point1, pointx_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Track_Point1, pointy_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PwrPortCtr_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PwrPortCtr_Struct, pwrportctr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FogFltInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FogFltInfo, le_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FogFltInfo, ri_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FogFltInfo, le_refltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_FogFltInfo, ri_refltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APASelfdefnSlotData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APASelfdefnSlotData, edc_apaselfdefnslot_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ObjStTypeCurPosVITAll_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ObjStTypeCurPosVITAll_Struct, objsttypecurposvitall_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APAParkOutSelectData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APAParkOutSelectData, edc_apaparkoutselect_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CamLinesCurve, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CamLinesCurve, time_stamp_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CamLinesCurve, frame_index_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CamLinesCurve, all_lines_curve_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CamLinesCurve, all_lines_curve_valid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APA_apaguidepoint_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_APA_apaguidepoint_Struct, seq_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiSt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiSt, lesideturnlist_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiSt, risideturnlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_CESEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_CESEnable, hu_cesenable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_IDAEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_IDAEnable, hu_idaenable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_RearColliAstType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_RearColliAstType, hu_rearcolliasttype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VideoRequestParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VideoRequestParam, triggertype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VideoRequestParam, beforetime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VideoRequestParam, backtime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VideoRequestParam, camera_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VideoRequestParam, taskid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ThrLiActCtrlInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ThrLiActCtrlInfo, frntactctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ThrLiActCtrlInfo, reactctrlst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiKeySwtSt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiKeySwtSt, turnliswtst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiKeySwtSt, turnlikeyswt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SenMoInfoSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SenMoInfoSet, senopenmode_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SenMoInfoSet, senelecfen_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSFltStInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSFltStInfo, diaginfosw_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_MFSFltStInfo, lincommerr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_AbsOverSpdWarnOffset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_AbsOverSpdWarnOffset, hu_absoverspdwarnoffset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_uint16_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_uint16_Struct, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LogoActCtrlInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LogoActCtrlInfo, frntactctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LogoActCtrlInfo, reactctrlst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HornCtrlCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HornCtrlCmd, horncmdprio_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HornCtrlCmd, horncmd_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HornCtrlCmd, horncount_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HornCtrlCmd, hornontime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HornCtrlCmd, hornofftime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DRLActCtrlInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DRLActCtrlInfo, le_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DRLActCtrlInfo, ri_actctrlst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynguidanceData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynguidanceData, ad_apasyspahflg_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynguidanceData, ad_aparemaindst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynguidanceData, ad_apaguidepiont_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynguidanceData, ad_apatarpose_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynguidanceData, ad_aparoadtrfcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_IACCFamlrRdModSwt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_IACCFamlrRdModSwt, hu_iaccfamlrrdmodswt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationCode, request_id_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationCode, session_id_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationCode, vehfield_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationCode, sourcemod_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationCode, rtncode_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_OperationCode, counter_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_RedLightReEnSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_RedLightReEnSet, ad_redlightremindenable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynrecommdData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynrecommdData, ad_apapocdirrecommd_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynrecommdData, ad_apaparkinmoderecommd_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynrecommdData, ad_apagetoff_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APADynrecommdData, ad_apacustavlsta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TarposeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TarposeData, x_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TarposeData, y_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TarposeData, theta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_UDLCEnable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_UDLCEnable, hu_udlcenable_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_IACCFamlrRdModSwtFbSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_C2_IACCFamlrRdModSwtFbSet, c2_iaccfamlrrdmodswtfb_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Point2DStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Point2DStruct, x_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Point2DStruct, y_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Point2DStruct, theta_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RvsLiActCtrlInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RvsLiActCtrlInfo, le_actctrlst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_RvsLiActCtrlInfo, ri_actctrlst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PhyStWinAll_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_PhyStWinAll_Struct, phystwinall_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, srscrashoutpsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, srscrashoutpstschks_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, srscrashoutfront_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, srscrashoutleft_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, srscrashoutmicro_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, srscrashoutrear_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, srscrashoutright_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, srscrashoutrollover_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, srscrashoutcedr_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, srswarnlampsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, lostcomfltsts1_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, lostcomfltsts2_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, reserved1_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, reserved2_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, reserved3_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_CrashStsInfo, reserved4_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, lng_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, lat_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, alti_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, gpstime_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, satnum_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, heading_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, status_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, ns_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, ew_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, speed_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, decline_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_GpsDatas, direction_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_float_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_float_Struct, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ADCurveStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_ADCurveStyle, hu_adcurvestyle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TarSlotData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TarSlotData, ad_apatarslot_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TarSlotData, ad_apapreviewsts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurveValid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurveValid, linecruvevalid_5m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurveValid, linecruvevalid_10m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurveValid, linecruvevalid_15m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurveValid, linecruvevalid_20m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurveValid, linecruvevalid_25m_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LineCurveValid, linecruvevalid_30m_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, srsdrvrbucswtsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, srspassbucswtsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, srsle2ndbucswtsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, srsmid2ndbucswtsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, srsri2ndbucswtsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, srsle3rdbucswtsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, srsmid3rdbucswtsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, srsri3rdbucswtsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, lostcomfltsts1_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, reserved1_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, reserved2_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BucSwtSts, reserved3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VIUPwrPinRstInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VIUPwrPinRstInfo, pwrpinid_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_VIUPwrPinRstInfo, pwrpinrstcnt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DRLFltInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DRLFltInfo, le_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_DRLFltInfo, ri_fltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiFltMonrSt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiFltMonrSt, lesideturnliflt_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiFltMonrSt, risideturnliflt_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_TurnLiFltMonrSt, turnlifblineflt_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HiBeamFltInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HiBeamFltInfo, le_fltst_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HiBeamFltInfo, ri_fltst_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APAParkInSelectData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APAParkInSelectData, edc_apaparkinselect_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASSecureSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASSecureSet, ad_elkenable_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASSecureSet, ad_cesenable_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASSecureSet, ad_lasmodeselectionstatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASSecureSet, ad_lasintellgentmodeselectionstatus_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASSecureSet, ad_laswarningmodeselectionsts_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASSecureSet, ad_forwardcolliasttype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASSecureSet, ad_forwardcolliastsenstyle_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_ADASSecureSet, ad_rearcolliasttype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_CSLmode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_CSLmode, hu_cslmode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APACustSlotData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APACustSlotData, ad_apacustslotini_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_AD_APACustSlotData, ad_apacustslotvld_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_BSDLCARemindmode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_HUset_BSDLCARemindmode, hu_bsdlcaremindmode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SenWarningSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SenWarningSet, senwarningsettype_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SenWarningSet, senwarningsetswitch_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SenWarningSet, senwarningsethonk_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SenWarningSet, senwarningsetlight_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_SenWarningSet, senwarningsetphone_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLERpaData_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BLERpaData_Struct, blerpadata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APADrvrReqOnOffData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EDC_APADrvrReqOnOffData, edc_apadrvrreqonoff_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EleAirSuspAutoModSts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_EleAirSuspAutoModSts, vmcautomodsts_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BattHVSts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_BattHVSts, bcuopermod_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LockStAll_Struct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_LockStAll_Struct, lockstall_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Soa::PB_APAsetnotice)},
  { 46, -1, -1, sizeof(::Soa::PB_ReturnCode)},
  { 53, -1, -1, sizeof(::Soa::PB_RWiperFltSt)},
  { 61, -1, -1, sizeof(::Soa::PB_FunEnEvt)},
  { 70, -1, -1, sizeof(::Soa::PB_TurnLiFltInfo)},
  { 80, -1, -1, sizeof(::Soa::PB_HUset_ADLanechangeStyle)},
  { 87, -1, -1, sizeof(::Soa::PB_EDC_APACustSlotData)},
  { 94, -1, -1, sizeof(::Soa::PB_HUset_NIDAudioWarStyle)},
  { 101, -1, -1, sizeof(::Soa::PB_HUset_LASIntellgentModeSelection)},
  { 108, -1, -1, sizeof(::Soa::PB_HUset_SEAOnOff)},
  { 115, -1, -1, sizeof(::Soa::PB_AD_RPAVoiceCtrlFbData)},
  { 122, -1, -1, sizeof(::Soa::PB_UploadResult)},
  { 130, -1, -1, sizeof(::Soa::PB_HUset_RelOverSpdWarnOffset)},
  { 137, -1, -1, sizeof(::Soa::PB_EleAirSuspHighModCHASts)},
  { 144, -1, -1, sizeof(::Soa::PB_Destination)},
  { 153, -1, -1, sizeof(::Soa::PB_CampWarningSet)},
  { 164, -1, -1, sizeof(::Soa::PB_HUset_LaneChangeReq)},
  { 171, -1, -1, sizeof(::Soa::PB_TailGateSysSwFltSt_Struct)},
  { 178, -1, -1, sizeof(::Soa::PB_HUset_LASWarningModeSelection)},
  { 185, -1, -1, sizeof(::Soa::PB_EleAirSuspIntenModSts)},
  { 192, -1, -1, sizeof(::Soa::PB_C2_ADASStorageTimes)},
  { 248, -1, -1, sizeof(::Soa::PB_RequestInfo)},
  { 256, -1, -1, sizeof(::Soa::PB_TrigEvt)},
  { 264, -1, -1, sizeof(::Soa::PB_C2DmdPrmInfo)},
  { 307, -1, -1, sizeof(::Soa::PB_ViuGearShiftPosnInfo)},
  { 315, -1, -1, sizeof(::Soa::PB_uint8_Struct)},
  { 322, -1, -1, sizeof(::Soa::PB_BLERpaCmdRsp)},
  { 330, -1, -1, sizeof(::Soa::PB_PosnLiFltInfo)},
  { 340, -1, -1, sizeof(::Soa::PB_APAControleReq)},
  { 348, -1, -1, sizeof(::Soa::PB_EDCset_EducatingModeOnOff)},
  { 355, -1, -1, sizeof(::Soa::PB_EDC_RADSDrvrReqData)},
  { 362, -1, -1, sizeof(::Soa::PB_MirrStsInfo)},
  { 380, -1, -1, sizeof(::Soa::PB_EleAirSuspHighModSts)},
  { 387, -1, -1, sizeof(::Soa::PB_AD_APAFctnStaData)},
  { 398, -1, -1, sizeof(::Soa::PB_HUset_ADStartStyle)},
  { 405, -1, -1, sizeof(::Soa::PB_ADASCruiseSet)},
  { 433, -1, -1, sizeof(::Soa::PB_HUset_CSLWarnOffsetTp)},
  { 440, -1, -1, sizeof(::Soa::PB_DoorDrvStAll_Struct)},
  { 447, -1, -1, sizeof(::Soa::PB_LaneLedFltSt)},
  { 455, -1, -1, sizeof(::Soa::PB_EDCset_NIDSelfLrngReq)},
  { 462, -1, -1, sizeof(::Soa::PB_EDCset_PopUpWindowOperate)},
  { 469, -1, -1, sizeof(::Soa::PB_ResponseInfo)},
  { 480, -1, -1, sizeof(::Soa::PB_FileEntity)},
  { 488, -1, -1, sizeof(::Soa::PB_HUset_AutoDriveStyle)},
  { 495, -1, -1, sizeof(::Soa::PB_C2TripSum)},
  { 517, -1, -1, sizeof(::Soa::PB_BLERpaCmdReq)},
  { 525, -1, -1, sizeof(::Soa::PB_uint32_Struct)},
  { 532, -1, -1, sizeof(::Soa::PB_MFSSwtInfo)},
  { 570, -1, -1, sizeof(::Soa::PB_Point2Dguideline_Struct)},
  { 577, -1, -1, sizeof(::Soa::PB_EDCset_MainScreenOperate)},
  { 584, -1, -1, sizeof(::Soa::PB_FogActCtrlInfo)},
  { 594, -1, -1, sizeof(::Soa::PB_VIUPwrPortRstInfo_Struct)},
  { 601, -1, -1, sizeof(::Soa::PB_AD_APAVoiceCtrlFbData)},
  { 608, -1, -1, sizeof(::Soa::PB_PwrCtr)},
  { 618, -1, -1, sizeof(::Soa::PB_ADAS_MapTrafficSign)},
  { 674, -1, -1, sizeof(::Soa::PB_HUset_VC_ACCactive)},
  { 681, -1, -1, sizeof(::Soa::PB_EDC_APADrvrReqSlotIDData)},
  { 688, -1, -1, sizeof(::Soa::PB_int32_Struct)},
  { 695, -1, -1, sizeof(::Soa::PB_DDSPayload_Struct)},
  { 702, -1, -1, sizeof(::Soa::PB_FWiperFltSt)},
  { 717, -1, -1, sizeof(::Soa::PB_HUset_LaneChangeFrequency)},
  { 724, -1, -1, sizeof(::Soa::PB_HUset_ForwardColliAstSenStyle)},
  { 731, -1, -1, sizeof(::Soa::PB_LoBeamActCtrlInfo)},
  { 739, -1, -1, sizeof(::Soa::PB_BLERpaCmdRspData_Struct)},
  { 746, -1, -1, sizeof(::Soa::PB_HUset_ELKEnable)},
  { 753, -1, -1, sizeof(::Soa::PB_HUset_VC_CruiseSetSpeed)},
  { 760, -1, -1, sizeof(::Soa::PB_TireWarnInfo)},
  { 775, -1, -1, sizeof(::Soa::PB_C2_ADASScore)},
  { 788, -1, -1, sizeof(::Soa::PB_EDCset_slot_ID)},
  { 795, -1, -1, sizeof(::Soa::PB_SwitSetResult)},
  { 803, -1, -1, sizeof(::Soa::PB_HzrdKeySwtSt)},
  { 811, -1, -1, sizeof(::Soa::PB_ClusterTurnLiSt)},
  { 819, -1, -1, sizeof(::Soa::PB_LoBeamFltInfo)},
  { 827, -1, -1, sizeof(::Soa::PB_EDC_APAAudioRmnSetData)},
  { 834, -1, -1, sizeof(::Soa::PB_SentrySwitchParam)},
  { 843, -1, -1, sizeof(::Soa::PB_ADAS_MapCommonSignal)},
  { 855, -1, -1, sizeof(::Soa::PB_APA_availablepoint_Struct)},
  { 862, -1, -1, sizeof(::Soa::PB_HUset_RedLightRemindEnable)},
  { 869, -1, -1, sizeof(::Soa::PB_AD_BSDLCAOnOffSet)},
  { 876, -1, -1, sizeof(::Soa::PB_EDC_APAPOCDirSelData)},
  { 883, -1, -1, sizeof(::Soa::PB_SeatInfo)},
  { 903, -1, -1, sizeof(::Soa::PB_HUset_CSLAEnable)},
  { 910, -1, -1, sizeof(::Soa::PB_HUset_OverspeedSoundWarEnable)},
  { 917, -1, -1, sizeof(::Soa::PB_DTCArrayInfo_Struct)},
  { 924, -1, -1, sizeof(::Soa::PB_AD_APAFctnIndnMsgData)},
  { 936, -1, -1, sizeof(::Soa::PB_TurnLiCtrlCmd)},
  { 949, -1, -1, sizeof(::Soa::PB_double_Struct)},
  { 956, -1, -1, sizeof(::Soa::PB_RLSSts)},
  { 967, -1, -1, sizeof(::Soa::PB_String_Struct)},
  { 974, -1, -1, sizeof(::Soa::PB_PosnLiActCtrlInfo)},
  { 984, -1, -1, sizeof(::Soa::PB_HUset_LASModeSelection)},
  { 991, -1, -1, sizeof(::Soa::PB_LineCurve)},
  { 1003, -1, -1, sizeof(::Soa::PB_DrSeatSts)},
  { 1031, -1, -1, sizeof(::Soa::PB_AD_SEAOnOffStsSet)},
  { 1038, -1, -1, sizeof(::Soa::PB_ObjStTypeDoorAll_Struct)},
  { 1045, -1, -1, sizeof(::Soa::PB_HUset_ForwardColliAstType)},
  { 1052, -1, -1, sizeof(::Soa::PB_HUset_VehicleStartRemindEnable)},
  { 1059, -1, -1, sizeof(::Soa::PB_FWiperStsInfo)},
  { 1081, -1, -1, sizeof(::Soa::PB_UserNotiConfirEvt)},
  { 1089, -1, -1, sizeof(::Soa::PB_Point2DArray_Struct)},
  { 1096, -1, -1, sizeof(::Soa::PB_BrkLiActCtrlInfo)},
  { 1105, -1, -1, sizeof(::Soa::PB_EDC_APADynamicOperateData)},
  { 1112, -1, -1, sizeof(::Soa::PB_RvsLiFltInfo)},
  { 1120, -1, -1, sizeof(::Soa::PB_AD_NIDSelfLrngFbset)},
  { 1127, -1, -1, sizeof(::Soa::PB_VideoParam)},
  { 1135, -1, -1, sizeof(::Soa::PB_ADAS_MapNavigationSignal)},
  { 1220, -1, -1, sizeof(::Soa::PB_APAReqreply)},
  { 1227, -1, -1, sizeof(::Soa::PB_ReevTotalMilg)},
  { 1235, -1, -1, sizeof(::Soa::PB_int8_Struct)},
  { 1242, -1, -1, sizeof(::Soa::PB_OperationInfo)},
  { 1251, -1, -1, sizeof(::Soa::PB_BrkLiFltInfo)},
  { 1260, -1, -1, sizeof(::Soa::PB_HUset_BSDLCASetting)},
  { 1267, -1, -1, sizeof(::Soa::PB_InfoSetResult)},
  { 1275, -1, -1, sizeof(::Soa::PB_EDCset_APAvoicecontrol)},
  { 1282, -1, -1, sizeof(::Soa::PB_RMAset_APP_MainScreenOperate)},
  { 1289, -1, -1, sizeof(::Soa::PB_DDSData_Msg)},
  { 1298, -1, -1, sizeof(::Soa::PB_GpsTime_Struct)},
  { 1305, -1, -1, sizeof(::Soa::PB_EDC_APAVoiceCtrlData)},
  { 1312, -1, -1, sizeof(::Soa::PB_HUset_CuriseMode)},
  { 1319, -1, -1, sizeof(::Soa::PB_APAFunctionReq)},
  { 1326, -1, -1, sizeof(::Soa::PB_HUset_VC_CruiseSetDistance)},
  { 1333, -1, -1, sizeof(::Soa::PB_EDC_RPAVoiceCtrlData)},
  { 1340, -1, -1, sizeof(::Soa::PB_HUset_ADACCStyle)},
  { 1347, -1, -1, sizeof(::Soa::PB_APAFunctionRes)},
  { 1354, -1, -1, sizeof(::Soa::PB_HiBeamActCtrlInfo)},
  { 1362, -1, -1, sizeof(::Soa::PB_TurnLiActCtrlInfo)},
  { 1372, -1, -1, sizeof(::Soa::PB_SeatPosInfo)},
  { 1397, -1, -1, sizeof(::Soa::PB_BLEPhyKeyBascInfo)},
  { 1414, -1, -1, sizeof(::Soa::PB_TailGateSysSwSt_Struct)},
  { 1421, -1, -1, sizeof(::Soa::PB_HUset_BSDLCAOnOff)},
  { 1428, -1, -1, sizeof(::Soa::PB_uint64_Struct)},
  { 1435, -1, -1, sizeof(::Soa::PB_C2_GetADASScore)},
  { 1446, -1, -1, sizeof(::Soa::PB_HUset_RCWEnable)},
  { 1453, -1, -1, sizeof(::Soa::PB_HUset_SEAMode)},
  { 1460, -1, -1, sizeof(::Soa::PB_Track_Point1)},
  { 1468, -1, -1, sizeof(::Soa::PB_PwrPortCtr_Struct)},
  { 1475, -1, -1, sizeof(::Soa::PB_FogFltInfo)},
  { 1485, -1, -1, sizeof(::Soa::PB_EDC_APASelfdefnSlotData)},
  { 1492, -1, -1, sizeof(::Soa::PB_ObjStTypeCurPosVITAll_Struct)},
  { 1499, -1, -1, sizeof(::Soa::PB_EDC_APAParkOutSelectData)},
  { 1506, -1, -1, sizeof(::Soa::PB_CamLinesCurve)},
  { 1516, -1, -1, sizeof(::Soa::PB_APA_apaguidepoint_Struct)},
  { 1523, -1, -1, sizeof(::Soa::PB_TurnLiSt)},
  { 1531, -1, -1, sizeof(::Soa::PB_HUset_CESEnable)},
  { 1538, -1, -1, sizeof(::Soa::PB_HUset_IDAEnable)},
  { 1545, -1, -1, sizeof(::Soa::PB_HUset_RearColliAstType)},
  { 1552, -1, -1, sizeof(::Soa::PB_VideoRequestParam)},
  { 1563, -1, -1, sizeof(::Soa::PB_ThrLiActCtrlInfo)},
  { 1571, -1, -1, sizeof(::Soa::PB_TurnLiKeySwtSt)},
  { 1579, -1, -1, sizeof(::Soa::PB_SenMoInfoSet)},
  { 1587, -1, -1, sizeof(::Soa::PB_MFSFltStInfo)},
  { 1595, -1, -1, sizeof(::Soa::PB_HUset_AbsOverSpdWarnOffset)},
  { 1602, -1, -1, sizeof(::Soa::PB_uint16_Struct)},
  { 1609, -1, -1, sizeof(::Soa::PB_LogoActCtrlInfo)},
  { 1617, -1, -1, sizeof(::Soa::PB_HornCtrlCmd)},
  { 1628, -1, -1, sizeof(::Soa::PB_DRLActCtrlInfo)},
  { 1636, -1, -1, sizeof(::Soa::PB_AD_APADynguidanceData)},
  { 1647, -1, -1, sizeof(::Soa::PB_HUset_IACCFamlrRdModSwt)},
  { 1654, -1, -1, sizeof(::Soa::PB_OperationCode)},
  { 1666, -1, -1, sizeof(::Soa::PB_AD_RedLightReEnSet)},
  { 1673, -1, -1, sizeof(::Soa::PB_AD_APADynrecommdData)},
  { 1683, -1, -1, sizeof(::Soa::PB_TarposeData)},
  { 1692, -1, -1, sizeof(::Soa::PB_HUset_UDLCEnable)},
  { 1699, -1, -1, sizeof(::Soa::PB_C2_IACCFamlrRdModSwtFbSet)},
  { 1706, -1, -1, sizeof(::Soa::PB_Point2DStruct)},
  { 1715, -1, -1, sizeof(::Soa::PB_RvsLiActCtrlInfo)},
  { 1723, -1, -1, sizeof(::Soa::PB_PhyStWinAll_Struct)},
  { 1730, -1, -1, sizeof(::Soa::PB_CrashStsInfo)},
  { 1752, -1, -1, sizeof(::Soa::PB_GpsDatas)},
  { 1770, -1, -1, sizeof(::Soa::PB_float_Struct)},
  { 1777, -1, -1, sizeof(::Soa::PB_HUset_ADCurveStyle)},
  { 1784, -1, -1, sizeof(::Soa::PB_TarSlotData)},
  { 1792, -1, -1, sizeof(::Soa::PB_LineCurveValid)},
  { 1804, -1, -1, sizeof(::Soa::PB_BucSwtSts)},
  { 1822, -1, -1, sizeof(::Soa::PB_VIUPwrPinRstInfo)},
  { 1830, -1, -1, sizeof(::Soa::PB_DRLFltInfo)},
  { 1838, -1, -1, sizeof(::Soa::PB_TurnLiFltMonrSt)},
  { 1847, -1, -1, sizeof(::Soa::PB_HiBeamFltInfo)},
  { 1855, -1, -1, sizeof(::Soa::PB_EDC_APAParkInSelectData)},
  { 1862, -1, -1, sizeof(::Soa::PB_ADASSecureSet)},
  { 1876, -1, -1, sizeof(::Soa::PB_HUset_CSLmode)},
  { 1883, -1, -1, sizeof(::Soa::PB_AD_APACustSlotData)},
  { 1891, -1, -1, sizeof(::Soa::PB_HUset_BSDLCARemindmode)},
  { 1898, -1, -1, sizeof(::Soa::PB_SenWarningSet)},
  { 1909, -1, -1, sizeof(::Soa::PB_BLERpaData_Struct)},
  { 1916, -1, -1, sizeof(::Soa::PB_EDC_APADrvrReqOnOffData)},
  { 1923, -1, -1, sizeof(::Soa::PB_EleAirSuspAutoModSts)},
  { 1930, -1, -1, sizeof(::Soa::PB_BattHVSts)},
  { 1937, -1, -1, sizeof(::Soa::PB_LockStAll_Struct)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_APAsetnotice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ReturnCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_RWiperFltSt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_FunEnEvt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TurnLiFltInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_ADLanechangeStyle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_APACustSlotData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_NIDAudioWarStyle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_LASIntellgentModeSelection_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_SEAOnOff_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_RPAVoiceCtrlFbData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_UploadResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_RelOverSpdWarnOffset_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EleAirSuspHighModCHASts_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Destination_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_CampWarningSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_LaneChangeReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TailGateSysSwFltSt_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_LASWarningModeSelection_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EleAirSuspIntenModSts_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_C2_ADASStorageTimes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_RequestInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TrigEvt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_C2DmdPrmInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ViuGearShiftPosnInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_uint8_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_BLERpaCmdRsp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_PosnLiFltInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_APAControleReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDCset_EducatingModeOnOff_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_RADSDrvrReqData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_MirrStsInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EleAirSuspHighModSts_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_APAFctnStaData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_ADStartStyle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ADASCruiseSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_CSLWarnOffsetTp_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_DoorDrvStAll_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_LaneLedFltSt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDCset_NIDSelfLrngReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDCset_PopUpWindowOperate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ResponseInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_FileEntity_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_AutoDriveStyle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_C2TripSum_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_BLERpaCmdReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_uint32_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_MFSSwtInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Point2Dguideline_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDCset_MainScreenOperate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_FogActCtrlInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_VIUPwrPortRstInfo_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_APAVoiceCtrlFbData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_PwrCtr_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ADAS_MapTrafficSign_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_VC_ACCactive_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_APADrvrReqSlotIDData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_int32_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_DDSPayload_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_FWiperFltSt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_LaneChangeFrequency_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_ForwardColliAstSenStyle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_LoBeamActCtrlInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_BLERpaCmdRspData_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_ELKEnable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_VC_CruiseSetSpeed_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TireWarnInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_C2_ADASScore_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDCset_slot_ID_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_SwitSetResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HzrdKeySwtSt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ClusterTurnLiSt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_LoBeamFltInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_APAAudioRmnSetData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_SentrySwitchParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ADAS_MapCommonSignal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_APA_availablepoint_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_RedLightRemindEnable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_BSDLCAOnOffSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_APAPOCDirSelData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_SeatInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_CSLAEnable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_OverspeedSoundWarEnable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_DTCArrayInfo_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_APAFctnIndnMsgData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TurnLiCtrlCmd_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_double_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_RLSSts_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_String_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_PosnLiActCtrlInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_LASModeSelection_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_LineCurve_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_DrSeatSts_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_SEAOnOffStsSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ObjStTypeDoorAll_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_ForwardColliAstType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_VehicleStartRemindEnable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_FWiperStsInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_UserNotiConfirEvt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Point2DArray_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_BrkLiActCtrlInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_APADynamicOperateData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_RvsLiFltInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_NIDSelfLrngFbset_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_VideoParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ADAS_MapNavigationSignal_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_APAReqreply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ReevTotalMilg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_int8_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_OperationInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_BrkLiFltInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_BSDLCASetting_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_InfoSetResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDCset_APAvoicecontrol_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_RMAset_APP_MainScreenOperate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_DDSData_Msg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_GpsTime_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_APAVoiceCtrlData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_CuriseMode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_APAFunctionReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_VC_CruiseSetDistance_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_RPAVoiceCtrlData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_ADACCStyle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_APAFunctionRes_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HiBeamActCtrlInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TurnLiActCtrlInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_SeatPosInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_BLEPhyKeyBascInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TailGateSysSwSt_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_BSDLCAOnOff_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_uint64_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_C2_GetADASScore_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_RCWEnable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_SEAMode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Track_Point1_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_PwrPortCtr_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_FogFltInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_APASelfdefnSlotData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ObjStTypeCurPosVITAll_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_APAParkOutSelectData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_CamLinesCurve_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_APA_apaguidepoint_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TurnLiSt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_CESEnable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_IDAEnable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_RearColliAstType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_VideoRequestParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ThrLiActCtrlInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TurnLiKeySwtSt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_SenMoInfoSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_MFSFltStInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_AbsOverSpdWarnOffset_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_uint16_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_LogoActCtrlInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HornCtrlCmd_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_DRLActCtrlInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_APADynguidanceData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_IACCFamlrRdModSwt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_OperationCode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_RedLightReEnSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_APADynrecommdData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TarposeData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_UDLCEnable_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_C2_IACCFamlrRdModSwtFbSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Point2DStruct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_RvsLiActCtrlInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_PhyStWinAll_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_CrashStsInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_GpsDatas_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_float_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_ADCurveStyle_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TarSlotData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_LineCurveValid_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_BucSwtSts_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_VIUPwrPinRstInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_DRLFltInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_TurnLiFltMonrSt_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HiBeamFltInfo_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_APAParkInSelectData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_ADASSecureSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_CSLmode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_AD_APACustSlotData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_HUset_BSDLCARemindmode_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_SenWarningSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_BLERpaData_Struct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EDC_APADrvrReqOnOffData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_EleAirSuspAutoModSts_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_BattHVSts_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_LockStAll_Struct_default_instance_),
};

const char descriptor_table_protodef_Common_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014Common.proto\022\003Soa\"\301\t\n\017PB_APAsetnotice\022"
  "\030\n\020APA_ParkNotice_5\030\001 \001(\r\022\031\n\021APA_VoiceNo"
  "tice_1\030\002 \001(\r\022\025\n\rAPA_customReq\030\003 \001(\r\022\031\n\021A"
  "PA_window_Notice\030\004 \001(\r\022\035\n\025APA_SystemFail"
  "ureFlag\030\005 \001(\r\022\034\n\024APA_Condition_Notice\030\006 "
  "\001(\r\022\027\n\017APA_RecomendReq\030\007 \001(\r\022\035\n\025APA_RADS"
  "LocalPathFlag\030\010 \001(\r\022\036\n\026APA_RADSglobalpat"
  "hFlag\030\t \001(\r\022\032\n\022APA_RemainDistance\030\n \001(\r\022"
  "\026\n\016APA_RADSNotice\030\013 \001(\r\022\027\n\017APA_soundNoti"
  "ce\030\014 \001(\r\022\031\n\021APA_HZPParkNotice\030\r \001(\r\022\032\n\022A"
  "PA_HZPRecomendReq\030\016 \001(\r\022\034\n\024APA_MAPmanage"
  "mentSts\030\017 \001(\r\022\034\n\024APA_HZPLocalPathFlag\030\020 "
  "\001(\r\022\035\n\025APA_HZPglobalpathFlag\030\021 \001(\r\022\033\n\023AP"
  "A_ParkingpathFlag\030\022 \001(\r\022\034\n\024APA_Avoidpede"
  "strians\030\023 \001(\r\022\030\n\020APA_Avoidvehicle\030\024 \001(\r\022"
  "\031\n\021APA_Drivedistance\030\025 \001(\r\022\030\n\020APA_Abnorm"
  "alexit\030\026 \001(\r\022\036\n\026APA_HZPlearingpathFlag\030\027"
  " \001(\r\022\031\n\021APA_ControlNotice\030\030 \001(\r\022\031\n\021APA_H"
  "ZPpathwindow\030\031 \001(\r\022\034\n\024APA_EducatingModeS"
  "ts\030\032 \001(\r\022\026\n\016APA_SlotNotice\030\033 \001(\r\022\034\n\024APA_"
  "customParkNotice\030\034 \001(\r\022-\n\017APA_custompoin"
  "t\030\035 \003(\0132\024.Soa.PB_Track_Point1\022,\n\016APA_gui"
  "depiont\030\036 \003(\0132\024.Soa.PB_Track_Point1\022\026\n\016A"
  "PA_MessageReq\030\037 \001(\r\022\032\n\022AD_APARoadTrfcInf"
  "o\030  \001(\r\022\026\n\016AD_APAWaitTime\030! \001(\r\022/\n\020AD_RA"
  "DSDstnPoint\030\" \001(\0132\025.Soa.PB_Point2DStruct"
  "\0221\n\022AD_APASelfdefnSlot\030# \003(\0132\025.Soa.PB_Po"
  "int2DStruct\022\033\n\023AD_APASelfdefnvalid\030$ \001(\r"
  "\022\024\n\014AD_APAViewAg\030% \001(\r\022\025\n\rAD_APAguiding\030"
  "& \001(\r\022\031\n\021AD_APAAudioRmnSet\030\' \001(\r\022-\n\020AD_A"
  "PATarSlotSts\030( \001(\0132\023.Soa.PB_TarSlotData\""
  "\035\n\rPB_ReturnCode\022\014\n\004code\030\001 \001(\r\"7\n\016PB_RWi"
  "perFltSt\022\022\n\nWiperFltSt\030\001 \001(\r\022\021\n\tWshrFltS"
  "t\030\002 \001(\r\"G\n\013PB_FunEnEvt\022\020\n\010FunEnTyp\030\001 \001(\r"
  "\022\016\n\006Result\030\002 \001(\r\022\026\n\016FunEnFailReson\030\003 \001(\r"
  "\"Z\n\020PB_TurnLiFltInfo\022\020\n\010FL_FltSt\030\001 \001(\r\022\020"
  "\n\010FR_FltSt\030\002 \001(\r\022\020\n\010RL_FltSt\030\003 \001(\r\022\020\n\010RR"
  "_FltSt\030\004 \001(\r\":\n\032PB_HUset_ADLanechangeSty"
  "le\022\034\n\024HU_ADLanechangeStyle\030\001 \001(\r\"H\n\026PB_E"
  "DC_APACustSlotData\022.\n\017EDC_APACustSlot\030\001 "
  "\003(\0132\025.Soa.PB_Point2DStruct\"8\n\031PB_HUset_N"
  "IDAudioWarStyle\022\033\n\023HU_NIDAudioWarStyle\030\001"
  " \001(\r\"L\n#PB_HUset_LASIntellgentModeSelect"
  "ion\022%\n\035HU_LASIntellgentModeSelection\030\001 \001"
  "(\r\"(\n\021PB_HUset_SEAOnOff\022\023\n\013HU_SEAOnOff\030\001"
  " \001(\r\"5\n\030PB_AD_RPAVoiceCtrlFbData\022\031\n\021AD_R"
  "PAVoiceCtrlFb\030\001 \001(\r\"5\n\017PB_UploadResult\022\022"
  "\n\nfileHandle\030\001 \001(\014\022\016\n\006taskId\030\002 \001(\004\"@\n\035PB"
  "_HUset_RelOverSpdWarnOffset\022\037\n\027HU_RelOve"
  "rSpdWarnOffset\030\001 \001(\r\":\n\032PB_EleAirSuspHig"
  "hModCHASts\022\034\n\024VMCActEcasModeCHASts\030\001 \001(\r"
  "\"8\n\016PB_Destination\022\014\n\004type\030\001 \001(\005\022\013\n\003lng\030"
  "\002 \001(\001\022\013\n\003lat\030\003 \001(\001\"\243\001\n\021PB_CampWarningSet"
  "\022\032\n\022CampWarningSetType\030\001 \001(\r\022\034\n\024CampWarn"
  "ingSetSwitch\030\002 \001(\r\022\032\n\022CampWarningSetHonk"
  "\030\003 \001(\r\022\033\n\023CampWarningSetLight\030\004 \001(\r\022\033\n\023C"
  "ampWarningSetPhone\030\005 \001(\r\"2\n\026PB_HUset_Lan"
  "eChangeReq\022\030\n\020HU_LaneChangeReq\030\001 \001(\r\":\n\034"
  "PB_TailGateSysSwFltSt_Struct\022\032\n\022TailGate"
  "SysSwFltSt\030\001 \003(\r\"F\n PB_HUset_LASWarningM"
  "odeSelection\022\"\n\032HU_LASWarningModeSelecti"
  "on\030\001 \001(\r\"3\n\030PB_EleAirSuspIntenModSts\022\027\n\017"
  "SuspIntenModSts\030\001 \001(\r\"\214\t\n\026PB_C2_ADASStor"
  "ageTimes\022\026\n\016StoSpeedAdjust\030\001 \001(\r\022\035\n\025StoT"
  "imeIntervalAdjust\030\002 \001(\r\022\033\n\023StoTargetDece"
  "lerate\030\003 \001(\r\022\036\n\026StoSpeedUptoLimitation\030\004"
  " \001(\r\022\036\n\026StoSpeedDownLimitation\030\005 \001(\r\022\031\n\021"
  "StoSetCruiseSpeed\030\006 \001(\r\022\016\n\006StoLDC\030\007 \001(\r\022"
  "\021\n\tStoLDCDes\030\010 \001(\r\022\023\n\013StoUDLCLeft\030\t \001(\r\022"
  "\024\n\014StoUDLCRight\030\n \001(\r\022\022\n\nStoUDLCDes\030\013 \001("
  "\r\022\023\n\013StoObsAvoid\030\014 \001(\r\022\026\n\016StoObsAvoidDes"
  "\030\r \001(\r\022\025\n\rStoLaneChange\030\016 \001(\r\022\030\n\020StoLane"
  "ChangeDes\030\017 \001(\r\022\035\n\025StoIntersectionAssist"
  "\030\020 \001(\r\022\034\n\024ntersectionAssistDes\030\021 \001(\r\022\025\n\r"
  "StoRampAssist\030\022 \001(\r\022\030\n\020StoRampAssistDes\030"
  "\023 \001(\r\022\030\n\020StoLaneChangeFre\030\024 \001(\r\022\037\n\027StoSm"
  "artSpeedLimitation\030\025 \001(\r\022\021\n\tStoACCRec\030\026 "
  "\001(\r\022\022\n\nStoiACCRec\030\027 \001(\r\022\021\n\tStoNIDRec\030\030 \001"
  "(\r\022\024\n\014StoACCtoIACC\030\031 \001(\r\022\023\n\013StoACCtoNID\030"
  "\032 \001(\r\022\024\n\014StoIACCtoNID\030\033 \001(\r\022\024\n\014StoNIDtoI"
  "ACC\030\034 \001(\r\022\023\n\013StoNIDtoACC\030\035 \001(\r\022\024\n\014StoIAC"
  "CtoACC\030\036 \001(\r\022\027\n\017StoLongTakeOver\030\037 \001(\r\022\026\n"
  "\016StoLatTakeOver\030  \001(\r\022\022\n\nStoEyesOff\030! \001("
  "\r\022\023\n\013StoHandsOff\030\" \001(\r\022\026\n\016StoSilentState"
  "\030# \001(\r\022\033\n\023StoSilentStateClear\030$ \001(\r\022\016\n\006S"
  "toLDW\030% \001(\r\022\016\n\006StoLCA\030& \001(\r\022\030\n\020StoStartR"
  "eminder\030\' \001(\r\022\016\n\006StoFCW\030( \001(\r\022\024\n\014StoLDWp"
  "UNISH\030) \001(\r\022\024\n\014StoOverSpeed\030* \001(\r\022\024\n\014Sto"
  "DriveMode\030+ \001(\r\022\021\n\treserved1\030, \001(\r\022\021\n\tre"
  "served2\030- \001(\r\022\021\n\treserved3\030. \001(\r\022\021\n\trese"
  "rved4\030/ \001(\r\022\021\n\treserved5\0300 \001(\r\022\021\n\treserv"
  "ed6\0301 \001(\r\022\021\n\treserved7\0302 \001(\r\"8\n\016PB_Reque"
  "stInfo\022\022\n\nRequest_ID\030\001 \001(\r\022\022\n\nSession_ID"
  "\030\002 \001(\r\"3\n\nPB_TrigEvt\022\020\n\010FuncType\030\001 \001(\r\022\023"
  "\n\013NotiTrigEvt\030\002 \001(\r\"\233\007\n\017PB_C2DmdPrmInfo\022"
  "\027\n\017VcuFrntWhlActTq\030\001 \001(\r\022\027\n\017VcuFrntWhlRe"
  "qTq\030\002 \001(\r\022\025\n\rVcuReWhlActTq\030\003 \001(\r\022\025\n\rVcuR"
  "eWhlReqTq\030\004 \001(\r\022\026\n\016VcuVehWhlReqTq\030\005 \001(\r\022"
  "\023\n\013VcuPtTqReal\030\006 \001(\r\022\027\n\017VcuAccrPedlPosn\030"
  "\007 \001(\r\022\034\n\024VcuCalcnAccrPedlPosn\030\010 \001(\r\022\025\n\rV"
  "cuPtTqLimMax\030\t \001(\r\022\025\n\rVcuPtTqLimMin\030\n \001("
  "\r\022\032\n\022VcuFrntWhlActTqVld\030\013 \001(\r\022\032\n\022VcuFrnt"
  "WhlReqTqVld\030\014 \001(\r\022\030\n\020VcuReWhlActTqVld\030\r "
  "\001(\r\022\030\n\020VcuReWhlReqTqVld\030\016 \001(\r\022\031\n\021VcuVehW"
  "hlReqTqVld\030\017 \001(\r\022\026\n\016VcuPtTqRealVld\030\020 \001(\r"
  "\022\030\n\020VcuPtTqLimMaxVld\030\021 \001(\r\022\030\n\020VcuPtTqLim"
  "MinVld\030\022 \001(\r\022\032\n\022VcuAccrPedlPosnVld\030\023 \001(\r"
  "\022\037\n\027VcuCalcnAccrPedlPosnVld\030\024 \001(\r\022\027\n\017VCU"
  "AccPedShield\030\025 \001(\r\022\025\n\rVcuOvrdModReq\030\026 \001("
  "\r\022\024\n\014VcuComFltSts\030\027 \001(\r\022\025\n\rVcuPtTqReqAvl"
  "\030\030 \001(\r\022\027\n\017VcuShiftLvlPosn\030\031 \001(\r\022\033\n\023VCUGe"
  "arShiftPositon\030\032 \001(\r\022\034\n\024VCUShiftPostionV"
  "alid\030\033 \001(\r\022 \n\030VCUAPAdriverInterruption\030\034"
  " \001(\r\022\033\n\023VCUAPARequestEnable\030\035 \001(\r\022\021\n\tres"
  "erved1\030\036 \001(\r\022\021\n\treserved2\030\037 \001(\r\022\021\n\treser"
  "ved3\030  \001(\r\022\021\n\treserved4\030! \001(\r\022\021\n\treserve"
  "d5\030\" \001(\r\022\021\n\treserved6\030# \001(\r\022\021\n\treserved7"
  "\030$ \001(\r\022\021\n\treserved8\030% \001(\r\"P\n\027PB_ViuGearS"
  "hiftPosnInfo\022\030\n\020ViuGearShiftPosn\030\001 \001(\r\022\033"
  "\n\023ViuGearShiftPosnVld\030\002 \001(\r\"\037\n\017PB_uint8_"
  "Struct\022\014\n\004data\030\001 \001(\r\"=\n\017PB_BLERpaCmdRsp\022"
  "\030\n\020BLERpaCmdRspData\030\001 \003(\r\022\020\n\010KeyIndex\030\002 "
  "\001(\r\"Z\n\020PB_PosnLiFltInfo\022\020\n\010FL_FltSt\030\001 \001("
  "\r\022\020\n\010FR_FltSt\030\002 \001(\r\022\020\n\010RL_FltSt\030\003 \001(\r\022\020\n"
  "\010RR_FltSt\030\004 \001(\r\"@\n\021PB_APAControleReq\022\030\n\020"
  "APAControlEnable\030\001 \001(\r\022\021\n\tHeartbeat\030\002 \001("
  "\r\">\n\034PB_EDCset_EducatingModeOnOff\022\036\n\026EDC"
  "_EducatingModeOnOff\030\001 \001(\r\"1\n\026PB_EDC_RADS"
  "DrvrReqData\022\027\n\017EDC_RADSDrvrReq\030\001 \001(\r\"\234\002\n"
  "\016PB_MirrStsInfo\022\026\n\016LeMirrFoldCtrl\030\001 \001(\r\022"
  "\026\n\016RiMirrFoldCtrl\030\002 \001(\r\022\022\n\nLeMirrHeat\030\003 "
  "\001(\r\022\022\n\nRiMirrHeat\030\004 \001(\r\022\023\n\013LeMirrPosnX\030\005"
  " \001(\r\022\023\n\013LeMirrPosnY\030\006 \001(\r\022\023\n\013RiMirrPosnX"
  "\030\007 \001(\r\022\023\n\013RiMirrPosnY\030\010 \001(\r\022\026\n\016LeMirrTar"
  "PosnX\030\t \001(\r\022\026\n\016LeMirrTarPosnY\030\n \001(\r\022\026\n\016R"
  "iMirrTarPosnX\030\013 \001(\r\022\026\n\016RiMirrTarPosnY\030\014 "
  "\001(\r\"1\n\027PB_EleAirSuspHighModSts\022\026\n\016SuspHi"
  "ghModSts\030\001 \001(\r\"|\n\024PB_AD_APAFctnStaData\022\027"
  "\n\017AD_APASysEnaSta\030\001 \001(\r\022\021\n\tAD_APASta\030\002 \001"
  "(\r\022\021\n\tAD_RPASta\030\003 \001(\r\022\021\n\tAD_RMASta\030\004 \001(\r"
  "\022\022\n\nAD_RADSSta\030\005 \001(\r\"0\n\025PB_HUset_ADStart"
  "Style\022\027\n\017HU_ADStartStyle\030\001 \001(\r\"\204\005\n\020PB_AD"
  "ASCruiseSet\022\025\n\rAD_CuriseMode\030\001 \001(\r\022\032\n\022AD"
  "_IDAEnableStatus\030\002 \001(\r\022\024\n\014AD_IDAstatus\030\003"
  " \001(\r\022\036\n\026AD_LaneChangeFrequency\030\004 \001(\r\022\033\n\023"
  "AD_UDLCEnableStatus\030\005 \001(\r\022\033\n\023AD_NIDAudio"
  "WarStyle\030\006 \001(\r\022\033\n\023AD_CSLAEnableStatus\030\007 "
  "\001(\r\022\030\n\020AD_CSLmodeStatus\030\010 \001(\r\022$\n\034AD_Over"
  "speedSoundWarningEnSt\030\t \001(\r\022\032\n\022AD_CSLWar"
  "nOffsetTp\030\n \001(\r\022\037\n\027AD_AbsOverSpdWarnOffs"
  "et\030\013 \001(\r\022\037\n\027AD_RelOverSpdWarnOffset\030\014 \001("
  "\r\022\031\n\021AD_AutoDriveStyle\030\r \001(\r\022\025\n\rAD_ADACC"
  "Style\030\016 \001(\r\022\027\n\017AD_ADStartStyle\030\017 \001(\r\022\027\n\017"
  "AD_ADCurveStyle\030\020 \001(\r\022\034\n\024AD_ADLanechange"
  "Style\030\021 \001(\r\022#\n\033AD_VehicleStartRemindEnab"
  "le\030\022 \001(\r\022\032\n\022AD_RCWEnableStatus\030\023 \001(\r\022\030\n\020"
  "AD_SEAModeStatus\030\024 \001(\r\022\030\n\020AD_BSDLCASetti"
  "ng\030\025 \001(\r\022\033\n\023AD_BSDLCARemindmode\030\026 \001(\r\"6\n"
  "\030PB_HUset_CSLWarnOffsetTp\022\032\n\022HU_CSLWarnO"
  "ffsetTp\030\001 \001(\r\".\n\026PB_DoorDrvStAll_Struct\022"
  "\024\n\014DoorDrvStAll\030\001 \003(\r\"A\n\017PB_LaneLedFltSt"
  "\022\026\n\016LeLaneLedFltSt\030\001 \001(\r\022\026\n\016RiLaneLedFlt"
  "St\030\002 \001(\r\"6\n\030PB_EDCset_NIDSelfLrngReq\022\032\n\022"
  "EDC_NIDSelfLrngReq\030\001 \001(\r\">\n\034PB_EDCset_Po"
  "pUpWindowOperate\022\036\n\026EDC_PopUpWindowOpera"
  "te\030\001 \001(\r\"o\n\017PB_ResponseInfo\022\022\n\nRequest_I"
  "D\030\001 \001(\r\022\022\n\nSession_ID\030\002 \001(\r\022\020\n\010VehField\030"
  "\003 \001(\r\022\021\n\tSourceMod\030\004 \001(\r\022\017\n\007RtnCode\030\005 \001("
  "\r\"4\n\rPB_FileEntity\022\022\n\nverifyCode\030\001 \001(\014\022\017"
  "\n\007payload\030\002 \003(\r\"4\n\027PB_HUset_AutoDriveSty"
  "le\022\031\n\021HU_AutoDriveStyle\030\001 \001(\r\"\253\003\n\014PB_C2T"
  "ripSum\022\026\n\016ADS_TotalMiles\030\001 \001(\002\022\024\n\014ADS_NI"
  "DMiles\030\002 \001(\002\022\032\n\022ADS_SafeFunTriTime\030\003 \001(\r"
  "\022\026\n\016ADS_AEBTriTime\030\004 \001(\r\022\026\n\016ADS_AESTriTi"
  "me\030\005 \001(\r\022\026\n\016ADS_ELKTriTime\030\006 \001(\r\022\033\n\023ADS_"
  "ThroughRampTime\030\007 \001(\r\022#\n\033ADS_ThroughInte"
  "rsectionTime\030\010 \001(\r\022\032\n\022ADS_LaneChangeTime"
  "\030\t \001(\r\022\030\n\020ADS_TakeoverTime\030\n \001(\r\022\030\n\020ADS_"
  "ObsAvoidTime\030\013 \001(\r\022\033\n\023ADS_NIDLongestMile"
  "s\030\014 \001(\002\022\023\n\013APA_UseTime\030\r \001(\r\022\024\n\014APA_Save"
  "Time\030\016 \001(\r\022\027\n\017C2_UserIDnumber\030\017 \001(\014\022\026\n\016A"
  "DS_ADSUseTime\030\020 \001(\r\"7\n\017PB_BLERpaCmdReq\022\022"
  "\n\nBLERpaData\030\001 \003(\r\022\020\n\010KeyIndex\030\002 \001(\r\" \n\020"
  "PB_uint32_Struct\022\014\n\004data\030\001 \001(\r\"\271\005\n\rPB_MF"
  "SSwtInfo\022\020\n\010MFSSwtLL\030\001 \001(\r\022\025\n\rMFSSwtPres"
  "sLL\030\002 \001(\r\022\020\n\010MFSSwtLR\030\003 \001(\r\022\025\n\rMFSSwtPre"
  "ssLR\030\004 \001(\r\022\021\n\tMFSSwtLok\030\005 \001(\r\022\026\n\016MFSSwtP"
  "ressLok\030\006 \001(\r\022\020\n\010MFSSwtLU\030\007 \001(\r\022\025\n\rMFSSw"
  "tPressLU\030\010 \001(\r\022\020\n\010MFSSwtLP\030\t \001(\r\022\025\n\rMFSS"
  "wtPressLP\030\n \001(\r\022\022\n\nMFSSwtLone\030\013 \001(\r\022\027\n\017M"
  "FSSwtPressLone\030\014 \001(\r\022\022\n\nMFSSwtLtwo\030\r \001(\r"
  "\022\027\n\017MFSSwtPressLtwo\030\016 \001(\r\022\020\n\010MFSSwtRL\030\017 "
  "\001(\r\022\025\n\rMFSSwtPressRL\030\020 \001(\r\022\020\n\010MFSSwtRR\030\021"
  " \001(\r\022\025\n\rMFSSwtPressRR\030\022 \001(\r\022\021\n\tMFSSwtRok"
  "\030\023 \001(\r\022\026\n\016MFSSwtPressRok\030\024 \001(\r\022\020\n\010MFSSwt"
  "RU\030\025 \001(\r\022\025\n\rMFSSwtPressRU\030\026 \001(\r\022\020\n\010MFSSw"
  "tRP\030\027 \001(\r\022\025\n\rMFSSwtPressRP\030\030 \001(\r\022\022\n\nMFSS"
  "wtRone\030\031 \001(\r\022\027\n\017MFSSwtPressRone\030\032 \001(\r\022\022\n"
  "\nMFSSwtRtwo\030\033 \001(\r\022\027\n\017MFSSwtPressRtwo\030\034 \001"
  "(\r\022\024\n\014MFSSwtRollLU\030\035 \001(\r\022\024\n\014MFSSwtRollLP"
  "\030\036 \001(\r\022\024\n\014MFSSwtRollRU\030\037 \001(\r\022\024\n\014MFSSwtRo"
  "llRP\030  \001(\r\"@\n\032PB_Point2Dguideline_Struct"
  "\022\"\n\003seq\030\001 \003(\0132\025.Soa.PB_Point2DStruct\"<\n\033"
  "PB_EDCset_MainScreenOperate\022\035\n\025EDC_MainS"
  "creenOperate\030\001 \001(\r\"o\n\021PB_FogActCtrlInfo\022"
  "\024\n\014Le_ActCtrlSt\030\001 \001(\r\022\024\n\014Ri_ActCtrlSt\030\002 "
  "\001(\r\022\026\n\016Le_ReActCtrlSt\030\003 \001(\r\022\026\n\016Ri_ReActC"
  "trlSt\030\004 \001(\r\"R\n\033PB_VIUPwrPortRstInfo_Stru"
  "ct\0223\n\021VIUPwrPortRstInfo\030\001 \003(\0132\030.Soa.PB_V"
  "IUPwrPinRstInfo\"5\n\030PB_AD_APAVoiceCtrlFbD"
  "ata\022\031\n\021AD_APAVoiceCtrlFb\030\001 \001(\r\"R\n\tPB_Pwr"
  "Ctr\022\020\n\010PwrPinID\030\001 \001(\r\022\016\n\006CtrCmd\030\002 \001(\r\022\017\n"
  "\007HldUpTi\030\003 \001(\r\022\022\n\nIOPosition\030\004 \001(\r\"\331\014\n\026P"
  "B_ADAS_MapTrafficSign\022\034\n\024Warning_Reverse"
  "Curve\030\001 \001(\r\022!\n\031Warning_ContinuousDetours"
  "\030\002 \001(\r\022\032\n\022Warning_Pedestrian\030\003 \001(\r\022\024\n\014Wa"
  "rning_Slip\030\004 \001(\r\022\026\n\016Warning_Tunnel\030\005 \001(\r"
  "\022\024\n\014Warning_Slow\030\006 \001(\r\022\031\n\021Warning_RoadWo"
  "rks\030\007 \001(\r\022\035\n\025Prohibitory_DriveInto\030\010 \001(\r"
  "\022!\n\031Prohibitory_MotorVehicles\030\t \001(\r\022\035\n\025P"
  "rohibitory_TurnRight\030\n \001(\r\022\034\n\024Prohibitor"
  "y_Straight\030\013 \001(\r\022\031\n\021Prohibitory_Uturn\030\014 "
  "\001(\r\022\034\n\024Prohibitory_Overtake\030\r \001(\r\022\"\n\032Pro"
  "hibitory_VehicleParking\030\016 \001(\r\022#\n\033Prohibi"
  "tory_VehParkLongTime\030\017 \001(\r\022\036\n\026Prohibitor"
  "y_SpeedLimit\030\020 \001(\r\022!\n\031Prohibitory_StopTo"
  "GiveWay\030\021 \001(\r\022\031\n\021Prohibitory_Enter\030\022 \001(\r"
  "\022\033\n\023Prohibitory_Honking\030\023 \001(\r\022%\n\035Prohibi"
  "tory_GiveWayToOncoming\030\024 \001(\r\022\031\n\021Indicati"
  "on_OneWay\030\025 \001(\r\022\027\n\017Indication_Walk\030\026 \001(\r"
  "\022#\n\033Indication_MainRoadPriority\030\027 \001(\r\022%\n"
  "\035Indication_PedestrianCrossing\030\030 \001(\r\022\032\n\022"
  "Indication_BusLane\030\031 \001(\r\022 \n\030Warning_Reve"
  "rseCurve_Dis\030\032 \001(\r\022%\n\035Warning_Continuous"
  "Detours_Dis\030\033 \001(\r\022\036\n\026Warning_Pedestrian_"
  "Dis\030\034 \001(\r\022\030\n\020Warning_Slip_Dis\030\035 \001(\r\022\032\n\022W"
  "arning_Tunnel_Dis\030\036 \001(\r\022\030\n\020Warning_Slow_"
  "Dis\030\037 \001(\r\022\035\n\025Warning_RoadWorks_Dis\030  \001(\r"
  "\022!\n\031Prohibitory_DriveInto_Dis\030! \001(\r\022%\n\035P"
  "rohibitory_MotorVehicles_Dis\030\" \001(\r\022!\n\031Pr"
  "ohibitory_TurnRight_Dis\030# \001(\r\022 \n\030Prohibi"
  "tory_Straight_Dis\030$ \001(\r\022\035\n\025Prohibitory_U"
  "turn_Dis\030% \001(\r\022 \n\030Prohibitory_Overtake_D"
  "is\030& \001(\r\022\037\n\027Prohibitory_VehPark_Dis\030\' \001("
  "\r\022$\n\034Prohibitory_VehParkLongT_Dis\030( \001(\r\022"
  "\"\n\032Prohibitory_SpeedLimit_Dis\030) \001(\r\022%\n\035P"
  "rohibitory_StopToGiveWay_Dis\030* \001(\r\022\035\n\025Pr"
  "ohibitory_Enter_Dis\030+ \001(\r\022\037\n\027Prohibitory"
  "_Honking_Dis\030, \001(\r\022$\n\034Prohibitory_GiveWa"
  "yOncom_Dis\030- \001(\r\022\035\n\025Indication_OneWay_Di"
  "s\030. \001(\r\022\033\n\023Indication_Walk_Dis\030/ \001(\r\022\"\n\032"
  "Indication_MainRoadPri_Dis\0300 \001(\r\022$\n\034Indi"
  "cation_PedestrianCro_Dis\0301 \001(\r\022\036\n\026Indica"
  "tion_BusLane_Dis\0302 \001(\r\"0\n\025PB_HUset_VC_AC"
  "Cactive\022\027\n\017HU_VC_ACCactive\030\001 \001(\r\";\n\033PB_E"
  "DC_APADrvrReqSlotIDData\022\034\n\024EDC_APADrvrRe"
  "qSlotID\030\001 \001(\005\"\037\n\017PB_int32_Struct\022\014\n\004data"
  "\030\001 \001(\005\"#\n\024PB_DDSPayload_Struct\022\013\n\003seq\030\001 "
  "\003(\r\"\273\001\n\016PB_FWiperFltSt\022\022\n\nWiperFltSt\030\001 \001"
  "(\r\022\021\n\tWshrFltSt\030\002 \001(\r\022\020\n\010LINErrSt\030\003 \001(\r\022"
  "\020\n\010MotErrSt\030\004 \001(\r\022\023\n\013SupVoltLoSt\030\005 \001(\r\022\023"
  "\n\013SupVoltHiSt\030\006 \001(\r\022\r\n\005BlkSt\030\007 \001(\r\022\022\n\nOv"
  "erTempSt\030\010 \001(\r\022\021\n\tTimeOutSt\030\t \001(\r\">\n\034PB_"
  "HUset_LaneChangeFrequency\022\036\n\026HU_LaneChan"
  "geFrequency\030\001 \001(\r\"F\n PB_HUset_ForwardCol"
  "liAstSenStyle\022\"\n\032HU_ForwardColliAstSenSt"
  "yle\030\001 \001(\r\"B\n\024PB_LoBeamActCtrlInfo\022\024\n\014Le_"
  "ActCtrlSt\030\001 \001(\r\022\024\n\014Ri_ActCtrlSt\030\002 \001(\r\"6\n"
  "\032PB_BLERpaCmdRspData_Struct\022\030\n\020BLERpaCmd"
  "RspData\030\001 \003(\r\"*\n\022PB_HUset_ELKEnable\022\024\n\014H"
  "U_ELKEnable\030\001 \001(\r\":\n\032PB_HUset_VC_CruiseS"
  "etSpeed\022\034\n\024HU_VC_CruiseSetSpeed\030\001 \001(\r\"\357\001"
  "\n\017PB_TireWarnInfo\022\026\n\016TirePLowWarnFL\030\001 \001("
  "\r\022\026\n\016TirePLowWarnFR\030\002 \001(\r\022\026\n\016TirePLowWar"
  "nRL\030\003 \001(\r\022\026\n\016TirePLowWarnRR\030\004 \001(\r\022\027\n\017Tir"
  "ePLeakWarnFL\030\005 \001(\r\022\027\n\017TirePLeakWarnFR\030\006 "
  "\001(\r\022\027\n\017TirePLeakWarnRL\030\007 \001(\r\022\027\n\017TirePLea"
  "kWarnRR\030\010 \001(\r\022\030\n\020TPMSSysFailrWarn\030\t \001(\r\""
  "\330\001\n\017PB_C2_ADASScore\022 \n\030C2_AutoDrivinScor"
  "eReason\030\001 \001(\r\022\027\n\017C2_UserIDnumber\030\002 \001(\014\022\033"
  "\n\023C2_AutoDrivingScore\030\003 \001(\005\022\023\n\013C2_IACCTr"
  "ip\030\004 \001(\002\022\033\n\023C2_NIDHighspeedTrip\030\005 \001(\002\022\026\n"
  "\016C2_NIDCityTrip\030\006 \001(\002\022#\n\033C2_AutoDrivingS"
  "coreThisTrip\030\007 \001(\r\"(\n\021PB_EDCset_slot_ID\022"
  "\023\n\013EDC_slot_ID\030\001 \001(\r\"9\n\020PB_SwitSetResult"
  "\022\016\n\006Result\030\001 \001(\r\022\025\n\rSwitFailReson\030\002 \001(\r\""
  "3\n\017PB_HzrdKeySwtSt\022\020\n\010HzrdSwSt\030\001 \001(\r\022\016\n\006"
  "HzrdSt\030\002 \001(\r\"D\n\022PB_ClusterTurnLiSt\022\026\n\016Le"
  "SideTurnLiSt\030\001 \001(\r\022\026\n\016RiSideTurnLiSt\030\002 \001"
  "(\r\"6\n\020PB_LoBeamFltInfo\022\020\n\010Le_FltSt\030\001 \001(\r"
  "\022\020\n\010Ri_FltSt\030\002 \001(\r\"7\n\031PB_EDC_APAAudioRmn"
  "SetData\022\032\n\022EDC_APAAudioRmnSet\030\001 \001(\r\"T\n\024P"
  "B_SentrySwitchParam\022\022\n\nSwitSetTyp\030\001 \001(\r\022"
  "\030\n\020SwitFirstSetConf\030\002 \001(\r\022\016\n\006Source\030\003 \001("
  "\r\"\260\001\n\027PB_ADAS_MapCommonSignal\022\033\n\023MapData"
  "UpdateStatus\030\001 \001(\r\022\021\n\tNavStatus\030\002 \001(\r\022\031\n"
  "\021NavGuiganceStatus\030\003 \001(\r\022\026\n\016MapMatchStat"
  "us\030\004 \001(\r\022\026\n\016NavCountryCode\030\005 \001(\r\022\032\n\022NavS"
  "peedLimitUnits\030\006 \001(\r\"A\n\034PB_APA_available"
  "point_Struct\022!\n\003seq\030\001 \003(\0132\024.Soa.PB_Track"
  "_Point1\"@\n\035PB_HUset_RedLightRemindEnable"
  "\022\037\n\027HU_RedLightRemindEnable\030\001 \001(\r\".\n\024PB_"
  "AD_BSDLCAOnOffSet\022\026\n\016AD_BSDLCAOnOff\030\001 \001("
  "\r\"3\n\027PB_EDC_APAPOCDirSelData\022\030\n\020EDC_APAP"
  "OCDirSel\030\001 \001(\r\"\246\002\n\013PB_SeatInfo\022\022\n\nPinchS"
  "tsFR\030\001 \001(\r\022\023\n\013PinchStsHei\030\002 \001(\r\022\022\n\nPinch"
  "StsBr\030\003 \001(\r\022\023\n\013PinchStsCus\030\004 \001(\r\022\025\n\rPinc"
  "hStsLegFR\030\005 \001(\r\022\026\n\016PinchStsLegHei\030\006 \001(\r\022"
  "\021\n\treserved1\030\007 \001(\r\022\021\n\treserved2\030\010 \001(\r\022\021\n"
  "\treserved3\030\t \001(\r\022\021\n\treserved4\030\n \001(\r\022\021\n\tr"
  "eserved5\030\013 \001(\r\022\021\n\treserved6\030\014 \001(\r\022\021\n\tres"
  "erved7\030\r \001(\r\022\021\n\treserved8\030\016 \001(\r\",\n\023PB_HU"
  "set_CSLAEnable\022\025\n\rHU_CSLAEnable\030\001 \001(\r\"F\n"
  " PB_HUset_OverspeedSoundWarEnable\022\"\n\032HU_"
  "OverspeedSoundWarEnable\030\001 \001(\r\"%\n\026PB_DTCA"
  "rrayInfo_Struct\022\013\n\003seq\030\001 \003(\r\"\265\001\n\030PB_AD_A"
  "PAFctnIndnMsgData\022\027\n\017AD_APAUnavlReas\030\001 \001"
  "(\r\022\026\n\016AD_APAProcInfo\030\002 \001(\r\022\034\n\024AD_APAAbno"
  "rmExitReas\030\003 \001(\r\022\030\n\020AD_RADSUnavlReas\030\004 \001"
  "(\r\022\027\n\017AD_RADSProcInfo\030\005 \001(\r\022\027\n\017AD_RADSEx"
  "itReas\030\006 \001(\r\"\250\001\n\020PB_TurnLiCtrlCmd\022\026\n\016Tur"
  "nLiCtrlPosn\030\001 \001(\r\022\025\n\rTurnLiOffDurn\030\002 \001(\r"
  "\022\024\n\014TurnLiOnDurn\030\003 \001(\r\022\021\n\tTurnLiPRI\030\004 \001("
  "\r\022\021\n\tTurnLiCnt\030\005 \001(\r\022\025\n\rTurnLiRecover\030\006 "
  "\001(\r\022\022\n\nFlowingEfc\030\007 \001(\r\" \n\020PB_double_Str"
  "uct\022\014\n\004data\030\001 \001(\001\"k\n\tPB_RLSSts\022\r\n\005RLSSt\030"
  "\001 \001(\r\022\022\n\nRLSErrorSt\030\002 \001(\r\022\025\n\rRainfallLev"
  "el\030\003 \001(\r\022\023\n\013RLSComError\030\004 \001(\r\022\017\n\007WiprSpd"
  "\030\005 \001(\r\" \n\020PB_String_Struct\022\014\n\004data\030\001 \001(\014"
  "\"n\n\024PB_PosnLiActCtrlInfo\022\024\n\014FL_ActCtrlSt"
  "\030\001 \001(\r\022\024\n\014FR_ActCtrlSt\030\002 \001(\r\022\024\n\014RL_ActCt"
  "rlSt\030\003 \001(\r\022\024\n\014RR_ActCtrlSt\030\004 \001(\r\"8\n\031PB_H"
  "Uset_LASModeSelection\022\033\n\023HU_LASModeSelec"
  "tion\030\001 \001(\r\"\227\001\n\014PB_LineCurve\022\024\n\014Linecruve"
  "_5m\030\001 \001(\002\022\025\n\rLinecruve_10m\030\002 \001(\002\022\025\n\rLine"
  "cruve_15m\030\003 \001(\002\022\025\n\rLinecruve_20m\030\004 \001(\002\022\025"
  "\n\rLinecruve_25m\030\005 \001(\002\022\025\n\rLinecruve_30m\030\006"
  " \001(\002\"\265\004\n\014PB_DrSeatSts\022\024\n\014SeatAdjSwtFR\030\001 "
  "\001(\r\022\025\n\rSeatAdjSwtHei\030\002 \001(\r\022\024\n\014SeatAdjSwt"
  "Br\030\003 \001(\r\022\025\n\rSeatAdjSwtCus\030\004 \001(\r\022\027\n\017SeatA"
  "djSwtLegFR\030\005 \001(\r\022\030\n\020SeatAdjSwtLegHei\030\006 \001"
  "(\r\022\035\n\025SeatAdjSwtZeroGravity\030\007 \001(\r\022\030\n\020FRI"
  "nitializedSts\030\010 \001(\r\022\031\n\021HeiInitializedSts"
  "\030\t \001(\r\022\030\n\020BrInitializedSts\030\n \001(\r\022\031\n\021CusI"
  "nitializedSts\030\013 \001(\r\022\033\n\023LegFRInitializedS"
  "ts\030\014 \001(\r\022\034\n\024LegHeiInitializedSts\030\r \001(\r\022\020"
  "\n\010SeatHeat\030\016 \001(\r\022\020\n\010SeatVent\030\017 \001(\r\022\027\n\017FR"
  "StopStsReason\030\020 \001(\r\022\030\n\020HeiStopStsReason\030"
  "\021 \001(\r\022\027\n\017BrStopStsReason\030\022 \001(\r\022\030\n\020CusSto"
  "pStsReason\030\023 \001(\r\022\032\n\022LegFRStopStsReason\030\024"
  " \001(\r\022\033\n\023LegHeiStopStsReason\030\025 \001(\r\022\021\n\tDrS"
  "eatSBR\030\026 \001(\r\".\n\024PB_AD_SEAOnOffStsSet\022\026\n\016"
  "AD_SEAOnOffSts\030\001 \001(\r\"6\n\032PB_ObjStTypeDoor"
  "All_Struct\022\030\n\020ObjStTypeDoorAll\030\001 \003(\r\">\n\034"
  "PB_HUset_ForwardColliAstType\022\036\n\026HU_Forwa"
  "rdColliAstType\030\001 \001(\r\"H\n!PB_HUset_Vehicle"
  "StartRemindEnable\022#\n\033HU_VehicleStartRemi"
  "ndEnable\030\001 \001(\r\"\344\002\n\020PB_FWiperStsInfo\022\026\n\016F"
  "WiperLogicSts\030\001 \001(\r\022\024\n\014WashLogicSts\030\002 \001("
  "\r\022\023\n\013WiperPosSts\030\003 \001(\r\022\025\n\rWashActualSts\030"
  "\004 \001(\r\022\026\n\016WiperRunningSt\030\005 \001(\r\022\020\n\010MotAngl"
  "e\030\006 \001(\r\022\022\n\nWiprMotSpd\030\007 \001(\r\022\022\n\nWiperActS"
  "t\030\010 \001(\r\022\022\n\nParkAreaSt\030\t \001(\r\022\020\n\010SrvPosSt\030"
  "\n \001(\r\022\020\n\010TunPosSt\030\013 \001(\r\022\017\n\007MoveDir\030\014 \001(\r"
  "\022\026\n\016FusbMovedtimes\030\r \001(\r\022\024\n\014FrntWiperSwt"
  "\030\016 \001(\r\022\017\n\007WshrSwt\030\017 \001(\r\022\034\n\024WiperINTGearT"
  "imeHard\030\020 \001(\r\"\?\n\024PB_UserNotiConfirEvt\022\020\n"
  "\010FuncType\030\001 \001(\r\022\025\n\rNotiConfirEvt\030\002 \001(\r\"E"
  "\n\026PB_Point2DArray_Struct\022+\n\014Point2DArray"
  "\030\001 \003(\0132\025.Soa.PB_Point2DStruct\"Z\n\023PB_BrkL"
  "iActCtrlInfo\022\024\n\014Le_ActCtrlSt\030\001 \001(\r\022\024\n\014Ri"
  "_ActCtrlSt\030\002 \001(\r\022\027\n\017CHSML_ActCtrlSt\030\003 \001("
  "\r\"=\n\034PB_EDC_APADynamicOperateData\022\035\n\025EDC"
  "_APADynamicOperate\030\001 \001(\r\"5\n\017PB_RvsLiFltI"
  "nfo\022\020\n\010Le_FltSt\030\001 \001(\r\022\020\n\010Ri_FltSt\030\002 \001(\r\""
  "2\n\026PB_AD_NIDSelfLrngFbset\022\030\n\020AD_NIDSelfL"
  "rngFb\030\001 \001(\r\"3\n\rPB_VideoParam\022\016\n\006camera\030\001"
  " \001(\r\022\022\n\nrecordTime\030\002 \001(\r\"\263\017\n\033PB_ADAS_Map"
  "NavigationSignal\022\025\n\rCurveDistance\030\001 \001(\r\022"
  "\026\n\016EnterCurveInfo\030\002 \001(\r\022\024\n\014RampDistance\030"
  "\003 \001(\r\022\025\n\rEnterRampInfo\030\004 \001(\r\022\020\n\010RampInfo"
  "\030\005 \001(\r\022\020\n\010RampSide\030\006 \001(\r\022\032\n\022NavCurrentRo"
  "adType\030\007 \001(\r\022\027\n\017ForwardRoadType\030\010 \001(\r\022\017\n"
  "\007LaneCnt\030\t \001(\r\022\031\n\021NavSpeedLimitType\030\n \001("
  "\r\022\025\n\rNavSpeedLimit\030\013 \001(\r\022\032\n\022SpeedLimitDi"
  "stance\030\014 \001(\r\022\027\n\017EnterTunnelInfo\030\r \001(\r\022\026\n"
  "\016TunnelDistance\030\016 \001(\r\022\024\n\014TunnelLength\030\017 "
  "\001(\r\022\026\n\016EnterSlopeInfo\030\020 \001(\r\022\025\n\rSlopeDist"
  "ance\030\021 \001(\r\022\027\n\017FallingRockInfo\030\022 \001(\r\022\026\n\016F"
  "allingRockDis\030\023 \001(\r\022\020\n\010TollInfo\030\024 \001(\r\022\017\n"
  "\007TollDis\030\025 \001(\r\022\031\n\021Construction_Info\030\026 \001("
  "\r\022\030\n\020Construction_Dis\030\027 \001(\r\022\034\n\024TrafficAc"
  "cident_Info\030\030 \001(\r\022\033\n\023TrafficAccident_Dis"
  "\030\031 \001(\r\022\022\n\nBranchInfo\030\032 \001(\r\022\022\n\nBranch_Dis"
  "\030\033 \001(\r\022\035\n\025NumchangeOfLanes_Dist\030\034 \001(\r\022\026\n"
  "\016Lane_Changtype\030\035 \001(\r\022\030\n\020Road_TrafficFlo"
  "w\030\036 \001(\r\022\025\n\rRoadCurvature\030\037 \001(\r\022\031\n\021RoadCu"
  "rvature_10m\030  \001(\r\022\031\n\021RoadCurvature_20m\030!"
  " \001(\r\022\031\n\021RoadCurvature_30m\030\" \001(\r\022\031\n\021RoadC"
  "urvature_40m\030# \001(\r\022\031\n\021RoadCurvature_50m\030"
  "$ \001(\r\022\031\n\021RoadCurvature_60m\030% \001(\r\022\031\n\021Road"
  "Curvature_70m\030& \001(\r\022\031\n\021RoadCurvature_80m"
  "\030\' \001(\r\022\031\n\021RoadCurvature_90m\030( \001(\r\022\032\n\022Roa"
  "dCurvature_100m\030) \001(\r\022\030\n\020RoadCurvatureFa"
  "r\030* \001(\r\022\032\n\022RoadCurvature_300m\030+ \001(\r\022\032\n\022R"
  "oadCurvature_400m\030, \001(\r\022\032\n\022RoadCurvature"
  "_600m\030- \001(\r\022\025\n\rSlopeGradient\030. \001(\r\022\030\n\020Sl"
  "opeGradientFar\030/ \001(\r\022\032\n\022SlopeGradient_30"
  "0m\0300 \001(\r\022\031\n\021SlopeGradient_10m\0301 \001(\r\022\031\n\021S"
  "lopeGradient_20m\0302 \001(\r\022\031\n\021SlopeGradient_"
  "30m\0303 \001(\r\022\031\n\021SlopeGradient_40m\0304 \001(\r\022\031\n\021"
  "SlopeGradient_50m\0305 \001(\r\022\032\n\022SlopeGradient"
  "_100m\0306 \001(\r\022\034\n\024IntervalVelocityInfo\0307 \001("
  "\r\022\033\n\023IntervalVelocityDis\0308 \001(\r\022\025\n\rAccide"
  "ntProne\0309 \001(\r\022\035\n\025AccidentProneDistance\030:"
  " \001(\r\022\026\n\016LaneConfluence\030; \001(\r\022\031\n\021LaneConf"
  "luenceDis\030< \001(\r\022\022\n\nBridgeInfo\030= \001(\r\022\021\n\tB"
  "ridgeDis\030> \001(\r\022\023\n\013WeatherType\030\? \001(\r\022\023\n\013S"
  "erviceRoad\030@ \001(\r\022\026\n\016ServiceRoadDis\030A \001(\r"
  "\022\024\n\014LaneType_ID1\030B \001(\r\022\024\n\014LaneType_ID2\030C"
  " \001(\r\022\024\n\014LaneType_ID3\030D \001(\r\022\024\n\014LaneType_I"
  "D4\030E \001(\r\022\024\n\014LaneType_ID5\030F \001(\r\022\024\n\014LaneTy"
  "pe_ID6\030G \001(\r\022\024\n\014EHRHeartFlag\030H \001(\r\022\024\n\014EH"
  "PHeartFlag\030I \001(\r\022\031\n\021ADAS_Posn_Pathldx\030J "
  "\001(\r\022\030\n\020ADAS_Posn_Offset\030K \001(\r\022\016\n\006Byroad\030"
  "L \001(\r\022\025\n\rLong_Ramp_Dis\030M \001(\r\022\026\n\016Long_Ram"
  "p_Side\030N \001(\r\022\030\n\020Llong_Tunnel_Len\030O \001(\r\"\037"
  "\n\016PB_APAReqreply\022\r\n\005reply\030\001 \001(\r\"<\n\020PB_Re"
  "evTotalMilg\022\023\n\013FuTotalMilg\030\001 \001(\r\022\023\n\013EvTo"
  "talMilg\030\002 \001(\r\"\036\n\016PB_int8_Struct\022\014\n\004data\030"
  "\001 \001(\005\"N\n\020PB_OperationInfo\022\022\n\nRequest_ID\030"
  "\001 \001(\r\022\022\n\nSession_ID\030\002 \001(\r\022\022\n\nService_St\030"
  "\003 \001(\r\"J\n\017PB_BrkLiFltInfo\022\020\n\010Le_FltSt\030\001 \001"
  "(\r\022\020\n\010Ri_FltSt\030\002 \001(\r\022\023\n\013CHSML_FltSt\030\003 \001("
  "\r\"2\n\026PB_HUset_BSDLCASetting\022\030\n\020HU_BSDLCA"
  "Setting\030\001 \001(\r\"<\n\020PB_InfoSetResult\022\016\n\006Res"
  "ult\030\001 \001(\r\022\030\n\020InfoSetFailReson\030\002 \001(\r\"8\n\031P"
  "B_EDCset_APAvoicecontrol\022\033\n\023EDC_APAvoice"
  "control\030\001 \001(\r\"D\n\037PB_RMAset_APP_MainScree"
  "nOperate\022!\n\031RMA_APP_MainScreenOperate\030\001 "
  "\001(\r\"C\n\016PB_DDSData_Msg\022\r\n\005topic\030\001 \001(\014\022\021\n\t"
  "timestamp\030\002 \001(\001\022\017\n\007payload\030\003 \003(\r\"$\n\021PB_G"
  "psTime_Struct\022\017\n\007GpsTime\030\001 \003(\r\"3\n\027PB_EDC"
  "_APAVoiceCtrlData\022\030\n\020EDC_APAVoiceCtrl\030\001 "
  "\001(\r\",\n\023PB_HUset_CuriseMode\022\025\n\rHU_CuriseM"
  "ode\030\001 \001(\r\"(\n\021PB_APAFunctionReq\022\023\n\013APAFun"
  "ction\030\001 \001(\r\"@\n\035PB_HUset_VC_CruiseSetDist"
  "ance\022\037\n\027HU_VC_CruiseSetDistance\030\001 \001(\r\"3\n"
  "\027PB_EDC_RPAVoiceCtrlData\022\030\n\020EDC_RPAVoice"
  "Ctrl\030\001 \001(\r\",\n\023PB_HUset_ADACCStyle\022\025\n\rHU_"
  "ADACCStyle\030\001 \001(\r\"(\n\021PB_APAFunctionRes\022\023\n"
  "\013APAFunction\030\001 \001(\r\"B\n\024PB_HiBeamActCtrlIn"
  "fo\022\024\n\014Le_ActCtrlSt\030\001 \001(\r\022\024\n\014Ri_ActCtrlSt"
  "\030\002 \001(\r\"n\n\024PB_TurnLiActCtrlInfo\022\024\n\014FL_Act"
  "CtrlSt\030\001 \001(\r\022\024\n\014FR_ActCtrlSt\030\002 \001(\r\022\024\n\014RL"
  "_ActCtrlSt\030\003 \001(\r\022\024\n\014RR_ActCtrlSt\030\004 \001(\r\"\340"
  "\003\n\016PB_SeatPosInfo\022\023\n\013PosCmdReqFR\030\001 \001(\r\022\024"
  "\n\014PosCmdReqHei\030\002 \001(\r\022\023\n\013PosCmdReqBr\030\003 \001("
  "\r\022\024\n\014PosCmdReqCus\030\004 \001(\r\022\026\n\016PosCmdReqLegF"
  "R\030\005 \001(\r\022\027\n\017PosCmdReqLegHei\030\006 \001(\r\022\021\n\tAxis"
  "PosFR\030\007 \001(\r\022\022\n\nAxisPosHei\030\010 \001(\r\022\021\n\tAxisP"
  "osBr\030\t \001(\r\022\022\n\nAxisPosCus\030\n \001(\r\022\024\n\014AxisPo"
  "sLegFR\030\013 \001(\r\022\025\n\rAxisPosLegHei\030\014 \001(\r\022\034\n\024A"
  "xisActiveMovigStsFR\030\r \001(\r\022\035\n\025AxisActiveM"
  "ovigStsHei\030\016 \001(\r\022\034\n\024AxisActiveMovigStsBr"
  "\030\017 \001(\r\022\035\n\025AxisActiveMovigStsCus\030\020 \001(\r\022\037\n"
  "\027AxisActiveMovigStsLegFR\030\021 \001(\r\022 \n\030AxisAc"
  "tiveMovigStsLegHei\030\022 \001(\r\022\017\n\007NTCTemp\030\023 \001("
  "\005\"\377\001\n\024PB_BLEPhyKeyBascInfo\022\022\n\nKeyDataCnt"
  "\030\001 \001(\r\022\020\n\010KeyStCnt\030\002 \001(\r\022\031\n\021BLEPhyKeyPow"
  "LFlag\030\003 \001(\r\022\026\n\016BLEPhyKeyChrSt\030\004 \001(\r\022\027\n\017B"
  "LEPhyKeyPowPer\030\005 \001(\r\022\022\n\nCompsiteSt\030\006 \001(\r"
  "\022\023\n\013UnLockKeySt\030\007 \001(\r\022\021\n\tLockKeySt\030\010 \001(\r"
  "\022\021\n\tDefKey1St\030\t \001(\r\022\021\n\tDefKey2St\030\n \001(\r\022\023"
  "\n\013InsideKeySt\030\013 \001(\r\"4\n\031PB_TailGateSysSwS"
  "t_Struct\022\027\n\017TailGateSysSwSt\030\001 \003(\r\".\n\024PB_"
  "HUset_BSDLCAOnOff\022\026\n\016HU_BSDLCAOnOff\030\001 \001("
  "\r\" \n\020PB_uint64_Struct\022\014\n\004data\030\001 \001(\004\"\224\001\n\022"
  "PB_C2_GetADASScore\022\027\n\017C2_UserIDnumber\030\001 "
  "\001(\014\022\033\n\023C2_AutoDrivingScore\030\002 \001(\005\022\023\n\013C2_I"
  "ACCTrip\030\003 \001(\002\022\033\n\023C2_NIDHighspeedTrip\030\004 \001"
  "(\002\022\026\n\016C2_NIDCityTrip\030\005 \001(\002\"*\n\022PB_HUset_R"
  "CWEnable\022\024\n\014HU_RCWEnable\030\001 \001(\r\"&\n\020PB_HUs"
  "et_SEAMode\022\022\n\nHU_SEAMode\030\001 \001(\r\"1\n\017PB_Tra"
  "ck_Point1\022\016\n\006PointX\030\001 \001(\001\022\016\n\006PointY\030\002 \001("
  "\001\":\n\024PB_PwrPortCtr_Struct\022\"\n\nPwrPortCtr\030"
  "\001 \003(\0132\016.Soa.PB_PwrCtr\"[\n\rPB_FogFltInfo\022\020"
  "\n\010Le_FltSt\030\001 \001(\r\022\020\n\010Ri_FltSt\030\002 \001(\r\022\022\n\nLe"
  "_ReFltSt\030\003 \001(\r\022\022\n\nRi_ReFltSt\030\004 \001(\r\"P\n\032PB"
  "_EDC_APASelfdefnSlotData\0222\n\023EDC_APASelfd"
  "efnSlot\030\001 \003(\0132\025.Soa.PB_Point2DStruct\"@\n\037"
  "PB_ObjStTypeCurPosVITAll_Struct\022\035\n\025ObjSt"
  "TypeCurPosVITAll\030\001 \003(\r\";\n\033PB_EDC_APAPark"
  "OutSelectData\022\034\n\024EDC_APAParkOutSelect\030\001 "
  "\001(\r\"\236\001\n\020PB_CamLinesCurve\022\022\n\ntime_stamp\030\001"
  " \001(\001\022\023\n\013frame_index\030\002 \001(\005\022*\n\017all_lines_c"
  "urve\030\003 \001(\0132\021.Soa.PB_LineCurve\0225\n\025all_lin"
  "es_curve_valid\030\004 \001(\0132\026.Soa.PB_LineCurveV"
  "alid\"@\n\033PB_APA_apaguidepoint_Struct\022!\n\003s"
  "eq\030\001 \003(\0132\024.Soa.PB_Track_Point1\"=\n\013PB_Tur"
  "nLiSt\022\026\n\016LeSideTurnLiSt\030\001 \001(\r\022\026\n\016RiSideT"
  "urnLiSt\030\002 \001(\r\"*\n\022PB_HUset_CESEnable\022\024\n\014H"
  "U_CESEnable\030\001 \001(\r\"*\n\022PB_HUset_IDAEnable\022"
  "\024\n\014HU_IDAEnable\030\001 \001(\r\"8\n\031PB_HUset_RearCo"
  "lliAstType\022\033\n\023HU_RearColliAstType\030\001 \001(\r\""
  "q\n\024PB_VideoRequestParam\022\023\n\013triggerType\030\001"
  " \001(\r\022\022\n\nbeforeTime\030\002 \001(\r\022\020\n\010backTime\030\003 \001"
  "(\r\022\016\n\006camera\030\004 \001(\r\022\016\n\006taskId\030\005 \001(\004\"A\n\023PB"
  "_ThrLiActCtrlInfo\022\025\n\rFrntActCtrlSt\030\001 \001(\r"
  "\022\023\n\013ReActCtrlSt\030\002 \001(\r\">\n\021PB_TurnLiKeySwt"
  "St\022\023\n\013TurnLiSwtSt\030\001 \001(\r\022\024\n\014TurnLiKeySwt\030"
  "\002 \001(\r\":\n\017PB_SenMoInfoSet\022\023\n\013SenOpenMode\030"
  "\001 \001(\r\022\022\n\nSenElecFen\030\002 \001(\r\"9\n\017PB_MFSFltSt"
  "Info\022\022\n\nDiagInfoSW\030\001 \001(\r\022\022\n\nLINCommErr\030\002"
  " \001(\r\"@\n\035PB_HUset_AbsOverSpdWarnOffset\022\037\n"
  "\027HU_AbsOverSpdWarnOffset\030\001 \001(\r\" \n\020PB_uin"
  "t16_Struct\022\014\n\004data\030\001 \001(\r\"@\n\022PB_LogoActCt"
  "rlInfo\022\025\n\rFrntActCtrlSt\030\001 \001(\r\022\023\n\013ReActCt"
  "rlSt\030\002 \001(\r\"r\n\016PB_HornCtrlCmd\022\023\n\013HornCmdP"
  "rio\030\001 \001(\r\022\017\n\007HornCmd\030\002 \001(\r\022\021\n\tHornCount\030"
  "\003 \001(\r\022\022\n\nHornOnTime\030\004 \001(\r\022\023\n\013HornOffTime"
  "\030\005 \001(\r\"\?\n\021PB_DRLActCtrlInfo\022\024\n\014Le_ActCtr"
  "lSt\030\001 \001(\r\022\024\n\014Ri_ActCtrlSt\030\002 \001(\r\"\305\001\n\030PB_A"
  "D_APADynguidanceData\022\027\n\017AD_APASysPahFlg\030"
  "\001 \001(\r\022\027\n\017AD_APARemainDst\030\002 \001(\002\022/\n\020AD_APA"
  "GuidePiont\030\003 \003(\0132\025.Soa.PB_Point2DStruct\022"
  "*\n\rAD_APATarPose\030\004 \001(\0132\023.Soa.PB_TarposeD"
  "ata\022\032\n\022AD_APARoadTrfcInfo\030\005 \001(\r\":\n\032PB_HU"
  "set_IACCFamlrRdModSwt\022\034\n\024HU_IACCFamlrRdM"
  "odSwt\030\001 \001(\r\"\201\001\n\020PB_OperationCode\022\022\n\nRequ"
  "est_ID\030\001 \001(\r\022\022\n\nSession_ID\030\002 \001(\r\022\020\n\010VehF"
  "ield\030\003 \001(\r\022\021\n\tSourceMod\030\004 \001(\r\022\017\n\007RtnCode"
  "\030\005 \001(\r\022\017\n\007Counter\030\006 \001(\r\"8\n\025PB_AD_RedLigh"
  "tReEnSet\022\037\n\027AD_RedLightRemindEnable\030\001 \001("
  "\r\"\207\001\n\027PB_AD_APADynrecommdData\022\033\n\023AD_APAP"
  "ocDirRecommd\030\001 \001(\r\022\037\n\027AD_APAParkinModeRe"
  "commd\030\002 \001(\r\022\024\n\014AD_APAGetOff\030\003 \001(\r\022\030\n\020AD_"
  "APACustAvlSta\030\004 \001(\r\"5\n\016PB_TarposeData\022\t\n"
  "\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\r\n\005theta\030\003 \001(\002\",\n\023PB"
  "_HUset_UDLCEnable\022\025\n\rHU_UDLCEnable\030\001 \001(\r"
  "\">\n\034PB_C2_IACCFamlrRdModSwtFbSet\022\036\n\026C2_I"
  "ACCFamlrRdModSwtFb\030\001 \001(\r\"7\n\020PB_Point2DSt"
  "ruct\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\r\n\005theta\030\003 \001("
  "\002\"A\n\023PB_RvsLiActCtrlInfo\022\024\n\014Le_ActCtrlSt"
  "\030\001 \001(\r\022\024\n\014Ri_ActCtrlSt\030\002 \001(\r\",\n\025PB_PhySt"
  "WinAll_Struct\022\023\n\013PhyStWinAll\030\001 \003(\r\"\221\003\n\017P"
  "B_CrashStsInfo\022\027\n\017SrsCrashOutpSts\030\001 \001(\r\022"
  "\033\n\023SrsCrashOutpStsChks\030\002 \001(\r\022\030\n\020SRSCrash"
  "OutFront\030\003 \001(\r\022\027\n\017SRSCrashOutLeft\030\004 \001(\r\022"
  "\030\n\020SRSCrashOutMicro\030\005 \001(\r\022\027\n\017SRSCrashOut"
  "Rear\030\006 \001(\r\022\030\n\020SRSCrashOutRight\030\007 \001(\r\022\033\n\023"
  "SRSCrashOutRollover\030\010 \001(\r\022\027\n\017SRSCrashOut"
  "Cedr\030\t \001(\r\022\026\n\016SrsWarnLampSts\030\n \001(\r\022\026\n\016Lo"
  "stComFltSts1\030\013 \001(\r\022\026\n\016LostComFltSts2\030\014 \001"
  "(\r\022\021\n\treserved1\030\r \001(\r\022\021\n\treserved2\030\016 \001(\r"
  "\022\021\n\treserved3\030\017 \001(\r\022\021\n\treserved4\030\020 \001(\r\"\302"
  "\001\n\013PB_GpsDatas\022\013\n\003lng\030\001 \001(\r\022\013\n\003lat\030\002 \001(\r"
  "\022\014\n\004alti\030\003 \001(\r\022\017\n\007gpsTime\030\004 \003(\r\022\016\n\006satNu"
  "m\030\005 \001(\r\022\017\n\007heading\030\006 \001(\r\022\016\n\006status\030\007 \001(\r"
  "\022\n\n\002NS\030\010 \001(\r\022\n\n\002EW\030\t \001(\r\022\r\n\005speed\030\n \001(\r\022"
  "\017\n\007decline\030\013 \001(\r\022\021\n\tdirection\030\014 \001(\r\"\037\n\017P"
  "B_float_Struct\022\014\n\004data\030\001 \001(\002\"0\n\025PB_HUset"
  "_ADCurveStyle\022\027\n\017HU_ADCurveStyle\030\001 \001(\r\"X"
  "\n\016PB_TarSlotData\022,\n\rAD_APATarSlot\030\001 \003(\0132"
  "\025.Soa.PB_Point2DStruct\022\030\n\020AD_APAPreviewS"
  "ts\030\002 \001(\r\"\272\001\n\021PB_LineCurveValid\022\031\n\021Linecr"
  "uveValid_5m\030\001 \001(\r\022\032\n\022LinecruveValid_10m\030"
  "\002 \001(\r\022\032\n\022LinecruveValid_15m\030\003 \001(\r\022\032\n\022Lin"
  "ecruveValid_20m\030\004 \001(\r\022\032\n\022LinecruveValid_"
  "25m\030\005 \001(\r\022\032\n\022LinecruveValid_30m\030\006 \001(\r\"\267\002"
  "\n\014PB_BucSwtSts\022\030\n\020SrsDrvrBucSwtSts\030\001 \001(\r"
  "\022\030\n\020SrsPassBucSwtSts\030\002 \001(\r\022\031\n\021SrsLe2ndBu"
  "cSwtSts\030\003 \001(\r\022\032\n\022SrsMid2ndBucSwtSts\030\004 \001("
  "\r\022\031\n\021SrsRi2ndBucSwtSts\030\005 \001(\r\022\031\n\021SrsLe3rd"
  "BucSwtSts\030\006 \001(\r\022\032\n\022SrsMid3rdBucSwtSts\030\007 "
  "\001(\r\022\031\n\021SrsRi3rdBucSwtSts\030\010 \001(\r\022\026\n\016LostCo"
  "mFltSts1\030\t \001(\r\022\021\n\treserved1\030\n \001(\r\022\021\n\tres"
  "erved2\030\013 \001(\r\022\021\n\treserved3\030\014 \001(\r\"=\n\023PB_VI"
  "UPwrPinRstInfo\022\020\n\010PwrPinID\030\001 \001(\r\022\024\n\014PwrP"
  "inRstCnt\030\002 \001(\r\"3\n\rPB_DRLFltInfo\022\020\n\010Le_Fl"
  "tSt\030\001 \001(\r\022\020\n\010Ri_FltSt\030\002 \001(\r\"_\n\022PB_TurnLi"
  "FltMonrSt\022\027\n\017LeSideTurnLiFlt\030\001 \001(\r\022\027\n\017Ri"
  "SideTurnLiFlt\030\002 \001(\r\022\027\n\017TurnLiFbLineFlt\030\003"
  " \001(\r\"6\n\020PB_HiBeamFltInfo\022\020\n\010Le_FltSt\030\001 \001"
  "(\r\022\020\n\010Ri_FltSt\030\002 \001(\r\"9\n\032PB_EDC_APAParkIn"
  "SelectData\022\033\n\023EDC_APAParkInSelect\030\001 \001(\r\""
  "\226\002\n\020PB_ADASSecureSet\022\024\n\014AD_ELKEnable\030\001 \001"
  "(\r\022\024\n\014AD_CESEnable\030\002 \001(\r\022!\n\031AD_LASModeSe"
  "lectionStatus\030\003 \001(\r\022+\n#AD_LASIntellgentM"
  "odeSelectionStatus\030\004 \001(\r\022%\n\035AD_LASWarnin"
  "gModeSelectionSts\030\005 \001(\r\022\036\n\026AD_ForwardCol"
  "liAstType\030\006 \001(\r\022\"\n\032AD_ForwardColliAstSen"
  "Style\030\007 \001(\r\022\033\n\023AD_RearColliAstType\030\010 \001(\r"
  "\"&\n\020PB_HUset_CSLmode\022\022\n\nHU_CSLmode\030\001 \001(\r"
  "\"d\n\025PB_AD_APACustSlotData\0220\n\021AD_APACustS"
  "lotIni\030\001 \003(\0132\025.Soa.PB_Point2DStruct\022\031\n\021A"
  "D_APACustSlotVld\030\002 \001(\r\"8\n\031PB_HUset_BSDLC"
  "ARemindmode\022\033\n\023HU_BSDLCARemindmode\030\001 \001(\r"
  "\"\235\001\n\020PB_SenWarningSet\022\031\n\021SenWarningSetTy"
  "pe\030\001 \001(\r\022\033\n\023SenWarningSetSwitch\030\002 \001(\r\022\031\n"
  "\021SenWarningSetHonk\030\003 \001(\r\022\032\n\022SenWarningSe"
  "tLight\030\004 \001(\r\022\032\n\022SenWarningSetPhone\030\005 \001(\r"
  "\"*\n\024PB_BLERpaData_Struct\022\022\n\nBLERpaData\030\001"
  " \003(\r\"9\n\032PB_EDC_APADrvrReqOnOffData\022\033\n\023ED"
  "C_APADrvrReqOnOff\030\001 \001(\r\"0\n\027PB_EleAirSusp"
  "AutoModSts\022\025\n\rVMCAutoModSts\030\001 \001(\r\"\"\n\014PB_"
  "BattHVSts\022\022\n\nBcuOperMod\030\001 \001(\r\"(\n\023PB_Lock"
  "StAll_Struct\022\021\n\tLockStAll\030\001 \003(\rb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Common_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Common_2eproto = {
  false, false, 24319, descriptor_table_protodef_Common_2eproto, "Common.proto", 
  &descriptor_table_Common_2eproto_once, nullptr, 0, 189,
  schemas, file_default_instances, TableStruct_Common_2eproto::offsets,
  file_level_metadata_Common_2eproto, file_level_enum_descriptors_Common_2eproto, file_level_service_descriptors_Common_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_Common_2eproto_getter() {
  return &descriptor_table_Common_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_Common_2eproto(&descriptor_table_Common_2eproto);
namespace Soa {

// ===================================================================

class PB_APAsetnotice::_Internal {
 public:
  static const ::Soa::PB_Point2DStruct& ad_radsdstnpoint(const PB_APAsetnotice* msg);
  static const ::Soa::PB_TarSlotData& ad_apatarslotsts(const PB_APAsetnotice* msg);
};

const ::Soa::PB_Point2DStruct&
PB_APAsetnotice::_Internal::ad_radsdstnpoint(const PB_APAsetnotice* msg) {
  return *msg->ad_radsdstnpoint_;
}
const ::Soa::PB_TarSlotData&
PB_APAsetnotice::_Internal::ad_apatarslotsts(const PB_APAsetnotice* msg) {
  return *msg->ad_apatarslotsts_;
}
PB_APAsetnotice::PB_APAsetnotice(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  apa_custompoint_(arena),
  apa_guidepiont_(arena),
  ad_apaselfdefnslot_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_APAsetnotice)
}
PB_APAsetnotice::PB_APAsetnotice(const PB_APAsetnotice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      apa_custompoint_(from.apa_custompoint_),
      apa_guidepiont_(from.apa_guidepiont_),
      ad_apaselfdefnslot_(from.ad_apaselfdefnslot_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ad_radsdstnpoint()) {
    ad_radsdstnpoint_ = new ::Soa::PB_Point2DStruct(*from.ad_radsdstnpoint_);
  } else {
    ad_radsdstnpoint_ = nullptr;
  }
  if (from._internal_has_ad_apatarslotsts()) {
    ad_apatarslotsts_ = new ::Soa::PB_TarSlotData(*from.ad_apatarslotsts_);
  } else {
    ad_apatarslotsts_ = nullptr;
  }
  ::memcpy(&apa_parknotice_5_, &from.apa_parknotice_5_,
    static_cast<size_t>(reinterpret_cast<char*>(&ad_apaaudiormnset_) -
    reinterpret_cast<char*>(&apa_parknotice_5_)) + sizeof(ad_apaaudiormnset_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_APAsetnotice)
}

inline void PB_APAsetnotice::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ad_radsdstnpoint_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ad_apaaudiormnset_) -
    reinterpret_cast<char*>(&ad_radsdstnpoint_)) + sizeof(ad_apaaudiormnset_));
}

PB_APAsetnotice::~PB_APAsetnotice() {
  // @@protoc_insertion_point(destructor:Soa.PB_APAsetnotice)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_APAsetnotice::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete ad_radsdstnpoint_;
  if (this != internal_default_instance()) delete ad_apatarslotsts_;
}

void PB_APAsetnotice::ArenaDtor(void* object) {
  PB_APAsetnotice* _this = reinterpret_cast< PB_APAsetnotice* >(object);
  (void)_this;
}
void PB_APAsetnotice::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_APAsetnotice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_APAsetnotice::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_APAsetnotice)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apa_custompoint_.Clear();
  apa_guidepiont_.Clear();
  ad_apaselfdefnslot_.Clear();
  if (GetArenaForAllocation() == nullptr && ad_radsdstnpoint_ != nullptr) {
    delete ad_radsdstnpoint_;
  }
  ad_radsdstnpoint_ = nullptr;
  if (GetArenaForAllocation() == nullptr && ad_apatarslotsts_ != nullptr) {
    delete ad_apatarslotsts_;
  }
  ad_apatarslotsts_ = nullptr;
  ::memset(&apa_parknotice_5_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ad_apaaudiormnset_) -
      reinterpret_cast<char*>(&apa_parknotice_5_)) + sizeof(ad_apaaudiormnset_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_APAsetnotice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 APA_ParkNotice_5 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          apa_parknotice_5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_VoiceNotice_1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          apa_voicenotice_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_customReq = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          apa_customreq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_window_Notice = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          apa_window_notice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_SystemFailureFlag = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          apa_systemfailureflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_Condition_Notice = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          apa_condition_notice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_RecomendReq = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          apa_recomendreq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_RADSLocalPathFlag = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          apa_radslocalpathflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_RADSglobalpathFlag = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          apa_radsglobalpathflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_RemainDistance = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          apa_remaindistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_RADSNotice = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          apa_radsnotice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_soundNotice = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          apa_soundnotice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_HZPParkNotice = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          apa_hzpparknotice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_HZPRecomendReq = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          apa_hzprecomendreq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_MAPmanagementSts = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          apa_mapmanagementsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_HZPLocalPathFlag = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          apa_hzplocalpathflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_HZPglobalpathFlag = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          apa_hzpglobalpathflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_ParkingpathFlag = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          apa_parkingpathflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_Avoidpedestrians = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          apa_avoidpedestrians_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_Avoidvehicle = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          apa_avoidvehicle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_Drivedistance = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          apa_drivedistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_Abnormalexit = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          apa_abnormalexit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_HZPlearingpathFlag = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          apa_hzplearingpathflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_ControlNotice = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          apa_controlnotice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_HZPpathwindow = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          apa_hzppathwindow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_EducatingModeSts = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          apa_educatingmodests_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_SlotNotice = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 216)) {
          apa_slotnotice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_customParkNotice = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          apa_customparknotice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Soa.PB_Track_Point1 APA_custompoint = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 234)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_apa_custompoint(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<234>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .Soa.PB_Track_Point1 APA_guidepiont = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 242)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_apa_guidepiont(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<242>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_MessageReq = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          apa_messagereq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APARoadTrfcInfo = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          ad_aparoadtrfcinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APAWaitTime = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_apawaittime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Soa.PB_Point2DStruct AD_RADSDstnPoint = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ad_radsdstnpoint(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .Soa.PB_Point2DStruct AD_APASelfdefnSlot = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_ad_apaselfdefnslot(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<282>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APASelfdefnvalid = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ad_apaselfdefnvalid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APAViewAg = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          ad_apaviewag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APAguiding = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          ad_apaguiding_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APAAudioRmnSet = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          ad_apaaudiormnset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Soa.PB_TarSlotData AD_APATarSlotSts = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_ad_apatarslotsts(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_APAsetnotice::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_APAsetnotice)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 APA_ParkNotice_5 = 1;
  if (this->_internal_apa_parknotice_5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_apa_parknotice_5(), target);
  }

  // uint32 APA_VoiceNotice_1 = 2;
  if (this->_internal_apa_voicenotice_1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_apa_voicenotice_1(), target);
  }

  // uint32 APA_customReq = 3;
  if (this->_internal_apa_customreq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_apa_customreq(), target);
  }

  // uint32 APA_window_Notice = 4;
  if (this->_internal_apa_window_notice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_apa_window_notice(), target);
  }

  // uint32 APA_SystemFailureFlag = 5;
  if (this->_internal_apa_systemfailureflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_apa_systemfailureflag(), target);
  }

  // uint32 APA_Condition_Notice = 6;
  if (this->_internal_apa_condition_notice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_apa_condition_notice(), target);
  }

  // uint32 APA_RecomendReq = 7;
  if (this->_internal_apa_recomendreq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_apa_recomendreq(), target);
  }

  // uint32 APA_RADSLocalPathFlag = 8;
  if (this->_internal_apa_radslocalpathflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_apa_radslocalpathflag(), target);
  }

  // uint32 APA_RADSglobalpathFlag = 9;
  if (this->_internal_apa_radsglobalpathflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_apa_radsglobalpathflag(), target);
  }

  // uint32 APA_RemainDistance = 10;
  if (this->_internal_apa_remaindistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_apa_remaindistance(), target);
  }

  // uint32 APA_RADSNotice = 11;
  if (this->_internal_apa_radsnotice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_apa_radsnotice(), target);
  }

  // uint32 APA_soundNotice = 12;
  if (this->_internal_apa_soundnotice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_apa_soundnotice(), target);
  }

  // uint32 APA_HZPParkNotice = 13;
  if (this->_internal_apa_hzpparknotice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_apa_hzpparknotice(), target);
  }

  // uint32 APA_HZPRecomendReq = 14;
  if (this->_internal_apa_hzprecomendreq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_apa_hzprecomendreq(), target);
  }

  // uint32 APA_MAPmanagementSts = 15;
  if (this->_internal_apa_mapmanagementsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_apa_mapmanagementsts(), target);
  }

  // uint32 APA_HZPLocalPathFlag = 16;
  if (this->_internal_apa_hzplocalpathflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_apa_hzplocalpathflag(), target);
  }

  // uint32 APA_HZPglobalpathFlag = 17;
  if (this->_internal_apa_hzpglobalpathflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_apa_hzpglobalpathflag(), target);
  }

  // uint32 APA_ParkingpathFlag = 18;
  if (this->_internal_apa_parkingpathflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_apa_parkingpathflag(), target);
  }

  // uint32 APA_Avoidpedestrians = 19;
  if (this->_internal_apa_avoidpedestrians() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(19, this->_internal_apa_avoidpedestrians(), target);
  }

  // uint32 APA_Avoidvehicle = 20;
  if (this->_internal_apa_avoidvehicle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_apa_avoidvehicle(), target);
  }

  // uint32 APA_Drivedistance = 21;
  if (this->_internal_apa_drivedistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_apa_drivedistance(), target);
  }

  // uint32 APA_Abnormalexit = 22;
  if (this->_internal_apa_abnormalexit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_apa_abnormalexit(), target);
  }

  // uint32 APA_HZPlearingpathFlag = 23;
  if (this->_internal_apa_hzplearingpathflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(23, this->_internal_apa_hzplearingpathflag(), target);
  }

  // uint32 APA_ControlNotice = 24;
  if (this->_internal_apa_controlnotice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(24, this->_internal_apa_controlnotice(), target);
  }

  // uint32 APA_HZPpathwindow = 25;
  if (this->_internal_apa_hzppathwindow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(25, this->_internal_apa_hzppathwindow(), target);
  }

  // uint32 APA_EducatingModeSts = 26;
  if (this->_internal_apa_educatingmodests() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(26, this->_internal_apa_educatingmodests(), target);
  }

  // uint32 APA_SlotNotice = 27;
  if (this->_internal_apa_slotnotice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(27, this->_internal_apa_slotnotice(), target);
  }

  // uint32 APA_customParkNotice = 28;
  if (this->_internal_apa_customparknotice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(28, this->_internal_apa_customparknotice(), target);
  }

  // repeated .Soa.PB_Track_Point1 APA_custompoint = 29;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_apa_custompoint_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(29, this->_internal_apa_custompoint(i), target, stream);
  }

  // repeated .Soa.PB_Track_Point1 APA_guidepiont = 30;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_apa_guidepiont_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(30, this->_internal_apa_guidepiont(i), target, stream);
  }

  // uint32 APA_MessageReq = 31;
  if (this->_internal_apa_messagereq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(31, this->_internal_apa_messagereq(), target);
  }

  // uint32 AD_APARoadTrfcInfo = 32;
  if (this->_internal_ad_aparoadtrfcinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(32, this->_internal_ad_aparoadtrfcinfo(), target);
  }

  // uint32 AD_APAWaitTime = 33;
  if (this->_internal_ad_apawaittime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(33, this->_internal_ad_apawaittime(), target);
  }

  // .Soa.PB_Point2DStruct AD_RADSDstnPoint = 34;
  if (this->_internal_has_ad_radsdstnpoint()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        34, _Internal::ad_radsdstnpoint(this), target, stream);
  }

  // repeated .Soa.PB_Point2DStruct AD_APASelfdefnSlot = 35;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ad_apaselfdefnslot_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(35, this->_internal_ad_apaselfdefnslot(i), target, stream);
  }

  // uint32 AD_APASelfdefnvalid = 36;
  if (this->_internal_ad_apaselfdefnvalid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(36, this->_internal_ad_apaselfdefnvalid(), target);
  }

  // uint32 AD_APAViewAg = 37;
  if (this->_internal_ad_apaviewag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(37, this->_internal_ad_apaviewag(), target);
  }

  // uint32 AD_APAguiding = 38;
  if (this->_internal_ad_apaguiding() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(38, this->_internal_ad_apaguiding(), target);
  }

  // uint32 AD_APAAudioRmnSet = 39;
  if (this->_internal_ad_apaaudiormnset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(39, this->_internal_ad_apaaudiormnset(), target);
  }

  // .Soa.PB_TarSlotData AD_APATarSlotSts = 40;
  if (this->_internal_has_ad_apatarslotsts()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        40, _Internal::ad_apatarslotsts(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_APAsetnotice)
  return target;
}

size_t PB_APAsetnotice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_APAsetnotice)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_Track_Point1 APA_custompoint = 29;
  total_size += 2UL * this->_internal_apa_custompoint_size();
  for (const auto& msg : this->apa_custompoint_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Soa.PB_Track_Point1 APA_guidepiont = 30;
  total_size += 2UL * this->_internal_apa_guidepiont_size();
  for (const auto& msg : this->apa_guidepiont_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .Soa.PB_Point2DStruct AD_APASelfdefnSlot = 35;
  total_size += 2UL * this->_internal_ad_apaselfdefnslot_size();
  for (const auto& msg : this->ad_apaselfdefnslot_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Soa.PB_Point2DStruct AD_RADSDstnPoint = 34;
  if (this->_internal_has_ad_radsdstnpoint()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ad_radsdstnpoint_);
  }

  // .Soa.PB_TarSlotData AD_APATarSlotSts = 40;
  if (this->_internal_has_ad_apatarslotsts()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ad_apatarslotsts_);
  }

  // uint32 APA_ParkNotice_5 = 1;
  if (this->_internal_apa_parknotice_5() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_parknotice_5());
  }

  // uint32 APA_VoiceNotice_1 = 2;
  if (this->_internal_apa_voicenotice_1() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_voicenotice_1());
  }

  // uint32 APA_customReq = 3;
  if (this->_internal_apa_customreq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_customreq());
  }

  // uint32 APA_window_Notice = 4;
  if (this->_internal_apa_window_notice() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_window_notice());
  }

  // uint32 APA_SystemFailureFlag = 5;
  if (this->_internal_apa_systemfailureflag() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_systemfailureflag());
  }

  // uint32 APA_Condition_Notice = 6;
  if (this->_internal_apa_condition_notice() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_condition_notice());
  }

  // uint32 APA_RecomendReq = 7;
  if (this->_internal_apa_recomendreq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_recomendreq());
  }

  // uint32 APA_RADSLocalPathFlag = 8;
  if (this->_internal_apa_radslocalpathflag() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_radslocalpathflag());
  }

  // uint32 APA_RADSglobalpathFlag = 9;
  if (this->_internal_apa_radsglobalpathflag() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_radsglobalpathflag());
  }

  // uint32 APA_RemainDistance = 10;
  if (this->_internal_apa_remaindistance() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_remaindistance());
  }

  // uint32 APA_RADSNotice = 11;
  if (this->_internal_apa_radsnotice() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_radsnotice());
  }

  // uint32 APA_soundNotice = 12;
  if (this->_internal_apa_soundnotice() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_soundnotice());
  }

  // uint32 APA_HZPParkNotice = 13;
  if (this->_internal_apa_hzpparknotice() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_hzpparknotice());
  }

  // uint32 APA_HZPRecomendReq = 14;
  if (this->_internal_apa_hzprecomendreq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_hzprecomendreq());
  }

  // uint32 APA_MAPmanagementSts = 15;
  if (this->_internal_apa_mapmanagementsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_mapmanagementsts());
  }

  // uint32 APA_HZPLocalPathFlag = 16;
  if (this->_internal_apa_hzplocalpathflag() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_hzplocalpathflag());
  }

  // uint32 APA_HZPglobalpathFlag = 17;
  if (this->_internal_apa_hzpglobalpathflag() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_hzpglobalpathflag());
  }

  // uint32 APA_ParkingpathFlag = 18;
  if (this->_internal_apa_parkingpathflag() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_parkingpathflag());
  }

  // uint32 APA_Avoidpedestrians = 19;
  if (this->_internal_apa_avoidpedestrians() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_avoidpedestrians());
  }

  // uint32 APA_Avoidvehicle = 20;
  if (this->_internal_apa_avoidvehicle() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_avoidvehicle());
  }

  // uint32 APA_Drivedistance = 21;
  if (this->_internal_apa_drivedistance() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_drivedistance());
  }

  // uint32 APA_Abnormalexit = 22;
  if (this->_internal_apa_abnormalexit() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_abnormalexit());
  }

  // uint32 APA_HZPlearingpathFlag = 23;
  if (this->_internal_apa_hzplearingpathflag() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_hzplearingpathflag());
  }

  // uint32 APA_ControlNotice = 24;
  if (this->_internal_apa_controlnotice() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_controlnotice());
  }

  // uint32 APA_HZPpathwindow = 25;
  if (this->_internal_apa_hzppathwindow() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_hzppathwindow());
  }

  // uint32 APA_EducatingModeSts = 26;
  if (this->_internal_apa_educatingmodests() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_educatingmodests());
  }

  // uint32 APA_SlotNotice = 27;
  if (this->_internal_apa_slotnotice() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_slotnotice());
  }

  // uint32 APA_customParkNotice = 28;
  if (this->_internal_apa_customparknotice() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_customparknotice());
  }

  // uint32 APA_MessageReq = 31;
  if (this->_internal_apa_messagereq() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_apa_messagereq());
  }

  // uint32 AD_APARoadTrfcInfo = 32;
  if (this->_internal_ad_aparoadtrfcinfo() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_aparoadtrfcinfo());
  }

  // uint32 AD_APAWaitTime = 33;
  if (this->_internal_ad_apawaittime() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_apawaittime());
  }

  // uint32 AD_APASelfdefnvalid = 36;
  if (this->_internal_ad_apaselfdefnvalid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_apaselfdefnvalid());
  }

  // uint32 AD_APAViewAg = 37;
  if (this->_internal_ad_apaviewag() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_apaviewag());
  }

  // uint32 AD_APAguiding = 38;
  if (this->_internal_ad_apaguiding() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_apaguiding());
  }

  // uint32 AD_APAAudioRmnSet = 39;
  if (this->_internal_ad_apaaudiormnset() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_apaaudiormnset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_APAsetnotice::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_APAsetnotice::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_APAsetnotice::GetClassData() const { return &_class_data_; }

void PB_APAsetnotice::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_APAsetnotice *>(to)->MergeFrom(
      static_cast<const PB_APAsetnotice &>(from));
}


void PB_APAsetnotice::MergeFrom(const PB_APAsetnotice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_APAsetnotice)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  apa_custompoint_.MergeFrom(from.apa_custompoint_);
  apa_guidepiont_.MergeFrom(from.apa_guidepiont_);
  ad_apaselfdefnslot_.MergeFrom(from.ad_apaselfdefnslot_);
  if (from._internal_has_ad_radsdstnpoint()) {
    _internal_mutable_ad_radsdstnpoint()->::Soa::PB_Point2DStruct::MergeFrom(from._internal_ad_radsdstnpoint());
  }
  if (from._internal_has_ad_apatarslotsts()) {
    _internal_mutable_ad_apatarslotsts()->::Soa::PB_TarSlotData::MergeFrom(from._internal_ad_apatarslotsts());
  }
  if (from._internal_apa_parknotice_5() != 0) {
    _internal_set_apa_parknotice_5(from._internal_apa_parknotice_5());
  }
  if (from._internal_apa_voicenotice_1() != 0) {
    _internal_set_apa_voicenotice_1(from._internal_apa_voicenotice_1());
  }
  if (from._internal_apa_customreq() != 0) {
    _internal_set_apa_customreq(from._internal_apa_customreq());
  }
  if (from._internal_apa_window_notice() != 0) {
    _internal_set_apa_window_notice(from._internal_apa_window_notice());
  }
  if (from._internal_apa_systemfailureflag() != 0) {
    _internal_set_apa_systemfailureflag(from._internal_apa_systemfailureflag());
  }
  if (from._internal_apa_condition_notice() != 0) {
    _internal_set_apa_condition_notice(from._internal_apa_condition_notice());
  }
  if (from._internal_apa_recomendreq() != 0) {
    _internal_set_apa_recomendreq(from._internal_apa_recomendreq());
  }
  if (from._internal_apa_radslocalpathflag() != 0) {
    _internal_set_apa_radslocalpathflag(from._internal_apa_radslocalpathflag());
  }
  if (from._internal_apa_radsglobalpathflag() != 0) {
    _internal_set_apa_radsglobalpathflag(from._internal_apa_radsglobalpathflag());
  }
  if (from._internal_apa_remaindistance() != 0) {
    _internal_set_apa_remaindistance(from._internal_apa_remaindistance());
  }
  if (from._internal_apa_radsnotice() != 0) {
    _internal_set_apa_radsnotice(from._internal_apa_radsnotice());
  }
  if (from._internal_apa_soundnotice() != 0) {
    _internal_set_apa_soundnotice(from._internal_apa_soundnotice());
  }
  if (from._internal_apa_hzpparknotice() != 0) {
    _internal_set_apa_hzpparknotice(from._internal_apa_hzpparknotice());
  }
  if (from._internal_apa_hzprecomendreq() != 0) {
    _internal_set_apa_hzprecomendreq(from._internal_apa_hzprecomendreq());
  }
  if (from._internal_apa_mapmanagementsts() != 0) {
    _internal_set_apa_mapmanagementsts(from._internal_apa_mapmanagementsts());
  }
  if (from._internal_apa_hzplocalpathflag() != 0) {
    _internal_set_apa_hzplocalpathflag(from._internal_apa_hzplocalpathflag());
  }
  if (from._internal_apa_hzpglobalpathflag() != 0) {
    _internal_set_apa_hzpglobalpathflag(from._internal_apa_hzpglobalpathflag());
  }
  if (from._internal_apa_parkingpathflag() != 0) {
    _internal_set_apa_parkingpathflag(from._internal_apa_parkingpathflag());
  }
  if (from._internal_apa_avoidpedestrians() != 0) {
    _internal_set_apa_avoidpedestrians(from._internal_apa_avoidpedestrians());
  }
  if (from._internal_apa_avoidvehicle() != 0) {
    _internal_set_apa_avoidvehicle(from._internal_apa_avoidvehicle());
  }
  if (from._internal_apa_drivedistance() != 0) {
    _internal_set_apa_drivedistance(from._internal_apa_drivedistance());
  }
  if (from._internal_apa_abnormalexit() != 0) {
    _internal_set_apa_abnormalexit(from._internal_apa_abnormalexit());
  }
  if (from._internal_apa_hzplearingpathflag() != 0) {
    _internal_set_apa_hzplearingpathflag(from._internal_apa_hzplearingpathflag());
  }
  if (from._internal_apa_controlnotice() != 0) {
    _internal_set_apa_controlnotice(from._internal_apa_controlnotice());
  }
  if (from._internal_apa_hzppathwindow() != 0) {
    _internal_set_apa_hzppathwindow(from._internal_apa_hzppathwindow());
  }
  if (from._internal_apa_educatingmodests() != 0) {
    _internal_set_apa_educatingmodests(from._internal_apa_educatingmodests());
  }
  if (from._internal_apa_slotnotice() != 0) {
    _internal_set_apa_slotnotice(from._internal_apa_slotnotice());
  }
  if (from._internal_apa_customparknotice() != 0) {
    _internal_set_apa_customparknotice(from._internal_apa_customparknotice());
  }
  if (from._internal_apa_messagereq() != 0) {
    _internal_set_apa_messagereq(from._internal_apa_messagereq());
  }
  if (from._internal_ad_aparoadtrfcinfo() != 0) {
    _internal_set_ad_aparoadtrfcinfo(from._internal_ad_aparoadtrfcinfo());
  }
  if (from._internal_ad_apawaittime() != 0) {
    _internal_set_ad_apawaittime(from._internal_ad_apawaittime());
  }
  if (from._internal_ad_apaselfdefnvalid() != 0) {
    _internal_set_ad_apaselfdefnvalid(from._internal_ad_apaselfdefnvalid());
  }
  if (from._internal_ad_apaviewag() != 0) {
    _internal_set_ad_apaviewag(from._internal_ad_apaviewag());
  }
  if (from._internal_ad_apaguiding() != 0) {
    _internal_set_ad_apaguiding(from._internal_ad_apaguiding());
  }
  if (from._internal_ad_apaaudiormnset() != 0) {
    _internal_set_ad_apaaudiormnset(from._internal_ad_apaaudiormnset());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_APAsetnotice::CopyFrom(const PB_APAsetnotice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_APAsetnotice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_APAsetnotice::IsInitialized() const {
  return true;
}

void PB_APAsetnotice::InternalSwap(PB_APAsetnotice* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  apa_custompoint_.InternalSwap(&other->apa_custompoint_);
  apa_guidepiont_.InternalSwap(&other->apa_guidepiont_);
  ad_apaselfdefnslot_.InternalSwap(&other->ad_apaselfdefnslot_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_APAsetnotice, ad_apaaudiormnset_)
      + sizeof(PB_APAsetnotice::ad_apaaudiormnset_)
      - PROTOBUF_FIELD_OFFSET(PB_APAsetnotice, ad_radsdstnpoint_)>(
          reinterpret_cast<char*>(&ad_radsdstnpoint_),
          reinterpret_cast<char*>(&other->ad_radsdstnpoint_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_APAsetnotice::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[0]);
}

// ===================================================================

class PB_ReturnCode::_Internal {
 public:
};

PB_ReturnCode::PB_ReturnCode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ReturnCode)
}
PB_ReturnCode::PB_ReturnCode(const PB_ReturnCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ReturnCode)
}

inline void PB_ReturnCode::SharedCtor() {
code_ = 0u;
}

PB_ReturnCode::~PB_ReturnCode() {
  // @@protoc_insertion_point(destructor:Soa.PB_ReturnCode)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ReturnCode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ReturnCode::ArenaDtor(void* object) {
  PB_ReturnCode* _this = reinterpret_cast< PB_ReturnCode* >(object);
  (void)_this;
}
void PB_ReturnCode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ReturnCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ReturnCode::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ReturnCode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ReturnCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ReturnCode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ReturnCode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->_internal_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ReturnCode)
  return target;
}

size_t PB_ReturnCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ReturnCode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ReturnCode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ReturnCode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ReturnCode::GetClassData() const { return &_class_data_; }

void PB_ReturnCode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ReturnCode *>(to)->MergeFrom(
      static_cast<const PB_ReturnCode &>(from));
}


void PB_ReturnCode::MergeFrom(const PB_ReturnCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ReturnCode)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_code() != 0) {
    _internal_set_code(from._internal_code());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ReturnCode::CopyFrom(const PB_ReturnCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ReturnCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ReturnCode::IsInitialized() const {
  return true;
}

void PB_ReturnCode::InternalSwap(PB_ReturnCode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ReturnCode::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[1]);
}

// ===================================================================

class PB_RWiperFltSt::_Internal {
 public:
};

PB_RWiperFltSt::PB_RWiperFltSt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_RWiperFltSt)
}
PB_RWiperFltSt::PB_RWiperFltSt(const PB_RWiperFltSt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&wiperfltst_, &from.wiperfltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&wshrfltst_) -
    reinterpret_cast<char*>(&wiperfltst_)) + sizeof(wshrfltst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_RWiperFltSt)
}

inline void PB_RWiperFltSt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&wiperfltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&wshrfltst_) -
    reinterpret_cast<char*>(&wiperfltst_)) + sizeof(wshrfltst_));
}

PB_RWiperFltSt::~PB_RWiperFltSt() {
  // @@protoc_insertion_point(destructor:Soa.PB_RWiperFltSt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_RWiperFltSt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_RWiperFltSt::ArenaDtor(void* object) {
  PB_RWiperFltSt* _this = reinterpret_cast< PB_RWiperFltSt* >(object);
  (void)_this;
}
void PB_RWiperFltSt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_RWiperFltSt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_RWiperFltSt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_RWiperFltSt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&wiperfltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wshrfltst_) -
      reinterpret_cast<char*>(&wiperfltst_)) + sizeof(wshrfltst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_RWiperFltSt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 WiperFltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          wiperfltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WshrFltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          wshrfltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_RWiperFltSt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_RWiperFltSt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 WiperFltSt = 1;
  if (this->_internal_wiperfltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_wiperfltst(), target);
  }

  // uint32 WshrFltSt = 2;
  if (this->_internal_wshrfltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_wshrfltst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_RWiperFltSt)
  return target;
}

size_t PB_RWiperFltSt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_RWiperFltSt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 WiperFltSt = 1;
  if (this->_internal_wiperfltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_wiperfltst());
  }

  // uint32 WshrFltSt = 2;
  if (this->_internal_wshrfltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_wshrfltst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_RWiperFltSt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_RWiperFltSt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_RWiperFltSt::GetClassData() const { return &_class_data_; }

void PB_RWiperFltSt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_RWiperFltSt *>(to)->MergeFrom(
      static_cast<const PB_RWiperFltSt &>(from));
}


void PB_RWiperFltSt::MergeFrom(const PB_RWiperFltSt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_RWiperFltSt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_wiperfltst() != 0) {
    _internal_set_wiperfltst(from._internal_wiperfltst());
  }
  if (from._internal_wshrfltst() != 0) {
    _internal_set_wshrfltst(from._internal_wshrfltst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_RWiperFltSt::CopyFrom(const PB_RWiperFltSt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_RWiperFltSt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RWiperFltSt::IsInitialized() const {
  return true;
}

void PB_RWiperFltSt::InternalSwap(PB_RWiperFltSt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_RWiperFltSt, wshrfltst_)
      + sizeof(PB_RWiperFltSt::wshrfltst_)
      - PROTOBUF_FIELD_OFFSET(PB_RWiperFltSt, wiperfltst_)>(
          reinterpret_cast<char*>(&wiperfltst_),
          reinterpret_cast<char*>(&other->wiperfltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_RWiperFltSt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[2]);
}

// ===================================================================

class PB_FunEnEvt::_Internal {
 public:
};

PB_FunEnEvt::PB_FunEnEvt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_FunEnEvt)
}
PB_FunEnEvt::PB_FunEnEvt(const PB_FunEnEvt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&funentyp_, &from.funentyp_,
    static_cast<size_t>(reinterpret_cast<char*>(&funenfailreson_) -
    reinterpret_cast<char*>(&funentyp_)) + sizeof(funenfailreson_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_FunEnEvt)
}

inline void PB_FunEnEvt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&funentyp_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&funenfailreson_) -
    reinterpret_cast<char*>(&funentyp_)) + sizeof(funenfailreson_));
}

PB_FunEnEvt::~PB_FunEnEvt() {
  // @@protoc_insertion_point(destructor:Soa.PB_FunEnEvt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_FunEnEvt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_FunEnEvt::ArenaDtor(void* object) {
  PB_FunEnEvt* _this = reinterpret_cast< PB_FunEnEvt* >(object);
  (void)_this;
}
void PB_FunEnEvt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_FunEnEvt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_FunEnEvt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_FunEnEvt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&funentyp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&funenfailreson_) -
      reinterpret_cast<char*>(&funentyp_)) + sizeof(funenfailreson_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_FunEnEvt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FunEnTyp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          funentyp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FunEnFailReson = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          funenfailreson_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_FunEnEvt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_FunEnEvt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FunEnTyp = 1;
  if (this->_internal_funentyp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_funentyp(), target);
  }

  // uint32 Result = 2;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_result(), target);
  }

  // uint32 FunEnFailReson = 3;
  if (this->_internal_funenfailreson() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_funenfailreson(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_FunEnEvt)
  return target;
}

size_t PB_FunEnEvt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_FunEnEvt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FunEnTyp = 1;
  if (this->_internal_funentyp() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_funentyp());
  }

  // uint32 Result = 2;
  if (this->_internal_result() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_result());
  }

  // uint32 FunEnFailReson = 3;
  if (this->_internal_funenfailreson() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_funenfailreson());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_FunEnEvt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_FunEnEvt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_FunEnEvt::GetClassData() const { return &_class_data_; }

void PB_FunEnEvt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_FunEnEvt *>(to)->MergeFrom(
      static_cast<const PB_FunEnEvt &>(from));
}


void PB_FunEnEvt::MergeFrom(const PB_FunEnEvt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_FunEnEvt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_funentyp() != 0) {
    _internal_set_funentyp(from._internal_funentyp());
  }
  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  if (from._internal_funenfailreson() != 0) {
    _internal_set_funenfailreson(from._internal_funenfailreson());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_FunEnEvt::CopyFrom(const PB_FunEnEvt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_FunEnEvt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FunEnEvt::IsInitialized() const {
  return true;
}

void PB_FunEnEvt::InternalSwap(PB_FunEnEvt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_FunEnEvt, funenfailreson_)
      + sizeof(PB_FunEnEvt::funenfailreson_)
      - PROTOBUF_FIELD_OFFSET(PB_FunEnEvt, funentyp_)>(
          reinterpret_cast<char*>(&funentyp_),
          reinterpret_cast<char*>(&other->funentyp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_FunEnEvt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[3]);
}

// ===================================================================

class PB_TurnLiFltInfo::_Internal {
 public:
};

PB_TurnLiFltInfo::PB_TurnLiFltInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TurnLiFltInfo)
}
PB_TurnLiFltInfo::PB_TurnLiFltInfo(const PB_TurnLiFltInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&fl_fltst_, &from.fl_fltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&rr_fltst_) -
    reinterpret_cast<char*>(&fl_fltst_)) + sizeof(rr_fltst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TurnLiFltInfo)
}

inline void PB_TurnLiFltInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fl_fltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rr_fltst_) -
    reinterpret_cast<char*>(&fl_fltst_)) + sizeof(rr_fltst_));
}

PB_TurnLiFltInfo::~PB_TurnLiFltInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_TurnLiFltInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TurnLiFltInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TurnLiFltInfo::ArenaDtor(void* object) {
  PB_TurnLiFltInfo* _this = reinterpret_cast< PB_TurnLiFltInfo* >(object);
  (void)_this;
}
void PB_TurnLiFltInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TurnLiFltInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TurnLiFltInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TurnLiFltInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fl_fltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rr_fltst_) -
      reinterpret_cast<char*>(&fl_fltst_)) + sizeof(rr_fltst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TurnLiFltInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FL_FltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          fl_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FR_FltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          fr_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RL_FltSt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          rl_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RR_FltSt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          rr_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TurnLiFltInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TurnLiFltInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FL_FltSt = 1;
  if (this->_internal_fl_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_fl_fltst(), target);
  }

  // uint32 FR_FltSt = 2;
  if (this->_internal_fr_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_fr_fltst(), target);
  }

  // uint32 RL_FltSt = 3;
  if (this->_internal_rl_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rl_fltst(), target);
  }

  // uint32 RR_FltSt = 4;
  if (this->_internal_rr_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_rr_fltst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TurnLiFltInfo)
  return target;
}

size_t PB_TurnLiFltInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TurnLiFltInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FL_FltSt = 1;
  if (this->_internal_fl_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_fl_fltst());
  }

  // uint32 FR_FltSt = 2;
  if (this->_internal_fr_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_fr_fltst());
  }

  // uint32 RL_FltSt = 3;
  if (this->_internal_rl_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rl_fltst());
  }

  // uint32 RR_FltSt = 4;
  if (this->_internal_rr_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rr_fltst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TurnLiFltInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TurnLiFltInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TurnLiFltInfo::GetClassData() const { return &_class_data_; }

void PB_TurnLiFltInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TurnLiFltInfo *>(to)->MergeFrom(
      static_cast<const PB_TurnLiFltInfo &>(from));
}


void PB_TurnLiFltInfo::MergeFrom(const PB_TurnLiFltInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TurnLiFltInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fl_fltst() != 0) {
    _internal_set_fl_fltst(from._internal_fl_fltst());
  }
  if (from._internal_fr_fltst() != 0) {
    _internal_set_fr_fltst(from._internal_fr_fltst());
  }
  if (from._internal_rl_fltst() != 0) {
    _internal_set_rl_fltst(from._internal_rl_fltst());
  }
  if (from._internal_rr_fltst() != 0) {
    _internal_set_rr_fltst(from._internal_rr_fltst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TurnLiFltInfo::CopyFrom(const PB_TurnLiFltInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TurnLiFltInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TurnLiFltInfo::IsInitialized() const {
  return true;
}

void PB_TurnLiFltInfo::InternalSwap(PB_TurnLiFltInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_TurnLiFltInfo, rr_fltst_)
      + sizeof(PB_TurnLiFltInfo::rr_fltst_)
      - PROTOBUF_FIELD_OFFSET(PB_TurnLiFltInfo, fl_fltst_)>(
          reinterpret_cast<char*>(&fl_fltst_),
          reinterpret_cast<char*>(&other->fl_fltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TurnLiFltInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[4]);
}

// ===================================================================

class PB_HUset_ADLanechangeStyle::_Internal {
 public:
};

PB_HUset_ADLanechangeStyle::PB_HUset_ADLanechangeStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_ADLanechangeStyle)
}
PB_HUset_ADLanechangeStyle::PB_HUset_ADLanechangeStyle(const PB_HUset_ADLanechangeStyle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_adlanechangestyle_ = from.hu_adlanechangestyle_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_ADLanechangeStyle)
}

inline void PB_HUset_ADLanechangeStyle::SharedCtor() {
hu_adlanechangestyle_ = 0u;
}

PB_HUset_ADLanechangeStyle::~PB_HUset_ADLanechangeStyle() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_ADLanechangeStyle)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_ADLanechangeStyle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_ADLanechangeStyle::ArenaDtor(void* object) {
  PB_HUset_ADLanechangeStyle* _this = reinterpret_cast< PB_HUset_ADLanechangeStyle* >(object);
  (void)_this;
}
void PB_HUset_ADLanechangeStyle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_ADLanechangeStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_ADLanechangeStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_ADLanechangeStyle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_adlanechangestyle_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_ADLanechangeStyle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_ADLanechangeStyle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_adlanechangestyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_ADLanechangeStyle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_ADLanechangeStyle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_ADLanechangeStyle = 1;
  if (this->_internal_hu_adlanechangestyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_adlanechangestyle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_ADLanechangeStyle)
  return target;
}

size_t PB_HUset_ADLanechangeStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_ADLanechangeStyle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_ADLanechangeStyle = 1;
  if (this->_internal_hu_adlanechangestyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_adlanechangestyle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_ADLanechangeStyle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_ADLanechangeStyle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_ADLanechangeStyle::GetClassData() const { return &_class_data_; }

void PB_HUset_ADLanechangeStyle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_ADLanechangeStyle *>(to)->MergeFrom(
      static_cast<const PB_HUset_ADLanechangeStyle &>(from));
}


void PB_HUset_ADLanechangeStyle::MergeFrom(const PB_HUset_ADLanechangeStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_ADLanechangeStyle)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_adlanechangestyle() != 0) {
    _internal_set_hu_adlanechangestyle(from._internal_hu_adlanechangestyle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_ADLanechangeStyle::CopyFrom(const PB_HUset_ADLanechangeStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_ADLanechangeStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_ADLanechangeStyle::IsInitialized() const {
  return true;
}

void PB_HUset_ADLanechangeStyle::InternalSwap(PB_HUset_ADLanechangeStyle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_adlanechangestyle_, other->hu_adlanechangestyle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_ADLanechangeStyle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[5]);
}

// ===================================================================

class PB_EDC_APACustSlotData::_Internal {
 public:
};

PB_EDC_APACustSlotData::PB_EDC_APACustSlotData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  edc_apacustslot_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_APACustSlotData)
}
PB_EDC_APACustSlotData::PB_EDC_APACustSlotData(const PB_EDC_APACustSlotData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      edc_apacustslot_(from.edc_apacustslot_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_APACustSlotData)
}

inline void PB_EDC_APACustSlotData::SharedCtor() {
}

PB_EDC_APACustSlotData::~PB_EDC_APACustSlotData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_APACustSlotData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_APACustSlotData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_APACustSlotData::ArenaDtor(void* object) {
  PB_EDC_APACustSlotData* _this = reinterpret_cast< PB_EDC_APACustSlotData* >(object);
  (void)_this;
}
void PB_EDC_APACustSlotData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_APACustSlotData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_APACustSlotData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_APACustSlotData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apacustslot_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_APACustSlotData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Soa.PB_Point2DStruct EDC_APACustSlot = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_edc_apacustslot(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_APACustSlotData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_APACustSlotData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct EDC_APACustSlot = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_edc_apacustslot_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_edc_apacustslot(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_APACustSlotData)
  return target;
}

size_t PB_EDC_APACustSlotData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_APACustSlotData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct EDC_APACustSlot = 1;
  total_size += 1UL * this->_internal_edc_apacustslot_size();
  for (const auto& msg : this->edc_apacustslot_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_APACustSlotData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_APACustSlotData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_APACustSlotData::GetClassData() const { return &_class_data_; }

void PB_EDC_APACustSlotData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_APACustSlotData *>(to)->MergeFrom(
      static_cast<const PB_EDC_APACustSlotData &>(from));
}


void PB_EDC_APACustSlotData::MergeFrom(const PB_EDC_APACustSlotData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_APACustSlotData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  edc_apacustslot_.MergeFrom(from.edc_apacustslot_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_APACustSlotData::CopyFrom(const PB_EDC_APACustSlotData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_APACustSlotData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_APACustSlotData::IsInitialized() const {
  return true;
}

void PB_EDC_APACustSlotData::InternalSwap(PB_EDC_APACustSlotData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  edc_apacustslot_.InternalSwap(&other->edc_apacustslot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_APACustSlotData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[6]);
}

// ===================================================================

class PB_HUset_NIDAudioWarStyle::_Internal {
 public:
};

PB_HUset_NIDAudioWarStyle::PB_HUset_NIDAudioWarStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_NIDAudioWarStyle)
}
PB_HUset_NIDAudioWarStyle::PB_HUset_NIDAudioWarStyle(const PB_HUset_NIDAudioWarStyle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_nidaudiowarstyle_ = from.hu_nidaudiowarstyle_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_NIDAudioWarStyle)
}

inline void PB_HUset_NIDAudioWarStyle::SharedCtor() {
hu_nidaudiowarstyle_ = 0u;
}

PB_HUset_NIDAudioWarStyle::~PB_HUset_NIDAudioWarStyle() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_NIDAudioWarStyle)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_NIDAudioWarStyle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_NIDAudioWarStyle::ArenaDtor(void* object) {
  PB_HUset_NIDAudioWarStyle* _this = reinterpret_cast< PB_HUset_NIDAudioWarStyle* >(object);
  (void)_this;
}
void PB_HUset_NIDAudioWarStyle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_NIDAudioWarStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_NIDAudioWarStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_NIDAudioWarStyle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_nidaudiowarstyle_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_NIDAudioWarStyle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_NIDAudioWarStyle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_nidaudiowarstyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_NIDAudioWarStyle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_NIDAudioWarStyle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_NIDAudioWarStyle = 1;
  if (this->_internal_hu_nidaudiowarstyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_nidaudiowarstyle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_NIDAudioWarStyle)
  return target;
}

size_t PB_HUset_NIDAudioWarStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_NIDAudioWarStyle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_NIDAudioWarStyle = 1;
  if (this->_internal_hu_nidaudiowarstyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_nidaudiowarstyle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_NIDAudioWarStyle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_NIDAudioWarStyle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_NIDAudioWarStyle::GetClassData() const { return &_class_data_; }

void PB_HUset_NIDAudioWarStyle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_NIDAudioWarStyle *>(to)->MergeFrom(
      static_cast<const PB_HUset_NIDAudioWarStyle &>(from));
}


void PB_HUset_NIDAudioWarStyle::MergeFrom(const PB_HUset_NIDAudioWarStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_NIDAudioWarStyle)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_nidaudiowarstyle() != 0) {
    _internal_set_hu_nidaudiowarstyle(from._internal_hu_nidaudiowarstyle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_NIDAudioWarStyle::CopyFrom(const PB_HUset_NIDAudioWarStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_NIDAudioWarStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_NIDAudioWarStyle::IsInitialized() const {
  return true;
}

void PB_HUset_NIDAudioWarStyle::InternalSwap(PB_HUset_NIDAudioWarStyle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_nidaudiowarstyle_, other->hu_nidaudiowarstyle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_NIDAudioWarStyle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[7]);
}

// ===================================================================

class PB_HUset_LASIntellgentModeSelection::_Internal {
 public:
};

PB_HUset_LASIntellgentModeSelection::PB_HUset_LASIntellgentModeSelection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_LASIntellgentModeSelection)
}
PB_HUset_LASIntellgentModeSelection::PB_HUset_LASIntellgentModeSelection(const PB_HUset_LASIntellgentModeSelection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_lasintellgentmodeselection_ = from.hu_lasintellgentmodeselection_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_LASIntellgentModeSelection)
}

inline void PB_HUset_LASIntellgentModeSelection::SharedCtor() {
hu_lasintellgentmodeselection_ = 0u;
}

PB_HUset_LASIntellgentModeSelection::~PB_HUset_LASIntellgentModeSelection() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_LASIntellgentModeSelection)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_LASIntellgentModeSelection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_LASIntellgentModeSelection::ArenaDtor(void* object) {
  PB_HUset_LASIntellgentModeSelection* _this = reinterpret_cast< PB_HUset_LASIntellgentModeSelection* >(object);
  (void)_this;
}
void PB_HUset_LASIntellgentModeSelection::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_LASIntellgentModeSelection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_LASIntellgentModeSelection::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_LASIntellgentModeSelection)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_lasintellgentmodeselection_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_LASIntellgentModeSelection::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_LASIntellgentModeSelection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_lasintellgentmodeselection_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_LASIntellgentModeSelection::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_LASIntellgentModeSelection)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_LASIntellgentModeSelection = 1;
  if (this->_internal_hu_lasintellgentmodeselection() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_lasintellgentmodeselection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_LASIntellgentModeSelection)
  return target;
}

size_t PB_HUset_LASIntellgentModeSelection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_LASIntellgentModeSelection)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_LASIntellgentModeSelection = 1;
  if (this->_internal_hu_lasintellgentmodeselection() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_lasintellgentmodeselection());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_LASIntellgentModeSelection::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_LASIntellgentModeSelection::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_LASIntellgentModeSelection::GetClassData() const { return &_class_data_; }

void PB_HUset_LASIntellgentModeSelection::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_LASIntellgentModeSelection *>(to)->MergeFrom(
      static_cast<const PB_HUset_LASIntellgentModeSelection &>(from));
}


void PB_HUset_LASIntellgentModeSelection::MergeFrom(const PB_HUset_LASIntellgentModeSelection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_LASIntellgentModeSelection)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_lasintellgentmodeselection() != 0) {
    _internal_set_hu_lasintellgentmodeselection(from._internal_hu_lasintellgentmodeselection());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_LASIntellgentModeSelection::CopyFrom(const PB_HUset_LASIntellgentModeSelection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_LASIntellgentModeSelection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_LASIntellgentModeSelection::IsInitialized() const {
  return true;
}

void PB_HUset_LASIntellgentModeSelection::InternalSwap(PB_HUset_LASIntellgentModeSelection* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_lasintellgentmodeselection_, other->hu_lasintellgentmodeselection_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_LASIntellgentModeSelection::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[8]);
}

// ===================================================================

class PB_HUset_SEAOnOff::_Internal {
 public:
};

PB_HUset_SEAOnOff::PB_HUset_SEAOnOff(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_SEAOnOff)
}
PB_HUset_SEAOnOff::PB_HUset_SEAOnOff(const PB_HUset_SEAOnOff& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_seaonoff_ = from.hu_seaonoff_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_SEAOnOff)
}

inline void PB_HUset_SEAOnOff::SharedCtor() {
hu_seaonoff_ = 0u;
}

PB_HUset_SEAOnOff::~PB_HUset_SEAOnOff() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_SEAOnOff)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_SEAOnOff::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_SEAOnOff::ArenaDtor(void* object) {
  PB_HUset_SEAOnOff* _this = reinterpret_cast< PB_HUset_SEAOnOff* >(object);
  (void)_this;
}
void PB_HUset_SEAOnOff::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_SEAOnOff::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_SEAOnOff::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_SEAOnOff)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_seaonoff_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_SEAOnOff::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_SEAOnOff = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_seaonoff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_SEAOnOff::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_SEAOnOff)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_SEAOnOff = 1;
  if (this->_internal_hu_seaonoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_seaonoff(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_SEAOnOff)
  return target;
}

size_t PB_HUset_SEAOnOff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_SEAOnOff)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_SEAOnOff = 1;
  if (this->_internal_hu_seaonoff() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_seaonoff());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_SEAOnOff::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_SEAOnOff::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_SEAOnOff::GetClassData() const { return &_class_data_; }

void PB_HUset_SEAOnOff::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_SEAOnOff *>(to)->MergeFrom(
      static_cast<const PB_HUset_SEAOnOff &>(from));
}


void PB_HUset_SEAOnOff::MergeFrom(const PB_HUset_SEAOnOff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_SEAOnOff)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_seaonoff() != 0) {
    _internal_set_hu_seaonoff(from._internal_hu_seaonoff());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_SEAOnOff::CopyFrom(const PB_HUset_SEAOnOff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_SEAOnOff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_SEAOnOff::IsInitialized() const {
  return true;
}

void PB_HUset_SEAOnOff::InternalSwap(PB_HUset_SEAOnOff* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_seaonoff_, other->hu_seaonoff_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_SEAOnOff::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[9]);
}

// ===================================================================

class PB_AD_RPAVoiceCtrlFbData::_Internal {
 public:
};

PB_AD_RPAVoiceCtrlFbData::PB_AD_RPAVoiceCtrlFbData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_RPAVoiceCtrlFbData)
}
PB_AD_RPAVoiceCtrlFbData::PB_AD_RPAVoiceCtrlFbData(const PB_AD_RPAVoiceCtrlFbData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ad_rpavoicectrlfb_ = from.ad_rpavoicectrlfb_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_RPAVoiceCtrlFbData)
}

inline void PB_AD_RPAVoiceCtrlFbData::SharedCtor() {
ad_rpavoicectrlfb_ = 0u;
}

PB_AD_RPAVoiceCtrlFbData::~PB_AD_RPAVoiceCtrlFbData() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_RPAVoiceCtrlFbData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_RPAVoiceCtrlFbData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_AD_RPAVoiceCtrlFbData::ArenaDtor(void* object) {
  PB_AD_RPAVoiceCtrlFbData* _this = reinterpret_cast< PB_AD_RPAVoiceCtrlFbData* >(object);
  (void)_this;
}
void PB_AD_RPAVoiceCtrlFbData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_RPAVoiceCtrlFbData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_RPAVoiceCtrlFbData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_RPAVoiceCtrlFbData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ad_rpavoicectrlfb_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_RPAVoiceCtrlFbData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_RPAVoiceCtrlFb = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_rpavoicectrlfb_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_RPAVoiceCtrlFbData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_RPAVoiceCtrlFbData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_RPAVoiceCtrlFb = 1;
  if (this->_internal_ad_rpavoicectrlfb() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_rpavoicectrlfb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_RPAVoiceCtrlFbData)
  return target;
}

size_t PB_AD_RPAVoiceCtrlFbData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_RPAVoiceCtrlFbData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_RPAVoiceCtrlFb = 1;
  if (this->_internal_ad_rpavoicectrlfb() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_rpavoicectrlfb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_RPAVoiceCtrlFbData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_RPAVoiceCtrlFbData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_RPAVoiceCtrlFbData::GetClassData() const { return &_class_data_; }

void PB_AD_RPAVoiceCtrlFbData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_RPAVoiceCtrlFbData *>(to)->MergeFrom(
      static_cast<const PB_AD_RPAVoiceCtrlFbData &>(from));
}


void PB_AD_RPAVoiceCtrlFbData::MergeFrom(const PB_AD_RPAVoiceCtrlFbData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_RPAVoiceCtrlFbData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_rpavoicectrlfb() != 0) {
    _internal_set_ad_rpavoicectrlfb(from._internal_ad_rpavoicectrlfb());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_RPAVoiceCtrlFbData::CopyFrom(const PB_AD_RPAVoiceCtrlFbData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_RPAVoiceCtrlFbData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_RPAVoiceCtrlFbData::IsInitialized() const {
  return true;
}

void PB_AD_RPAVoiceCtrlFbData::InternalSwap(PB_AD_RPAVoiceCtrlFbData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ad_rpavoicectrlfb_, other->ad_rpavoicectrlfb_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_RPAVoiceCtrlFbData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[10]);
}

// ===================================================================

class PB_UploadResult::_Internal {
 public:
};

PB_UploadResult::PB_UploadResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_UploadResult)
}
PB_UploadResult::PB_UploadResult(const PB_UploadResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  filehandle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    filehandle_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filehandle().empty()) {
    filehandle_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_filehandle(), 
      GetArenaForAllocation());
  }
  taskid_ = from.taskid_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_UploadResult)
}

inline void PB_UploadResult::SharedCtor() {
filehandle_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  filehandle_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
taskid_ = uint64_t{0u};
}

PB_UploadResult::~PB_UploadResult() {
  // @@protoc_insertion_point(destructor:Soa.PB_UploadResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_UploadResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  filehandle_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PB_UploadResult::ArenaDtor(void* object) {
  PB_UploadResult* _this = reinterpret_cast< PB_UploadResult* >(object);
  (void)_this;
}
void PB_UploadResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_UploadResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_UploadResult::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_UploadResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filehandle_.ClearToEmpty();
  taskid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_UploadResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes fileHandle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_filehandle();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 taskId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          taskid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_UploadResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_UploadResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes fileHandle = 1;
  if (!this->_internal_filehandle().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_filehandle(), target);
  }

  // uint64 taskId = 2;
  if (this->_internal_taskid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_taskid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_UploadResult)
  return target;
}

size_t PB_UploadResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_UploadResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes fileHandle = 1;
  if (!this->_internal_filehandle().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_filehandle());
  }

  // uint64 taskId = 2;
  if (this->_internal_taskid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_taskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_UploadResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_UploadResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_UploadResult::GetClassData() const { return &_class_data_; }

void PB_UploadResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_UploadResult *>(to)->MergeFrom(
      static_cast<const PB_UploadResult &>(from));
}


void PB_UploadResult::MergeFrom(const PB_UploadResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_UploadResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_filehandle().empty()) {
    _internal_set_filehandle(from._internal_filehandle());
  }
  if (from._internal_taskid() != 0) {
    _internal_set_taskid(from._internal_taskid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_UploadResult::CopyFrom(const PB_UploadResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_UploadResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_UploadResult::IsInitialized() const {
  return true;
}

void PB_UploadResult::InternalSwap(PB_UploadResult* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &filehandle_, lhs_arena,
      &other->filehandle_, rhs_arena
  );
  swap(taskid_, other->taskid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_UploadResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[11]);
}

// ===================================================================

class PB_HUset_RelOverSpdWarnOffset::_Internal {
 public:
};

PB_HUset_RelOverSpdWarnOffset::PB_HUset_RelOverSpdWarnOffset(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_RelOverSpdWarnOffset)
}
PB_HUset_RelOverSpdWarnOffset::PB_HUset_RelOverSpdWarnOffset(const PB_HUset_RelOverSpdWarnOffset& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_reloverspdwarnoffset_ = from.hu_reloverspdwarnoffset_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_RelOverSpdWarnOffset)
}

inline void PB_HUset_RelOverSpdWarnOffset::SharedCtor() {
hu_reloverspdwarnoffset_ = 0u;
}

PB_HUset_RelOverSpdWarnOffset::~PB_HUset_RelOverSpdWarnOffset() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_RelOverSpdWarnOffset)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_RelOverSpdWarnOffset::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_RelOverSpdWarnOffset::ArenaDtor(void* object) {
  PB_HUset_RelOverSpdWarnOffset* _this = reinterpret_cast< PB_HUset_RelOverSpdWarnOffset* >(object);
  (void)_this;
}
void PB_HUset_RelOverSpdWarnOffset::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_RelOverSpdWarnOffset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_RelOverSpdWarnOffset::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_RelOverSpdWarnOffset)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_reloverspdwarnoffset_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_RelOverSpdWarnOffset::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_RelOverSpdWarnOffset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_reloverspdwarnoffset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_RelOverSpdWarnOffset::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_RelOverSpdWarnOffset)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_RelOverSpdWarnOffset = 1;
  if (this->_internal_hu_reloverspdwarnoffset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_reloverspdwarnoffset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_RelOverSpdWarnOffset)
  return target;
}

size_t PB_HUset_RelOverSpdWarnOffset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_RelOverSpdWarnOffset)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_RelOverSpdWarnOffset = 1;
  if (this->_internal_hu_reloverspdwarnoffset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_reloverspdwarnoffset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_RelOverSpdWarnOffset::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_RelOverSpdWarnOffset::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_RelOverSpdWarnOffset::GetClassData() const { return &_class_data_; }

void PB_HUset_RelOverSpdWarnOffset::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_RelOverSpdWarnOffset *>(to)->MergeFrom(
      static_cast<const PB_HUset_RelOverSpdWarnOffset &>(from));
}


void PB_HUset_RelOverSpdWarnOffset::MergeFrom(const PB_HUset_RelOverSpdWarnOffset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_RelOverSpdWarnOffset)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_reloverspdwarnoffset() != 0) {
    _internal_set_hu_reloverspdwarnoffset(from._internal_hu_reloverspdwarnoffset());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_RelOverSpdWarnOffset::CopyFrom(const PB_HUset_RelOverSpdWarnOffset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_RelOverSpdWarnOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_RelOverSpdWarnOffset::IsInitialized() const {
  return true;
}

void PB_HUset_RelOverSpdWarnOffset::InternalSwap(PB_HUset_RelOverSpdWarnOffset* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_reloverspdwarnoffset_, other->hu_reloverspdwarnoffset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_RelOverSpdWarnOffset::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[12]);
}

// ===================================================================

class PB_EleAirSuspHighModCHASts::_Internal {
 public:
};

PB_EleAirSuspHighModCHASts::PB_EleAirSuspHighModCHASts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EleAirSuspHighModCHASts)
}
PB_EleAirSuspHighModCHASts::PB_EleAirSuspHighModCHASts(const PB_EleAirSuspHighModCHASts& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  vmcactecasmodechasts_ = from.vmcactecasmodechasts_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EleAirSuspHighModCHASts)
}

inline void PB_EleAirSuspHighModCHASts::SharedCtor() {
vmcactecasmodechasts_ = 0u;
}

PB_EleAirSuspHighModCHASts::~PB_EleAirSuspHighModCHASts() {
  // @@protoc_insertion_point(destructor:Soa.PB_EleAirSuspHighModCHASts)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EleAirSuspHighModCHASts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EleAirSuspHighModCHASts::ArenaDtor(void* object) {
  PB_EleAirSuspHighModCHASts* _this = reinterpret_cast< PB_EleAirSuspHighModCHASts* >(object);
  (void)_this;
}
void PB_EleAirSuspHighModCHASts::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EleAirSuspHighModCHASts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EleAirSuspHighModCHASts::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EleAirSuspHighModCHASts)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vmcactecasmodechasts_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EleAirSuspHighModCHASts::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 VMCActEcasModeCHASts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          vmcactecasmodechasts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EleAirSuspHighModCHASts::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EleAirSuspHighModCHASts)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 VMCActEcasModeCHASts = 1;
  if (this->_internal_vmcactecasmodechasts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_vmcactecasmodechasts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EleAirSuspHighModCHASts)
  return target;
}

size_t PB_EleAirSuspHighModCHASts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EleAirSuspHighModCHASts)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 VMCActEcasModeCHASts = 1;
  if (this->_internal_vmcactecasmodechasts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vmcactecasmodechasts());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EleAirSuspHighModCHASts::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EleAirSuspHighModCHASts::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EleAirSuspHighModCHASts::GetClassData() const { return &_class_data_; }

void PB_EleAirSuspHighModCHASts::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EleAirSuspHighModCHASts *>(to)->MergeFrom(
      static_cast<const PB_EleAirSuspHighModCHASts &>(from));
}


void PB_EleAirSuspHighModCHASts::MergeFrom(const PB_EleAirSuspHighModCHASts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EleAirSuspHighModCHASts)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_vmcactecasmodechasts() != 0) {
    _internal_set_vmcactecasmodechasts(from._internal_vmcactecasmodechasts());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EleAirSuspHighModCHASts::CopyFrom(const PB_EleAirSuspHighModCHASts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EleAirSuspHighModCHASts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EleAirSuspHighModCHASts::IsInitialized() const {
  return true;
}

void PB_EleAirSuspHighModCHASts::InternalSwap(PB_EleAirSuspHighModCHASts* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(vmcactecasmodechasts_, other->vmcactecasmodechasts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EleAirSuspHighModCHASts::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[13]);
}

// ===================================================================

class PB_Destination::_Internal {
 public:
};

PB_Destination::PB_Destination(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Destination)
}
PB_Destination::PB_Destination(const PB_Destination& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lng_, &from.lng_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&lng_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Destination)
}

inline void PB_Destination::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lng_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&lng_)) + sizeof(type_));
}

PB_Destination::~PB_Destination() {
  // @@protoc_insertion_point(destructor:Soa.PB_Destination)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Destination::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_Destination::ArenaDtor(void* object) {
  PB_Destination* _this = reinterpret_cast< PB_Destination* >(object);
  (void)_this;
}
void PB_Destination::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Destination::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Destination::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Destination)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lng_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&lng_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Destination::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double lng = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          lng_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double lat = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 25)) {
          lat_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Destination::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Destination)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_type(), target);
  }

  // double lng = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lng = this->_internal_lng();
  uint64_t raw_lng;
  memcpy(&raw_lng, &tmp_lng, sizeof(tmp_lng));
  if (raw_lng != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_lng(), target);
  }

  // double lat = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_lat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Destination)
  return target;
}

size_t PB_Destination::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Destination)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double lng = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lng = this->_internal_lng();
  uint64_t raw_lng;
  memcpy(&raw_lng, &tmp_lng, sizeof(tmp_lng));
  if (raw_lng != 0) {
    total_size += 1 + 8;
  }

  // double lat = 3;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lat = this->_internal_lat();
  uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    total_size += 1 + 8;
  }

  // int32 type = 1;
  if (this->_internal_type() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Destination::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Destination::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Destination::GetClassData() const { return &_class_data_; }

void PB_Destination::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Destination *>(to)->MergeFrom(
      static_cast<const PB_Destination &>(from));
}


void PB_Destination::MergeFrom(const PB_Destination& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Destination)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lng = from._internal_lng();
  uint64_t raw_lng;
  memcpy(&raw_lng, &tmp_lng, sizeof(tmp_lng));
  if (raw_lng != 0) {
    _internal_set_lng(from._internal_lng());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_lat = from._internal_lat();
  uint64_t raw_lat;
  memcpy(&raw_lat, &tmp_lat, sizeof(tmp_lat));
  if (raw_lat != 0) {
    _internal_set_lat(from._internal_lat());
  }
  if (from._internal_type() != 0) {
    _internal_set_type(from._internal_type());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Destination::CopyFrom(const PB_Destination& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Destination)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Destination::IsInitialized() const {
  return true;
}

void PB_Destination::InternalSwap(PB_Destination* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_Destination, type_)
      + sizeof(PB_Destination::type_)
      - PROTOBUF_FIELD_OFFSET(PB_Destination, lng_)>(
          reinterpret_cast<char*>(&lng_),
          reinterpret_cast<char*>(&other->lng_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Destination::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[14]);
}

// ===================================================================

class PB_CampWarningSet::_Internal {
 public:
};

PB_CampWarningSet::PB_CampWarningSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_CampWarningSet)
}
PB_CampWarningSet::PB_CampWarningSet(const PB_CampWarningSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&campwarningsettype_, &from.campwarningsettype_,
    static_cast<size_t>(reinterpret_cast<char*>(&campwarningsetphone_) -
    reinterpret_cast<char*>(&campwarningsettype_)) + sizeof(campwarningsetphone_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_CampWarningSet)
}

inline void PB_CampWarningSet::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&campwarningsettype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&campwarningsetphone_) -
    reinterpret_cast<char*>(&campwarningsettype_)) + sizeof(campwarningsetphone_));
}

PB_CampWarningSet::~PB_CampWarningSet() {
  // @@protoc_insertion_point(destructor:Soa.PB_CampWarningSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_CampWarningSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_CampWarningSet::ArenaDtor(void* object) {
  PB_CampWarningSet* _this = reinterpret_cast< PB_CampWarningSet* >(object);
  (void)_this;
}
void PB_CampWarningSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_CampWarningSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_CampWarningSet::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_CampWarningSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&campwarningsettype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&campwarningsetphone_) -
      reinterpret_cast<char*>(&campwarningsettype_)) + sizeof(campwarningsetphone_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_CampWarningSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 CampWarningSetType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          campwarningsettype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CampWarningSetSwitch = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          campwarningsetswitch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CampWarningSetHonk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          campwarningsethonk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CampWarningSetLight = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          campwarningsetlight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CampWarningSetPhone = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          campwarningsetphone_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_CampWarningSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_CampWarningSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 CampWarningSetType = 1;
  if (this->_internal_campwarningsettype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_campwarningsettype(), target);
  }

  // uint32 CampWarningSetSwitch = 2;
  if (this->_internal_campwarningsetswitch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_campwarningsetswitch(), target);
  }

  // uint32 CampWarningSetHonk = 3;
  if (this->_internal_campwarningsethonk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_campwarningsethonk(), target);
  }

  // uint32 CampWarningSetLight = 4;
  if (this->_internal_campwarningsetlight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_campwarningsetlight(), target);
  }

  // uint32 CampWarningSetPhone = 5;
  if (this->_internal_campwarningsetphone() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_campwarningsetphone(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_CampWarningSet)
  return target;
}

size_t PB_CampWarningSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_CampWarningSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 CampWarningSetType = 1;
  if (this->_internal_campwarningsettype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_campwarningsettype());
  }

  // uint32 CampWarningSetSwitch = 2;
  if (this->_internal_campwarningsetswitch() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_campwarningsetswitch());
  }

  // uint32 CampWarningSetHonk = 3;
  if (this->_internal_campwarningsethonk() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_campwarningsethonk());
  }

  // uint32 CampWarningSetLight = 4;
  if (this->_internal_campwarningsetlight() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_campwarningsetlight());
  }

  // uint32 CampWarningSetPhone = 5;
  if (this->_internal_campwarningsetphone() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_campwarningsetphone());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_CampWarningSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_CampWarningSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_CampWarningSet::GetClassData() const { return &_class_data_; }

void PB_CampWarningSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_CampWarningSet *>(to)->MergeFrom(
      static_cast<const PB_CampWarningSet &>(from));
}


void PB_CampWarningSet::MergeFrom(const PB_CampWarningSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_CampWarningSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_campwarningsettype() != 0) {
    _internal_set_campwarningsettype(from._internal_campwarningsettype());
  }
  if (from._internal_campwarningsetswitch() != 0) {
    _internal_set_campwarningsetswitch(from._internal_campwarningsetswitch());
  }
  if (from._internal_campwarningsethonk() != 0) {
    _internal_set_campwarningsethonk(from._internal_campwarningsethonk());
  }
  if (from._internal_campwarningsetlight() != 0) {
    _internal_set_campwarningsetlight(from._internal_campwarningsetlight());
  }
  if (from._internal_campwarningsetphone() != 0) {
    _internal_set_campwarningsetphone(from._internal_campwarningsetphone());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_CampWarningSet::CopyFrom(const PB_CampWarningSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_CampWarningSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CampWarningSet::IsInitialized() const {
  return true;
}

void PB_CampWarningSet::InternalSwap(PB_CampWarningSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_CampWarningSet, campwarningsetphone_)
      + sizeof(PB_CampWarningSet::campwarningsetphone_)
      - PROTOBUF_FIELD_OFFSET(PB_CampWarningSet, campwarningsettype_)>(
          reinterpret_cast<char*>(&campwarningsettype_),
          reinterpret_cast<char*>(&other->campwarningsettype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_CampWarningSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[15]);
}

// ===================================================================

class PB_HUset_LaneChangeReq::_Internal {
 public:
};

PB_HUset_LaneChangeReq::PB_HUset_LaneChangeReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_LaneChangeReq)
}
PB_HUset_LaneChangeReq::PB_HUset_LaneChangeReq(const PB_HUset_LaneChangeReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_lanechangereq_ = from.hu_lanechangereq_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_LaneChangeReq)
}

inline void PB_HUset_LaneChangeReq::SharedCtor() {
hu_lanechangereq_ = 0u;
}

PB_HUset_LaneChangeReq::~PB_HUset_LaneChangeReq() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_LaneChangeReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_LaneChangeReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_LaneChangeReq::ArenaDtor(void* object) {
  PB_HUset_LaneChangeReq* _this = reinterpret_cast< PB_HUset_LaneChangeReq* >(object);
  (void)_this;
}
void PB_HUset_LaneChangeReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_LaneChangeReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_LaneChangeReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_LaneChangeReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_lanechangereq_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_LaneChangeReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_LaneChangeReq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_lanechangereq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_LaneChangeReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_LaneChangeReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_LaneChangeReq = 1;
  if (this->_internal_hu_lanechangereq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_lanechangereq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_LaneChangeReq)
  return target;
}

size_t PB_HUset_LaneChangeReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_LaneChangeReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_LaneChangeReq = 1;
  if (this->_internal_hu_lanechangereq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_lanechangereq());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_LaneChangeReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_LaneChangeReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_LaneChangeReq::GetClassData() const { return &_class_data_; }

void PB_HUset_LaneChangeReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_LaneChangeReq *>(to)->MergeFrom(
      static_cast<const PB_HUset_LaneChangeReq &>(from));
}


void PB_HUset_LaneChangeReq::MergeFrom(const PB_HUset_LaneChangeReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_LaneChangeReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_lanechangereq() != 0) {
    _internal_set_hu_lanechangereq(from._internal_hu_lanechangereq());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_LaneChangeReq::CopyFrom(const PB_HUset_LaneChangeReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_LaneChangeReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_LaneChangeReq::IsInitialized() const {
  return true;
}

void PB_HUset_LaneChangeReq::InternalSwap(PB_HUset_LaneChangeReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_lanechangereq_, other->hu_lanechangereq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_LaneChangeReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[16]);
}

// ===================================================================

class PB_TailGateSysSwFltSt_Struct::_Internal {
 public:
};

PB_TailGateSysSwFltSt_Struct::PB_TailGateSysSwFltSt_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  tailgatesysswfltst_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TailGateSysSwFltSt_Struct)
}
PB_TailGateSysSwFltSt_Struct::PB_TailGateSysSwFltSt_Struct(const PB_TailGateSysSwFltSt_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tailgatesysswfltst_(from.tailgatesysswfltst_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TailGateSysSwFltSt_Struct)
}

inline void PB_TailGateSysSwFltSt_Struct::SharedCtor() {
}

PB_TailGateSysSwFltSt_Struct::~PB_TailGateSysSwFltSt_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_TailGateSysSwFltSt_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TailGateSysSwFltSt_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TailGateSysSwFltSt_Struct::ArenaDtor(void* object) {
  PB_TailGateSysSwFltSt_Struct* _this = reinterpret_cast< PB_TailGateSysSwFltSt_Struct* >(object);
  (void)_this;
}
void PB_TailGateSysSwFltSt_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TailGateSysSwFltSt_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TailGateSysSwFltSt_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TailGateSysSwFltSt_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tailgatesysswfltst_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TailGateSysSwFltSt_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 TailGateSysSwFltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_tailgatesysswfltst(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_tailgatesysswfltst(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TailGateSysSwFltSt_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TailGateSysSwFltSt_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 TailGateSysSwFltSt = 1;
  {
    int byte_size = _tailgatesysswfltst_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_tailgatesysswfltst(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TailGateSysSwFltSt_Struct)
  return target;
}

size_t PB_TailGateSysSwFltSt_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TailGateSysSwFltSt_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 TailGateSysSwFltSt = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->tailgatesysswfltst_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _tailgatesysswfltst_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TailGateSysSwFltSt_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TailGateSysSwFltSt_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TailGateSysSwFltSt_Struct::GetClassData() const { return &_class_data_; }

void PB_TailGateSysSwFltSt_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TailGateSysSwFltSt_Struct *>(to)->MergeFrom(
      static_cast<const PB_TailGateSysSwFltSt_Struct &>(from));
}


void PB_TailGateSysSwFltSt_Struct::MergeFrom(const PB_TailGateSysSwFltSt_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TailGateSysSwFltSt_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  tailgatesysswfltst_.MergeFrom(from.tailgatesysswfltst_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TailGateSysSwFltSt_Struct::CopyFrom(const PB_TailGateSysSwFltSt_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TailGateSysSwFltSt_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TailGateSysSwFltSt_Struct::IsInitialized() const {
  return true;
}

void PB_TailGateSysSwFltSt_Struct::InternalSwap(PB_TailGateSysSwFltSt_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  tailgatesysswfltst_.InternalSwap(&other->tailgatesysswfltst_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TailGateSysSwFltSt_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[17]);
}

// ===================================================================

class PB_HUset_LASWarningModeSelection::_Internal {
 public:
};

PB_HUset_LASWarningModeSelection::PB_HUset_LASWarningModeSelection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_LASWarningModeSelection)
}
PB_HUset_LASWarningModeSelection::PB_HUset_LASWarningModeSelection(const PB_HUset_LASWarningModeSelection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_laswarningmodeselection_ = from.hu_laswarningmodeselection_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_LASWarningModeSelection)
}

inline void PB_HUset_LASWarningModeSelection::SharedCtor() {
hu_laswarningmodeselection_ = 0u;
}

PB_HUset_LASWarningModeSelection::~PB_HUset_LASWarningModeSelection() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_LASWarningModeSelection)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_LASWarningModeSelection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_LASWarningModeSelection::ArenaDtor(void* object) {
  PB_HUset_LASWarningModeSelection* _this = reinterpret_cast< PB_HUset_LASWarningModeSelection* >(object);
  (void)_this;
}
void PB_HUset_LASWarningModeSelection::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_LASWarningModeSelection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_LASWarningModeSelection::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_LASWarningModeSelection)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_laswarningmodeselection_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_LASWarningModeSelection::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_LASWarningModeSelection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_laswarningmodeselection_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_LASWarningModeSelection::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_LASWarningModeSelection)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_LASWarningModeSelection = 1;
  if (this->_internal_hu_laswarningmodeselection() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_laswarningmodeselection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_LASWarningModeSelection)
  return target;
}

size_t PB_HUset_LASWarningModeSelection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_LASWarningModeSelection)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_LASWarningModeSelection = 1;
  if (this->_internal_hu_laswarningmodeselection() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_laswarningmodeselection());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_LASWarningModeSelection::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_LASWarningModeSelection::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_LASWarningModeSelection::GetClassData() const { return &_class_data_; }

void PB_HUset_LASWarningModeSelection::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_LASWarningModeSelection *>(to)->MergeFrom(
      static_cast<const PB_HUset_LASWarningModeSelection &>(from));
}


void PB_HUset_LASWarningModeSelection::MergeFrom(const PB_HUset_LASWarningModeSelection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_LASWarningModeSelection)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_laswarningmodeselection() != 0) {
    _internal_set_hu_laswarningmodeselection(from._internal_hu_laswarningmodeselection());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_LASWarningModeSelection::CopyFrom(const PB_HUset_LASWarningModeSelection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_LASWarningModeSelection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_LASWarningModeSelection::IsInitialized() const {
  return true;
}

void PB_HUset_LASWarningModeSelection::InternalSwap(PB_HUset_LASWarningModeSelection* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_laswarningmodeselection_, other->hu_laswarningmodeselection_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_LASWarningModeSelection::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[18]);
}

// ===================================================================

class PB_EleAirSuspIntenModSts::_Internal {
 public:
};

PB_EleAirSuspIntenModSts::PB_EleAirSuspIntenModSts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EleAirSuspIntenModSts)
}
PB_EleAirSuspIntenModSts::PB_EleAirSuspIntenModSts(const PB_EleAirSuspIntenModSts& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  suspintenmodsts_ = from.suspintenmodsts_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EleAirSuspIntenModSts)
}

inline void PB_EleAirSuspIntenModSts::SharedCtor() {
suspintenmodsts_ = 0u;
}

PB_EleAirSuspIntenModSts::~PB_EleAirSuspIntenModSts() {
  // @@protoc_insertion_point(destructor:Soa.PB_EleAirSuspIntenModSts)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EleAirSuspIntenModSts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EleAirSuspIntenModSts::ArenaDtor(void* object) {
  PB_EleAirSuspIntenModSts* _this = reinterpret_cast< PB_EleAirSuspIntenModSts* >(object);
  (void)_this;
}
void PB_EleAirSuspIntenModSts::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EleAirSuspIntenModSts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EleAirSuspIntenModSts::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EleAirSuspIntenModSts)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  suspintenmodsts_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EleAirSuspIntenModSts::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 SuspIntenModSts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          suspintenmodsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EleAirSuspIntenModSts::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EleAirSuspIntenModSts)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SuspIntenModSts = 1;
  if (this->_internal_suspintenmodsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_suspintenmodsts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EleAirSuspIntenModSts)
  return target;
}

size_t PB_EleAirSuspIntenModSts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EleAirSuspIntenModSts)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 SuspIntenModSts = 1;
  if (this->_internal_suspintenmodsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_suspintenmodsts());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EleAirSuspIntenModSts::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EleAirSuspIntenModSts::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EleAirSuspIntenModSts::GetClassData() const { return &_class_data_; }

void PB_EleAirSuspIntenModSts::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EleAirSuspIntenModSts *>(to)->MergeFrom(
      static_cast<const PB_EleAirSuspIntenModSts &>(from));
}


void PB_EleAirSuspIntenModSts::MergeFrom(const PB_EleAirSuspIntenModSts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EleAirSuspIntenModSts)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_suspintenmodsts() != 0) {
    _internal_set_suspintenmodsts(from._internal_suspintenmodsts());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EleAirSuspIntenModSts::CopyFrom(const PB_EleAirSuspIntenModSts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EleAirSuspIntenModSts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EleAirSuspIntenModSts::IsInitialized() const {
  return true;
}

void PB_EleAirSuspIntenModSts::InternalSwap(PB_EleAirSuspIntenModSts* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(suspintenmodsts_, other->suspintenmodsts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EleAirSuspIntenModSts::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[19]);
}

// ===================================================================

class PB_C2_ADASStorageTimes::_Internal {
 public:
};

PB_C2_ADASStorageTimes::PB_C2_ADASStorageTimes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_C2_ADASStorageTimes)
}
PB_C2_ADASStorageTimes::PB_C2_ADASStorageTimes(const PB_C2_ADASStorageTimes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&stospeedadjust_, &from.stospeedadjust_,
    static_cast<size_t>(reinterpret_cast<char*>(&reserved7_) -
    reinterpret_cast<char*>(&stospeedadjust_)) + sizeof(reserved7_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_C2_ADASStorageTimes)
}

inline void PB_C2_ADASStorageTimes::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&stospeedadjust_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&reserved7_) -
    reinterpret_cast<char*>(&stospeedadjust_)) + sizeof(reserved7_));
}

PB_C2_ADASStorageTimes::~PB_C2_ADASStorageTimes() {
  // @@protoc_insertion_point(destructor:Soa.PB_C2_ADASStorageTimes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_C2_ADASStorageTimes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_C2_ADASStorageTimes::ArenaDtor(void* object) {
  PB_C2_ADASStorageTimes* _this = reinterpret_cast< PB_C2_ADASStorageTimes* >(object);
  (void)_this;
}
void PB_C2_ADASStorageTimes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_C2_ADASStorageTimes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_C2_ADASStorageTimes::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_C2_ADASStorageTimes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&stospeedadjust_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserved7_) -
      reinterpret_cast<char*>(&stospeedadjust_)) + sizeof(reserved7_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_C2_ADASStorageTimes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 StoSpeedAdjust = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          stospeedadjust_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoTimeIntervalAdjust = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          stotimeintervaladjust_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoTargetDecelerate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          stotargetdecelerate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoSpeedUptoLimitation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          stospeeduptolimitation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoSpeedDownLimitation = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          stospeeddownlimitation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoSetCruiseSpeed = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          stosetcruisespeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoLDC = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          stoldc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoLDCDes = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          stoldcdes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoUDLCLeft = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          stoudlcleft_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoUDLCRight = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          stoudlcright_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoUDLCDes = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          stoudlcdes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoObsAvoid = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          stoobsavoid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoObsAvoidDes = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          stoobsavoiddes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoLaneChange = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          stolanechange_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoLaneChangeDes = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          stolanechangedes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoIntersectionAssist = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          stointersectionassist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ntersectionAssistDes = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          ntersectionassistdes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoRampAssist = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          storampassist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoRampAssistDes = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          storampassistdes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoLaneChangeFre = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          stolanechangefre_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoSmartSpeedLimitation = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          stosmartspeedlimitation_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoACCRec = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          stoaccrec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoiACCRec = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          stoiaccrec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoNIDRec = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          stonidrec_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoACCtoIACC = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          stoacctoiacc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoACCtoNID = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          stoacctonid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoIACCtoNID = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 216)) {
          stoiacctonid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoNIDtoIACC = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          stonidtoiacc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoNIDtoACC = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 232)) {
          stonidtoacc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoIACCtoACC = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          stoiacctoacc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoLongTakeOver = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          stolongtakeover_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoLatTakeOver = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          stolattakeover_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoEyesOff = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          stoeyesoff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoHandsOff = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          stohandsoff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoSilentState = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          stosilentstate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoSilentStateClear = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          stosilentstateclear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoLDW = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          stoldw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoLCA = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          stolca_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoStartReminder = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          stostartreminder_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoFCW = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          stofcw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoLDWpUNISH = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          stoldwpunish_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoOverSpeed = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          stooverspeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 StoDriveMode = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          stodrivemode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved1 = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          reserved1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved2 = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          reserved2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved3 = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          reserved3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved4 = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          reserved4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved5 = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          reserved5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved6 = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          reserved6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved7 = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          reserved7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_C2_ADASStorageTimes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_C2_ADASStorageTimes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 StoSpeedAdjust = 1;
  if (this->_internal_stospeedadjust() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_stospeedadjust(), target);
  }

  // uint32 StoTimeIntervalAdjust = 2;
  if (this->_internal_stotimeintervaladjust() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_stotimeintervaladjust(), target);
  }

  // uint32 StoTargetDecelerate = 3;
  if (this->_internal_stotargetdecelerate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_stotargetdecelerate(), target);
  }

  // uint32 StoSpeedUptoLimitation = 4;
  if (this->_internal_stospeeduptolimitation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_stospeeduptolimitation(), target);
  }

  // uint32 StoSpeedDownLimitation = 5;
  if (this->_internal_stospeeddownlimitation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_stospeeddownlimitation(), target);
  }

  // uint32 StoSetCruiseSpeed = 6;
  if (this->_internal_stosetcruisespeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_stosetcruisespeed(), target);
  }

  // uint32 StoLDC = 7;
  if (this->_internal_stoldc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_stoldc(), target);
  }

  // uint32 StoLDCDes = 8;
  if (this->_internal_stoldcdes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_stoldcdes(), target);
  }

  // uint32 StoUDLCLeft = 9;
  if (this->_internal_stoudlcleft() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_stoudlcleft(), target);
  }

  // uint32 StoUDLCRight = 10;
  if (this->_internal_stoudlcright() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_stoudlcright(), target);
  }

  // uint32 StoUDLCDes = 11;
  if (this->_internal_stoudlcdes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_stoudlcdes(), target);
  }

  // uint32 StoObsAvoid = 12;
  if (this->_internal_stoobsavoid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_stoobsavoid(), target);
  }

  // uint32 StoObsAvoidDes = 13;
  if (this->_internal_stoobsavoiddes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_stoobsavoiddes(), target);
  }

  // uint32 StoLaneChange = 14;
  if (this->_internal_stolanechange() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_stolanechange(), target);
  }

  // uint32 StoLaneChangeDes = 15;
  if (this->_internal_stolanechangedes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_stolanechangedes(), target);
  }

  // uint32 StoIntersectionAssist = 16;
  if (this->_internal_stointersectionassist() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_stointersectionassist(), target);
  }

  // uint32 ntersectionAssistDes = 17;
  if (this->_internal_ntersectionassistdes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_ntersectionassistdes(), target);
  }

  // uint32 StoRampAssist = 18;
  if (this->_internal_storampassist() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_storampassist(), target);
  }

  // uint32 StoRampAssistDes = 19;
  if (this->_internal_storampassistdes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(19, this->_internal_storampassistdes(), target);
  }

  // uint32 StoLaneChangeFre = 20;
  if (this->_internal_stolanechangefre() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_stolanechangefre(), target);
  }

  // uint32 StoSmartSpeedLimitation = 21;
  if (this->_internal_stosmartspeedlimitation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_stosmartspeedlimitation(), target);
  }

  // uint32 StoACCRec = 22;
  if (this->_internal_stoaccrec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_stoaccrec(), target);
  }

  // uint32 StoiACCRec = 23;
  if (this->_internal_stoiaccrec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(23, this->_internal_stoiaccrec(), target);
  }

  // uint32 StoNIDRec = 24;
  if (this->_internal_stonidrec() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(24, this->_internal_stonidrec(), target);
  }

  // uint32 StoACCtoIACC = 25;
  if (this->_internal_stoacctoiacc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(25, this->_internal_stoacctoiacc(), target);
  }

  // uint32 StoACCtoNID = 26;
  if (this->_internal_stoacctonid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(26, this->_internal_stoacctonid(), target);
  }

  // uint32 StoIACCtoNID = 27;
  if (this->_internal_stoiacctonid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(27, this->_internal_stoiacctonid(), target);
  }

  // uint32 StoNIDtoIACC = 28;
  if (this->_internal_stonidtoiacc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(28, this->_internal_stonidtoiacc(), target);
  }

  // uint32 StoNIDtoACC = 29;
  if (this->_internal_stonidtoacc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(29, this->_internal_stonidtoacc(), target);
  }

  // uint32 StoIACCtoACC = 30;
  if (this->_internal_stoiacctoacc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(30, this->_internal_stoiacctoacc(), target);
  }

  // uint32 StoLongTakeOver = 31;
  if (this->_internal_stolongtakeover() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(31, this->_internal_stolongtakeover(), target);
  }

  // uint32 StoLatTakeOver = 32;
  if (this->_internal_stolattakeover() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(32, this->_internal_stolattakeover(), target);
  }

  // uint32 StoEyesOff = 33;
  if (this->_internal_stoeyesoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(33, this->_internal_stoeyesoff(), target);
  }

  // uint32 StoHandsOff = 34;
  if (this->_internal_stohandsoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(34, this->_internal_stohandsoff(), target);
  }

  // uint32 StoSilentState = 35;
  if (this->_internal_stosilentstate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(35, this->_internal_stosilentstate(), target);
  }

  // uint32 StoSilentStateClear = 36;
  if (this->_internal_stosilentstateclear() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(36, this->_internal_stosilentstateclear(), target);
  }

  // uint32 StoLDW = 37;
  if (this->_internal_stoldw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(37, this->_internal_stoldw(), target);
  }

  // uint32 StoLCA = 38;
  if (this->_internal_stolca() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(38, this->_internal_stolca(), target);
  }

  // uint32 StoStartReminder = 39;
  if (this->_internal_stostartreminder() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(39, this->_internal_stostartreminder(), target);
  }

  // uint32 StoFCW = 40;
  if (this->_internal_stofcw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(40, this->_internal_stofcw(), target);
  }

  // uint32 StoLDWpUNISH = 41;
  if (this->_internal_stoldwpunish() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(41, this->_internal_stoldwpunish(), target);
  }

  // uint32 StoOverSpeed = 42;
  if (this->_internal_stooverspeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(42, this->_internal_stooverspeed(), target);
  }

  // uint32 StoDriveMode = 43;
  if (this->_internal_stodrivemode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(43, this->_internal_stodrivemode(), target);
  }

  // uint32 reserved1 = 44;
  if (this->_internal_reserved1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(44, this->_internal_reserved1(), target);
  }

  // uint32 reserved2 = 45;
  if (this->_internal_reserved2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(45, this->_internal_reserved2(), target);
  }

  // uint32 reserved3 = 46;
  if (this->_internal_reserved3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(46, this->_internal_reserved3(), target);
  }

  // uint32 reserved4 = 47;
  if (this->_internal_reserved4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(47, this->_internal_reserved4(), target);
  }

  // uint32 reserved5 = 48;
  if (this->_internal_reserved5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(48, this->_internal_reserved5(), target);
  }

  // uint32 reserved6 = 49;
  if (this->_internal_reserved6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(49, this->_internal_reserved6(), target);
  }

  // uint32 reserved7 = 50;
  if (this->_internal_reserved7() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(50, this->_internal_reserved7(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_C2_ADASStorageTimes)
  return target;
}

size_t PB_C2_ADASStorageTimes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_C2_ADASStorageTimes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 StoSpeedAdjust = 1;
  if (this->_internal_stospeedadjust() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stospeedadjust());
  }

  // uint32 StoTimeIntervalAdjust = 2;
  if (this->_internal_stotimeintervaladjust() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stotimeintervaladjust());
  }

  // uint32 StoTargetDecelerate = 3;
  if (this->_internal_stotargetdecelerate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stotargetdecelerate());
  }

  // uint32 StoSpeedUptoLimitation = 4;
  if (this->_internal_stospeeduptolimitation() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stospeeduptolimitation());
  }

  // uint32 StoSpeedDownLimitation = 5;
  if (this->_internal_stospeeddownlimitation() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stospeeddownlimitation());
  }

  // uint32 StoSetCruiseSpeed = 6;
  if (this->_internal_stosetcruisespeed() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stosetcruisespeed());
  }

  // uint32 StoLDC = 7;
  if (this->_internal_stoldc() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stoldc());
  }

  // uint32 StoLDCDes = 8;
  if (this->_internal_stoldcdes() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stoldcdes());
  }

  // uint32 StoUDLCLeft = 9;
  if (this->_internal_stoudlcleft() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stoudlcleft());
  }

  // uint32 StoUDLCRight = 10;
  if (this->_internal_stoudlcright() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stoudlcright());
  }

  // uint32 StoUDLCDes = 11;
  if (this->_internal_stoudlcdes() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stoudlcdes());
  }

  // uint32 StoObsAvoid = 12;
  if (this->_internal_stoobsavoid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stoobsavoid());
  }

  // uint32 StoObsAvoidDes = 13;
  if (this->_internal_stoobsavoiddes() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stoobsavoiddes());
  }

  // uint32 StoLaneChange = 14;
  if (this->_internal_stolanechange() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stolanechange());
  }

  // uint32 StoLaneChangeDes = 15;
  if (this->_internal_stolanechangedes() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_stolanechangedes());
  }

  // uint32 StoIntersectionAssist = 16;
  if (this->_internal_stointersectionassist() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stointersectionassist());
  }

  // uint32 ntersectionAssistDes = 17;
  if (this->_internal_ntersectionassistdes() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ntersectionassistdes());
  }

  // uint32 StoRampAssist = 18;
  if (this->_internal_storampassist() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_storampassist());
  }

  // uint32 StoRampAssistDes = 19;
  if (this->_internal_storampassistdes() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_storampassistdes());
  }

  // uint32 StoLaneChangeFre = 20;
  if (this->_internal_stolanechangefre() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stolanechangefre());
  }

  // uint32 StoSmartSpeedLimitation = 21;
  if (this->_internal_stosmartspeedlimitation() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stosmartspeedlimitation());
  }

  // uint32 StoACCRec = 22;
  if (this->_internal_stoaccrec() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stoaccrec());
  }

  // uint32 StoiACCRec = 23;
  if (this->_internal_stoiaccrec() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stoiaccrec());
  }

  // uint32 StoNIDRec = 24;
  if (this->_internal_stonidrec() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stonidrec());
  }

  // uint32 StoACCtoIACC = 25;
  if (this->_internal_stoacctoiacc() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stoacctoiacc());
  }

  // uint32 StoACCtoNID = 26;
  if (this->_internal_stoacctonid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stoacctonid());
  }

  // uint32 StoIACCtoNID = 27;
  if (this->_internal_stoiacctonid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stoiacctonid());
  }

  // uint32 StoNIDtoIACC = 28;
  if (this->_internal_stonidtoiacc() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stonidtoiacc());
  }

  // uint32 StoNIDtoACC = 29;
  if (this->_internal_stonidtoacc() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stonidtoacc());
  }

  // uint32 StoIACCtoACC = 30;
  if (this->_internal_stoiacctoacc() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stoiacctoacc());
  }

  // uint32 StoLongTakeOver = 31;
  if (this->_internal_stolongtakeover() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stolongtakeover());
  }

  // uint32 StoLatTakeOver = 32;
  if (this->_internal_stolattakeover() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stolattakeover());
  }

  // uint32 StoEyesOff = 33;
  if (this->_internal_stoeyesoff() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stoeyesoff());
  }

  // uint32 StoHandsOff = 34;
  if (this->_internal_stohandsoff() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stohandsoff());
  }

  // uint32 StoSilentState = 35;
  if (this->_internal_stosilentstate() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stosilentstate());
  }

  // uint32 StoSilentStateClear = 36;
  if (this->_internal_stosilentstateclear() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stosilentstateclear());
  }

  // uint32 StoLDW = 37;
  if (this->_internal_stoldw() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stoldw());
  }

  // uint32 StoLCA = 38;
  if (this->_internal_stolca() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stolca());
  }

  // uint32 StoStartReminder = 39;
  if (this->_internal_stostartreminder() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stostartreminder());
  }

  // uint32 StoFCW = 40;
  if (this->_internal_stofcw() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stofcw());
  }

  // uint32 StoLDWpUNISH = 41;
  if (this->_internal_stoldwpunish() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stoldwpunish());
  }

  // uint32 StoOverSpeed = 42;
  if (this->_internal_stooverspeed() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stooverspeed());
  }

  // uint32 StoDriveMode = 43;
  if (this->_internal_stodrivemode() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_stodrivemode());
  }

  // uint32 reserved1 = 44;
  if (this->_internal_reserved1() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved1());
  }

  // uint32 reserved2 = 45;
  if (this->_internal_reserved2() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved2());
  }

  // uint32 reserved3 = 46;
  if (this->_internal_reserved3() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved3());
  }

  // uint32 reserved4 = 47;
  if (this->_internal_reserved4() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved4());
  }

  // uint32 reserved5 = 48;
  if (this->_internal_reserved5() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved5());
  }

  // uint32 reserved6 = 49;
  if (this->_internal_reserved6() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved6());
  }

  // uint32 reserved7 = 50;
  if (this->_internal_reserved7() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved7());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_C2_ADASStorageTimes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_C2_ADASStorageTimes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_C2_ADASStorageTimes::GetClassData() const { return &_class_data_; }

void PB_C2_ADASStorageTimes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_C2_ADASStorageTimes *>(to)->MergeFrom(
      static_cast<const PB_C2_ADASStorageTimes &>(from));
}


void PB_C2_ADASStorageTimes::MergeFrom(const PB_C2_ADASStorageTimes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_C2_ADASStorageTimes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_stospeedadjust() != 0) {
    _internal_set_stospeedadjust(from._internal_stospeedadjust());
  }
  if (from._internal_stotimeintervaladjust() != 0) {
    _internal_set_stotimeintervaladjust(from._internal_stotimeintervaladjust());
  }
  if (from._internal_stotargetdecelerate() != 0) {
    _internal_set_stotargetdecelerate(from._internal_stotargetdecelerate());
  }
  if (from._internal_stospeeduptolimitation() != 0) {
    _internal_set_stospeeduptolimitation(from._internal_stospeeduptolimitation());
  }
  if (from._internal_stospeeddownlimitation() != 0) {
    _internal_set_stospeeddownlimitation(from._internal_stospeeddownlimitation());
  }
  if (from._internal_stosetcruisespeed() != 0) {
    _internal_set_stosetcruisespeed(from._internal_stosetcruisespeed());
  }
  if (from._internal_stoldc() != 0) {
    _internal_set_stoldc(from._internal_stoldc());
  }
  if (from._internal_stoldcdes() != 0) {
    _internal_set_stoldcdes(from._internal_stoldcdes());
  }
  if (from._internal_stoudlcleft() != 0) {
    _internal_set_stoudlcleft(from._internal_stoudlcleft());
  }
  if (from._internal_stoudlcright() != 0) {
    _internal_set_stoudlcright(from._internal_stoudlcright());
  }
  if (from._internal_stoudlcdes() != 0) {
    _internal_set_stoudlcdes(from._internal_stoudlcdes());
  }
  if (from._internal_stoobsavoid() != 0) {
    _internal_set_stoobsavoid(from._internal_stoobsavoid());
  }
  if (from._internal_stoobsavoiddes() != 0) {
    _internal_set_stoobsavoiddes(from._internal_stoobsavoiddes());
  }
  if (from._internal_stolanechange() != 0) {
    _internal_set_stolanechange(from._internal_stolanechange());
  }
  if (from._internal_stolanechangedes() != 0) {
    _internal_set_stolanechangedes(from._internal_stolanechangedes());
  }
  if (from._internal_stointersectionassist() != 0) {
    _internal_set_stointersectionassist(from._internal_stointersectionassist());
  }
  if (from._internal_ntersectionassistdes() != 0) {
    _internal_set_ntersectionassistdes(from._internal_ntersectionassistdes());
  }
  if (from._internal_storampassist() != 0) {
    _internal_set_storampassist(from._internal_storampassist());
  }
  if (from._internal_storampassistdes() != 0) {
    _internal_set_storampassistdes(from._internal_storampassistdes());
  }
  if (from._internal_stolanechangefre() != 0) {
    _internal_set_stolanechangefre(from._internal_stolanechangefre());
  }
  if (from._internal_stosmartspeedlimitation() != 0) {
    _internal_set_stosmartspeedlimitation(from._internal_stosmartspeedlimitation());
  }
  if (from._internal_stoaccrec() != 0) {
    _internal_set_stoaccrec(from._internal_stoaccrec());
  }
  if (from._internal_stoiaccrec() != 0) {
    _internal_set_stoiaccrec(from._internal_stoiaccrec());
  }
  if (from._internal_stonidrec() != 0) {
    _internal_set_stonidrec(from._internal_stonidrec());
  }
  if (from._internal_stoacctoiacc() != 0) {
    _internal_set_stoacctoiacc(from._internal_stoacctoiacc());
  }
  if (from._internal_stoacctonid() != 0) {
    _internal_set_stoacctonid(from._internal_stoacctonid());
  }
  if (from._internal_stoiacctonid() != 0) {
    _internal_set_stoiacctonid(from._internal_stoiacctonid());
  }
  if (from._internal_stonidtoiacc() != 0) {
    _internal_set_stonidtoiacc(from._internal_stonidtoiacc());
  }
  if (from._internal_stonidtoacc() != 0) {
    _internal_set_stonidtoacc(from._internal_stonidtoacc());
  }
  if (from._internal_stoiacctoacc() != 0) {
    _internal_set_stoiacctoacc(from._internal_stoiacctoacc());
  }
  if (from._internal_stolongtakeover() != 0) {
    _internal_set_stolongtakeover(from._internal_stolongtakeover());
  }
  if (from._internal_stolattakeover() != 0) {
    _internal_set_stolattakeover(from._internal_stolattakeover());
  }
  if (from._internal_stoeyesoff() != 0) {
    _internal_set_stoeyesoff(from._internal_stoeyesoff());
  }
  if (from._internal_stohandsoff() != 0) {
    _internal_set_stohandsoff(from._internal_stohandsoff());
  }
  if (from._internal_stosilentstate() != 0) {
    _internal_set_stosilentstate(from._internal_stosilentstate());
  }
  if (from._internal_stosilentstateclear() != 0) {
    _internal_set_stosilentstateclear(from._internal_stosilentstateclear());
  }
  if (from._internal_stoldw() != 0) {
    _internal_set_stoldw(from._internal_stoldw());
  }
  if (from._internal_stolca() != 0) {
    _internal_set_stolca(from._internal_stolca());
  }
  if (from._internal_stostartreminder() != 0) {
    _internal_set_stostartreminder(from._internal_stostartreminder());
  }
  if (from._internal_stofcw() != 0) {
    _internal_set_stofcw(from._internal_stofcw());
  }
  if (from._internal_stoldwpunish() != 0) {
    _internal_set_stoldwpunish(from._internal_stoldwpunish());
  }
  if (from._internal_stooverspeed() != 0) {
    _internal_set_stooverspeed(from._internal_stooverspeed());
  }
  if (from._internal_stodrivemode() != 0) {
    _internal_set_stodrivemode(from._internal_stodrivemode());
  }
  if (from._internal_reserved1() != 0) {
    _internal_set_reserved1(from._internal_reserved1());
  }
  if (from._internal_reserved2() != 0) {
    _internal_set_reserved2(from._internal_reserved2());
  }
  if (from._internal_reserved3() != 0) {
    _internal_set_reserved3(from._internal_reserved3());
  }
  if (from._internal_reserved4() != 0) {
    _internal_set_reserved4(from._internal_reserved4());
  }
  if (from._internal_reserved5() != 0) {
    _internal_set_reserved5(from._internal_reserved5());
  }
  if (from._internal_reserved6() != 0) {
    _internal_set_reserved6(from._internal_reserved6());
  }
  if (from._internal_reserved7() != 0) {
    _internal_set_reserved7(from._internal_reserved7());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_C2_ADASStorageTimes::CopyFrom(const PB_C2_ADASStorageTimes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_C2_ADASStorageTimes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_C2_ADASStorageTimes::IsInitialized() const {
  return true;
}

void PB_C2_ADASStorageTimes::InternalSwap(PB_C2_ADASStorageTimes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_C2_ADASStorageTimes, reserved7_)
      + sizeof(PB_C2_ADASStorageTimes::reserved7_)
      - PROTOBUF_FIELD_OFFSET(PB_C2_ADASStorageTimes, stospeedadjust_)>(
          reinterpret_cast<char*>(&stospeedadjust_),
          reinterpret_cast<char*>(&other->stospeedadjust_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_C2_ADASStorageTimes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[20]);
}

// ===================================================================

class PB_RequestInfo::_Internal {
 public:
};

PB_RequestInfo::PB_RequestInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_RequestInfo)
}
PB_RequestInfo::PB_RequestInfo(const PB_RequestInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&session_id_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(session_id_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_RequestInfo)
}

inline void PB_RequestInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&request_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&session_id_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(session_id_));
}

PB_RequestInfo::~PB_RequestInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_RequestInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_RequestInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_RequestInfo::ArenaDtor(void* object) {
  PB_RequestInfo* _this = reinterpret_cast< PB_RequestInfo* >(object);
  (void)_this;
}
void PB_RequestInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_RequestInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_RequestInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_RequestInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&session_id_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(session_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_RequestInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Request_ID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Session_ID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_RequestInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_RequestInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Request_ID = 1;
  if (this->_internal_request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // uint32 Session_ID = 2;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_session_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_RequestInfo)
  return target;
}

size_t PB_RequestInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_RequestInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Request_ID = 1;
  if (this->_internal_request_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_request_id());
  }

  // uint32 Session_ID = 2;
  if (this->_internal_session_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_session_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_RequestInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_RequestInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_RequestInfo::GetClassData() const { return &_class_data_; }

void PB_RequestInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_RequestInfo *>(to)->MergeFrom(
      static_cast<const PB_RequestInfo &>(from));
}


void PB_RequestInfo::MergeFrom(const PB_RequestInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_RequestInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
  if (from._internal_session_id() != 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_RequestInfo::CopyFrom(const PB_RequestInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_RequestInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RequestInfo::IsInitialized() const {
  return true;
}

void PB_RequestInfo::InternalSwap(PB_RequestInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_RequestInfo, session_id_)
      + sizeof(PB_RequestInfo::session_id_)
      - PROTOBUF_FIELD_OFFSET(PB_RequestInfo, request_id_)>(
          reinterpret_cast<char*>(&request_id_),
          reinterpret_cast<char*>(&other->request_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_RequestInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[21]);
}

// ===================================================================

class PB_TrigEvt::_Internal {
 public:
};

PB_TrigEvt::PB_TrigEvt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TrigEvt)
}
PB_TrigEvt::PB_TrigEvt(const PB_TrigEvt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&functype_, &from.functype_,
    static_cast<size_t>(reinterpret_cast<char*>(&notitrigevt_) -
    reinterpret_cast<char*>(&functype_)) + sizeof(notitrigevt_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TrigEvt)
}

inline void PB_TrigEvt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&functype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&notitrigevt_) -
    reinterpret_cast<char*>(&functype_)) + sizeof(notitrigevt_));
}

PB_TrigEvt::~PB_TrigEvt() {
  // @@protoc_insertion_point(destructor:Soa.PB_TrigEvt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TrigEvt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TrigEvt::ArenaDtor(void* object) {
  PB_TrigEvt* _this = reinterpret_cast< PB_TrigEvt* >(object);
  (void)_this;
}
void PB_TrigEvt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TrigEvt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TrigEvt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TrigEvt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&functype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&notitrigevt_) -
      reinterpret_cast<char*>(&functype_)) + sizeof(notitrigevt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TrigEvt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FuncType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          functype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NotiTrigEvt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          notitrigevt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TrigEvt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TrigEvt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FuncType = 1;
  if (this->_internal_functype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_functype(), target);
  }

  // uint32 NotiTrigEvt = 2;
  if (this->_internal_notitrigevt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_notitrigevt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TrigEvt)
  return target;
}

size_t PB_TrigEvt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TrigEvt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FuncType = 1;
  if (this->_internal_functype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_functype());
  }

  // uint32 NotiTrigEvt = 2;
  if (this->_internal_notitrigevt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_notitrigevt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TrigEvt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TrigEvt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TrigEvt::GetClassData() const { return &_class_data_; }

void PB_TrigEvt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TrigEvt *>(to)->MergeFrom(
      static_cast<const PB_TrigEvt &>(from));
}


void PB_TrigEvt::MergeFrom(const PB_TrigEvt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TrigEvt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_functype() != 0) {
    _internal_set_functype(from._internal_functype());
  }
  if (from._internal_notitrigevt() != 0) {
    _internal_set_notitrigevt(from._internal_notitrigevt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TrigEvt::CopyFrom(const PB_TrigEvt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TrigEvt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TrigEvt::IsInitialized() const {
  return true;
}

void PB_TrigEvt::InternalSwap(PB_TrigEvt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_TrigEvt, notitrigevt_)
      + sizeof(PB_TrigEvt::notitrigevt_)
      - PROTOBUF_FIELD_OFFSET(PB_TrigEvt, functype_)>(
          reinterpret_cast<char*>(&functype_),
          reinterpret_cast<char*>(&other->functype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TrigEvt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[22]);
}

// ===================================================================

class PB_C2DmdPrmInfo::_Internal {
 public:
};

PB_C2DmdPrmInfo::PB_C2DmdPrmInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_C2DmdPrmInfo)
}
PB_C2DmdPrmInfo::PB_C2DmdPrmInfo(const PB_C2DmdPrmInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&vcufrntwhlacttq_, &from.vcufrntwhlacttq_,
    static_cast<size_t>(reinterpret_cast<char*>(&reserved8_) -
    reinterpret_cast<char*>(&vcufrntwhlacttq_)) + sizeof(reserved8_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_C2DmdPrmInfo)
}

inline void PB_C2DmdPrmInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&vcufrntwhlacttq_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&reserved8_) -
    reinterpret_cast<char*>(&vcufrntwhlacttq_)) + sizeof(reserved8_));
}

PB_C2DmdPrmInfo::~PB_C2DmdPrmInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_C2DmdPrmInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_C2DmdPrmInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_C2DmdPrmInfo::ArenaDtor(void* object) {
  PB_C2DmdPrmInfo* _this = reinterpret_cast< PB_C2DmdPrmInfo* >(object);
  (void)_this;
}
void PB_C2DmdPrmInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_C2DmdPrmInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_C2DmdPrmInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_C2DmdPrmInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&vcufrntwhlacttq_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserved8_) -
      reinterpret_cast<char*>(&vcufrntwhlacttq_)) + sizeof(reserved8_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_C2DmdPrmInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 VcuFrntWhlActTq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          vcufrntwhlacttq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuFrntWhlReqTq = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          vcufrntwhlreqtq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuReWhlActTq = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          vcurewhlacttq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuReWhlReqTq = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          vcurewhlreqtq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuVehWhlReqTq = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          vcuvehwhlreqtq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuPtTqReal = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          vcupttqreal_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuAccrPedlPosn = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          vcuaccrpedlposn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuCalcnAccrPedlPosn = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          vcucalcnaccrpedlposn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuPtTqLimMax = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          vcupttqlimmax_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuPtTqLimMin = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          vcupttqlimmin_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuFrntWhlActTqVld = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          vcufrntwhlacttqvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuFrntWhlReqTqVld = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          vcufrntwhlreqtqvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuReWhlActTqVld = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          vcurewhlacttqvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuReWhlReqTqVld = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          vcurewhlreqtqvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuVehWhlReqTqVld = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          vcuvehwhlreqtqvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuPtTqRealVld = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          vcupttqrealvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuPtTqLimMaxVld = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          vcupttqlimmaxvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuPtTqLimMinVld = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          vcupttqlimminvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuAccrPedlPosnVld = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          vcuaccrpedlposnvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuCalcnAccrPedlPosnVld = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          vcucalcnaccrpedlposnvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VCUAccPedShield = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          vcuaccpedshield_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuOvrdModReq = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          vcuovrdmodreq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuComFltSts = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          vcucomfltsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuPtTqReqAvl = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          vcupttqreqavl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VcuShiftLvlPosn = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          vcushiftlvlposn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VCUGearShiftPositon = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          vcugearshiftpositon_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VCUShiftPostionValid = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 216)) {
          vcushiftpostionvalid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VCUAPAdriverInterruption = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          vcuapadriverinterruption_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VCUAPARequestEnable = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 232)) {
          vcuaparequestenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved1 = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          reserved1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved2 = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          reserved2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved3 = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          reserved3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved4 = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          reserved4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved5 = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          reserved5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved6 = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          reserved6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved7 = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          reserved7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved8 = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          reserved8_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_C2DmdPrmInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_C2DmdPrmInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 VcuFrntWhlActTq = 1;
  if (this->_internal_vcufrntwhlacttq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_vcufrntwhlacttq(), target);
  }

  // uint32 VcuFrntWhlReqTq = 2;
  if (this->_internal_vcufrntwhlreqtq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_vcufrntwhlreqtq(), target);
  }

  // uint32 VcuReWhlActTq = 3;
  if (this->_internal_vcurewhlacttq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_vcurewhlacttq(), target);
  }

  // uint32 VcuReWhlReqTq = 4;
  if (this->_internal_vcurewhlreqtq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_vcurewhlreqtq(), target);
  }

  // uint32 VcuVehWhlReqTq = 5;
  if (this->_internal_vcuvehwhlreqtq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_vcuvehwhlreqtq(), target);
  }

  // uint32 VcuPtTqReal = 6;
  if (this->_internal_vcupttqreal() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_vcupttqreal(), target);
  }

  // uint32 VcuAccrPedlPosn = 7;
  if (this->_internal_vcuaccrpedlposn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_vcuaccrpedlposn(), target);
  }

  // uint32 VcuCalcnAccrPedlPosn = 8;
  if (this->_internal_vcucalcnaccrpedlposn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_vcucalcnaccrpedlposn(), target);
  }

  // uint32 VcuPtTqLimMax = 9;
  if (this->_internal_vcupttqlimmax() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_vcupttqlimmax(), target);
  }

  // uint32 VcuPtTqLimMin = 10;
  if (this->_internal_vcupttqlimmin() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_vcupttqlimmin(), target);
  }

  // uint32 VcuFrntWhlActTqVld = 11;
  if (this->_internal_vcufrntwhlacttqvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_vcufrntwhlacttqvld(), target);
  }

  // uint32 VcuFrntWhlReqTqVld = 12;
  if (this->_internal_vcufrntwhlreqtqvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_vcufrntwhlreqtqvld(), target);
  }

  // uint32 VcuReWhlActTqVld = 13;
  if (this->_internal_vcurewhlacttqvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_vcurewhlacttqvld(), target);
  }

  // uint32 VcuReWhlReqTqVld = 14;
  if (this->_internal_vcurewhlreqtqvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_vcurewhlreqtqvld(), target);
  }

  // uint32 VcuVehWhlReqTqVld = 15;
  if (this->_internal_vcuvehwhlreqtqvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_vcuvehwhlreqtqvld(), target);
  }

  // uint32 VcuPtTqRealVld = 16;
  if (this->_internal_vcupttqrealvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_vcupttqrealvld(), target);
  }

  // uint32 VcuPtTqLimMaxVld = 17;
  if (this->_internal_vcupttqlimmaxvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_vcupttqlimmaxvld(), target);
  }

  // uint32 VcuPtTqLimMinVld = 18;
  if (this->_internal_vcupttqlimminvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_vcupttqlimminvld(), target);
  }

  // uint32 VcuAccrPedlPosnVld = 19;
  if (this->_internal_vcuaccrpedlposnvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(19, this->_internal_vcuaccrpedlposnvld(), target);
  }

  // uint32 VcuCalcnAccrPedlPosnVld = 20;
  if (this->_internal_vcucalcnaccrpedlposnvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_vcucalcnaccrpedlposnvld(), target);
  }

  // uint32 VCUAccPedShield = 21;
  if (this->_internal_vcuaccpedshield() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_vcuaccpedshield(), target);
  }

  // uint32 VcuOvrdModReq = 22;
  if (this->_internal_vcuovrdmodreq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_vcuovrdmodreq(), target);
  }

  // uint32 VcuComFltSts = 23;
  if (this->_internal_vcucomfltsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(23, this->_internal_vcucomfltsts(), target);
  }

  // uint32 VcuPtTqReqAvl = 24;
  if (this->_internal_vcupttqreqavl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(24, this->_internal_vcupttqreqavl(), target);
  }

  // uint32 VcuShiftLvlPosn = 25;
  if (this->_internal_vcushiftlvlposn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(25, this->_internal_vcushiftlvlposn(), target);
  }

  // uint32 VCUGearShiftPositon = 26;
  if (this->_internal_vcugearshiftpositon() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(26, this->_internal_vcugearshiftpositon(), target);
  }

  // uint32 VCUShiftPostionValid = 27;
  if (this->_internal_vcushiftpostionvalid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(27, this->_internal_vcushiftpostionvalid(), target);
  }

  // uint32 VCUAPAdriverInterruption = 28;
  if (this->_internal_vcuapadriverinterruption() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(28, this->_internal_vcuapadriverinterruption(), target);
  }

  // uint32 VCUAPARequestEnable = 29;
  if (this->_internal_vcuaparequestenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(29, this->_internal_vcuaparequestenable(), target);
  }

  // uint32 reserved1 = 30;
  if (this->_internal_reserved1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(30, this->_internal_reserved1(), target);
  }

  // uint32 reserved2 = 31;
  if (this->_internal_reserved2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(31, this->_internal_reserved2(), target);
  }

  // uint32 reserved3 = 32;
  if (this->_internal_reserved3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(32, this->_internal_reserved3(), target);
  }

  // uint32 reserved4 = 33;
  if (this->_internal_reserved4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(33, this->_internal_reserved4(), target);
  }

  // uint32 reserved5 = 34;
  if (this->_internal_reserved5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(34, this->_internal_reserved5(), target);
  }

  // uint32 reserved6 = 35;
  if (this->_internal_reserved6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(35, this->_internal_reserved6(), target);
  }

  // uint32 reserved7 = 36;
  if (this->_internal_reserved7() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(36, this->_internal_reserved7(), target);
  }

  // uint32 reserved8 = 37;
  if (this->_internal_reserved8() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(37, this->_internal_reserved8(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_C2DmdPrmInfo)
  return target;
}

size_t PB_C2DmdPrmInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_C2DmdPrmInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 VcuFrntWhlActTq = 1;
  if (this->_internal_vcufrntwhlacttq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcufrntwhlacttq());
  }

  // uint32 VcuFrntWhlReqTq = 2;
  if (this->_internal_vcufrntwhlreqtq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcufrntwhlreqtq());
  }

  // uint32 VcuReWhlActTq = 3;
  if (this->_internal_vcurewhlacttq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcurewhlacttq());
  }

  // uint32 VcuReWhlReqTq = 4;
  if (this->_internal_vcurewhlreqtq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcurewhlreqtq());
  }

  // uint32 VcuVehWhlReqTq = 5;
  if (this->_internal_vcuvehwhlreqtq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcuvehwhlreqtq());
  }

  // uint32 VcuPtTqReal = 6;
  if (this->_internal_vcupttqreal() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcupttqreal());
  }

  // uint32 VcuAccrPedlPosn = 7;
  if (this->_internal_vcuaccrpedlposn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcuaccrpedlposn());
  }

  // uint32 VcuCalcnAccrPedlPosn = 8;
  if (this->_internal_vcucalcnaccrpedlposn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcucalcnaccrpedlposn());
  }

  // uint32 VcuPtTqLimMax = 9;
  if (this->_internal_vcupttqlimmax() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcupttqlimmax());
  }

  // uint32 VcuPtTqLimMin = 10;
  if (this->_internal_vcupttqlimmin() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcupttqlimmin());
  }

  // uint32 VcuFrntWhlActTqVld = 11;
  if (this->_internal_vcufrntwhlacttqvld() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcufrntwhlacttqvld());
  }

  // uint32 VcuFrntWhlReqTqVld = 12;
  if (this->_internal_vcufrntwhlreqtqvld() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcufrntwhlreqtqvld());
  }

  // uint32 VcuReWhlActTqVld = 13;
  if (this->_internal_vcurewhlacttqvld() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcurewhlacttqvld());
  }

  // uint32 VcuReWhlReqTqVld = 14;
  if (this->_internal_vcurewhlreqtqvld() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcurewhlreqtqvld());
  }

  // uint32 VcuVehWhlReqTqVld = 15;
  if (this->_internal_vcuvehwhlreqtqvld() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vcuvehwhlreqtqvld());
  }

  // uint32 VcuPtTqRealVld = 16;
  if (this->_internal_vcupttqrealvld() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcupttqrealvld());
  }

  // uint32 VcuPtTqLimMaxVld = 17;
  if (this->_internal_vcupttqlimmaxvld() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcupttqlimmaxvld());
  }

  // uint32 VcuPtTqLimMinVld = 18;
  if (this->_internal_vcupttqlimminvld() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcupttqlimminvld());
  }

  // uint32 VcuAccrPedlPosnVld = 19;
  if (this->_internal_vcuaccrpedlposnvld() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcuaccrpedlposnvld());
  }

  // uint32 VcuCalcnAccrPedlPosnVld = 20;
  if (this->_internal_vcucalcnaccrpedlposnvld() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcucalcnaccrpedlposnvld());
  }

  // uint32 VCUAccPedShield = 21;
  if (this->_internal_vcuaccpedshield() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcuaccpedshield());
  }

  // uint32 VcuOvrdModReq = 22;
  if (this->_internal_vcuovrdmodreq() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcuovrdmodreq());
  }

  // uint32 VcuComFltSts = 23;
  if (this->_internal_vcucomfltsts() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcucomfltsts());
  }

  // uint32 VcuPtTqReqAvl = 24;
  if (this->_internal_vcupttqreqavl() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcupttqreqavl());
  }

  // uint32 VcuShiftLvlPosn = 25;
  if (this->_internal_vcushiftlvlposn() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcushiftlvlposn());
  }

  // uint32 VCUGearShiftPositon = 26;
  if (this->_internal_vcugearshiftpositon() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcugearshiftpositon());
  }

  // uint32 VCUShiftPostionValid = 27;
  if (this->_internal_vcushiftpostionvalid() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcushiftpostionvalid());
  }

  // uint32 VCUAPAdriverInterruption = 28;
  if (this->_internal_vcuapadriverinterruption() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcuapadriverinterruption());
  }

  // uint32 VCUAPARequestEnable = 29;
  if (this->_internal_vcuaparequestenable() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_vcuaparequestenable());
  }

  // uint32 reserved1 = 30;
  if (this->_internal_reserved1() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved1());
  }

  // uint32 reserved2 = 31;
  if (this->_internal_reserved2() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved2());
  }

  // uint32 reserved3 = 32;
  if (this->_internal_reserved3() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved3());
  }

  // uint32 reserved4 = 33;
  if (this->_internal_reserved4() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved4());
  }

  // uint32 reserved5 = 34;
  if (this->_internal_reserved5() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved5());
  }

  // uint32 reserved6 = 35;
  if (this->_internal_reserved6() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved6());
  }

  // uint32 reserved7 = 36;
  if (this->_internal_reserved7() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved7());
  }

  // uint32 reserved8 = 37;
  if (this->_internal_reserved8() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved8());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_C2DmdPrmInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_C2DmdPrmInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_C2DmdPrmInfo::GetClassData() const { return &_class_data_; }

void PB_C2DmdPrmInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_C2DmdPrmInfo *>(to)->MergeFrom(
      static_cast<const PB_C2DmdPrmInfo &>(from));
}


void PB_C2DmdPrmInfo::MergeFrom(const PB_C2DmdPrmInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_C2DmdPrmInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_vcufrntwhlacttq() != 0) {
    _internal_set_vcufrntwhlacttq(from._internal_vcufrntwhlacttq());
  }
  if (from._internal_vcufrntwhlreqtq() != 0) {
    _internal_set_vcufrntwhlreqtq(from._internal_vcufrntwhlreqtq());
  }
  if (from._internal_vcurewhlacttq() != 0) {
    _internal_set_vcurewhlacttq(from._internal_vcurewhlacttq());
  }
  if (from._internal_vcurewhlreqtq() != 0) {
    _internal_set_vcurewhlreqtq(from._internal_vcurewhlreqtq());
  }
  if (from._internal_vcuvehwhlreqtq() != 0) {
    _internal_set_vcuvehwhlreqtq(from._internal_vcuvehwhlreqtq());
  }
  if (from._internal_vcupttqreal() != 0) {
    _internal_set_vcupttqreal(from._internal_vcupttqreal());
  }
  if (from._internal_vcuaccrpedlposn() != 0) {
    _internal_set_vcuaccrpedlposn(from._internal_vcuaccrpedlposn());
  }
  if (from._internal_vcucalcnaccrpedlposn() != 0) {
    _internal_set_vcucalcnaccrpedlposn(from._internal_vcucalcnaccrpedlposn());
  }
  if (from._internal_vcupttqlimmax() != 0) {
    _internal_set_vcupttqlimmax(from._internal_vcupttqlimmax());
  }
  if (from._internal_vcupttqlimmin() != 0) {
    _internal_set_vcupttqlimmin(from._internal_vcupttqlimmin());
  }
  if (from._internal_vcufrntwhlacttqvld() != 0) {
    _internal_set_vcufrntwhlacttqvld(from._internal_vcufrntwhlacttqvld());
  }
  if (from._internal_vcufrntwhlreqtqvld() != 0) {
    _internal_set_vcufrntwhlreqtqvld(from._internal_vcufrntwhlreqtqvld());
  }
  if (from._internal_vcurewhlacttqvld() != 0) {
    _internal_set_vcurewhlacttqvld(from._internal_vcurewhlacttqvld());
  }
  if (from._internal_vcurewhlreqtqvld() != 0) {
    _internal_set_vcurewhlreqtqvld(from._internal_vcurewhlreqtqvld());
  }
  if (from._internal_vcuvehwhlreqtqvld() != 0) {
    _internal_set_vcuvehwhlreqtqvld(from._internal_vcuvehwhlreqtqvld());
  }
  if (from._internal_vcupttqrealvld() != 0) {
    _internal_set_vcupttqrealvld(from._internal_vcupttqrealvld());
  }
  if (from._internal_vcupttqlimmaxvld() != 0) {
    _internal_set_vcupttqlimmaxvld(from._internal_vcupttqlimmaxvld());
  }
  if (from._internal_vcupttqlimminvld() != 0) {
    _internal_set_vcupttqlimminvld(from._internal_vcupttqlimminvld());
  }
  if (from._internal_vcuaccrpedlposnvld() != 0) {
    _internal_set_vcuaccrpedlposnvld(from._internal_vcuaccrpedlposnvld());
  }
  if (from._internal_vcucalcnaccrpedlposnvld() != 0) {
    _internal_set_vcucalcnaccrpedlposnvld(from._internal_vcucalcnaccrpedlposnvld());
  }
  if (from._internal_vcuaccpedshield() != 0) {
    _internal_set_vcuaccpedshield(from._internal_vcuaccpedshield());
  }
  if (from._internal_vcuovrdmodreq() != 0) {
    _internal_set_vcuovrdmodreq(from._internal_vcuovrdmodreq());
  }
  if (from._internal_vcucomfltsts() != 0) {
    _internal_set_vcucomfltsts(from._internal_vcucomfltsts());
  }
  if (from._internal_vcupttqreqavl() != 0) {
    _internal_set_vcupttqreqavl(from._internal_vcupttqreqavl());
  }
  if (from._internal_vcushiftlvlposn() != 0) {
    _internal_set_vcushiftlvlposn(from._internal_vcushiftlvlposn());
  }
  if (from._internal_vcugearshiftpositon() != 0) {
    _internal_set_vcugearshiftpositon(from._internal_vcugearshiftpositon());
  }
  if (from._internal_vcushiftpostionvalid() != 0) {
    _internal_set_vcushiftpostionvalid(from._internal_vcushiftpostionvalid());
  }
  if (from._internal_vcuapadriverinterruption() != 0) {
    _internal_set_vcuapadriverinterruption(from._internal_vcuapadriverinterruption());
  }
  if (from._internal_vcuaparequestenable() != 0) {
    _internal_set_vcuaparequestenable(from._internal_vcuaparequestenable());
  }
  if (from._internal_reserved1() != 0) {
    _internal_set_reserved1(from._internal_reserved1());
  }
  if (from._internal_reserved2() != 0) {
    _internal_set_reserved2(from._internal_reserved2());
  }
  if (from._internal_reserved3() != 0) {
    _internal_set_reserved3(from._internal_reserved3());
  }
  if (from._internal_reserved4() != 0) {
    _internal_set_reserved4(from._internal_reserved4());
  }
  if (from._internal_reserved5() != 0) {
    _internal_set_reserved5(from._internal_reserved5());
  }
  if (from._internal_reserved6() != 0) {
    _internal_set_reserved6(from._internal_reserved6());
  }
  if (from._internal_reserved7() != 0) {
    _internal_set_reserved7(from._internal_reserved7());
  }
  if (from._internal_reserved8() != 0) {
    _internal_set_reserved8(from._internal_reserved8());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_C2DmdPrmInfo::CopyFrom(const PB_C2DmdPrmInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_C2DmdPrmInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_C2DmdPrmInfo::IsInitialized() const {
  return true;
}

void PB_C2DmdPrmInfo::InternalSwap(PB_C2DmdPrmInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_C2DmdPrmInfo, reserved8_)
      + sizeof(PB_C2DmdPrmInfo::reserved8_)
      - PROTOBUF_FIELD_OFFSET(PB_C2DmdPrmInfo, vcufrntwhlacttq_)>(
          reinterpret_cast<char*>(&vcufrntwhlacttq_),
          reinterpret_cast<char*>(&other->vcufrntwhlacttq_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_C2DmdPrmInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[23]);
}

// ===================================================================

class PB_ViuGearShiftPosnInfo::_Internal {
 public:
};

PB_ViuGearShiftPosnInfo::PB_ViuGearShiftPosnInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ViuGearShiftPosnInfo)
}
PB_ViuGearShiftPosnInfo::PB_ViuGearShiftPosnInfo(const PB_ViuGearShiftPosnInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&viugearshiftposn_, &from.viugearshiftposn_,
    static_cast<size_t>(reinterpret_cast<char*>(&viugearshiftposnvld_) -
    reinterpret_cast<char*>(&viugearshiftposn_)) + sizeof(viugearshiftposnvld_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ViuGearShiftPosnInfo)
}

inline void PB_ViuGearShiftPosnInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&viugearshiftposn_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&viugearshiftposnvld_) -
    reinterpret_cast<char*>(&viugearshiftposn_)) + sizeof(viugearshiftposnvld_));
}

PB_ViuGearShiftPosnInfo::~PB_ViuGearShiftPosnInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_ViuGearShiftPosnInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ViuGearShiftPosnInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ViuGearShiftPosnInfo::ArenaDtor(void* object) {
  PB_ViuGearShiftPosnInfo* _this = reinterpret_cast< PB_ViuGearShiftPosnInfo* >(object);
  (void)_this;
}
void PB_ViuGearShiftPosnInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ViuGearShiftPosnInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ViuGearShiftPosnInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ViuGearShiftPosnInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&viugearshiftposn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&viugearshiftposnvld_) -
      reinterpret_cast<char*>(&viugearshiftposn_)) + sizeof(viugearshiftposnvld_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ViuGearShiftPosnInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 ViuGearShiftPosn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          viugearshiftposn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ViuGearShiftPosnVld = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          viugearshiftposnvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ViuGearShiftPosnInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ViuGearShiftPosnInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 ViuGearShiftPosn = 1;
  if (this->_internal_viugearshiftposn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_viugearshiftposn(), target);
  }

  // uint32 ViuGearShiftPosnVld = 2;
  if (this->_internal_viugearshiftposnvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_viugearshiftposnvld(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ViuGearShiftPosnInfo)
  return target;
}

size_t PB_ViuGearShiftPosnInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ViuGearShiftPosnInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 ViuGearShiftPosn = 1;
  if (this->_internal_viugearshiftposn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_viugearshiftposn());
  }

  // uint32 ViuGearShiftPosnVld = 2;
  if (this->_internal_viugearshiftposnvld() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_viugearshiftposnvld());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ViuGearShiftPosnInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ViuGearShiftPosnInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ViuGearShiftPosnInfo::GetClassData() const { return &_class_data_; }

void PB_ViuGearShiftPosnInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ViuGearShiftPosnInfo *>(to)->MergeFrom(
      static_cast<const PB_ViuGearShiftPosnInfo &>(from));
}


void PB_ViuGearShiftPosnInfo::MergeFrom(const PB_ViuGearShiftPosnInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ViuGearShiftPosnInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_viugearshiftposn() != 0) {
    _internal_set_viugearshiftposn(from._internal_viugearshiftposn());
  }
  if (from._internal_viugearshiftposnvld() != 0) {
    _internal_set_viugearshiftposnvld(from._internal_viugearshiftposnvld());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ViuGearShiftPosnInfo::CopyFrom(const PB_ViuGearShiftPosnInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ViuGearShiftPosnInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ViuGearShiftPosnInfo::IsInitialized() const {
  return true;
}

void PB_ViuGearShiftPosnInfo::InternalSwap(PB_ViuGearShiftPosnInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ViuGearShiftPosnInfo, viugearshiftposnvld_)
      + sizeof(PB_ViuGearShiftPosnInfo::viugearshiftposnvld_)
      - PROTOBUF_FIELD_OFFSET(PB_ViuGearShiftPosnInfo, viugearshiftposn_)>(
          reinterpret_cast<char*>(&viugearshiftposn_),
          reinterpret_cast<char*>(&other->viugearshiftposn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ViuGearShiftPosnInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[24]);
}

// ===================================================================

class PB_uint8_Struct::_Internal {
 public:
};

PB_uint8_Struct::PB_uint8_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_uint8_Struct)
}
PB_uint8_Struct::PB_uint8_Struct(const PB_uint8_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_uint8_Struct)
}

inline void PB_uint8_Struct::SharedCtor() {
data_ = 0u;
}

PB_uint8_Struct::~PB_uint8_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_uint8_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_uint8_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_uint8_Struct::ArenaDtor(void* object) {
  PB_uint8_Struct* _this = reinterpret_cast< PB_uint8_Struct* >(object);
  (void)_this;
}
void PB_uint8_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_uint8_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_uint8_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_uint8_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_uint8_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_uint8_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_uint8_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->_internal_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_uint8_Struct)
  return target;
}

size_t PB_uint8_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_uint8_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->_internal_data() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_uint8_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_uint8_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_uint8_Struct::GetClassData() const { return &_class_data_; }

void PB_uint8_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_uint8_Struct *>(to)->MergeFrom(
      static_cast<const PB_uint8_Struct &>(from));
}


void PB_uint8_Struct::MergeFrom(const PB_uint8_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_uint8_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_data() != 0) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_uint8_Struct::CopyFrom(const PB_uint8_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_uint8_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_uint8_Struct::IsInitialized() const {
  return true;
}

void PB_uint8_Struct::InternalSwap(PB_uint8_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_uint8_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[25]);
}

// ===================================================================

class PB_BLERpaCmdRsp::_Internal {
 public:
};

PB_BLERpaCmdRsp::PB_BLERpaCmdRsp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  blerpacmdrspdata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_BLERpaCmdRsp)
}
PB_BLERpaCmdRsp::PB_BLERpaCmdRsp(const PB_BLERpaCmdRsp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      blerpacmdrspdata_(from.blerpacmdrspdata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyindex_ = from.keyindex_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_BLERpaCmdRsp)
}

inline void PB_BLERpaCmdRsp::SharedCtor() {
keyindex_ = 0u;
}

PB_BLERpaCmdRsp::~PB_BLERpaCmdRsp() {
  // @@protoc_insertion_point(destructor:Soa.PB_BLERpaCmdRsp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_BLERpaCmdRsp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_BLERpaCmdRsp::ArenaDtor(void* object) {
  PB_BLERpaCmdRsp* _this = reinterpret_cast< PB_BLERpaCmdRsp* >(object);
  (void)_this;
}
void PB_BLERpaCmdRsp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_BLERpaCmdRsp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_BLERpaCmdRsp::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_BLERpaCmdRsp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blerpacmdrspdata_.Clear();
  keyindex_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_BLERpaCmdRsp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 BLERpaCmdRspData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_blerpacmdrspdata(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_blerpacmdrspdata(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 KeyIndex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          keyindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_BLERpaCmdRsp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_BLERpaCmdRsp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 BLERpaCmdRspData = 1;
  {
    int byte_size = _blerpacmdrspdata_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_blerpacmdrspdata(), byte_size, target);
    }
  }

  // uint32 KeyIndex = 2;
  if (this->_internal_keyindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_keyindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_BLERpaCmdRsp)
  return target;
}

size_t PB_BLERpaCmdRsp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_BLERpaCmdRsp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 BLERpaCmdRspData = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->blerpacmdrspdata_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _blerpacmdrspdata_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint32 KeyIndex = 2;
  if (this->_internal_keyindex() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_keyindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_BLERpaCmdRsp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_BLERpaCmdRsp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_BLERpaCmdRsp::GetClassData() const { return &_class_data_; }

void PB_BLERpaCmdRsp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_BLERpaCmdRsp *>(to)->MergeFrom(
      static_cast<const PB_BLERpaCmdRsp &>(from));
}


void PB_BLERpaCmdRsp::MergeFrom(const PB_BLERpaCmdRsp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_BLERpaCmdRsp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  blerpacmdrspdata_.MergeFrom(from.blerpacmdrspdata_);
  if (from._internal_keyindex() != 0) {
    _internal_set_keyindex(from._internal_keyindex());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_BLERpaCmdRsp::CopyFrom(const PB_BLERpaCmdRsp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_BLERpaCmdRsp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BLERpaCmdRsp::IsInitialized() const {
  return true;
}

void PB_BLERpaCmdRsp::InternalSwap(PB_BLERpaCmdRsp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  blerpacmdrspdata_.InternalSwap(&other->blerpacmdrspdata_);
  swap(keyindex_, other->keyindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_BLERpaCmdRsp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[26]);
}

// ===================================================================

class PB_PosnLiFltInfo::_Internal {
 public:
};

PB_PosnLiFltInfo::PB_PosnLiFltInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_PosnLiFltInfo)
}
PB_PosnLiFltInfo::PB_PosnLiFltInfo(const PB_PosnLiFltInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&fl_fltst_, &from.fl_fltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&rr_fltst_) -
    reinterpret_cast<char*>(&fl_fltst_)) + sizeof(rr_fltst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_PosnLiFltInfo)
}

inline void PB_PosnLiFltInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fl_fltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rr_fltst_) -
    reinterpret_cast<char*>(&fl_fltst_)) + sizeof(rr_fltst_));
}

PB_PosnLiFltInfo::~PB_PosnLiFltInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_PosnLiFltInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_PosnLiFltInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_PosnLiFltInfo::ArenaDtor(void* object) {
  PB_PosnLiFltInfo* _this = reinterpret_cast< PB_PosnLiFltInfo* >(object);
  (void)_this;
}
void PB_PosnLiFltInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_PosnLiFltInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_PosnLiFltInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_PosnLiFltInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fl_fltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rr_fltst_) -
      reinterpret_cast<char*>(&fl_fltst_)) + sizeof(rr_fltst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_PosnLiFltInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FL_FltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          fl_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FR_FltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          fr_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RL_FltSt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          rl_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RR_FltSt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          rr_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_PosnLiFltInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_PosnLiFltInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FL_FltSt = 1;
  if (this->_internal_fl_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_fl_fltst(), target);
  }

  // uint32 FR_FltSt = 2;
  if (this->_internal_fr_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_fr_fltst(), target);
  }

  // uint32 RL_FltSt = 3;
  if (this->_internal_rl_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rl_fltst(), target);
  }

  // uint32 RR_FltSt = 4;
  if (this->_internal_rr_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_rr_fltst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_PosnLiFltInfo)
  return target;
}

size_t PB_PosnLiFltInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_PosnLiFltInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FL_FltSt = 1;
  if (this->_internal_fl_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_fl_fltst());
  }

  // uint32 FR_FltSt = 2;
  if (this->_internal_fr_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_fr_fltst());
  }

  // uint32 RL_FltSt = 3;
  if (this->_internal_rl_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rl_fltst());
  }

  // uint32 RR_FltSt = 4;
  if (this->_internal_rr_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rr_fltst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_PosnLiFltInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_PosnLiFltInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_PosnLiFltInfo::GetClassData() const { return &_class_data_; }

void PB_PosnLiFltInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_PosnLiFltInfo *>(to)->MergeFrom(
      static_cast<const PB_PosnLiFltInfo &>(from));
}


void PB_PosnLiFltInfo::MergeFrom(const PB_PosnLiFltInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_PosnLiFltInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fl_fltst() != 0) {
    _internal_set_fl_fltst(from._internal_fl_fltst());
  }
  if (from._internal_fr_fltst() != 0) {
    _internal_set_fr_fltst(from._internal_fr_fltst());
  }
  if (from._internal_rl_fltst() != 0) {
    _internal_set_rl_fltst(from._internal_rl_fltst());
  }
  if (from._internal_rr_fltst() != 0) {
    _internal_set_rr_fltst(from._internal_rr_fltst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_PosnLiFltInfo::CopyFrom(const PB_PosnLiFltInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_PosnLiFltInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PosnLiFltInfo::IsInitialized() const {
  return true;
}

void PB_PosnLiFltInfo::InternalSwap(PB_PosnLiFltInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_PosnLiFltInfo, rr_fltst_)
      + sizeof(PB_PosnLiFltInfo::rr_fltst_)
      - PROTOBUF_FIELD_OFFSET(PB_PosnLiFltInfo, fl_fltst_)>(
          reinterpret_cast<char*>(&fl_fltst_),
          reinterpret_cast<char*>(&other->fl_fltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_PosnLiFltInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[27]);
}

// ===================================================================

class PB_APAControleReq::_Internal {
 public:
};

PB_APAControleReq::PB_APAControleReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_APAControleReq)
}
PB_APAControleReq::PB_APAControleReq(const PB_APAControleReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&apacontrolenable_, &from.apacontrolenable_,
    static_cast<size_t>(reinterpret_cast<char*>(&heartbeat_) -
    reinterpret_cast<char*>(&apacontrolenable_)) + sizeof(heartbeat_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_APAControleReq)
}

inline void PB_APAControleReq::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&apacontrolenable_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&heartbeat_) -
    reinterpret_cast<char*>(&apacontrolenable_)) + sizeof(heartbeat_));
}

PB_APAControleReq::~PB_APAControleReq() {
  // @@protoc_insertion_point(destructor:Soa.PB_APAControleReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_APAControleReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_APAControleReq::ArenaDtor(void* object) {
  PB_APAControleReq* _this = reinterpret_cast< PB_APAControleReq* >(object);
  (void)_this;
}
void PB_APAControleReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_APAControleReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_APAControleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_APAControleReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&apacontrolenable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&heartbeat_) -
      reinterpret_cast<char*>(&apacontrolenable_)) + sizeof(heartbeat_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_APAControleReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 APAControlEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          apacontrolenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Heartbeat = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          heartbeat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_APAControleReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_APAControleReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 APAControlEnable = 1;
  if (this->_internal_apacontrolenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_apacontrolenable(), target);
  }

  // uint32 Heartbeat = 2;
  if (this->_internal_heartbeat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_heartbeat(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_APAControleReq)
  return target;
}

size_t PB_APAControleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_APAControleReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 APAControlEnable = 1;
  if (this->_internal_apacontrolenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apacontrolenable());
  }

  // uint32 Heartbeat = 2;
  if (this->_internal_heartbeat() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_heartbeat());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_APAControleReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_APAControleReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_APAControleReq::GetClassData() const { return &_class_data_; }

void PB_APAControleReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_APAControleReq *>(to)->MergeFrom(
      static_cast<const PB_APAControleReq &>(from));
}


void PB_APAControleReq::MergeFrom(const PB_APAControleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_APAControleReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_apacontrolenable() != 0) {
    _internal_set_apacontrolenable(from._internal_apacontrolenable());
  }
  if (from._internal_heartbeat() != 0) {
    _internal_set_heartbeat(from._internal_heartbeat());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_APAControleReq::CopyFrom(const PB_APAControleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_APAControleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_APAControleReq::IsInitialized() const {
  return true;
}

void PB_APAControleReq::InternalSwap(PB_APAControleReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_APAControleReq, heartbeat_)
      + sizeof(PB_APAControleReq::heartbeat_)
      - PROTOBUF_FIELD_OFFSET(PB_APAControleReq, apacontrolenable_)>(
          reinterpret_cast<char*>(&apacontrolenable_),
          reinterpret_cast<char*>(&other->apacontrolenable_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_APAControleReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[28]);
}

// ===================================================================

class PB_EDCset_EducatingModeOnOff::_Internal {
 public:
};

PB_EDCset_EducatingModeOnOff::PB_EDCset_EducatingModeOnOff(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDCset_EducatingModeOnOff)
}
PB_EDCset_EducatingModeOnOff::PB_EDCset_EducatingModeOnOff(const PB_EDCset_EducatingModeOnOff& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_educatingmodeonoff_ = from.edc_educatingmodeonoff_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDCset_EducatingModeOnOff)
}

inline void PB_EDCset_EducatingModeOnOff::SharedCtor() {
edc_educatingmodeonoff_ = 0u;
}

PB_EDCset_EducatingModeOnOff::~PB_EDCset_EducatingModeOnOff() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDCset_EducatingModeOnOff)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDCset_EducatingModeOnOff::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDCset_EducatingModeOnOff::ArenaDtor(void* object) {
  PB_EDCset_EducatingModeOnOff* _this = reinterpret_cast< PB_EDCset_EducatingModeOnOff* >(object);
  (void)_this;
}
void PB_EDCset_EducatingModeOnOff::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDCset_EducatingModeOnOff::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDCset_EducatingModeOnOff::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDCset_EducatingModeOnOff)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_educatingmodeonoff_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDCset_EducatingModeOnOff::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_EducatingModeOnOff = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_educatingmodeonoff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDCset_EducatingModeOnOff::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDCset_EducatingModeOnOff)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_EducatingModeOnOff = 1;
  if (this->_internal_edc_educatingmodeonoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_educatingmodeonoff(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDCset_EducatingModeOnOff)
  return target;
}

size_t PB_EDCset_EducatingModeOnOff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDCset_EducatingModeOnOff)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_EducatingModeOnOff = 1;
  if (this->_internal_edc_educatingmodeonoff() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_educatingmodeonoff());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDCset_EducatingModeOnOff::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDCset_EducatingModeOnOff::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDCset_EducatingModeOnOff::GetClassData() const { return &_class_data_; }

void PB_EDCset_EducatingModeOnOff::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDCset_EducatingModeOnOff *>(to)->MergeFrom(
      static_cast<const PB_EDCset_EducatingModeOnOff &>(from));
}


void PB_EDCset_EducatingModeOnOff::MergeFrom(const PB_EDCset_EducatingModeOnOff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDCset_EducatingModeOnOff)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_educatingmodeonoff() != 0) {
    _internal_set_edc_educatingmodeonoff(from._internal_edc_educatingmodeonoff());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDCset_EducatingModeOnOff::CopyFrom(const PB_EDCset_EducatingModeOnOff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDCset_EducatingModeOnOff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDCset_EducatingModeOnOff::IsInitialized() const {
  return true;
}

void PB_EDCset_EducatingModeOnOff::InternalSwap(PB_EDCset_EducatingModeOnOff* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_educatingmodeonoff_, other->edc_educatingmodeonoff_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDCset_EducatingModeOnOff::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[29]);
}

// ===================================================================

class PB_EDC_RADSDrvrReqData::_Internal {
 public:
};

PB_EDC_RADSDrvrReqData::PB_EDC_RADSDrvrReqData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_RADSDrvrReqData)
}
PB_EDC_RADSDrvrReqData::PB_EDC_RADSDrvrReqData(const PB_EDC_RADSDrvrReqData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_radsdrvrreq_ = from.edc_radsdrvrreq_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_RADSDrvrReqData)
}

inline void PB_EDC_RADSDrvrReqData::SharedCtor() {
edc_radsdrvrreq_ = 0u;
}

PB_EDC_RADSDrvrReqData::~PB_EDC_RADSDrvrReqData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_RADSDrvrReqData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_RADSDrvrReqData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_RADSDrvrReqData::ArenaDtor(void* object) {
  PB_EDC_RADSDrvrReqData* _this = reinterpret_cast< PB_EDC_RADSDrvrReqData* >(object);
  (void)_this;
}
void PB_EDC_RADSDrvrReqData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_RADSDrvrReqData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_RADSDrvrReqData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_RADSDrvrReqData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_radsdrvrreq_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_RADSDrvrReqData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_RADSDrvrReq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_radsdrvrreq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_RADSDrvrReqData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_RADSDrvrReqData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_RADSDrvrReq = 1;
  if (this->_internal_edc_radsdrvrreq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_radsdrvrreq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_RADSDrvrReqData)
  return target;
}

size_t PB_EDC_RADSDrvrReqData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_RADSDrvrReqData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_RADSDrvrReq = 1;
  if (this->_internal_edc_radsdrvrreq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_radsdrvrreq());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_RADSDrvrReqData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_RADSDrvrReqData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_RADSDrvrReqData::GetClassData() const { return &_class_data_; }

void PB_EDC_RADSDrvrReqData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_RADSDrvrReqData *>(to)->MergeFrom(
      static_cast<const PB_EDC_RADSDrvrReqData &>(from));
}


void PB_EDC_RADSDrvrReqData::MergeFrom(const PB_EDC_RADSDrvrReqData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_RADSDrvrReqData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_radsdrvrreq() != 0) {
    _internal_set_edc_radsdrvrreq(from._internal_edc_radsdrvrreq());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_RADSDrvrReqData::CopyFrom(const PB_EDC_RADSDrvrReqData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_RADSDrvrReqData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_RADSDrvrReqData::IsInitialized() const {
  return true;
}

void PB_EDC_RADSDrvrReqData::InternalSwap(PB_EDC_RADSDrvrReqData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_radsdrvrreq_, other->edc_radsdrvrreq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_RADSDrvrReqData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[30]);
}

// ===================================================================

class PB_MirrStsInfo::_Internal {
 public:
};

PB_MirrStsInfo::PB_MirrStsInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_MirrStsInfo)
}
PB_MirrStsInfo::PB_MirrStsInfo(const PB_MirrStsInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lemirrfoldctrl_, &from.lemirrfoldctrl_,
    static_cast<size_t>(reinterpret_cast<char*>(&rimirrtarposny_) -
    reinterpret_cast<char*>(&lemirrfoldctrl_)) + sizeof(rimirrtarposny_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_MirrStsInfo)
}

inline void PB_MirrStsInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lemirrfoldctrl_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rimirrtarposny_) -
    reinterpret_cast<char*>(&lemirrfoldctrl_)) + sizeof(rimirrtarposny_));
}

PB_MirrStsInfo::~PB_MirrStsInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_MirrStsInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_MirrStsInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_MirrStsInfo::ArenaDtor(void* object) {
  PB_MirrStsInfo* _this = reinterpret_cast< PB_MirrStsInfo* >(object);
  (void)_this;
}
void PB_MirrStsInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_MirrStsInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_MirrStsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_MirrStsInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lemirrfoldctrl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rimirrtarposny_) -
      reinterpret_cast<char*>(&lemirrfoldctrl_)) + sizeof(rimirrtarposny_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_MirrStsInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 LeMirrFoldCtrl = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lemirrfoldctrl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RiMirrFoldCtrl = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          rimirrfoldctrl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LeMirrHeat = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          lemirrheat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RiMirrHeat = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          rimirrheat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LeMirrPosnX = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          lemirrposnx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LeMirrPosnY = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          lemirrposny_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RiMirrPosnX = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          rimirrposnx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RiMirrPosnY = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          rimirrposny_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LeMirrTarPosnX = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          lemirrtarposnx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LeMirrTarPosnY = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          lemirrtarposny_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RiMirrTarPosnX = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          rimirrtarposnx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RiMirrTarPosnY = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          rimirrtarposny_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_MirrStsInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_MirrStsInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 LeMirrFoldCtrl = 1;
  if (this->_internal_lemirrfoldctrl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_lemirrfoldctrl(), target);
  }

  // uint32 RiMirrFoldCtrl = 2;
  if (this->_internal_rimirrfoldctrl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_rimirrfoldctrl(), target);
  }

  // uint32 LeMirrHeat = 3;
  if (this->_internal_lemirrheat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_lemirrheat(), target);
  }

  // uint32 RiMirrHeat = 4;
  if (this->_internal_rimirrheat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_rimirrheat(), target);
  }

  // uint32 LeMirrPosnX = 5;
  if (this->_internal_lemirrposnx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_lemirrposnx(), target);
  }

  // uint32 LeMirrPosnY = 6;
  if (this->_internal_lemirrposny() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_lemirrposny(), target);
  }

  // uint32 RiMirrPosnX = 7;
  if (this->_internal_rimirrposnx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_rimirrposnx(), target);
  }

  // uint32 RiMirrPosnY = 8;
  if (this->_internal_rimirrposny() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_rimirrposny(), target);
  }

  // uint32 LeMirrTarPosnX = 9;
  if (this->_internal_lemirrtarposnx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_lemirrtarposnx(), target);
  }

  // uint32 LeMirrTarPosnY = 10;
  if (this->_internal_lemirrtarposny() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_lemirrtarposny(), target);
  }

  // uint32 RiMirrTarPosnX = 11;
  if (this->_internal_rimirrtarposnx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_rimirrtarposnx(), target);
  }

  // uint32 RiMirrTarPosnY = 12;
  if (this->_internal_rimirrtarposny() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_rimirrtarposny(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_MirrStsInfo)
  return target;
}

size_t PB_MirrStsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_MirrStsInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 LeMirrFoldCtrl = 1;
  if (this->_internal_lemirrfoldctrl() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lemirrfoldctrl());
  }

  // uint32 RiMirrFoldCtrl = 2;
  if (this->_internal_rimirrfoldctrl() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rimirrfoldctrl());
  }

  // uint32 LeMirrHeat = 3;
  if (this->_internal_lemirrheat() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lemirrheat());
  }

  // uint32 RiMirrHeat = 4;
  if (this->_internal_rimirrheat() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rimirrheat());
  }

  // uint32 LeMirrPosnX = 5;
  if (this->_internal_lemirrposnx() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lemirrposnx());
  }

  // uint32 LeMirrPosnY = 6;
  if (this->_internal_lemirrposny() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lemirrposny());
  }

  // uint32 RiMirrPosnX = 7;
  if (this->_internal_rimirrposnx() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rimirrposnx());
  }

  // uint32 RiMirrPosnY = 8;
  if (this->_internal_rimirrposny() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rimirrposny());
  }

  // uint32 LeMirrTarPosnX = 9;
  if (this->_internal_lemirrtarposnx() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lemirrtarposnx());
  }

  // uint32 LeMirrTarPosnY = 10;
  if (this->_internal_lemirrtarposny() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lemirrtarposny());
  }

  // uint32 RiMirrTarPosnX = 11;
  if (this->_internal_rimirrtarposnx() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rimirrtarposnx());
  }

  // uint32 RiMirrTarPosnY = 12;
  if (this->_internal_rimirrtarposny() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rimirrtarposny());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_MirrStsInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_MirrStsInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_MirrStsInfo::GetClassData() const { return &_class_data_; }

void PB_MirrStsInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_MirrStsInfo *>(to)->MergeFrom(
      static_cast<const PB_MirrStsInfo &>(from));
}


void PB_MirrStsInfo::MergeFrom(const PB_MirrStsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_MirrStsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lemirrfoldctrl() != 0) {
    _internal_set_lemirrfoldctrl(from._internal_lemirrfoldctrl());
  }
  if (from._internal_rimirrfoldctrl() != 0) {
    _internal_set_rimirrfoldctrl(from._internal_rimirrfoldctrl());
  }
  if (from._internal_lemirrheat() != 0) {
    _internal_set_lemirrheat(from._internal_lemirrheat());
  }
  if (from._internal_rimirrheat() != 0) {
    _internal_set_rimirrheat(from._internal_rimirrheat());
  }
  if (from._internal_lemirrposnx() != 0) {
    _internal_set_lemirrposnx(from._internal_lemirrposnx());
  }
  if (from._internal_lemirrposny() != 0) {
    _internal_set_lemirrposny(from._internal_lemirrposny());
  }
  if (from._internal_rimirrposnx() != 0) {
    _internal_set_rimirrposnx(from._internal_rimirrposnx());
  }
  if (from._internal_rimirrposny() != 0) {
    _internal_set_rimirrposny(from._internal_rimirrposny());
  }
  if (from._internal_lemirrtarposnx() != 0) {
    _internal_set_lemirrtarposnx(from._internal_lemirrtarposnx());
  }
  if (from._internal_lemirrtarposny() != 0) {
    _internal_set_lemirrtarposny(from._internal_lemirrtarposny());
  }
  if (from._internal_rimirrtarposnx() != 0) {
    _internal_set_rimirrtarposnx(from._internal_rimirrtarposnx());
  }
  if (from._internal_rimirrtarposny() != 0) {
    _internal_set_rimirrtarposny(from._internal_rimirrtarposny());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_MirrStsInfo::CopyFrom(const PB_MirrStsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_MirrStsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_MirrStsInfo::IsInitialized() const {
  return true;
}

void PB_MirrStsInfo::InternalSwap(PB_MirrStsInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_MirrStsInfo, rimirrtarposny_)
      + sizeof(PB_MirrStsInfo::rimirrtarposny_)
      - PROTOBUF_FIELD_OFFSET(PB_MirrStsInfo, lemirrfoldctrl_)>(
          reinterpret_cast<char*>(&lemirrfoldctrl_),
          reinterpret_cast<char*>(&other->lemirrfoldctrl_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_MirrStsInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[31]);
}

// ===================================================================

class PB_EleAirSuspHighModSts::_Internal {
 public:
};

PB_EleAirSuspHighModSts::PB_EleAirSuspHighModSts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EleAirSuspHighModSts)
}
PB_EleAirSuspHighModSts::PB_EleAirSuspHighModSts(const PB_EleAirSuspHighModSts& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  susphighmodsts_ = from.susphighmodsts_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EleAirSuspHighModSts)
}

inline void PB_EleAirSuspHighModSts::SharedCtor() {
susphighmodsts_ = 0u;
}

PB_EleAirSuspHighModSts::~PB_EleAirSuspHighModSts() {
  // @@protoc_insertion_point(destructor:Soa.PB_EleAirSuspHighModSts)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EleAirSuspHighModSts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EleAirSuspHighModSts::ArenaDtor(void* object) {
  PB_EleAirSuspHighModSts* _this = reinterpret_cast< PB_EleAirSuspHighModSts* >(object);
  (void)_this;
}
void PB_EleAirSuspHighModSts::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EleAirSuspHighModSts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EleAirSuspHighModSts::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EleAirSuspHighModSts)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  susphighmodsts_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EleAirSuspHighModSts::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 SuspHighModSts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          susphighmodsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EleAirSuspHighModSts::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EleAirSuspHighModSts)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SuspHighModSts = 1;
  if (this->_internal_susphighmodsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_susphighmodsts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EleAirSuspHighModSts)
  return target;
}

size_t PB_EleAirSuspHighModSts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EleAirSuspHighModSts)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 SuspHighModSts = 1;
  if (this->_internal_susphighmodsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_susphighmodsts());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EleAirSuspHighModSts::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EleAirSuspHighModSts::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EleAirSuspHighModSts::GetClassData() const { return &_class_data_; }

void PB_EleAirSuspHighModSts::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EleAirSuspHighModSts *>(to)->MergeFrom(
      static_cast<const PB_EleAirSuspHighModSts &>(from));
}


void PB_EleAirSuspHighModSts::MergeFrom(const PB_EleAirSuspHighModSts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EleAirSuspHighModSts)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_susphighmodsts() != 0) {
    _internal_set_susphighmodsts(from._internal_susphighmodsts());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EleAirSuspHighModSts::CopyFrom(const PB_EleAirSuspHighModSts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EleAirSuspHighModSts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EleAirSuspHighModSts::IsInitialized() const {
  return true;
}

void PB_EleAirSuspHighModSts::InternalSwap(PB_EleAirSuspHighModSts* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(susphighmodsts_, other->susphighmodsts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EleAirSuspHighModSts::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[32]);
}

// ===================================================================

class PB_AD_APAFctnStaData::_Internal {
 public:
};

PB_AD_APAFctnStaData::PB_AD_APAFctnStaData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_APAFctnStaData)
}
PB_AD_APAFctnStaData::PB_AD_APAFctnStaData(const PB_AD_APAFctnStaData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ad_apasysenasta_, &from.ad_apasysenasta_,
    static_cast<size_t>(reinterpret_cast<char*>(&ad_radssta_) -
    reinterpret_cast<char*>(&ad_apasysenasta_)) + sizeof(ad_radssta_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_APAFctnStaData)
}

inline void PB_AD_APAFctnStaData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ad_apasysenasta_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ad_radssta_) -
    reinterpret_cast<char*>(&ad_apasysenasta_)) + sizeof(ad_radssta_));
}

PB_AD_APAFctnStaData::~PB_AD_APAFctnStaData() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_APAFctnStaData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_APAFctnStaData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_AD_APAFctnStaData::ArenaDtor(void* object) {
  PB_AD_APAFctnStaData* _this = reinterpret_cast< PB_AD_APAFctnStaData* >(object);
  (void)_this;
}
void PB_AD_APAFctnStaData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_APAFctnStaData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_APAFctnStaData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_APAFctnStaData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ad_apasysenasta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ad_radssta_) -
      reinterpret_cast<char*>(&ad_apasysenasta_)) + sizeof(ad_radssta_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_APAFctnStaData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_APASysEnaSta = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_apasysenasta_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APASta = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ad_apasta_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_RPASta = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ad_rpasta_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_RMASta = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ad_rmasta_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_RADSSta = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          ad_radssta_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_APAFctnStaData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_APAFctnStaData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_APASysEnaSta = 1;
  if (this->_internal_ad_apasysenasta() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_apasysenasta(), target);
  }

  // uint32 AD_APASta = 2;
  if (this->_internal_ad_apasta() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ad_apasta(), target);
  }

  // uint32 AD_RPASta = 3;
  if (this->_internal_ad_rpasta() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ad_rpasta(), target);
  }

  // uint32 AD_RMASta = 4;
  if (this->_internal_ad_rmasta() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_ad_rmasta(), target);
  }

  // uint32 AD_RADSSta = 5;
  if (this->_internal_ad_radssta() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_ad_radssta(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_APAFctnStaData)
  return target;
}

size_t PB_AD_APAFctnStaData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_APAFctnStaData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_APASysEnaSta = 1;
  if (this->_internal_ad_apasysenasta() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apasysenasta());
  }

  // uint32 AD_APASta = 2;
  if (this->_internal_ad_apasta() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apasta());
  }

  // uint32 AD_RPASta = 3;
  if (this->_internal_ad_rpasta() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_rpasta());
  }

  // uint32 AD_RMASta = 4;
  if (this->_internal_ad_rmasta() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_rmasta());
  }

  // uint32 AD_RADSSta = 5;
  if (this->_internal_ad_radssta() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_radssta());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_APAFctnStaData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_APAFctnStaData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_APAFctnStaData::GetClassData() const { return &_class_data_; }

void PB_AD_APAFctnStaData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_APAFctnStaData *>(to)->MergeFrom(
      static_cast<const PB_AD_APAFctnStaData &>(from));
}


void PB_AD_APAFctnStaData::MergeFrom(const PB_AD_APAFctnStaData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_APAFctnStaData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_apasysenasta() != 0) {
    _internal_set_ad_apasysenasta(from._internal_ad_apasysenasta());
  }
  if (from._internal_ad_apasta() != 0) {
    _internal_set_ad_apasta(from._internal_ad_apasta());
  }
  if (from._internal_ad_rpasta() != 0) {
    _internal_set_ad_rpasta(from._internal_ad_rpasta());
  }
  if (from._internal_ad_rmasta() != 0) {
    _internal_set_ad_rmasta(from._internal_ad_rmasta());
  }
  if (from._internal_ad_radssta() != 0) {
    _internal_set_ad_radssta(from._internal_ad_radssta());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_APAFctnStaData::CopyFrom(const PB_AD_APAFctnStaData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_APAFctnStaData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_APAFctnStaData::IsInitialized() const {
  return true;
}

void PB_AD_APAFctnStaData::InternalSwap(PB_AD_APAFctnStaData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_AD_APAFctnStaData, ad_radssta_)
      + sizeof(PB_AD_APAFctnStaData::ad_radssta_)
      - PROTOBUF_FIELD_OFFSET(PB_AD_APAFctnStaData, ad_apasysenasta_)>(
          reinterpret_cast<char*>(&ad_apasysenasta_),
          reinterpret_cast<char*>(&other->ad_apasysenasta_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_APAFctnStaData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[33]);
}

// ===================================================================

class PB_HUset_ADStartStyle::_Internal {
 public:
};

PB_HUset_ADStartStyle::PB_HUset_ADStartStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_ADStartStyle)
}
PB_HUset_ADStartStyle::PB_HUset_ADStartStyle(const PB_HUset_ADStartStyle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_adstartstyle_ = from.hu_adstartstyle_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_ADStartStyle)
}

inline void PB_HUset_ADStartStyle::SharedCtor() {
hu_adstartstyle_ = 0u;
}

PB_HUset_ADStartStyle::~PB_HUset_ADStartStyle() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_ADStartStyle)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_ADStartStyle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_ADStartStyle::ArenaDtor(void* object) {
  PB_HUset_ADStartStyle* _this = reinterpret_cast< PB_HUset_ADStartStyle* >(object);
  (void)_this;
}
void PB_HUset_ADStartStyle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_ADStartStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_ADStartStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_ADStartStyle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_adstartstyle_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_ADStartStyle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_ADStartStyle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_adstartstyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_ADStartStyle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_ADStartStyle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_ADStartStyle = 1;
  if (this->_internal_hu_adstartstyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_adstartstyle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_ADStartStyle)
  return target;
}

size_t PB_HUset_ADStartStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_ADStartStyle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_ADStartStyle = 1;
  if (this->_internal_hu_adstartstyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_adstartstyle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_ADStartStyle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_ADStartStyle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_ADStartStyle::GetClassData() const { return &_class_data_; }

void PB_HUset_ADStartStyle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_ADStartStyle *>(to)->MergeFrom(
      static_cast<const PB_HUset_ADStartStyle &>(from));
}


void PB_HUset_ADStartStyle::MergeFrom(const PB_HUset_ADStartStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_ADStartStyle)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_adstartstyle() != 0) {
    _internal_set_hu_adstartstyle(from._internal_hu_adstartstyle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_ADStartStyle::CopyFrom(const PB_HUset_ADStartStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_ADStartStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_ADStartStyle::IsInitialized() const {
  return true;
}

void PB_HUset_ADStartStyle::InternalSwap(PB_HUset_ADStartStyle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_adstartstyle_, other->hu_adstartstyle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_ADStartStyle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[34]);
}

// ===================================================================

class PB_ADASCruiseSet::_Internal {
 public:
};

PB_ADASCruiseSet::PB_ADASCruiseSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ADASCruiseSet)
}
PB_ADASCruiseSet::PB_ADASCruiseSet(const PB_ADASCruiseSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ad_curisemode_, &from.ad_curisemode_,
    static_cast<size_t>(reinterpret_cast<char*>(&ad_bsdlcaremindmode_) -
    reinterpret_cast<char*>(&ad_curisemode_)) + sizeof(ad_bsdlcaremindmode_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ADASCruiseSet)
}

inline void PB_ADASCruiseSet::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ad_curisemode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ad_bsdlcaremindmode_) -
    reinterpret_cast<char*>(&ad_curisemode_)) + sizeof(ad_bsdlcaremindmode_));
}

PB_ADASCruiseSet::~PB_ADASCruiseSet() {
  // @@protoc_insertion_point(destructor:Soa.PB_ADASCruiseSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ADASCruiseSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ADASCruiseSet::ArenaDtor(void* object) {
  PB_ADASCruiseSet* _this = reinterpret_cast< PB_ADASCruiseSet* >(object);
  (void)_this;
}
void PB_ADASCruiseSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ADASCruiseSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ADASCruiseSet::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ADASCruiseSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ad_curisemode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ad_bsdlcaremindmode_) -
      reinterpret_cast<char*>(&ad_curisemode_)) + sizeof(ad_bsdlcaremindmode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ADASCruiseSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_CuriseMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_curisemode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_IDAEnableStatus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ad_idaenablestatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_IDAstatus = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ad_idastatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_LaneChangeFrequency = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ad_lanechangefrequency_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_UDLCEnableStatus = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          ad_udlcenablestatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_NIDAudioWarStyle = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          ad_nidaudiowarstyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_CSLAEnableStatus = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          ad_cslaenablestatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_CSLmodeStatus = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          ad_cslmodestatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_OverspeedSoundWarningEnSt = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          ad_overspeedsoundwarningenst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_CSLWarnOffsetTp = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          ad_cslwarnoffsettp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_AbsOverSpdWarnOffset = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          ad_absoverspdwarnoffset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_RelOverSpdWarnOffset = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          ad_reloverspdwarnoffset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_AutoDriveStyle = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          ad_autodrivestyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_ADACCStyle = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          ad_adaccstyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_ADStartStyle = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          ad_adstartstyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_ADCurveStyle = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          ad_adcurvestyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_ADLanechangeStyle = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          ad_adlanechangestyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_VehicleStartRemindEnable = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          ad_vehiclestartremindenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_RCWEnableStatus = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          ad_rcwenablestatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_SEAModeStatus = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          ad_seamodestatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_BSDLCASetting = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          ad_bsdlcasetting_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_BSDLCARemindmode = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          ad_bsdlcaremindmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ADASCruiseSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ADASCruiseSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_CuriseMode = 1;
  if (this->_internal_ad_curisemode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_curisemode(), target);
  }

  // uint32 AD_IDAEnableStatus = 2;
  if (this->_internal_ad_idaenablestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ad_idaenablestatus(), target);
  }

  // uint32 AD_IDAstatus = 3;
  if (this->_internal_ad_idastatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ad_idastatus(), target);
  }

  // uint32 AD_LaneChangeFrequency = 4;
  if (this->_internal_ad_lanechangefrequency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_ad_lanechangefrequency(), target);
  }

  // uint32 AD_UDLCEnableStatus = 5;
  if (this->_internal_ad_udlcenablestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_ad_udlcenablestatus(), target);
  }

  // uint32 AD_NIDAudioWarStyle = 6;
  if (this->_internal_ad_nidaudiowarstyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_ad_nidaudiowarstyle(), target);
  }

  // uint32 AD_CSLAEnableStatus = 7;
  if (this->_internal_ad_cslaenablestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_ad_cslaenablestatus(), target);
  }

  // uint32 AD_CSLmodeStatus = 8;
  if (this->_internal_ad_cslmodestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_ad_cslmodestatus(), target);
  }

  // uint32 AD_OverspeedSoundWarningEnSt = 9;
  if (this->_internal_ad_overspeedsoundwarningenst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_ad_overspeedsoundwarningenst(), target);
  }

  // uint32 AD_CSLWarnOffsetTp = 10;
  if (this->_internal_ad_cslwarnoffsettp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_ad_cslwarnoffsettp(), target);
  }

  // uint32 AD_AbsOverSpdWarnOffset = 11;
  if (this->_internal_ad_absoverspdwarnoffset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_ad_absoverspdwarnoffset(), target);
  }

  // uint32 AD_RelOverSpdWarnOffset = 12;
  if (this->_internal_ad_reloverspdwarnoffset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_ad_reloverspdwarnoffset(), target);
  }

  // uint32 AD_AutoDriveStyle = 13;
  if (this->_internal_ad_autodrivestyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_ad_autodrivestyle(), target);
  }

  // uint32 AD_ADACCStyle = 14;
  if (this->_internal_ad_adaccstyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_ad_adaccstyle(), target);
  }

  // uint32 AD_ADStartStyle = 15;
  if (this->_internal_ad_adstartstyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_ad_adstartstyle(), target);
  }

  // uint32 AD_ADCurveStyle = 16;
  if (this->_internal_ad_adcurvestyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_ad_adcurvestyle(), target);
  }

  // uint32 AD_ADLanechangeStyle = 17;
  if (this->_internal_ad_adlanechangestyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_ad_adlanechangestyle(), target);
  }

  // uint32 AD_VehicleStartRemindEnable = 18;
  if (this->_internal_ad_vehiclestartremindenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_ad_vehiclestartremindenable(), target);
  }

  // uint32 AD_RCWEnableStatus = 19;
  if (this->_internal_ad_rcwenablestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(19, this->_internal_ad_rcwenablestatus(), target);
  }

  // uint32 AD_SEAModeStatus = 20;
  if (this->_internal_ad_seamodestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_ad_seamodestatus(), target);
  }

  // uint32 AD_BSDLCASetting = 21;
  if (this->_internal_ad_bsdlcasetting() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_ad_bsdlcasetting(), target);
  }

  // uint32 AD_BSDLCARemindmode = 22;
  if (this->_internal_ad_bsdlcaremindmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_ad_bsdlcaremindmode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ADASCruiseSet)
  return target;
}

size_t PB_ADASCruiseSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ADASCruiseSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_CuriseMode = 1;
  if (this->_internal_ad_curisemode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_curisemode());
  }

  // uint32 AD_IDAEnableStatus = 2;
  if (this->_internal_ad_idaenablestatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_idaenablestatus());
  }

  // uint32 AD_IDAstatus = 3;
  if (this->_internal_ad_idastatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_idastatus());
  }

  // uint32 AD_LaneChangeFrequency = 4;
  if (this->_internal_ad_lanechangefrequency() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_lanechangefrequency());
  }

  // uint32 AD_UDLCEnableStatus = 5;
  if (this->_internal_ad_udlcenablestatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_udlcenablestatus());
  }

  // uint32 AD_NIDAudioWarStyle = 6;
  if (this->_internal_ad_nidaudiowarstyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_nidaudiowarstyle());
  }

  // uint32 AD_CSLAEnableStatus = 7;
  if (this->_internal_ad_cslaenablestatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_cslaenablestatus());
  }

  // uint32 AD_CSLmodeStatus = 8;
  if (this->_internal_ad_cslmodestatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_cslmodestatus());
  }

  // uint32 AD_OverspeedSoundWarningEnSt = 9;
  if (this->_internal_ad_overspeedsoundwarningenst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_overspeedsoundwarningenst());
  }

  // uint32 AD_CSLWarnOffsetTp = 10;
  if (this->_internal_ad_cslwarnoffsettp() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_cslwarnoffsettp());
  }

  // uint32 AD_AbsOverSpdWarnOffset = 11;
  if (this->_internal_ad_absoverspdwarnoffset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_absoverspdwarnoffset());
  }

  // uint32 AD_RelOverSpdWarnOffset = 12;
  if (this->_internal_ad_reloverspdwarnoffset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_reloverspdwarnoffset());
  }

  // uint32 AD_AutoDriveStyle = 13;
  if (this->_internal_ad_autodrivestyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_autodrivestyle());
  }

  // uint32 AD_ADACCStyle = 14;
  if (this->_internal_ad_adaccstyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_adaccstyle());
  }

  // uint32 AD_ADStartStyle = 15;
  if (this->_internal_ad_adstartstyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_adstartstyle());
  }

  // uint32 AD_ADCurveStyle = 16;
  if (this->_internal_ad_adcurvestyle() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_adcurvestyle());
  }

  // uint32 AD_ADLanechangeStyle = 17;
  if (this->_internal_ad_adlanechangestyle() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_adlanechangestyle());
  }

  // uint32 AD_VehicleStartRemindEnable = 18;
  if (this->_internal_ad_vehiclestartremindenable() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_vehiclestartremindenable());
  }

  // uint32 AD_RCWEnableStatus = 19;
  if (this->_internal_ad_rcwenablestatus() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_rcwenablestatus());
  }

  // uint32 AD_SEAModeStatus = 20;
  if (this->_internal_ad_seamodestatus() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_seamodestatus());
  }

  // uint32 AD_BSDLCASetting = 21;
  if (this->_internal_ad_bsdlcasetting() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_bsdlcasetting());
  }

  // uint32 AD_BSDLCARemindmode = 22;
  if (this->_internal_ad_bsdlcaremindmode() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ad_bsdlcaremindmode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ADASCruiseSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ADASCruiseSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ADASCruiseSet::GetClassData() const { return &_class_data_; }

void PB_ADASCruiseSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ADASCruiseSet *>(to)->MergeFrom(
      static_cast<const PB_ADASCruiseSet &>(from));
}


void PB_ADASCruiseSet::MergeFrom(const PB_ADASCruiseSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ADASCruiseSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_curisemode() != 0) {
    _internal_set_ad_curisemode(from._internal_ad_curisemode());
  }
  if (from._internal_ad_idaenablestatus() != 0) {
    _internal_set_ad_idaenablestatus(from._internal_ad_idaenablestatus());
  }
  if (from._internal_ad_idastatus() != 0) {
    _internal_set_ad_idastatus(from._internal_ad_idastatus());
  }
  if (from._internal_ad_lanechangefrequency() != 0) {
    _internal_set_ad_lanechangefrequency(from._internal_ad_lanechangefrequency());
  }
  if (from._internal_ad_udlcenablestatus() != 0) {
    _internal_set_ad_udlcenablestatus(from._internal_ad_udlcenablestatus());
  }
  if (from._internal_ad_nidaudiowarstyle() != 0) {
    _internal_set_ad_nidaudiowarstyle(from._internal_ad_nidaudiowarstyle());
  }
  if (from._internal_ad_cslaenablestatus() != 0) {
    _internal_set_ad_cslaenablestatus(from._internal_ad_cslaenablestatus());
  }
  if (from._internal_ad_cslmodestatus() != 0) {
    _internal_set_ad_cslmodestatus(from._internal_ad_cslmodestatus());
  }
  if (from._internal_ad_overspeedsoundwarningenst() != 0) {
    _internal_set_ad_overspeedsoundwarningenst(from._internal_ad_overspeedsoundwarningenst());
  }
  if (from._internal_ad_cslwarnoffsettp() != 0) {
    _internal_set_ad_cslwarnoffsettp(from._internal_ad_cslwarnoffsettp());
  }
  if (from._internal_ad_absoverspdwarnoffset() != 0) {
    _internal_set_ad_absoverspdwarnoffset(from._internal_ad_absoverspdwarnoffset());
  }
  if (from._internal_ad_reloverspdwarnoffset() != 0) {
    _internal_set_ad_reloverspdwarnoffset(from._internal_ad_reloverspdwarnoffset());
  }
  if (from._internal_ad_autodrivestyle() != 0) {
    _internal_set_ad_autodrivestyle(from._internal_ad_autodrivestyle());
  }
  if (from._internal_ad_adaccstyle() != 0) {
    _internal_set_ad_adaccstyle(from._internal_ad_adaccstyle());
  }
  if (from._internal_ad_adstartstyle() != 0) {
    _internal_set_ad_adstartstyle(from._internal_ad_adstartstyle());
  }
  if (from._internal_ad_adcurvestyle() != 0) {
    _internal_set_ad_adcurvestyle(from._internal_ad_adcurvestyle());
  }
  if (from._internal_ad_adlanechangestyle() != 0) {
    _internal_set_ad_adlanechangestyle(from._internal_ad_adlanechangestyle());
  }
  if (from._internal_ad_vehiclestartremindenable() != 0) {
    _internal_set_ad_vehiclestartremindenable(from._internal_ad_vehiclestartremindenable());
  }
  if (from._internal_ad_rcwenablestatus() != 0) {
    _internal_set_ad_rcwenablestatus(from._internal_ad_rcwenablestatus());
  }
  if (from._internal_ad_seamodestatus() != 0) {
    _internal_set_ad_seamodestatus(from._internal_ad_seamodestatus());
  }
  if (from._internal_ad_bsdlcasetting() != 0) {
    _internal_set_ad_bsdlcasetting(from._internal_ad_bsdlcasetting());
  }
  if (from._internal_ad_bsdlcaremindmode() != 0) {
    _internal_set_ad_bsdlcaremindmode(from._internal_ad_bsdlcaremindmode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ADASCruiseSet::CopyFrom(const PB_ADASCruiseSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ADASCruiseSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ADASCruiseSet::IsInitialized() const {
  return true;
}

void PB_ADASCruiseSet::InternalSwap(PB_ADASCruiseSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ADASCruiseSet, ad_bsdlcaremindmode_)
      + sizeof(PB_ADASCruiseSet::ad_bsdlcaremindmode_)
      - PROTOBUF_FIELD_OFFSET(PB_ADASCruiseSet, ad_curisemode_)>(
          reinterpret_cast<char*>(&ad_curisemode_),
          reinterpret_cast<char*>(&other->ad_curisemode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ADASCruiseSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[35]);
}

// ===================================================================

class PB_HUset_CSLWarnOffsetTp::_Internal {
 public:
};

PB_HUset_CSLWarnOffsetTp::PB_HUset_CSLWarnOffsetTp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_CSLWarnOffsetTp)
}
PB_HUset_CSLWarnOffsetTp::PB_HUset_CSLWarnOffsetTp(const PB_HUset_CSLWarnOffsetTp& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_cslwarnoffsettp_ = from.hu_cslwarnoffsettp_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_CSLWarnOffsetTp)
}

inline void PB_HUset_CSLWarnOffsetTp::SharedCtor() {
hu_cslwarnoffsettp_ = 0u;
}

PB_HUset_CSLWarnOffsetTp::~PB_HUset_CSLWarnOffsetTp() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_CSLWarnOffsetTp)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_CSLWarnOffsetTp::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_CSLWarnOffsetTp::ArenaDtor(void* object) {
  PB_HUset_CSLWarnOffsetTp* _this = reinterpret_cast< PB_HUset_CSLWarnOffsetTp* >(object);
  (void)_this;
}
void PB_HUset_CSLWarnOffsetTp::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_CSLWarnOffsetTp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_CSLWarnOffsetTp::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_CSLWarnOffsetTp)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_cslwarnoffsettp_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_CSLWarnOffsetTp::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_CSLWarnOffsetTp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_cslwarnoffsettp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_CSLWarnOffsetTp::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_CSLWarnOffsetTp)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_CSLWarnOffsetTp = 1;
  if (this->_internal_hu_cslwarnoffsettp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_cslwarnoffsettp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_CSLWarnOffsetTp)
  return target;
}

size_t PB_HUset_CSLWarnOffsetTp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_CSLWarnOffsetTp)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_CSLWarnOffsetTp = 1;
  if (this->_internal_hu_cslwarnoffsettp() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_cslwarnoffsettp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_CSLWarnOffsetTp::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_CSLWarnOffsetTp::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_CSLWarnOffsetTp::GetClassData() const { return &_class_data_; }

void PB_HUset_CSLWarnOffsetTp::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_CSLWarnOffsetTp *>(to)->MergeFrom(
      static_cast<const PB_HUset_CSLWarnOffsetTp &>(from));
}


void PB_HUset_CSLWarnOffsetTp::MergeFrom(const PB_HUset_CSLWarnOffsetTp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_CSLWarnOffsetTp)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_cslwarnoffsettp() != 0) {
    _internal_set_hu_cslwarnoffsettp(from._internal_hu_cslwarnoffsettp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_CSLWarnOffsetTp::CopyFrom(const PB_HUset_CSLWarnOffsetTp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_CSLWarnOffsetTp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_CSLWarnOffsetTp::IsInitialized() const {
  return true;
}

void PB_HUset_CSLWarnOffsetTp::InternalSwap(PB_HUset_CSLWarnOffsetTp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_cslwarnoffsettp_, other->hu_cslwarnoffsettp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_CSLWarnOffsetTp::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[36]);
}

// ===================================================================

class PB_DoorDrvStAll_Struct::_Internal {
 public:
};

PB_DoorDrvStAll_Struct::PB_DoorDrvStAll_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  doordrvstall_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_DoorDrvStAll_Struct)
}
PB_DoorDrvStAll_Struct::PB_DoorDrvStAll_Struct(const PB_DoorDrvStAll_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      doordrvstall_(from.doordrvstall_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_DoorDrvStAll_Struct)
}

inline void PB_DoorDrvStAll_Struct::SharedCtor() {
}

PB_DoorDrvStAll_Struct::~PB_DoorDrvStAll_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_DoorDrvStAll_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_DoorDrvStAll_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_DoorDrvStAll_Struct::ArenaDtor(void* object) {
  PB_DoorDrvStAll_Struct* _this = reinterpret_cast< PB_DoorDrvStAll_Struct* >(object);
  (void)_this;
}
void PB_DoorDrvStAll_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_DoorDrvStAll_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_DoorDrvStAll_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_DoorDrvStAll_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  doordrvstall_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_DoorDrvStAll_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 DoorDrvStAll = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_doordrvstall(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_doordrvstall(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_DoorDrvStAll_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_DoorDrvStAll_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 DoorDrvStAll = 1;
  {
    int byte_size = _doordrvstall_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_doordrvstall(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_DoorDrvStAll_Struct)
  return target;
}

size_t PB_DoorDrvStAll_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_DoorDrvStAll_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 DoorDrvStAll = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->doordrvstall_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _doordrvstall_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_DoorDrvStAll_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_DoorDrvStAll_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_DoorDrvStAll_Struct::GetClassData() const { return &_class_data_; }

void PB_DoorDrvStAll_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_DoorDrvStAll_Struct *>(to)->MergeFrom(
      static_cast<const PB_DoorDrvStAll_Struct &>(from));
}


void PB_DoorDrvStAll_Struct::MergeFrom(const PB_DoorDrvStAll_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_DoorDrvStAll_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  doordrvstall_.MergeFrom(from.doordrvstall_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_DoorDrvStAll_Struct::CopyFrom(const PB_DoorDrvStAll_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_DoorDrvStAll_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_DoorDrvStAll_Struct::IsInitialized() const {
  return true;
}

void PB_DoorDrvStAll_Struct::InternalSwap(PB_DoorDrvStAll_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  doordrvstall_.InternalSwap(&other->doordrvstall_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_DoorDrvStAll_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[37]);
}

// ===================================================================

class PB_LaneLedFltSt::_Internal {
 public:
};

PB_LaneLedFltSt::PB_LaneLedFltSt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_LaneLedFltSt)
}
PB_LaneLedFltSt::PB_LaneLedFltSt(const PB_LaneLedFltSt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lelaneledfltst_, &from.lelaneledfltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&rilaneledfltst_) -
    reinterpret_cast<char*>(&lelaneledfltst_)) + sizeof(rilaneledfltst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_LaneLedFltSt)
}

inline void PB_LaneLedFltSt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lelaneledfltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rilaneledfltst_) -
    reinterpret_cast<char*>(&lelaneledfltst_)) + sizeof(rilaneledfltst_));
}

PB_LaneLedFltSt::~PB_LaneLedFltSt() {
  // @@protoc_insertion_point(destructor:Soa.PB_LaneLedFltSt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_LaneLedFltSt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_LaneLedFltSt::ArenaDtor(void* object) {
  PB_LaneLedFltSt* _this = reinterpret_cast< PB_LaneLedFltSt* >(object);
  (void)_this;
}
void PB_LaneLedFltSt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_LaneLedFltSt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_LaneLedFltSt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_LaneLedFltSt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lelaneledfltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rilaneledfltst_) -
      reinterpret_cast<char*>(&lelaneledfltst_)) + sizeof(rilaneledfltst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_LaneLedFltSt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 LeLaneLedFltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lelaneledfltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RiLaneLedFltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          rilaneledfltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_LaneLedFltSt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_LaneLedFltSt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 LeLaneLedFltSt = 1;
  if (this->_internal_lelaneledfltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_lelaneledfltst(), target);
  }

  // uint32 RiLaneLedFltSt = 2;
  if (this->_internal_rilaneledfltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_rilaneledfltst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_LaneLedFltSt)
  return target;
}

size_t PB_LaneLedFltSt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_LaneLedFltSt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 LeLaneLedFltSt = 1;
  if (this->_internal_lelaneledfltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lelaneledfltst());
  }

  // uint32 RiLaneLedFltSt = 2;
  if (this->_internal_rilaneledfltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rilaneledfltst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_LaneLedFltSt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_LaneLedFltSt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_LaneLedFltSt::GetClassData() const { return &_class_data_; }

void PB_LaneLedFltSt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_LaneLedFltSt *>(to)->MergeFrom(
      static_cast<const PB_LaneLedFltSt &>(from));
}


void PB_LaneLedFltSt::MergeFrom(const PB_LaneLedFltSt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_LaneLedFltSt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lelaneledfltst() != 0) {
    _internal_set_lelaneledfltst(from._internal_lelaneledfltst());
  }
  if (from._internal_rilaneledfltst() != 0) {
    _internal_set_rilaneledfltst(from._internal_rilaneledfltst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_LaneLedFltSt::CopyFrom(const PB_LaneLedFltSt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_LaneLedFltSt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LaneLedFltSt::IsInitialized() const {
  return true;
}

void PB_LaneLedFltSt::InternalSwap(PB_LaneLedFltSt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_LaneLedFltSt, rilaneledfltst_)
      + sizeof(PB_LaneLedFltSt::rilaneledfltst_)
      - PROTOBUF_FIELD_OFFSET(PB_LaneLedFltSt, lelaneledfltst_)>(
          reinterpret_cast<char*>(&lelaneledfltst_),
          reinterpret_cast<char*>(&other->lelaneledfltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_LaneLedFltSt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[38]);
}

// ===================================================================

class PB_EDCset_NIDSelfLrngReq::_Internal {
 public:
};

PB_EDCset_NIDSelfLrngReq::PB_EDCset_NIDSelfLrngReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDCset_NIDSelfLrngReq)
}
PB_EDCset_NIDSelfLrngReq::PB_EDCset_NIDSelfLrngReq(const PB_EDCset_NIDSelfLrngReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_nidselflrngreq_ = from.edc_nidselflrngreq_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDCset_NIDSelfLrngReq)
}

inline void PB_EDCset_NIDSelfLrngReq::SharedCtor() {
edc_nidselflrngreq_ = 0u;
}

PB_EDCset_NIDSelfLrngReq::~PB_EDCset_NIDSelfLrngReq() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDCset_NIDSelfLrngReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDCset_NIDSelfLrngReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDCset_NIDSelfLrngReq::ArenaDtor(void* object) {
  PB_EDCset_NIDSelfLrngReq* _this = reinterpret_cast< PB_EDCset_NIDSelfLrngReq* >(object);
  (void)_this;
}
void PB_EDCset_NIDSelfLrngReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDCset_NIDSelfLrngReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDCset_NIDSelfLrngReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDCset_NIDSelfLrngReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_nidselflrngreq_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDCset_NIDSelfLrngReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_NIDSelfLrngReq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_nidselflrngreq_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDCset_NIDSelfLrngReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDCset_NIDSelfLrngReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_NIDSelfLrngReq = 1;
  if (this->_internal_edc_nidselflrngreq() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_nidselflrngreq(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDCset_NIDSelfLrngReq)
  return target;
}

size_t PB_EDCset_NIDSelfLrngReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDCset_NIDSelfLrngReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_NIDSelfLrngReq = 1;
  if (this->_internal_edc_nidselflrngreq() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_nidselflrngreq());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDCset_NIDSelfLrngReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDCset_NIDSelfLrngReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDCset_NIDSelfLrngReq::GetClassData() const { return &_class_data_; }

void PB_EDCset_NIDSelfLrngReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDCset_NIDSelfLrngReq *>(to)->MergeFrom(
      static_cast<const PB_EDCset_NIDSelfLrngReq &>(from));
}


void PB_EDCset_NIDSelfLrngReq::MergeFrom(const PB_EDCset_NIDSelfLrngReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDCset_NIDSelfLrngReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_nidselflrngreq() != 0) {
    _internal_set_edc_nidselflrngreq(from._internal_edc_nidselflrngreq());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDCset_NIDSelfLrngReq::CopyFrom(const PB_EDCset_NIDSelfLrngReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDCset_NIDSelfLrngReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDCset_NIDSelfLrngReq::IsInitialized() const {
  return true;
}

void PB_EDCset_NIDSelfLrngReq::InternalSwap(PB_EDCset_NIDSelfLrngReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_nidselflrngreq_, other->edc_nidselflrngreq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDCset_NIDSelfLrngReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[39]);
}

// ===================================================================

class PB_EDCset_PopUpWindowOperate::_Internal {
 public:
};

PB_EDCset_PopUpWindowOperate::PB_EDCset_PopUpWindowOperate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDCset_PopUpWindowOperate)
}
PB_EDCset_PopUpWindowOperate::PB_EDCset_PopUpWindowOperate(const PB_EDCset_PopUpWindowOperate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_popupwindowoperate_ = from.edc_popupwindowoperate_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDCset_PopUpWindowOperate)
}

inline void PB_EDCset_PopUpWindowOperate::SharedCtor() {
edc_popupwindowoperate_ = 0u;
}

PB_EDCset_PopUpWindowOperate::~PB_EDCset_PopUpWindowOperate() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDCset_PopUpWindowOperate)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDCset_PopUpWindowOperate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDCset_PopUpWindowOperate::ArenaDtor(void* object) {
  PB_EDCset_PopUpWindowOperate* _this = reinterpret_cast< PB_EDCset_PopUpWindowOperate* >(object);
  (void)_this;
}
void PB_EDCset_PopUpWindowOperate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDCset_PopUpWindowOperate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDCset_PopUpWindowOperate::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDCset_PopUpWindowOperate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_popupwindowoperate_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDCset_PopUpWindowOperate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_PopUpWindowOperate = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_popupwindowoperate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDCset_PopUpWindowOperate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDCset_PopUpWindowOperate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_PopUpWindowOperate = 1;
  if (this->_internal_edc_popupwindowoperate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_popupwindowoperate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDCset_PopUpWindowOperate)
  return target;
}

size_t PB_EDCset_PopUpWindowOperate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDCset_PopUpWindowOperate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_PopUpWindowOperate = 1;
  if (this->_internal_edc_popupwindowoperate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_popupwindowoperate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDCset_PopUpWindowOperate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDCset_PopUpWindowOperate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDCset_PopUpWindowOperate::GetClassData() const { return &_class_data_; }

void PB_EDCset_PopUpWindowOperate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDCset_PopUpWindowOperate *>(to)->MergeFrom(
      static_cast<const PB_EDCset_PopUpWindowOperate &>(from));
}


void PB_EDCset_PopUpWindowOperate::MergeFrom(const PB_EDCset_PopUpWindowOperate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDCset_PopUpWindowOperate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_popupwindowoperate() != 0) {
    _internal_set_edc_popupwindowoperate(from._internal_edc_popupwindowoperate());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDCset_PopUpWindowOperate::CopyFrom(const PB_EDCset_PopUpWindowOperate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDCset_PopUpWindowOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDCset_PopUpWindowOperate::IsInitialized() const {
  return true;
}

void PB_EDCset_PopUpWindowOperate::InternalSwap(PB_EDCset_PopUpWindowOperate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_popupwindowoperate_, other->edc_popupwindowoperate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDCset_PopUpWindowOperate::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[40]);
}

// ===================================================================

class PB_ResponseInfo::_Internal {
 public:
};

PB_ResponseInfo::PB_ResponseInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ResponseInfo)
}
PB_ResponseInfo::PB_ResponseInfo(const PB_ResponseInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rtncode_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(rtncode_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ResponseInfo)
}

inline void PB_ResponseInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&request_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rtncode_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(rtncode_));
}

PB_ResponseInfo::~PB_ResponseInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_ResponseInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ResponseInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ResponseInfo::ArenaDtor(void* object) {
  PB_ResponseInfo* _this = reinterpret_cast< PB_ResponseInfo* >(object);
  (void)_this;
}
void PB_ResponseInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ResponseInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ResponseInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ResponseInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rtncode_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(rtncode_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ResponseInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Request_ID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Session_ID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VehField = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          vehfield_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SourceMod = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          sourcemod_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RtnCode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          rtncode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ResponseInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ResponseInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Request_ID = 1;
  if (this->_internal_request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // uint32 Session_ID = 2;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_session_id(), target);
  }

  // uint32 VehField = 3;
  if (this->_internal_vehfield() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_vehfield(), target);
  }

  // uint32 SourceMod = 4;
  if (this->_internal_sourcemod() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_sourcemod(), target);
  }

  // uint32 RtnCode = 5;
  if (this->_internal_rtncode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_rtncode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ResponseInfo)
  return target;
}

size_t PB_ResponseInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ResponseInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Request_ID = 1;
  if (this->_internal_request_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_request_id());
  }

  // uint32 Session_ID = 2;
  if (this->_internal_session_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_session_id());
  }

  // uint32 VehField = 3;
  if (this->_internal_vehfield() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vehfield());
  }

  // uint32 SourceMod = 4;
  if (this->_internal_sourcemod() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_sourcemod());
  }

  // uint32 RtnCode = 5;
  if (this->_internal_rtncode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rtncode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ResponseInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ResponseInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ResponseInfo::GetClassData() const { return &_class_data_; }

void PB_ResponseInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ResponseInfo *>(to)->MergeFrom(
      static_cast<const PB_ResponseInfo &>(from));
}


void PB_ResponseInfo::MergeFrom(const PB_ResponseInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ResponseInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
  if (from._internal_session_id() != 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_vehfield() != 0) {
    _internal_set_vehfield(from._internal_vehfield());
  }
  if (from._internal_sourcemod() != 0) {
    _internal_set_sourcemod(from._internal_sourcemod());
  }
  if (from._internal_rtncode() != 0) {
    _internal_set_rtncode(from._internal_rtncode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ResponseInfo::CopyFrom(const PB_ResponseInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ResponseInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ResponseInfo::IsInitialized() const {
  return true;
}

void PB_ResponseInfo::InternalSwap(PB_ResponseInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ResponseInfo, rtncode_)
      + sizeof(PB_ResponseInfo::rtncode_)
      - PROTOBUF_FIELD_OFFSET(PB_ResponseInfo, request_id_)>(
          reinterpret_cast<char*>(&request_id_),
          reinterpret_cast<char*>(&other->request_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ResponseInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[41]);
}

// ===================================================================

class PB_FileEntity::_Internal {
 public:
};

PB_FileEntity::PB_FileEntity(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  payload_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_FileEntity)
}
PB_FileEntity::PB_FileEntity(const PB_FileEntity& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      payload_(from.payload_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  verifycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    verifycode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_verifycode().empty()) {
    verifycode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_verifycode(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Soa.PB_FileEntity)
}

inline void PB_FileEntity::SharedCtor() {
verifycode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  verifycode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PB_FileEntity::~PB_FileEntity() {
  // @@protoc_insertion_point(destructor:Soa.PB_FileEntity)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_FileEntity::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  verifycode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PB_FileEntity::ArenaDtor(void* object) {
  PB_FileEntity* _this = reinterpret_cast< PB_FileEntity* >(object);
  (void)_this;
}
void PB_FileEntity::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_FileEntity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_FileEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_FileEntity)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.Clear();
  verifycode_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_FileEntity::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes verifyCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_verifycode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 payload = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_payload(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 16) {
          _internal_add_payload(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_FileEntity::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_FileEntity)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes verifyCode = 1;
  if (!this->_internal_verifycode().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_verifycode(), target);
  }

  // repeated uint32 payload = 2;
  {
    int byte_size = _payload_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_payload(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_FileEntity)
  return target;
}

size_t PB_FileEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_FileEntity)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 payload = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->payload_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _payload_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bytes verifyCode = 1;
  if (!this->_internal_verifycode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_verifycode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_FileEntity::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_FileEntity::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_FileEntity::GetClassData() const { return &_class_data_; }

void PB_FileEntity::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_FileEntity *>(to)->MergeFrom(
      static_cast<const PB_FileEntity &>(from));
}


void PB_FileEntity::MergeFrom(const PB_FileEntity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_FileEntity)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  payload_.MergeFrom(from.payload_);
  if (!from._internal_verifycode().empty()) {
    _internal_set_verifycode(from._internal_verifycode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_FileEntity::CopyFrom(const PB_FileEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_FileEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FileEntity::IsInitialized() const {
  return true;
}

void PB_FileEntity::InternalSwap(PB_FileEntity* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  payload_.InternalSwap(&other->payload_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &verifycode_, lhs_arena,
      &other->verifycode_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_FileEntity::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[42]);
}

// ===================================================================

class PB_HUset_AutoDriveStyle::_Internal {
 public:
};

PB_HUset_AutoDriveStyle::PB_HUset_AutoDriveStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_AutoDriveStyle)
}
PB_HUset_AutoDriveStyle::PB_HUset_AutoDriveStyle(const PB_HUset_AutoDriveStyle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_autodrivestyle_ = from.hu_autodrivestyle_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_AutoDriveStyle)
}

inline void PB_HUset_AutoDriveStyle::SharedCtor() {
hu_autodrivestyle_ = 0u;
}

PB_HUset_AutoDriveStyle::~PB_HUset_AutoDriveStyle() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_AutoDriveStyle)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_AutoDriveStyle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_AutoDriveStyle::ArenaDtor(void* object) {
  PB_HUset_AutoDriveStyle* _this = reinterpret_cast< PB_HUset_AutoDriveStyle* >(object);
  (void)_this;
}
void PB_HUset_AutoDriveStyle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_AutoDriveStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_AutoDriveStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_AutoDriveStyle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_autodrivestyle_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_AutoDriveStyle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_AutoDriveStyle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_autodrivestyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_AutoDriveStyle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_AutoDriveStyle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_AutoDriveStyle = 1;
  if (this->_internal_hu_autodrivestyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_autodrivestyle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_AutoDriveStyle)
  return target;
}

size_t PB_HUset_AutoDriveStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_AutoDriveStyle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_AutoDriveStyle = 1;
  if (this->_internal_hu_autodrivestyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_autodrivestyle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_AutoDriveStyle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_AutoDriveStyle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_AutoDriveStyle::GetClassData() const { return &_class_data_; }

void PB_HUset_AutoDriveStyle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_AutoDriveStyle *>(to)->MergeFrom(
      static_cast<const PB_HUset_AutoDriveStyle &>(from));
}


void PB_HUset_AutoDriveStyle::MergeFrom(const PB_HUset_AutoDriveStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_AutoDriveStyle)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_autodrivestyle() != 0) {
    _internal_set_hu_autodrivestyle(from._internal_hu_autodrivestyle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_AutoDriveStyle::CopyFrom(const PB_HUset_AutoDriveStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_AutoDriveStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_AutoDriveStyle::IsInitialized() const {
  return true;
}

void PB_HUset_AutoDriveStyle::InternalSwap(PB_HUset_AutoDriveStyle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_autodrivestyle_, other->hu_autodrivestyle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_AutoDriveStyle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[43]);
}

// ===================================================================

class PB_C2TripSum::_Internal {
 public:
};

PB_C2TripSum::PB_C2TripSum(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_C2TripSum)
}
PB_C2TripSum::PB_C2TripSum(const PB_C2TripSum& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  c2_useridnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    c2_useridnumber_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_c2_useridnumber().empty()) {
    c2_useridnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_c2_useridnumber(), 
      GetArenaForAllocation());
  }
  ::memcpy(&ads_totalmiles_, &from.ads_totalmiles_,
    static_cast<size_t>(reinterpret_cast<char*>(&ads_adsusetime_) -
    reinterpret_cast<char*>(&ads_totalmiles_)) + sizeof(ads_adsusetime_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_C2TripSum)
}

inline void PB_C2TripSum::SharedCtor() {
c2_useridnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  c2_useridnumber_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ads_totalmiles_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ads_adsusetime_) -
    reinterpret_cast<char*>(&ads_totalmiles_)) + sizeof(ads_adsusetime_));
}

PB_C2TripSum::~PB_C2TripSum() {
  // @@protoc_insertion_point(destructor:Soa.PB_C2TripSum)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_C2TripSum::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  c2_useridnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PB_C2TripSum::ArenaDtor(void* object) {
  PB_C2TripSum* _this = reinterpret_cast< PB_C2TripSum* >(object);
  (void)_this;
}
void PB_C2TripSum::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_C2TripSum::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_C2TripSum::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_C2TripSum)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  c2_useridnumber_.ClearToEmpty();
  ::memset(&ads_totalmiles_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ads_adsusetime_) -
      reinterpret_cast<char*>(&ads_totalmiles_)) + sizeof(ads_adsusetime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_C2TripSum::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float ADS_TotalMiles = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          ads_totalmiles_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float ADS_NIDMiles = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          ads_nidmiles_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADS_SafeFunTriTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ads_safefuntritime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADS_AEBTriTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ads_aebtritime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADS_AESTriTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          ads_aestritime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADS_ELKTriTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          ads_elktritime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADS_ThroughRampTime = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          ads_throughramptime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADS_ThroughIntersectionTime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          ads_throughintersectiontime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADS_LaneChangeTime = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          ads_lanechangetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADS_TakeoverTime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          ads_takeovertime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADS_ObsAvoidTime = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          ads_obsavoidtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float ADS_NIDLongestMiles = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 101)) {
          ads_nidlongestmiles_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_UseTime = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          apa_usetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 APA_SaveTime = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          apa_savetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes C2_UserIDnumber = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          auto str = _internal_mutable_c2_useridnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADS_ADSUseTime = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          ads_adsusetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_C2TripSum::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_C2TripSum)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float ADS_TotalMiles = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ads_totalmiles = this->_internal_ads_totalmiles();
  uint32_t raw_ads_totalmiles;
  memcpy(&raw_ads_totalmiles, &tmp_ads_totalmiles, sizeof(tmp_ads_totalmiles));
  if (raw_ads_totalmiles != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_ads_totalmiles(), target);
  }

  // float ADS_NIDMiles = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ads_nidmiles = this->_internal_ads_nidmiles();
  uint32_t raw_ads_nidmiles;
  memcpy(&raw_ads_nidmiles, &tmp_ads_nidmiles, sizeof(tmp_ads_nidmiles));
  if (raw_ads_nidmiles != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_ads_nidmiles(), target);
  }

  // uint32 ADS_SafeFunTriTime = 3;
  if (this->_internal_ads_safefuntritime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ads_safefuntritime(), target);
  }

  // uint32 ADS_AEBTriTime = 4;
  if (this->_internal_ads_aebtritime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_ads_aebtritime(), target);
  }

  // uint32 ADS_AESTriTime = 5;
  if (this->_internal_ads_aestritime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_ads_aestritime(), target);
  }

  // uint32 ADS_ELKTriTime = 6;
  if (this->_internal_ads_elktritime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_ads_elktritime(), target);
  }

  // uint32 ADS_ThroughRampTime = 7;
  if (this->_internal_ads_throughramptime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_ads_throughramptime(), target);
  }

  // uint32 ADS_ThroughIntersectionTime = 8;
  if (this->_internal_ads_throughintersectiontime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_ads_throughintersectiontime(), target);
  }

  // uint32 ADS_LaneChangeTime = 9;
  if (this->_internal_ads_lanechangetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_ads_lanechangetime(), target);
  }

  // uint32 ADS_TakeoverTime = 10;
  if (this->_internal_ads_takeovertime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_ads_takeovertime(), target);
  }

  // uint32 ADS_ObsAvoidTime = 11;
  if (this->_internal_ads_obsavoidtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_ads_obsavoidtime(), target);
  }

  // float ADS_NIDLongestMiles = 12;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ads_nidlongestmiles = this->_internal_ads_nidlongestmiles();
  uint32_t raw_ads_nidlongestmiles;
  memcpy(&raw_ads_nidlongestmiles, &tmp_ads_nidlongestmiles, sizeof(tmp_ads_nidlongestmiles));
  if (raw_ads_nidlongestmiles != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_ads_nidlongestmiles(), target);
  }

  // uint32 APA_UseTime = 13;
  if (this->_internal_apa_usetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_apa_usetime(), target);
  }

  // uint32 APA_SaveTime = 14;
  if (this->_internal_apa_savetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_apa_savetime(), target);
  }

  // bytes C2_UserIDnumber = 15;
  if (!this->_internal_c2_useridnumber().empty()) {
    target = stream->WriteBytesMaybeAliased(
        15, this->_internal_c2_useridnumber(), target);
  }

  // uint32 ADS_ADSUseTime = 16;
  if (this->_internal_ads_adsusetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_ads_adsusetime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_C2TripSum)
  return target;
}

size_t PB_C2TripSum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_C2TripSum)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes C2_UserIDnumber = 15;
  if (!this->_internal_c2_useridnumber().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_c2_useridnumber());
  }

  // float ADS_TotalMiles = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ads_totalmiles = this->_internal_ads_totalmiles();
  uint32_t raw_ads_totalmiles;
  memcpy(&raw_ads_totalmiles, &tmp_ads_totalmiles, sizeof(tmp_ads_totalmiles));
  if (raw_ads_totalmiles != 0) {
    total_size += 1 + 4;
  }

  // float ADS_NIDMiles = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ads_nidmiles = this->_internal_ads_nidmiles();
  uint32_t raw_ads_nidmiles;
  memcpy(&raw_ads_nidmiles, &tmp_ads_nidmiles, sizeof(tmp_ads_nidmiles));
  if (raw_ads_nidmiles != 0) {
    total_size += 1 + 4;
  }

  // uint32 ADS_SafeFunTriTime = 3;
  if (this->_internal_ads_safefuntritime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ads_safefuntritime());
  }

  // uint32 ADS_AEBTriTime = 4;
  if (this->_internal_ads_aebtritime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ads_aebtritime());
  }

  // uint32 ADS_AESTriTime = 5;
  if (this->_internal_ads_aestritime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ads_aestritime());
  }

  // uint32 ADS_ELKTriTime = 6;
  if (this->_internal_ads_elktritime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ads_elktritime());
  }

  // uint32 ADS_ThroughRampTime = 7;
  if (this->_internal_ads_throughramptime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ads_throughramptime());
  }

  // uint32 ADS_ThroughIntersectionTime = 8;
  if (this->_internal_ads_throughintersectiontime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ads_throughintersectiontime());
  }

  // uint32 ADS_LaneChangeTime = 9;
  if (this->_internal_ads_lanechangetime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ads_lanechangetime());
  }

  // uint32 ADS_TakeoverTime = 10;
  if (this->_internal_ads_takeovertime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ads_takeovertime());
  }

  // uint32 ADS_ObsAvoidTime = 11;
  if (this->_internal_ads_obsavoidtime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ads_obsavoidtime());
  }

  // float ADS_NIDLongestMiles = 12;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ads_nidlongestmiles = this->_internal_ads_nidlongestmiles();
  uint32_t raw_ads_nidlongestmiles;
  memcpy(&raw_ads_nidlongestmiles, &tmp_ads_nidlongestmiles, sizeof(tmp_ads_nidlongestmiles));
  if (raw_ads_nidlongestmiles != 0) {
    total_size += 1 + 4;
  }

  // uint32 APA_UseTime = 13;
  if (this->_internal_apa_usetime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_usetime());
  }

  // uint32 APA_SaveTime = 14;
  if (this->_internal_apa_savetime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apa_savetime());
  }

  // uint32 ADS_ADSUseTime = 16;
  if (this->_internal_ads_adsusetime() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ads_adsusetime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_C2TripSum::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_C2TripSum::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_C2TripSum::GetClassData() const { return &_class_data_; }

void PB_C2TripSum::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_C2TripSum *>(to)->MergeFrom(
      static_cast<const PB_C2TripSum &>(from));
}


void PB_C2TripSum::MergeFrom(const PB_C2TripSum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_C2TripSum)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_c2_useridnumber().empty()) {
    _internal_set_c2_useridnumber(from._internal_c2_useridnumber());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ads_totalmiles = from._internal_ads_totalmiles();
  uint32_t raw_ads_totalmiles;
  memcpy(&raw_ads_totalmiles, &tmp_ads_totalmiles, sizeof(tmp_ads_totalmiles));
  if (raw_ads_totalmiles != 0) {
    _internal_set_ads_totalmiles(from._internal_ads_totalmiles());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ads_nidmiles = from._internal_ads_nidmiles();
  uint32_t raw_ads_nidmiles;
  memcpy(&raw_ads_nidmiles, &tmp_ads_nidmiles, sizeof(tmp_ads_nidmiles));
  if (raw_ads_nidmiles != 0) {
    _internal_set_ads_nidmiles(from._internal_ads_nidmiles());
  }
  if (from._internal_ads_safefuntritime() != 0) {
    _internal_set_ads_safefuntritime(from._internal_ads_safefuntritime());
  }
  if (from._internal_ads_aebtritime() != 0) {
    _internal_set_ads_aebtritime(from._internal_ads_aebtritime());
  }
  if (from._internal_ads_aestritime() != 0) {
    _internal_set_ads_aestritime(from._internal_ads_aestritime());
  }
  if (from._internal_ads_elktritime() != 0) {
    _internal_set_ads_elktritime(from._internal_ads_elktritime());
  }
  if (from._internal_ads_throughramptime() != 0) {
    _internal_set_ads_throughramptime(from._internal_ads_throughramptime());
  }
  if (from._internal_ads_throughintersectiontime() != 0) {
    _internal_set_ads_throughintersectiontime(from._internal_ads_throughintersectiontime());
  }
  if (from._internal_ads_lanechangetime() != 0) {
    _internal_set_ads_lanechangetime(from._internal_ads_lanechangetime());
  }
  if (from._internal_ads_takeovertime() != 0) {
    _internal_set_ads_takeovertime(from._internal_ads_takeovertime());
  }
  if (from._internal_ads_obsavoidtime() != 0) {
    _internal_set_ads_obsavoidtime(from._internal_ads_obsavoidtime());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ads_nidlongestmiles = from._internal_ads_nidlongestmiles();
  uint32_t raw_ads_nidlongestmiles;
  memcpy(&raw_ads_nidlongestmiles, &tmp_ads_nidlongestmiles, sizeof(tmp_ads_nidlongestmiles));
  if (raw_ads_nidlongestmiles != 0) {
    _internal_set_ads_nidlongestmiles(from._internal_ads_nidlongestmiles());
  }
  if (from._internal_apa_usetime() != 0) {
    _internal_set_apa_usetime(from._internal_apa_usetime());
  }
  if (from._internal_apa_savetime() != 0) {
    _internal_set_apa_savetime(from._internal_apa_savetime());
  }
  if (from._internal_ads_adsusetime() != 0) {
    _internal_set_ads_adsusetime(from._internal_ads_adsusetime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_C2TripSum::CopyFrom(const PB_C2TripSum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_C2TripSum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_C2TripSum::IsInitialized() const {
  return true;
}

void PB_C2TripSum::InternalSwap(PB_C2TripSum* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &c2_useridnumber_, lhs_arena,
      &other->c2_useridnumber_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_C2TripSum, ads_adsusetime_)
      + sizeof(PB_C2TripSum::ads_adsusetime_)
      - PROTOBUF_FIELD_OFFSET(PB_C2TripSum, ads_totalmiles_)>(
          reinterpret_cast<char*>(&ads_totalmiles_),
          reinterpret_cast<char*>(&other->ads_totalmiles_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_C2TripSum::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[44]);
}

// ===================================================================

class PB_BLERpaCmdReq::_Internal {
 public:
};

PB_BLERpaCmdReq::PB_BLERpaCmdReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  blerpadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_BLERpaCmdReq)
}
PB_BLERpaCmdReq::PB_BLERpaCmdReq(const PB_BLERpaCmdReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      blerpadata_(from.blerpadata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  keyindex_ = from.keyindex_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_BLERpaCmdReq)
}

inline void PB_BLERpaCmdReq::SharedCtor() {
keyindex_ = 0u;
}

PB_BLERpaCmdReq::~PB_BLERpaCmdReq() {
  // @@protoc_insertion_point(destructor:Soa.PB_BLERpaCmdReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_BLERpaCmdReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_BLERpaCmdReq::ArenaDtor(void* object) {
  PB_BLERpaCmdReq* _this = reinterpret_cast< PB_BLERpaCmdReq* >(object);
  (void)_this;
}
void PB_BLERpaCmdReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_BLERpaCmdReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_BLERpaCmdReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_BLERpaCmdReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blerpadata_.Clear();
  keyindex_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_BLERpaCmdReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 BLERpaData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_blerpadata(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_blerpadata(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 KeyIndex = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          keyindex_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_BLERpaCmdReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_BLERpaCmdReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 BLERpaData = 1;
  {
    int byte_size = _blerpadata_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_blerpadata(), byte_size, target);
    }
  }

  // uint32 KeyIndex = 2;
  if (this->_internal_keyindex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_keyindex(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_BLERpaCmdReq)
  return target;
}

size_t PB_BLERpaCmdReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_BLERpaCmdReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 BLERpaData = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->blerpadata_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _blerpadata_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint32 KeyIndex = 2;
  if (this->_internal_keyindex() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_keyindex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_BLERpaCmdReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_BLERpaCmdReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_BLERpaCmdReq::GetClassData() const { return &_class_data_; }

void PB_BLERpaCmdReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_BLERpaCmdReq *>(to)->MergeFrom(
      static_cast<const PB_BLERpaCmdReq &>(from));
}


void PB_BLERpaCmdReq::MergeFrom(const PB_BLERpaCmdReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_BLERpaCmdReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  blerpadata_.MergeFrom(from.blerpadata_);
  if (from._internal_keyindex() != 0) {
    _internal_set_keyindex(from._internal_keyindex());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_BLERpaCmdReq::CopyFrom(const PB_BLERpaCmdReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_BLERpaCmdReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BLERpaCmdReq::IsInitialized() const {
  return true;
}

void PB_BLERpaCmdReq::InternalSwap(PB_BLERpaCmdReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  blerpadata_.InternalSwap(&other->blerpadata_);
  swap(keyindex_, other->keyindex_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_BLERpaCmdReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[45]);
}

// ===================================================================

class PB_uint32_Struct::_Internal {
 public:
};

PB_uint32_Struct::PB_uint32_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_uint32_Struct)
}
PB_uint32_Struct::PB_uint32_Struct(const PB_uint32_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_uint32_Struct)
}

inline void PB_uint32_Struct::SharedCtor() {
data_ = 0u;
}

PB_uint32_Struct::~PB_uint32_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_uint32_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_uint32_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_uint32_Struct::ArenaDtor(void* object) {
  PB_uint32_Struct* _this = reinterpret_cast< PB_uint32_Struct* >(object);
  (void)_this;
}
void PB_uint32_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_uint32_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_uint32_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_uint32_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_uint32_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_uint32_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_uint32_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->_internal_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_uint32_Struct)
  return target;
}

size_t PB_uint32_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_uint32_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->_internal_data() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_uint32_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_uint32_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_uint32_Struct::GetClassData() const { return &_class_data_; }

void PB_uint32_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_uint32_Struct *>(to)->MergeFrom(
      static_cast<const PB_uint32_Struct &>(from));
}


void PB_uint32_Struct::MergeFrom(const PB_uint32_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_uint32_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_data() != 0) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_uint32_Struct::CopyFrom(const PB_uint32_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_uint32_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_uint32_Struct::IsInitialized() const {
  return true;
}

void PB_uint32_Struct::InternalSwap(PB_uint32_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_uint32_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[46]);
}

// ===================================================================

class PB_MFSSwtInfo::_Internal {
 public:
};

PB_MFSSwtInfo::PB_MFSSwtInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_MFSSwtInfo)
}
PB_MFSSwtInfo::PB_MFSSwtInfo(const PB_MFSSwtInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mfsswtll_, &from.mfsswtll_,
    static_cast<size_t>(reinterpret_cast<char*>(&mfsswtrollrp_) -
    reinterpret_cast<char*>(&mfsswtll_)) + sizeof(mfsswtrollrp_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_MFSSwtInfo)
}

inline void PB_MFSSwtInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mfsswtll_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&mfsswtrollrp_) -
    reinterpret_cast<char*>(&mfsswtll_)) + sizeof(mfsswtrollrp_));
}

PB_MFSSwtInfo::~PB_MFSSwtInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_MFSSwtInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_MFSSwtInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_MFSSwtInfo::ArenaDtor(void* object) {
  PB_MFSSwtInfo* _this = reinterpret_cast< PB_MFSSwtInfo* >(object);
  (void)_this;
}
void PB_MFSSwtInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_MFSSwtInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_MFSSwtInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_MFSSwtInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mfsswtll_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mfsswtrollrp_) -
      reinterpret_cast<char*>(&mfsswtll_)) + sizeof(mfsswtrollrp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_MFSSwtInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 MFSSwtLL = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          mfsswtll_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressLL = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          mfsswtpressll_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtLR = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          mfsswtlr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressLR = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          mfsswtpresslr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtLok = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          mfsswtlok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressLok = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          mfsswtpresslok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtLU = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          mfsswtlu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressLU = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          mfsswtpresslu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtLP = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          mfsswtlp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressLP = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          mfsswtpresslp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtLone = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          mfsswtlone_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressLone = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          mfsswtpresslone_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtLtwo = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          mfsswtltwo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressLtwo = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          mfsswtpressltwo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRL = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          mfsswtrl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressRL = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          mfsswtpressrl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRR = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          mfsswtrr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressRR = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          mfsswtpressrr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRok = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          mfsswtrok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressRok = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          mfsswtpressrok_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRU = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          mfsswtru_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressRU = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          mfsswtpressru_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRP = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          mfsswtrp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressRP = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          mfsswtpressrp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRone = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          mfsswtrone_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressRone = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          mfsswtpressrone_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRtwo = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 216)) {
          mfsswtrtwo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtPressRtwo = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          mfsswtpressrtwo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRollLU = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 232)) {
          mfsswtrolllu_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRollLP = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          mfsswtrolllp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRollRU = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          mfsswtrollru_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MFSSwtRollRP = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          mfsswtrollrp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_MFSSwtInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_MFSSwtInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 MFSSwtLL = 1;
  if (this->_internal_mfsswtll() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_mfsswtll(), target);
  }

  // uint32 MFSSwtPressLL = 2;
  if (this->_internal_mfsswtpressll() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_mfsswtpressll(), target);
  }

  // uint32 MFSSwtLR = 3;
  if (this->_internal_mfsswtlr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_mfsswtlr(), target);
  }

  // uint32 MFSSwtPressLR = 4;
  if (this->_internal_mfsswtpresslr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_mfsswtpresslr(), target);
  }

  // uint32 MFSSwtLok = 5;
  if (this->_internal_mfsswtlok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_mfsswtlok(), target);
  }

  // uint32 MFSSwtPressLok = 6;
  if (this->_internal_mfsswtpresslok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_mfsswtpresslok(), target);
  }

  // uint32 MFSSwtLU = 7;
  if (this->_internal_mfsswtlu() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_mfsswtlu(), target);
  }

  // uint32 MFSSwtPressLU = 8;
  if (this->_internal_mfsswtpresslu() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_mfsswtpresslu(), target);
  }

  // uint32 MFSSwtLP = 9;
  if (this->_internal_mfsswtlp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_mfsswtlp(), target);
  }

  // uint32 MFSSwtPressLP = 10;
  if (this->_internal_mfsswtpresslp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_mfsswtpresslp(), target);
  }

  // uint32 MFSSwtLone = 11;
  if (this->_internal_mfsswtlone() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_mfsswtlone(), target);
  }

  // uint32 MFSSwtPressLone = 12;
  if (this->_internal_mfsswtpresslone() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_mfsswtpresslone(), target);
  }

  // uint32 MFSSwtLtwo = 13;
  if (this->_internal_mfsswtltwo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_mfsswtltwo(), target);
  }

  // uint32 MFSSwtPressLtwo = 14;
  if (this->_internal_mfsswtpressltwo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_mfsswtpressltwo(), target);
  }

  // uint32 MFSSwtRL = 15;
  if (this->_internal_mfsswtrl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_mfsswtrl(), target);
  }

  // uint32 MFSSwtPressRL = 16;
  if (this->_internal_mfsswtpressrl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_mfsswtpressrl(), target);
  }

  // uint32 MFSSwtRR = 17;
  if (this->_internal_mfsswtrr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_mfsswtrr(), target);
  }

  // uint32 MFSSwtPressRR = 18;
  if (this->_internal_mfsswtpressrr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_mfsswtpressrr(), target);
  }

  // uint32 MFSSwtRok = 19;
  if (this->_internal_mfsswtrok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(19, this->_internal_mfsswtrok(), target);
  }

  // uint32 MFSSwtPressRok = 20;
  if (this->_internal_mfsswtpressrok() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_mfsswtpressrok(), target);
  }

  // uint32 MFSSwtRU = 21;
  if (this->_internal_mfsswtru() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_mfsswtru(), target);
  }

  // uint32 MFSSwtPressRU = 22;
  if (this->_internal_mfsswtpressru() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_mfsswtpressru(), target);
  }

  // uint32 MFSSwtRP = 23;
  if (this->_internal_mfsswtrp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(23, this->_internal_mfsswtrp(), target);
  }

  // uint32 MFSSwtPressRP = 24;
  if (this->_internal_mfsswtpressrp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(24, this->_internal_mfsswtpressrp(), target);
  }

  // uint32 MFSSwtRone = 25;
  if (this->_internal_mfsswtrone() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(25, this->_internal_mfsswtrone(), target);
  }

  // uint32 MFSSwtPressRone = 26;
  if (this->_internal_mfsswtpressrone() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(26, this->_internal_mfsswtpressrone(), target);
  }

  // uint32 MFSSwtRtwo = 27;
  if (this->_internal_mfsswtrtwo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(27, this->_internal_mfsswtrtwo(), target);
  }

  // uint32 MFSSwtPressRtwo = 28;
  if (this->_internal_mfsswtpressrtwo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(28, this->_internal_mfsswtpressrtwo(), target);
  }

  // uint32 MFSSwtRollLU = 29;
  if (this->_internal_mfsswtrolllu() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(29, this->_internal_mfsswtrolllu(), target);
  }

  // uint32 MFSSwtRollLP = 30;
  if (this->_internal_mfsswtrolllp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(30, this->_internal_mfsswtrolllp(), target);
  }

  // uint32 MFSSwtRollRU = 31;
  if (this->_internal_mfsswtrollru() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(31, this->_internal_mfsswtrollru(), target);
  }

  // uint32 MFSSwtRollRP = 32;
  if (this->_internal_mfsswtrollrp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(32, this->_internal_mfsswtrollrp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_MFSSwtInfo)
  return target;
}

size_t PB_MFSSwtInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_MFSSwtInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 MFSSwtLL = 1;
  if (this->_internal_mfsswtll() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtll());
  }

  // uint32 MFSSwtPressLL = 2;
  if (this->_internal_mfsswtpressll() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtpressll());
  }

  // uint32 MFSSwtLR = 3;
  if (this->_internal_mfsswtlr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtlr());
  }

  // uint32 MFSSwtPressLR = 4;
  if (this->_internal_mfsswtpresslr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtpresslr());
  }

  // uint32 MFSSwtLok = 5;
  if (this->_internal_mfsswtlok() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtlok());
  }

  // uint32 MFSSwtPressLok = 6;
  if (this->_internal_mfsswtpresslok() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtpresslok());
  }

  // uint32 MFSSwtLU = 7;
  if (this->_internal_mfsswtlu() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtlu());
  }

  // uint32 MFSSwtPressLU = 8;
  if (this->_internal_mfsswtpresslu() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtpresslu());
  }

  // uint32 MFSSwtLP = 9;
  if (this->_internal_mfsswtlp() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtlp());
  }

  // uint32 MFSSwtPressLP = 10;
  if (this->_internal_mfsswtpresslp() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtpresslp());
  }

  // uint32 MFSSwtLone = 11;
  if (this->_internal_mfsswtlone() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtlone());
  }

  // uint32 MFSSwtPressLone = 12;
  if (this->_internal_mfsswtpresslone() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtpresslone());
  }

  // uint32 MFSSwtLtwo = 13;
  if (this->_internal_mfsswtltwo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtltwo());
  }

  // uint32 MFSSwtPressLtwo = 14;
  if (this->_internal_mfsswtpressltwo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtpressltwo());
  }

  // uint32 MFSSwtRL = 15;
  if (this->_internal_mfsswtrl() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mfsswtrl());
  }

  // uint32 MFSSwtPressRL = 16;
  if (this->_internal_mfsswtpressrl() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtpressrl());
  }

  // uint32 MFSSwtRR = 17;
  if (this->_internal_mfsswtrr() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtrr());
  }

  // uint32 MFSSwtPressRR = 18;
  if (this->_internal_mfsswtpressrr() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtpressrr());
  }

  // uint32 MFSSwtRok = 19;
  if (this->_internal_mfsswtrok() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtrok());
  }

  // uint32 MFSSwtPressRok = 20;
  if (this->_internal_mfsswtpressrok() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtpressrok());
  }

  // uint32 MFSSwtRU = 21;
  if (this->_internal_mfsswtru() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtru());
  }

  // uint32 MFSSwtPressRU = 22;
  if (this->_internal_mfsswtpressru() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtpressru());
  }

  // uint32 MFSSwtRP = 23;
  if (this->_internal_mfsswtrp() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtrp());
  }

  // uint32 MFSSwtPressRP = 24;
  if (this->_internal_mfsswtpressrp() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtpressrp());
  }

  // uint32 MFSSwtRone = 25;
  if (this->_internal_mfsswtrone() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtrone());
  }

  // uint32 MFSSwtPressRone = 26;
  if (this->_internal_mfsswtpressrone() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtpressrone());
  }

  // uint32 MFSSwtRtwo = 27;
  if (this->_internal_mfsswtrtwo() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtrtwo());
  }

  // uint32 MFSSwtPressRtwo = 28;
  if (this->_internal_mfsswtpressrtwo() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtpressrtwo());
  }

  // uint32 MFSSwtRollLU = 29;
  if (this->_internal_mfsswtrolllu() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtrolllu());
  }

  // uint32 MFSSwtRollLP = 30;
  if (this->_internal_mfsswtrolllp() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtrolllp());
  }

  // uint32 MFSSwtRollRU = 31;
  if (this->_internal_mfsswtrollru() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtrollru());
  }

  // uint32 MFSSwtRollRP = 32;
  if (this->_internal_mfsswtrollrp() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_mfsswtrollrp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_MFSSwtInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_MFSSwtInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_MFSSwtInfo::GetClassData() const { return &_class_data_; }

void PB_MFSSwtInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_MFSSwtInfo *>(to)->MergeFrom(
      static_cast<const PB_MFSSwtInfo &>(from));
}


void PB_MFSSwtInfo::MergeFrom(const PB_MFSSwtInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_MFSSwtInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mfsswtll() != 0) {
    _internal_set_mfsswtll(from._internal_mfsswtll());
  }
  if (from._internal_mfsswtpressll() != 0) {
    _internal_set_mfsswtpressll(from._internal_mfsswtpressll());
  }
  if (from._internal_mfsswtlr() != 0) {
    _internal_set_mfsswtlr(from._internal_mfsswtlr());
  }
  if (from._internal_mfsswtpresslr() != 0) {
    _internal_set_mfsswtpresslr(from._internal_mfsswtpresslr());
  }
  if (from._internal_mfsswtlok() != 0) {
    _internal_set_mfsswtlok(from._internal_mfsswtlok());
  }
  if (from._internal_mfsswtpresslok() != 0) {
    _internal_set_mfsswtpresslok(from._internal_mfsswtpresslok());
  }
  if (from._internal_mfsswtlu() != 0) {
    _internal_set_mfsswtlu(from._internal_mfsswtlu());
  }
  if (from._internal_mfsswtpresslu() != 0) {
    _internal_set_mfsswtpresslu(from._internal_mfsswtpresslu());
  }
  if (from._internal_mfsswtlp() != 0) {
    _internal_set_mfsswtlp(from._internal_mfsswtlp());
  }
  if (from._internal_mfsswtpresslp() != 0) {
    _internal_set_mfsswtpresslp(from._internal_mfsswtpresslp());
  }
  if (from._internal_mfsswtlone() != 0) {
    _internal_set_mfsswtlone(from._internal_mfsswtlone());
  }
  if (from._internal_mfsswtpresslone() != 0) {
    _internal_set_mfsswtpresslone(from._internal_mfsswtpresslone());
  }
  if (from._internal_mfsswtltwo() != 0) {
    _internal_set_mfsswtltwo(from._internal_mfsswtltwo());
  }
  if (from._internal_mfsswtpressltwo() != 0) {
    _internal_set_mfsswtpressltwo(from._internal_mfsswtpressltwo());
  }
  if (from._internal_mfsswtrl() != 0) {
    _internal_set_mfsswtrl(from._internal_mfsswtrl());
  }
  if (from._internal_mfsswtpressrl() != 0) {
    _internal_set_mfsswtpressrl(from._internal_mfsswtpressrl());
  }
  if (from._internal_mfsswtrr() != 0) {
    _internal_set_mfsswtrr(from._internal_mfsswtrr());
  }
  if (from._internal_mfsswtpressrr() != 0) {
    _internal_set_mfsswtpressrr(from._internal_mfsswtpressrr());
  }
  if (from._internal_mfsswtrok() != 0) {
    _internal_set_mfsswtrok(from._internal_mfsswtrok());
  }
  if (from._internal_mfsswtpressrok() != 0) {
    _internal_set_mfsswtpressrok(from._internal_mfsswtpressrok());
  }
  if (from._internal_mfsswtru() != 0) {
    _internal_set_mfsswtru(from._internal_mfsswtru());
  }
  if (from._internal_mfsswtpressru() != 0) {
    _internal_set_mfsswtpressru(from._internal_mfsswtpressru());
  }
  if (from._internal_mfsswtrp() != 0) {
    _internal_set_mfsswtrp(from._internal_mfsswtrp());
  }
  if (from._internal_mfsswtpressrp() != 0) {
    _internal_set_mfsswtpressrp(from._internal_mfsswtpressrp());
  }
  if (from._internal_mfsswtrone() != 0) {
    _internal_set_mfsswtrone(from._internal_mfsswtrone());
  }
  if (from._internal_mfsswtpressrone() != 0) {
    _internal_set_mfsswtpressrone(from._internal_mfsswtpressrone());
  }
  if (from._internal_mfsswtrtwo() != 0) {
    _internal_set_mfsswtrtwo(from._internal_mfsswtrtwo());
  }
  if (from._internal_mfsswtpressrtwo() != 0) {
    _internal_set_mfsswtpressrtwo(from._internal_mfsswtpressrtwo());
  }
  if (from._internal_mfsswtrolllu() != 0) {
    _internal_set_mfsswtrolllu(from._internal_mfsswtrolllu());
  }
  if (from._internal_mfsswtrolllp() != 0) {
    _internal_set_mfsswtrolllp(from._internal_mfsswtrolllp());
  }
  if (from._internal_mfsswtrollru() != 0) {
    _internal_set_mfsswtrollru(from._internal_mfsswtrollru());
  }
  if (from._internal_mfsswtrollrp() != 0) {
    _internal_set_mfsswtrollrp(from._internal_mfsswtrollrp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_MFSSwtInfo::CopyFrom(const PB_MFSSwtInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_MFSSwtInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_MFSSwtInfo::IsInitialized() const {
  return true;
}

void PB_MFSSwtInfo::InternalSwap(PB_MFSSwtInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_MFSSwtInfo, mfsswtrollrp_)
      + sizeof(PB_MFSSwtInfo::mfsswtrollrp_)
      - PROTOBUF_FIELD_OFFSET(PB_MFSSwtInfo, mfsswtll_)>(
          reinterpret_cast<char*>(&mfsswtll_),
          reinterpret_cast<char*>(&other->mfsswtll_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_MFSSwtInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[47]);
}

// ===================================================================

class PB_Point2Dguideline_Struct::_Internal {
 public:
};

PB_Point2Dguideline_Struct::PB_Point2Dguideline_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  seq_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Point2Dguideline_Struct)
}
PB_Point2Dguideline_Struct::PB_Point2Dguideline_Struct(const PB_Point2Dguideline_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seq_(from.seq_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Point2Dguideline_Struct)
}

inline void PB_Point2Dguideline_Struct::SharedCtor() {
}

PB_Point2Dguideline_Struct::~PB_Point2Dguideline_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_Point2Dguideline_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Point2Dguideline_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_Point2Dguideline_Struct::ArenaDtor(void* object) {
  PB_Point2Dguideline_Struct* _this = reinterpret_cast< PB_Point2Dguideline_Struct* >(object);
  (void)_this;
}
void PB_Point2Dguideline_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Point2Dguideline_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Point2Dguideline_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Point2Dguideline_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seq_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Point2Dguideline_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Soa.PB_Point2DStruct seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_seq(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Point2Dguideline_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Point2Dguideline_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct seq = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_seq_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_seq(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Point2Dguideline_Struct)
  return target;
}

size_t PB_Point2Dguideline_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Point2Dguideline_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct seq = 1;
  total_size += 1UL * this->_internal_seq_size();
  for (const auto& msg : this->seq_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Point2Dguideline_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Point2Dguideline_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Point2Dguideline_Struct::GetClassData() const { return &_class_data_; }

void PB_Point2Dguideline_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Point2Dguideline_Struct *>(to)->MergeFrom(
      static_cast<const PB_Point2Dguideline_Struct &>(from));
}


void PB_Point2Dguideline_Struct::MergeFrom(const PB_Point2Dguideline_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Point2Dguideline_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  seq_.MergeFrom(from.seq_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Point2Dguideline_Struct::CopyFrom(const PB_Point2Dguideline_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Point2Dguideline_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Point2Dguideline_Struct::IsInitialized() const {
  return true;
}

void PB_Point2Dguideline_Struct::InternalSwap(PB_Point2Dguideline_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  seq_.InternalSwap(&other->seq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Point2Dguideline_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[48]);
}

// ===================================================================

class PB_EDCset_MainScreenOperate::_Internal {
 public:
};

PB_EDCset_MainScreenOperate::PB_EDCset_MainScreenOperate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDCset_MainScreenOperate)
}
PB_EDCset_MainScreenOperate::PB_EDCset_MainScreenOperate(const PB_EDCset_MainScreenOperate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_mainscreenoperate_ = from.edc_mainscreenoperate_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDCset_MainScreenOperate)
}

inline void PB_EDCset_MainScreenOperate::SharedCtor() {
edc_mainscreenoperate_ = 0u;
}

PB_EDCset_MainScreenOperate::~PB_EDCset_MainScreenOperate() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDCset_MainScreenOperate)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDCset_MainScreenOperate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDCset_MainScreenOperate::ArenaDtor(void* object) {
  PB_EDCset_MainScreenOperate* _this = reinterpret_cast< PB_EDCset_MainScreenOperate* >(object);
  (void)_this;
}
void PB_EDCset_MainScreenOperate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDCset_MainScreenOperate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDCset_MainScreenOperate::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDCset_MainScreenOperate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_mainscreenoperate_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDCset_MainScreenOperate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_MainScreenOperate = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_mainscreenoperate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDCset_MainScreenOperate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDCset_MainScreenOperate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_MainScreenOperate = 1;
  if (this->_internal_edc_mainscreenoperate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_mainscreenoperate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDCset_MainScreenOperate)
  return target;
}

size_t PB_EDCset_MainScreenOperate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDCset_MainScreenOperate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_MainScreenOperate = 1;
  if (this->_internal_edc_mainscreenoperate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_mainscreenoperate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDCset_MainScreenOperate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDCset_MainScreenOperate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDCset_MainScreenOperate::GetClassData() const { return &_class_data_; }

void PB_EDCset_MainScreenOperate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDCset_MainScreenOperate *>(to)->MergeFrom(
      static_cast<const PB_EDCset_MainScreenOperate &>(from));
}


void PB_EDCset_MainScreenOperate::MergeFrom(const PB_EDCset_MainScreenOperate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDCset_MainScreenOperate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_mainscreenoperate() != 0) {
    _internal_set_edc_mainscreenoperate(from._internal_edc_mainscreenoperate());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDCset_MainScreenOperate::CopyFrom(const PB_EDCset_MainScreenOperate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDCset_MainScreenOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDCset_MainScreenOperate::IsInitialized() const {
  return true;
}

void PB_EDCset_MainScreenOperate::InternalSwap(PB_EDCset_MainScreenOperate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_mainscreenoperate_, other->edc_mainscreenoperate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDCset_MainScreenOperate::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[49]);
}

// ===================================================================

class PB_FogActCtrlInfo::_Internal {
 public:
};

PB_FogActCtrlInfo::PB_FogActCtrlInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_FogActCtrlInfo)
}
PB_FogActCtrlInfo::PB_FogActCtrlInfo(const PB_FogActCtrlInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_actctrlst_, &from.le_actctrlst_,
    static_cast<size_t>(reinterpret_cast<char*>(&ri_reactctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_reactctrlst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_FogActCtrlInfo)
}

inline void PB_FogActCtrlInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_actctrlst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ri_reactctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_reactctrlst_));
}

PB_FogActCtrlInfo::~PB_FogActCtrlInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_FogActCtrlInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_FogActCtrlInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_FogActCtrlInfo::ArenaDtor(void* object) {
  PB_FogActCtrlInfo* _this = reinterpret_cast< PB_FogActCtrlInfo* >(object);
  (void)_this;
}
void PB_FogActCtrlInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_FogActCtrlInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_FogActCtrlInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_FogActCtrlInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_actctrlst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ri_reactctrlst_) -
      reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_reactctrlst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_FogActCtrlInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_ActCtrlSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_ActCtrlSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Le_ReActCtrlSt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          le_reactctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_ReActCtrlSt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ri_reactctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_FogActCtrlInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_FogActCtrlInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_actctrlst(), target);
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_actctrlst(), target);
  }

  // uint32 Le_ReActCtrlSt = 3;
  if (this->_internal_le_reactctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_le_reactctrlst(), target);
  }

  // uint32 Ri_ReActCtrlSt = 4;
  if (this->_internal_ri_reactctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_ri_reactctrlst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_FogActCtrlInfo)
  return target;
}

size_t PB_FogActCtrlInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_FogActCtrlInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_actctrlst());
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_actctrlst());
  }

  // uint32 Le_ReActCtrlSt = 3;
  if (this->_internal_le_reactctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_reactctrlst());
  }

  // uint32 Ri_ReActCtrlSt = 4;
  if (this->_internal_ri_reactctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_reactctrlst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_FogActCtrlInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_FogActCtrlInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_FogActCtrlInfo::GetClassData() const { return &_class_data_; }

void PB_FogActCtrlInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_FogActCtrlInfo *>(to)->MergeFrom(
      static_cast<const PB_FogActCtrlInfo &>(from));
}


void PB_FogActCtrlInfo::MergeFrom(const PB_FogActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_FogActCtrlInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_actctrlst() != 0) {
    _internal_set_le_actctrlst(from._internal_le_actctrlst());
  }
  if (from._internal_ri_actctrlst() != 0) {
    _internal_set_ri_actctrlst(from._internal_ri_actctrlst());
  }
  if (from._internal_le_reactctrlst() != 0) {
    _internal_set_le_reactctrlst(from._internal_le_reactctrlst());
  }
  if (from._internal_ri_reactctrlst() != 0) {
    _internal_set_ri_reactctrlst(from._internal_ri_reactctrlst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_FogActCtrlInfo::CopyFrom(const PB_FogActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_FogActCtrlInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FogActCtrlInfo::IsInitialized() const {
  return true;
}

void PB_FogActCtrlInfo::InternalSwap(PB_FogActCtrlInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_FogActCtrlInfo, ri_reactctrlst_)
      + sizeof(PB_FogActCtrlInfo::ri_reactctrlst_)
      - PROTOBUF_FIELD_OFFSET(PB_FogActCtrlInfo, le_actctrlst_)>(
          reinterpret_cast<char*>(&le_actctrlst_),
          reinterpret_cast<char*>(&other->le_actctrlst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_FogActCtrlInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[50]);
}

// ===================================================================

class PB_VIUPwrPortRstInfo_Struct::_Internal {
 public:
};

PB_VIUPwrPortRstInfo_Struct::PB_VIUPwrPortRstInfo_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  viupwrportrstinfo_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_VIUPwrPortRstInfo_Struct)
}
PB_VIUPwrPortRstInfo_Struct::PB_VIUPwrPortRstInfo_Struct(const PB_VIUPwrPortRstInfo_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      viupwrportrstinfo_(from.viupwrportrstinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_VIUPwrPortRstInfo_Struct)
}

inline void PB_VIUPwrPortRstInfo_Struct::SharedCtor() {
}

PB_VIUPwrPortRstInfo_Struct::~PB_VIUPwrPortRstInfo_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_VIUPwrPortRstInfo_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_VIUPwrPortRstInfo_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_VIUPwrPortRstInfo_Struct::ArenaDtor(void* object) {
  PB_VIUPwrPortRstInfo_Struct* _this = reinterpret_cast< PB_VIUPwrPortRstInfo_Struct* >(object);
  (void)_this;
}
void PB_VIUPwrPortRstInfo_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_VIUPwrPortRstInfo_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_VIUPwrPortRstInfo_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_VIUPwrPortRstInfo_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  viupwrportrstinfo_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_VIUPwrPortRstInfo_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Soa.PB_VIUPwrPinRstInfo VIUPwrPortRstInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_viupwrportrstinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_VIUPwrPortRstInfo_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_VIUPwrPortRstInfo_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Soa.PB_VIUPwrPinRstInfo VIUPwrPortRstInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_viupwrportrstinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_viupwrportrstinfo(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_VIUPwrPortRstInfo_Struct)
  return target;
}

size_t PB_VIUPwrPortRstInfo_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_VIUPwrPortRstInfo_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_VIUPwrPinRstInfo VIUPwrPortRstInfo = 1;
  total_size += 1UL * this->_internal_viupwrportrstinfo_size();
  for (const auto& msg : this->viupwrportrstinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_VIUPwrPortRstInfo_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_VIUPwrPortRstInfo_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_VIUPwrPortRstInfo_Struct::GetClassData() const { return &_class_data_; }

void PB_VIUPwrPortRstInfo_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_VIUPwrPortRstInfo_Struct *>(to)->MergeFrom(
      static_cast<const PB_VIUPwrPortRstInfo_Struct &>(from));
}


void PB_VIUPwrPortRstInfo_Struct::MergeFrom(const PB_VIUPwrPortRstInfo_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_VIUPwrPortRstInfo_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  viupwrportrstinfo_.MergeFrom(from.viupwrportrstinfo_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_VIUPwrPortRstInfo_Struct::CopyFrom(const PB_VIUPwrPortRstInfo_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_VIUPwrPortRstInfo_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_VIUPwrPortRstInfo_Struct::IsInitialized() const {
  return true;
}

void PB_VIUPwrPortRstInfo_Struct::InternalSwap(PB_VIUPwrPortRstInfo_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  viupwrportrstinfo_.InternalSwap(&other->viupwrportrstinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_VIUPwrPortRstInfo_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[51]);
}

// ===================================================================

class PB_AD_APAVoiceCtrlFbData::_Internal {
 public:
};

PB_AD_APAVoiceCtrlFbData::PB_AD_APAVoiceCtrlFbData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_APAVoiceCtrlFbData)
}
PB_AD_APAVoiceCtrlFbData::PB_AD_APAVoiceCtrlFbData(const PB_AD_APAVoiceCtrlFbData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ad_apavoicectrlfb_ = from.ad_apavoicectrlfb_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_APAVoiceCtrlFbData)
}

inline void PB_AD_APAVoiceCtrlFbData::SharedCtor() {
ad_apavoicectrlfb_ = 0u;
}

PB_AD_APAVoiceCtrlFbData::~PB_AD_APAVoiceCtrlFbData() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_APAVoiceCtrlFbData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_APAVoiceCtrlFbData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_AD_APAVoiceCtrlFbData::ArenaDtor(void* object) {
  PB_AD_APAVoiceCtrlFbData* _this = reinterpret_cast< PB_AD_APAVoiceCtrlFbData* >(object);
  (void)_this;
}
void PB_AD_APAVoiceCtrlFbData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_APAVoiceCtrlFbData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_APAVoiceCtrlFbData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_APAVoiceCtrlFbData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ad_apavoicectrlfb_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_APAVoiceCtrlFbData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_APAVoiceCtrlFb = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_apavoicectrlfb_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_APAVoiceCtrlFbData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_APAVoiceCtrlFbData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_APAVoiceCtrlFb = 1;
  if (this->_internal_ad_apavoicectrlfb() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_apavoicectrlfb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_APAVoiceCtrlFbData)
  return target;
}

size_t PB_AD_APAVoiceCtrlFbData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_APAVoiceCtrlFbData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_APAVoiceCtrlFb = 1;
  if (this->_internal_ad_apavoicectrlfb() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apavoicectrlfb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_APAVoiceCtrlFbData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_APAVoiceCtrlFbData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_APAVoiceCtrlFbData::GetClassData() const { return &_class_data_; }

void PB_AD_APAVoiceCtrlFbData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_APAVoiceCtrlFbData *>(to)->MergeFrom(
      static_cast<const PB_AD_APAVoiceCtrlFbData &>(from));
}


void PB_AD_APAVoiceCtrlFbData::MergeFrom(const PB_AD_APAVoiceCtrlFbData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_APAVoiceCtrlFbData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_apavoicectrlfb() != 0) {
    _internal_set_ad_apavoicectrlfb(from._internal_ad_apavoicectrlfb());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_APAVoiceCtrlFbData::CopyFrom(const PB_AD_APAVoiceCtrlFbData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_APAVoiceCtrlFbData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_APAVoiceCtrlFbData::IsInitialized() const {
  return true;
}

void PB_AD_APAVoiceCtrlFbData::InternalSwap(PB_AD_APAVoiceCtrlFbData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ad_apavoicectrlfb_, other->ad_apavoicectrlfb_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_APAVoiceCtrlFbData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[52]);
}

// ===================================================================

class PB_PwrCtr::_Internal {
 public:
};

PB_PwrCtr::PB_PwrCtr(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_PwrCtr)
}
PB_PwrCtr::PB_PwrCtr(const PB_PwrCtr& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&pwrpinid_, &from.pwrpinid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ioposition_) -
    reinterpret_cast<char*>(&pwrpinid_)) + sizeof(ioposition_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_PwrCtr)
}

inline void PB_PwrCtr::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pwrpinid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ioposition_) -
    reinterpret_cast<char*>(&pwrpinid_)) + sizeof(ioposition_));
}

PB_PwrCtr::~PB_PwrCtr() {
  // @@protoc_insertion_point(destructor:Soa.PB_PwrCtr)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_PwrCtr::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_PwrCtr::ArenaDtor(void* object) {
  PB_PwrCtr* _this = reinterpret_cast< PB_PwrCtr* >(object);
  (void)_this;
}
void PB_PwrCtr::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_PwrCtr::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_PwrCtr::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_PwrCtr)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pwrpinid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ioposition_) -
      reinterpret_cast<char*>(&pwrpinid_)) + sizeof(ioposition_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_PwrCtr::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 PwrPinID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          pwrpinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CtrCmd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ctrcmd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 HldUpTi = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          hldupti_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 IOPosition = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ioposition_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_PwrCtr::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_PwrCtr)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PwrPinID = 1;
  if (this->_internal_pwrpinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_pwrpinid(), target);
  }

  // uint32 CtrCmd = 2;
  if (this->_internal_ctrcmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ctrcmd(), target);
  }

  // uint32 HldUpTi = 3;
  if (this->_internal_hldupti() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_hldupti(), target);
  }

  // uint32 IOPosition = 4;
  if (this->_internal_ioposition() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_ioposition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_PwrCtr)
  return target;
}

size_t PB_PwrCtr::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_PwrCtr)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 PwrPinID = 1;
  if (this->_internal_pwrpinid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_pwrpinid());
  }

  // uint32 CtrCmd = 2;
  if (this->_internal_ctrcmd() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ctrcmd());
  }

  // uint32 HldUpTi = 3;
  if (this->_internal_hldupti() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hldupti());
  }

  // uint32 IOPosition = 4;
  if (this->_internal_ioposition() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ioposition());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_PwrCtr::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_PwrCtr::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_PwrCtr::GetClassData() const { return &_class_data_; }

void PB_PwrCtr::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_PwrCtr *>(to)->MergeFrom(
      static_cast<const PB_PwrCtr &>(from));
}


void PB_PwrCtr::MergeFrom(const PB_PwrCtr& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_PwrCtr)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_pwrpinid() != 0) {
    _internal_set_pwrpinid(from._internal_pwrpinid());
  }
  if (from._internal_ctrcmd() != 0) {
    _internal_set_ctrcmd(from._internal_ctrcmd());
  }
  if (from._internal_hldupti() != 0) {
    _internal_set_hldupti(from._internal_hldupti());
  }
  if (from._internal_ioposition() != 0) {
    _internal_set_ioposition(from._internal_ioposition());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_PwrCtr::CopyFrom(const PB_PwrCtr& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_PwrCtr)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PwrCtr::IsInitialized() const {
  return true;
}

void PB_PwrCtr::InternalSwap(PB_PwrCtr* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_PwrCtr, ioposition_)
      + sizeof(PB_PwrCtr::ioposition_)
      - PROTOBUF_FIELD_OFFSET(PB_PwrCtr, pwrpinid_)>(
          reinterpret_cast<char*>(&pwrpinid_),
          reinterpret_cast<char*>(&other->pwrpinid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_PwrCtr::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[53]);
}

// ===================================================================

class PB_ADAS_MapTrafficSign::_Internal {
 public:
};

PB_ADAS_MapTrafficSign::PB_ADAS_MapTrafficSign(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ADAS_MapTrafficSign)
}
PB_ADAS_MapTrafficSign::PB_ADAS_MapTrafficSign(const PB_ADAS_MapTrafficSign& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&warning_reversecurve_, &from.warning_reversecurve_,
    static_cast<size_t>(reinterpret_cast<char*>(&indication_buslane_dis_) -
    reinterpret_cast<char*>(&warning_reversecurve_)) + sizeof(indication_buslane_dis_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ADAS_MapTrafficSign)
}

inline void PB_ADAS_MapTrafficSign::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&warning_reversecurve_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&indication_buslane_dis_) -
    reinterpret_cast<char*>(&warning_reversecurve_)) + sizeof(indication_buslane_dis_));
}

PB_ADAS_MapTrafficSign::~PB_ADAS_MapTrafficSign() {
  // @@protoc_insertion_point(destructor:Soa.PB_ADAS_MapTrafficSign)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ADAS_MapTrafficSign::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ADAS_MapTrafficSign::ArenaDtor(void* object) {
  PB_ADAS_MapTrafficSign* _this = reinterpret_cast< PB_ADAS_MapTrafficSign* >(object);
  (void)_this;
}
void PB_ADAS_MapTrafficSign::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ADAS_MapTrafficSign::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ADAS_MapTrafficSign::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ADAS_MapTrafficSign)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&warning_reversecurve_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&indication_buslane_dis_) -
      reinterpret_cast<char*>(&warning_reversecurve_)) + sizeof(indication_buslane_dis_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ADAS_MapTrafficSign::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Warning_ReverseCurve = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          warning_reversecurve_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_ContinuousDetours = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          warning_continuousdetours_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_Pedestrian = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          warning_pedestrian_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_Slip = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          warning_slip_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_Tunnel = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          warning_tunnel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_Slow = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          warning_slow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_RoadWorks = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          warning_roadworks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_DriveInto = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          prohibitory_driveinto_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_MotorVehicles = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          prohibitory_motorvehicles_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_TurnRight = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          prohibitory_turnright_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_Straight = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          prohibitory_straight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_Uturn = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          prohibitory_uturn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_Overtake = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          prohibitory_overtake_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_VehicleParking = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          prohibitory_vehicleparking_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_VehParkLongTime = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          prohibitory_vehparklongtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_SpeedLimit = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          prohibitory_speedlimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_StopToGiveWay = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          prohibitory_stoptogiveway_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_Enter = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          prohibitory_enter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_Honking = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          prohibitory_honking_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_GiveWayToOncoming = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          prohibitory_givewaytooncoming_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Indication_OneWay = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          indication_oneway_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Indication_Walk = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          indication_walk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Indication_MainRoadPriority = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          indication_mainroadpriority_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Indication_PedestrianCrossing = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          indication_pedestriancrossing_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Indication_BusLane = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          indication_buslane_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_ReverseCurve_Dis = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          warning_reversecurve_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_ContinuousDetours_Dis = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 216)) {
          warning_continuousdetours_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_Pedestrian_Dis = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          warning_pedestrian_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_Slip_Dis = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 232)) {
          warning_slip_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_Tunnel_Dis = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          warning_tunnel_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_Slow_Dis = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          warning_slow_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Warning_RoadWorks_Dis = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          warning_roadworks_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_DriveInto_Dis = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          prohibitory_driveinto_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_MotorVehicles_Dis = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          prohibitory_motorvehicles_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_TurnRight_Dis = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          prohibitory_turnright_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_Straight_Dis = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          prohibitory_straight_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_Uturn_Dis = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          prohibitory_uturn_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_Overtake_Dis = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          prohibitory_overtake_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_VehPark_Dis = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          prohibitory_vehpark_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_VehParkLongT_Dis = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          prohibitory_vehparklongt_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_SpeedLimit_Dis = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          prohibitory_speedlimit_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_StopToGiveWay_Dis = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          prohibitory_stoptogiveway_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_Enter_Dis = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          prohibitory_enter_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_Honking_Dis = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          prohibitory_honking_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Prohibitory_GiveWayOncom_Dis = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          prohibitory_givewayoncom_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Indication_OneWay_Dis = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          indication_oneway_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Indication_Walk_Dis = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          indication_walk_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Indication_MainRoadPri_Dis = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          indication_mainroadpri_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Indication_PedestrianCro_Dis = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          indication_pedestriancro_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Indication_BusLane_Dis = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          indication_buslane_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ADAS_MapTrafficSign::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ADAS_MapTrafficSign)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Warning_ReverseCurve = 1;
  if (this->_internal_warning_reversecurve() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_warning_reversecurve(), target);
  }

  // uint32 Warning_ContinuousDetours = 2;
  if (this->_internal_warning_continuousdetours() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_warning_continuousdetours(), target);
  }

  // uint32 Warning_Pedestrian = 3;
  if (this->_internal_warning_pedestrian() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_warning_pedestrian(), target);
  }

  // uint32 Warning_Slip = 4;
  if (this->_internal_warning_slip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_warning_slip(), target);
  }

  // uint32 Warning_Tunnel = 5;
  if (this->_internal_warning_tunnel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_warning_tunnel(), target);
  }

  // uint32 Warning_Slow = 6;
  if (this->_internal_warning_slow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_warning_slow(), target);
  }

  // uint32 Warning_RoadWorks = 7;
  if (this->_internal_warning_roadworks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_warning_roadworks(), target);
  }

  // uint32 Prohibitory_DriveInto = 8;
  if (this->_internal_prohibitory_driveinto() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_prohibitory_driveinto(), target);
  }

  // uint32 Prohibitory_MotorVehicles = 9;
  if (this->_internal_prohibitory_motorvehicles() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_prohibitory_motorvehicles(), target);
  }

  // uint32 Prohibitory_TurnRight = 10;
  if (this->_internal_prohibitory_turnright() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_prohibitory_turnright(), target);
  }

  // uint32 Prohibitory_Straight = 11;
  if (this->_internal_prohibitory_straight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_prohibitory_straight(), target);
  }

  // uint32 Prohibitory_Uturn = 12;
  if (this->_internal_prohibitory_uturn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_prohibitory_uturn(), target);
  }

  // uint32 Prohibitory_Overtake = 13;
  if (this->_internal_prohibitory_overtake() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_prohibitory_overtake(), target);
  }

  // uint32 Prohibitory_VehicleParking = 14;
  if (this->_internal_prohibitory_vehicleparking() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_prohibitory_vehicleparking(), target);
  }

  // uint32 Prohibitory_VehParkLongTime = 15;
  if (this->_internal_prohibitory_vehparklongtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_prohibitory_vehparklongtime(), target);
  }

  // uint32 Prohibitory_SpeedLimit = 16;
  if (this->_internal_prohibitory_speedlimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_prohibitory_speedlimit(), target);
  }

  // uint32 Prohibitory_StopToGiveWay = 17;
  if (this->_internal_prohibitory_stoptogiveway() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_prohibitory_stoptogiveway(), target);
  }

  // uint32 Prohibitory_Enter = 18;
  if (this->_internal_prohibitory_enter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_prohibitory_enter(), target);
  }

  // uint32 Prohibitory_Honking = 19;
  if (this->_internal_prohibitory_honking() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(19, this->_internal_prohibitory_honking(), target);
  }

  // uint32 Prohibitory_GiveWayToOncoming = 20;
  if (this->_internal_prohibitory_givewaytooncoming() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_prohibitory_givewaytooncoming(), target);
  }

  // uint32 Indication_OneWay = 21;
  if (this->_internal_indication_oneway() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_indication_oneway(), target);
  }

  // uint32 Indication_Walk = 22;
  if (this->_internal_indication_walk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_indication_walk(), target);
  }

  // uint32 Indication_MainRoadPriority = 23;
  if (this->_internal_indication_mainroadpriority() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(23, this->_internal_indication_mainroadpriority(), target);
  }

  // uint32 Indication_PedestrianCrossing = 24;
  if (this->_internal_indication_pedestriancrossing() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(24, this->_internal_indication_pedestriancrossing(), target);
  }

  // uint32 Indication_BusLane = 25;
  if (this->_internal_indication_buslane() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(25, this->_internal_indication_buslane(), target);
  }

  // uint32 Warning_ReverseCurve_Dis = 26;
  if (this->_internal_warning_reversecurve_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(26, this->_internal_warning_reversecurve_dis(), target);
  }

  // uint32 Warning_ContinuousDetours_Dis = 27;
  if (this->_internal_warning_continuousdetours_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(27, this->_internal_warning_continuousdetours_dis(), target);
  }

  // uint32 Warning_Pedestrian_Dis = 28;
  if (this->_internal_warning_pedestrian_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(28, this->_internal_warning_pedestrian_dis(), target);
  }

  // uint32 Warning_Slip_Dis = 29;
  if (this->_internal_warning_slip_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(29, this->_internal_warning_slip_dis(), target);
  }

  // uint32 Warning_Tunnel_Dis = 30;
  if (this->_internal_warning_tunnel_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(30, this->_internal_warning_tunnel_dis(), target);
  }

  // uint32 Warning_Slow_Dis = 31;
  if (this->_internal_warning_slow_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(31, this->_internal_warning_slow_dis(), target);
  }

  // uint32 Warning_RoadWorks_Dis = 32;
  if (this->_internal_warning_roadworks_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(32, this->_internal_warning_roadworks_dis(), target);
  }

  // uint32 Prohibitory_DriveInto_Dis = 33;
  if (this->_internal_prohibitory_driveinto_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(33, this->_internal_prohibitory_driveinto_dis(), target);
  }

  // uint32 Prohibitory_MotorVehicles_Dis = 34;
  if (this->_internal_prohibitory_motorvehicles_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(34, this->_internal_prohibitory_motorvehicles_dis(), target);
  }

  // uint32 Prohibitory_TurnRight_Dis = 35;
  if (this->_internal_prohibitory_turnright_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(35, this->_internal_prohibitory_turnright_dis(), target);
  }

  // uint32 Prohibitory_Straight_Dis = 36;
  if (this->_internal_prohibitory_straight_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(36, this->_internal_prohibitory_straight_dis(), target);
  }

  // uint32 Prohibitory_Uturn_Dis = 37;
  if (this->_internal_prohibitory_uturn_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(37, this->_internal_prohibitory_uturn_dis(), target);
  }

  // uint32 Prohibitory_Overtake_Dis = 38;
  if (this->_internal_prohibitory_overtake_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(38, this->_internal_prohibitory_overtake_dis(), target);
  }

  // uint32 Prohibitory_VehPark_Dis = 39;
  if (this->_internal_prohibitory_vehpark_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(39, this->_internal_prohibitory_vehpark_dis(), target);
  }

  // uint32 Prohibitory_VehParkLongT_Dis = 40;
  if (this->_internal_prohibitory_vehparklongt_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(40, this->_internal_prohibitory_vehparklongt_dis(), target);
  }

  // uint32 Prohibitory_SpeedLimit_Dis = 41;
  if (this->_internal_prohibitory_speedlimit_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(41, this->_internal_prohibitory_speedlimit_dis(), target);
  }

  // uint32 Prohibitory_StopToGiveWay_Dis = 42;
  if (this->_internal_prohibitory_stoptogiveway_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(42, this->_internal_prohibitory_stoptogiveway_dis(), target);
  }

  // uint32 Prohibitory_Enter_Dis = 43;
  if (this->_internal_prohibitory_enter_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(43, this->_internal_prohibitory_enter_dis(), target);
  }

  // uint32 Prohibitory_Honking_Dis = 44;
  if (this->_internal_prohibitory_honking_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(44, this->_internal_prohibitory_honking_dis(), target);
  }

  // uint32 Prohibitory_GiveWayOncom_Dis = 45;
  if (this->_internal_prohibitory_givewayoncom_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(45, this->_internal_prohibitory_givewayoncom_dis(), target);
  }

  // uint32 Indication_OneWay_Dis = 46;
  if (this->_internal_indication_oneway_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(46, this->_internal_indication_oneway_dis(), target);
  }

  // uint32 Indication_Walk_Dis = 47;
  if (this->_internal_indication_walk_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(47, this->_internal_indication_walk_dis(), target);
  }

  // uint32 Indication_MainRoadPri_Dis = 48;
  if (this->_internal_indication_mainroadpri_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(48, this->_internal_indication_mainroadpri_dis(), target);
  }

  // uint32 Indication_PedestrianCro_Dis = 49;
  if (this->_internal_indication_pedestriancro_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(49, this->_internal_indication_pedestriancro_dis(), target);
  }

  // uint32 Indication_BusLane_Dis = 50;
  if (this->_internal_indication_buslane_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(50, this->_internal_indication_buslane_dis(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ADAS_MapTrafficSign)
  return target;
}

size_t PB_ADAS_MapTrafficSign::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ADAS_MapTrafficSign)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Warning_ReverseCurve = 1;
  if (this->_internal_warning_reversecurve() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_warning_reversecurve());
  }

  // uint32 Warning_ContinuousDetours = 2;
  if (this->_internal_warning_continuousdetours() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_warning_continuousdetours());
  }

  // uint32 Warning_Pedestrian = 3;
  if (this->_internal_warning_pedestrian() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_warning_pedestrian());
  }

  // uint32 Warning_Slip = 4;
  if (this->_internal_warning_slip() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_warning_slip());
  }

  // uint32 Warning_Tunnel = 5;
  if (this->_internal_warning_tunnel() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_warning_tunnel());
  }

  // uint32 Warning_Slow = 6;
  if (this->_internal_warning_slow() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_warning_slow());
  }

  // uint32 Warning_RoadWorks = 7;
  if (this->_internal_warning_roadworks() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_warning_roadworks());
  }

  // uint32 Prohibitory_DriveInto = 8;
  if (this->_internal_prohibitory_driveinto() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_prohibitory_driveinto());
  }

  // uint32 Prohibitory_MotorVehicles = 9;
  if (this->_internal_prohibitory_motorvehicles() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_prohibitory_motorvehicles());
  }

  // uint32 Prohibitory_TurnRight = 10;
  if (this->_internal_prohibitory_turnright() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_prohibitory_turnright());
  }

  // uint32 Prohibitory_Straight = 11;
  if (this->_internal_prohibitory_straight() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_prohibitory_straight());
  }

  // uint32 Prohibitory_Uturn = 12;
  if (this->_internal_prohibitory_uturn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_prohibitory_uturn());
  }

  // uint32 Prohibitory_Overtake = 13;
  if (this->_internal_prohibitory_overtake() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_prohibitory_overtake());
  }

  // uint32 Prohibitory_VehicleParking = 14;
  if (this->_internal_prohibitory_vehicleparking() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_prohibitory_vehicleparking());
  }

  // uint32 Prohibitory_VehParkLongTime = 15;
  if (this->_internal_prohibitory_vehparklongtime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_prohibitory_vehparklongtime());
  }

  // uint32 Prohibitory_SpeedLimit = 16;
  if (this->_internal_prohibitory_speedlimit() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_speedlimit());
  }

  // uint32 Prohibitory_StopToGiveWay = 17;
  if (this->_internal_prohibitory_stoptogiveway() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_stoptogiveway());
  }

  // uint32 Prohibitory_Enter = 18;
  if (this->_internal_prohibitory_enter() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_enter());
  }

  // uint32 Prohibitory_Honking = 19;
  if (this->_internal_prohibitory_honking() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_honking());
  }

  // uint32 Prohibitory_GiveWayToOncoming = 20;
  if (this->_internal_prohibitory_givewaytooncoming() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_givewaytooncoming());
  }

  // uint32 Indication_OneWay = 21;
  if (this->_internal_indication_oneway() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_indication_oneway());
  }

  // uint32 Indication_Walk = 22;
  if (this->_internal_indication_walk() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_indication_walk());
  }

  // uint32 Indication_MainRoadPriority = 23;
  if (this->_internal_indication_mainroadpriority() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_indication_mainroadpriority());
  }

  // uint32 Indication_PedestrianCrossing = 24;
  if (this->_internal_indication_pedestriancrossing() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_indication_pedestriancrossing());
  }

  // uint32 Indication_BusLane = 25;
  if (this->_internal_indication_buslane() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_indication_buslane());
  }

  // uint32 Warning_ReverseCurve_Dis = 26;
  if (this->_internal_warning_reversecurve_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_warning_reversecurve_dis());
  }

  // uint32 Warning_ContinuousDetours_Dis = 27;
  if (this->_internal_warning_continuousdetours_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_warning_continuousdetours_dis());
  }

  // uint32 Warning_Pedestrian_Dis = 28;
  if (this->_internal_warning_pedestrian_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_warning_pedestrian_dis());
  }

  // uint32 Warning_Slip_Dis = 29;
  if (this->_internal_warning_slip_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_warning_slip_dis());
  }

  // uint32 Warning_Tunnel_Dis = 30;
  if (this->_internal_warning_tunnel_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_warning_tunnel_dis());
  }

  // uint32 Warning_Slow_Dis = 31;
  if (this->_internal_warning_slow_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_warning_slow_dis());
  }

  // uint32 Warning_RoadWorks_Dis = 32;
  if (this->_internal_warning_roadworks_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_warning_roadworks_dis());
  }

  // uint32 Prohibitory_DriveInto_Dis = 33;
  if (this->_internal_prohibitory_driveinto_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_driveinto_dis());
  }

  // uint32 Prohibitory_MotorVehicles_Dis = 34;
  if (this->_internal_prohibitory_motorvehicles_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_motorvehicles_dis());
  }

  // uint32 Prohibitory_TurnRight_Dis = 35;
  if (this->_internal_prohibitory_turnright_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_turnright_dis());
  }

  // uint32 Prohibitory_Straight_Dis = 36;
  if (this->_internal_prohibitory_straight_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_straight_dis());
  }

  // uint32 Prohibitory_Uturn_Dis = 37;
  if (this->_internal_prohibitory_uturn_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_uturn_dis());
  }

  // uint32 Prohibitory_Overtake_Dis = 38;
  if (this->_internal_prohibitory_overtake_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_overtake_dis());
  }

  // uint32 Prohibitory_VehPark_Dis = 39;
  if (this->_internal_prohibitory_vehpark_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_vehpark_dis());
  }

  // uint32 Prohibitory_VehParkLongT_Dis = 40;
  if (this->_internal_prohibitory_vehparklongt_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_vehparklongt_dis());
  }

  // uint32 Prohibitory_SpeedLimit_Dis = 41;
  if (this->_internal_prohibitory_speedlimit_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_speedlimit_dis());
  }

  // uint32 Prohibitory_StopToGiveWay_Dis = 42;
  if (this->_internal_prohibitory_stoptogiveway_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_stoptogiveway_dis());
  }

  // uint32 Prohibitory_Enter_Dis = 43;
  if (this->_internal_prohibitory_enter_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_enter_dis());
  }

  // uint32 Prohibitory_Honking_Dis = 44;
  if (this->_internal_prohibitory_honking_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_honking_dis());
  }

  // uint32 Prohibitory_GiveWayOncom_Dis = 45;
  if (this->_internal_prohibitory_givewayoncom_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_prohibitory_givewayoncom_dis());
  }

  // uint32 Indication_OneWay_Dis = 46;
  if (this->_internal_indication_oneway_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_indication_oneway_dis());
  }

  // uint32 Indication_Walk_Dis = 47;
  if (this->_internal_indication_walk_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_indication_walk_dis());
  }

  // uint32 Indication_MainRoadPri_Dis = 48;
  if (this->_internal_indication_mainroadpri_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_indication_mainroadpri_dis());
  }

  // uint32 Indication_PedestrianCro_Dis = 49;
  if (this->_internal_indication_pedestriancro_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_indication_pedestriancro_dis());
  }

  // uint32 Indication_BusLane_Dis = 50;
  if (this->_internal_indication_buslane_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_indication_buslane_dis());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ADAS_MapTrafficSign::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ADAS_MapTrafficSign::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ADAS_MapTrafficSign::GetClassData() const { return &_class_data_; }

void PB_ADAS_MapTrafficSign::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ADAS_MapTrafficSign *>(to)->MergeFrom(
      static_cast<const PB_ADAS_MapTrafficSign &>(from));
}


void PB_ADAS_MapTrafficSign::MergeFrom(const PB_ADAS_MapTrafficSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ADAS_MapTrafficSign)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_warning_reversecurve() != 0) {
    _internal_set_warning_reversecurve(from._internal_warning_reversecurve());
  }
  if (from._internal_warning_continuousdetours() != 0) {
    _internal_set_warning_continuousdetours(from._internal_warning_continuousdetours());
  }
  if (from._internal_warning_pedestrian() != 0) {
    _internal_set_warning_pedestrian(from._internal_warning_pedestrian());
  }
  if (from._internal_warning_slip() != 0) {
    _internal_set_warning_slip(from._internal_warning_slip());
  }
  if (from._internal_warning_tunnel() != 0) {
    _internal_set_warning_tunnel(from._internal_warning_tunnel());
  }
  if (from._internal_warning_slow() != 0) {
    _internal_set_warning_slow(from._internal_warning_slow());
  }
  if (from._internal_warning_roadworks() != 0) {
    _internal_set_warning_roadworks(from._internal_warning_roadworks());
  }
  if (from._internal_prohibitory_driveinto() != 0) {
    _internal_set_prohibitory_driveinto(from._internal_prohibitory_driveinto());
  }
  if (from._internal_prohibitory_motorvehicles() != 0) {
    _internal_set_prohibitory_motorvehicles(from._internal_prohibitory_motorvehicles());
  }
  if (from._internal_prohibitory_turnright() != 0) {
    _internal_set_prohibitory_turnright(from._internal_prohibitory_turnright());
  }
  if (from._internal_prohibitory_straight() != 0) {
    _internal_set_prohibitory_straight(from._internal_prohibitory_straight());
  }
  if (from._internal_prohibitory_uturn() != 0) {
    _internal_set_prohibitory_uturn(from._internal_prohibitory_uturn());
  }
  if (from._internal_prohibitory_overtake() != 0) {
    _internal_set_prohibitory_overtake(from._internal_prohibitory_overtake());
  }
  if (from._internal_prohibitory_vehicleparking() != 0) {
    _internal_set_prohibitory_vehicleparking(from._internal_prohibitory_vehicleparking());
  }
  if (from._internal_prohibitory_vehparklongtime() != 0) {
    _internal_set_prohibitory_vehparklongtime(from._internal_prohibitory_vehparklongtime());
  }
  if (from._internal_prohibitory_speedlimit() != 0) {
    _internal_set_prohibitory_speedlimit(from._internal_prohibitory_speedlimit());
  }
  if (from._internal_prohibitory_stoptogiveway() != 0) {
    _internal_set_prohibitory_stoptogiveway(from._internal_prohibitory_stoptogiveway());
  }
  if (from._internal_prohibitory_enter() != 0) {
    _internal_set_prohibitory_enter(from._internal_prohibitory_enter());
  }
  if (from._internal_prohibitory_honking() != 0) {
    _internal_set_prohibitory_honking(from._internal_prohibitory_honking());
  }
  if (from._internal_prohibitory_givewaytooncoming() != 0) {
    _internal_set_prohibitory_givewaytooncoming(from._internal_prohibitory_givewaytooncoming());
  }
  if (from._internal_indication_oneway() != 0) {
    _internal_set_indication_oneway(from._internal_indication_oneway());
  }
  if (from._internal_indication_walk() != 0) {
    _internal_set_indication_walk(from._internal_indication_walk());
  }
  if (from._internal_indication_mainroadpriority() != 0) {
    _internal_set_indication_mainroadpriority(from._internal_indication_mainroadpriority());
  }
  if (from._internal_indication_pedestriancrossing() != 0) {
    _internal_set_indication_pedestriancrossing(from._internal_indication_pedestriancrossing());
  }
  if (from._internal_indication_buslane() != 0) {
    _internal_set_indication_buslane(from._internal_indication_buslane());
  }
  if (from._internal_warning_reversecurve_dis() != 0) {
    _internal_set_warning_reversecurve_dis(from._internal_warning_reversecurve_dis());
  }
  if (from._internal_warning_continuousdetours_dis() != 0) {
    _internal_set_warning_continuousdetours_dis(from._internal_warning_continuousdetours_dis());
  }
  if (from._internal_warning_pedestrian_dis() != 0) {
    _internal_set_warning_pedestrian_dis(from._internal_warning_pedestrian_dis());
  }
  if (from._internal_warning_slip_dis() != 0) {
    _internal_set_warning_slip_dis(from._internal_warning_slip_dis());
  }
  if (from._internal_warning_tunnel_dis() != 0) {
    _internal_set_warning_tunnel_dis(from._internal_warning_tunnel_dis());
  }
  if (from._internal_warning_slow_dis() != 0) {
    _internal_set_warning_slow_dis(from._internal_warning_slow_dis());
  }
  if (from._internal_warning_roadworks_dis() != 0) {
    _internal_set_warning_roadworks_dis(from._internal_warning_roadworks_dis());
  }
  if (from._internal_prohibitory_driveinto_dis() != 0) {
    _internal_set_prohibitory_driveinto_dis(from._internal_prohibitory_driveinto_dis());
  }
  if (from._internal_prohibitory_motorvehicles_dis() != 0) {
    _internal_set_prohibitory_motorvehicles_dis(from._internal_prohibitory_motorvehicles_dis());
  }
  if (from._internal_prohibitory_turnright_dis() != 0) {
    _internal_set_prohibitory_turnright_dis(from._internal_prohibitory_turnright_dis());
  }
  if (from._internal_prohibitory_straight_dis() != 0) {
    _internal_set_prohibitory_straight_dis(from._internal_prohibitory_straight_dis());
  }
  if (from._internal_prohibitory_uturn_dis() != 0) {
    _internal_set_prohibitory_uturn_dis(from._internal_prohibitory_uturn_dis());
  }
  if (from._internal_prohibitory_overtake_dis() != 0) {
    _internal_set_prohibitory_overtake_dis(from._internal_prohibitory_overtake_dis());
  }
  if (from._internal_prohibitory_vehpark_dis() != 0) {
    _internal_set_prohibitory_vehpark_dis(from._internal_prohibitory_vehpark_dis());
  }
  if (from._internal_prohibitory_vehparklongt_dis() != 0) {
    _internal_set_prohibitory_vehparklongt_dis(from._internal_prohibitory_vehparklongt_dis());
  }
  if (from._internal_prohibitory_speedlimit_dis() != 0) {
    _internal_set_prohibitory_speedlimit_dis(from._internal_prohibitory_speedlimit_dis());
  }
  if (from._internal_prohibitory_stoptogiveway_dis() != 0) {
    _internal_set_prohibitory_stoptogiveway_dis(from._internal_prohibitory_stoptogiveway_dis());
  }
  if (from._internal_prohibitory_enter_dis() != 0) {
    _internal_set_prohibitory_enter_dis(from._internal_prohibitory_enter_dis());
  }
  if (from._internal_prohibitory_honking_dis() != 0) {
    _internal_set_prohibitory_honking_dis(from._internal_prohibitory_honking_dis());
  }
  if (from._internal_prohibitory_givewayoncom_dis() != 0) {
    _internal_set_prohibitory_givewayoncom_dis(from._internal_prohibitory_givewayoncom_dis());
  }
  if (from._internal_indication_oneway_dis() != 0) {
    _internal_set_indication_oneway_dis(from._internal_indication_oneway_dis());
  }
  if (from._internal_indication_walk_dis() != 0) {
    _internal_set_indication_walk_dis(from._internal_indication_walk_dis());
  }
  if (from._internal_indication_mainroadpri_dis() != 0) {
    _internal_set_indication_mainroadpri_dis(from._internal_indication_mainroadpri_dis());
  }
  if (from._internal_indication_pedestriancro_dis() != 0) {
    _internal_set_indication_pedestriancro_dis(from._internal_indication_pedestriancro_dis());
  }
  if (from._internal_indication_buslane_dis() != 0) {
    _internal_set_indication_buslane_dis(from._internal_indication_buslane_dis());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ADAS_MapTrafficSign::CopyFrom(const PB_ADAS_MapTrafficSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ADAS_MapTrafficSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ADAS_MapTrafficSign::IsInitialized() const {
  return true;
}

void PB_ADAS_MapTrafficSign::InternalSwap(PB_ADAS_MapTrafficSign* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ADAS_MapTrafficSign, indication_buslane_dis_)
      + sizeof(PB_ADAS_MapTrafficSign::indication_buslane_dis_)
      - PROTOBUF_FIELD_OFFSET(PB_ADAS_MapTrafficSign, warning_reversecurve_)>(
          reinterpret_cast<char*>(&warning_reversecurve_),
          reinterpret_cast<char*>(&other->warning_reversecurve_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ADAS_MapTrafficSign::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[54]);
}

// ===================================================================

class PB_HUset_VC_ACCactive::_Internal {
 public:
};

PB_HUset_VC_ACCactive::PB_HUset_VC_ACCactive(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_VC_ACCactive)
}
PB_HUset_VC_ACCactive::PB_HUset_VC_ACCactive(const PB_HUset_VC_ACCactive& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_vc_accactive_ = from.hu_vc_accactive_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_VC_ACCactive)
}

inline void PB_HUset_VC_ACCactive::SharedCtor() {
hu_vc_accactive_ = 0u;
}

PB_HUset_VC_ACCactive::~PB_HUset_VC_ACCactive() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_VC_ACCactive)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_VC_ACCactive::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_VC_ACCactive::ArenaDtor(void* object) {
  PB_HUset_VC_ACCactive* _this = reinterpret_cast< PB_HUset_VC_ACCactive* >(object);
  (void)_this;
}
void PB_HUset_VC_ACCactive::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_VC_ACCactive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_VC_ACCactive::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_VC_ACCactive)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_vc_accactive_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_VC_ACCactive::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_VC_ACCactive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_vc_accactive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_VC_ACCactive::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_VC_ACCactive)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_VC_ACCactive = 1;
  if (this->_internal_hu_vc_accactive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_vc_accactive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_VC_ACCactive)
  return target;
}

size_t PB_HUset_VC_ACCactive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_VC_ACCactive)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_VC_ACCactive = 1;
  if (this->_internal_hu_vc_accactive() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_vc_accactive());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_VC_ACCactive::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_VC_ACCactive::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_VC_ACCactive::GetClassData() const { return &_class_data_; }

void PB_HUset_VC_ACCactive::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_VC_ACCactive *>(to)->MergeFrom(
      static_cast<const PB_HUset_VC_ACCactive &>(from));
}


void PB_HUset_VC_ACCactive::MergeFrom(const PB_HUset_VC_ACCactive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_VC_ACCactive)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_vc_accactive() != 0) {
    _internal_set_hu_vc_accactive(from._internal_hu_vc_accactive());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_VC_ACCactive::CopyFrom(const PB_HUset_VC_ACCactive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_VC_ACCactive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_VC_ACCactive::IsInitialized() const {
  return true;
}

void PB_HUset_VC_ACCactive::InternalSwap(PB_HUset_VC_ACCactive* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_vc_accactive_, other->hu_vc_accactive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_VC_ACCactive::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[55]);
}

// ===================================================================

class PB_EDC_APADrvrReqSlotIDData::_Internal {
 public:
};

PB_EDC_APADrvrReqSlotIDData::PB_EDC_APADrvrReqSlotIDData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_APADrvrReqSlotIDData)
}
PB_EDC_APADrvrReqSlotIDData::PB_EDC_APADrvrReqSlotIDData(const PB_EDC_APADrvrReqSlotIDData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_apadrvrreqslotid_ = from.edc_apadrvrreqslotid_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_APADrvrReqSlotIDData)
}

inline void PB_EDC_APADrvrReqSlotIDData::SharedCtor() {
edc_apadrvrreqslotid_ = 0;
}

PB_EDC_APADrvrReqSlotIDData::~PB_EDC_APADrvrReqSlotIDData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_APADrvrReqSlotIDData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_APADrvrReqSlotIDData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_APADrvrReqSlotIDData::ArenaDtor(void* object) {
  PB_EDC_APADrvrReqSlotIDData* _this = reinterpret_cast< PB_EDC_APADrvrReqSlotIDData* >(object);
  (void)_this;
}
void PB_EDC_APADrvrReqSlotIDData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_APADrvrReqSlotIDData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_APADrvrReqSlotIDData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_APADrvrReqSlotIDData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apadrvrreqslotid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_APADrvrReqSlotIDData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 EDC_APADrvrReqSlotID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_apadrvrreqslotid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_APADrvrReqSlotIDData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_APADrvrReqSlotIDData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 EDC_APADrvrReqSlotID = 1;
  if (this->_internal_edc_apadrvrreqslotid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_edc_apadrvrreqslotid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_APADrvrReqSlotIDData)
  return target;
}

size_t PB_EDC_APADrvrReqSlotIDData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_APADrvrReqSlotIDData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 EDC_APADrvrReqSlotID = 1;
  if (this->_internal_edc_apadrvrreqslotid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_edc_apadrvrreqslotid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_APADrvrReqSlotIDData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_APADrvrReqSlotIDData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_APADrvrReqSlotIDData::GetClassData() const { return &_class_data_; }

void PB_EDC_APADrvrReqSlotIDData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_APADrvrReqSlotIDData *>(to)->MergeFrom(
      static_cast<const PB_EDC_APADrvrReqSlotIDData &>(from));
}


void PB_EDC_APADrvrReqSlotIDData::MergeFrom(const PB_EDC_APADrvrReqSlotIDData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_APADrvrReqSlotIDData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_apadrvrreqslotid() != 0) {
    _internal_set_edc_apadrvrreqslotid(from._internal_edc_apadrvrreqslotid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_APADrvrReqSlotIDData::CopyFrom(const PB_EDC_APADrvrReqSlotIDData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_APADrvrReqSlotIDData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_APADrvrReqSlotIDData::IsInitialized() const {
  return true;
}

void PB_EDC_APADrvrReqSlotIDData::InternalSwap(PB_EDC_APADrvrReqSlotIDData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_apadrvrreqslotid_, other->edc_apadrvrreqslotid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_APADrvrReqSlotIDData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[56]);
}

// ===================================================================

class PB_int32_Struct::_Internal {
 public:
};

PB_int32_Struct::PB_int32_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_int32_Struct)
}
PB_int32_Struct::PB_int32_Struct(const PB_int32_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_int32_Struct)
}

inline void PB_int32_Struct::SharedCtor() {
data_ = 0;
}

PB_int32_Struct::~PB_int32_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_int32_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_int32_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_int32_Struct::ArenaDtor(void* object) {
  PB_int32_Struct* _this = reinterpret_cast< PB_int32_Struct* >(object);
  (void)_this;
}
void PB_int32_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_int32_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_int32_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_int32_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_int32_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_int32_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_int32_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 data = 1;
  if (this->_internal_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_int32_Struct)
  return target;
}

size_t PB_int32_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_int32_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 data = 1;
  if (this->_internal_data() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_int32_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_int32_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_int32_Struct::GetClassData() const { return &_class_data_; }

void PB_int32_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_int32_Struct *>(to)->MergeFrom(
      static_cast<const PB_int32_Struct &>(from));
}


void PB_int32_Struct::MergeFrom(const PB_int32_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_int32_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_data() != 0) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_int32_Struct::CopyFrom(const PB_int32_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_int32_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_int32_Struct::IsInitialized() const {
  return true;
}

void PB_int32_Struct::InternalSwap(PB_int32_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_int32_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[57]);
}

// ===================================================================

class PB_DDSPayload_Struct::_Internal {
 public:
};

PB_DDSPayload_Struct::PB_DDSPayload_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  seq_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_DDSPayload_Struct)
}
PB_DDSPayload_Struct::PB_DDSPayload_Struct(const PB_DDSPayload_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seq_(from.seq_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_DDSPayload_Struct)
}

inline void PB_DDSPayload_Struct::SharedCtor() {
}

PB_DDSPayload_Struct::~PB_DDSPayload_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_DDSPayload_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_DDSPayload_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_DDSPayload_Struct::ArenaDtor(void* object) {
  PB_DDSPayload_Struct* _this = reinterpret_cast< PB_DDSPayload_Struct* >(object);
  (void)_this;
}
void PB_DDSPayload_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_DDSPayload_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_DDSPayload_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_DDSPayload_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seq_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_DDSPayload_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_seq(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_seq(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_DDSPayload_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_DDSPayload_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 seq = 1;
  {
    int byte_size = _seq_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_seq(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_DDSPayload_Struct)
  return target;
}

size_t PB_DDSPayload_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_DDSPayload_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 seq = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->seq_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _seq_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_DDSPayload_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_DDSPayload_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_DDSPayload_Struct::GetClassData() const { return &_class_data_; }

void PB_DDSPayload_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_DDSPayload_Struct *>(to)->MergeFrom(
      static_cast<const PB_DDSPayload_Struct &>(from));
}


void PB_DDSPayload_Struct::MergeFrom(const PB_DDSPayload_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_DDSPayload_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  seq_.MergeFrom(from.seq_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_DDSPayload_Struct::CopyFrom(const PB_DDSPayload_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_DDSPayload_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_DDSPayload_Struct::IsInitialized() const {
  return true;
}

void PB_DDSPayload_Struct::InternalSwap(PB_DDSPayload_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  seq_.InternalSwap(&other->seq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_DDSPayload_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[58]);
}

// ===================================================================

class PB_FWiperFltSt::_Internal {
 public:
};

PB_FWiperFltSt::PB_FWiperFltSt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_FWiperFltSt)
}
PB_FWiperFltSt::PB_FWiperFltSt(const PB_FWiperFltSt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&wiperfltst_, &from.wiperfltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&timeoutst_) -
    reinterpret_cast<char*>(&wiperfltst_)) + sizeof(timeoutst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_FWiperFltSt)
}

inline void PB_FWiperFltSt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&wiperfltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&timeoutst_) -
    reinterpret_cast<char*>(&wiperfltst_)) + sizeof(timeoutst_));
}

PB_FWiperFltSt::~PB_FWiperFltSt() {
  // @@protoc_insertion_point(destructor:Soa.PB_FWiperFltSt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_FWiperFltSt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_FWiperFltSt::ArenaDtor(void* object) {
  PB_FWiperFltSt* _this = reinterpret_cast< PB_FWiperFltSt* >(object);
  (void)_this;
}
void PB_FWiperFltSt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_FWiperFltSt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_FWiperFltSt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_FWiperFltSt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&wiperfltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timeoutst_) -
      reinterpret_cast<char*>(&wiperfltst_)) + sizeof(timeoutst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_FWiperFltSt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 WiperFltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          wiperfltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WshrFltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          wshrfltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LINErrSt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          linerrst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MotErrSt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          moterrst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SupVoltLoSt = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          supvoltlost_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SupVoltHiSt = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          supvolthist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 BlkSt = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          blkst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 OverTempSt = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          overtempst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TimeOutSt = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          timeoutst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_FWiperFltSt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_FWiperFltSt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 WiperFltSt = 1;
  if (this->_internal_wiperfltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_wiperfltst(), target);
  }

  // uint32 WshrFltSt = 2;
  if (this->_internal_wshrfltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_wshrfltst(), target);
  }

  // uint32 LINErrSt = 3;
  if (this->_internal_linerrst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_linerrst(), target);
  }

  // uint32 MotErrSt = 4;
  if (this->_internal_moterrst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_moterrst(), target);
  }

  // uint32 SupVoltLoSt = 5;
  if (this->_internal_supvoltlost() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_supvoltlost(), target);
  }

  // uint32 SupVoltHiSt = 6;
  if (this->_internal_supvolthist() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_supvolthist(), target);
  }

  // uint32 BlkSt = 7;
  if (this->_internal_blkst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_blkst(), target);
  }

  // uint32 OverTempSt = 8;
  if (this->_internal_overtempst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_overtempst(), target);
  }

  // uint32 TimeOutSt = 9;
  if (this->_internal_timeoutst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_timeoutst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_FWiperFltSt)
  return target;
}

size_t PB_FWiperFltSt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_FWiperFltSt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 WiperFltSt = 1;
  if (this->_internal_wiperfltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_wiperfltst());
  }

  // uint32 WshrFltSt = 2;
  if (this->_internal_wshrfltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_wshrfltst());
  }

  // uint32 LINErrSt = 3;
  if (this->_internal_linerrst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_linerrst());
  }

  // uint32 MotErrSt = 4;
  if (this->_internal_moterrst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_moterrst());
  }

  // uint32 SupVoltLoSt = 5;
  if (this->_internal_supvoltlost() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_supvoltlost());
  }

  // uint32 SupVoltHiSt = 6;
  if (this->_internal_supvolthist() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_supvolthist());
  }

  // uint32 BlkSt = 7;
  if (this->_internal_blkst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_blkst());
  }

  // uint32 OverTempSt = 8;
  if (this->_internal_overtempst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_overtempst());
  }

  // uint32 TimeOutSt = 9;
  if (this->_internal_timeoutst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_timeoutst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_FWiperFltSt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_FWiperFltSt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_FWiperFltSt::GetClassData() const { return &_class_data_; }

void PB_FWiperFltSt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_FWiperFltSt *>(to)->MergeFrom(
      static_cast<const PB_FWiperFltSt &>(from));
}


void PB_FWiperFltSt::MergeFrom(const PB_FWiperFltSt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_FWiperFltSt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_wiperfltst() != 0) {
    _internal_set_wiperfltst(from._internal_wiperfltst());
  }
  if (from._internal_wshrfltst() != 0) {
    _internal_set_wshrfltst(from._internal_wshrfltst());
  }
  if (from._internal_linerrst() != 0) {
    _internal_set_linerrst(from._internal_linerrst());
  }
  if (from._internal_moterrst() != 0) {
    _internal_set_moterrst(from._internal_moterrst());
  }
  if (from._internal_supvoltlost() != 0) {
    _internal_set_supvoltlost(from._internal_supvoltlost());
  }
  if (from._internal_supvolthist() != 0) {
    _internal_set_supvolthist(from._internal_supvolthist());
  }
  if (from._internal_blkst() != 0) {
    _internal_set_blkst(from._internal_blkst());
  }
  if (from._internal_overtempst() != 0) {
    _internal_set_overtempst(from._internal_overtempst());
  }
  if (from._internal_timeoutst() != 0) {
    _internal_set_timeoutst(from._internal_timeoutst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_FWiperFltSt::CopyFrom(const PB_FWiperFltSt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_FWiperFltSt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FWiperFltSt::IsInitialized() const {
  return true;
}

void PB_FWiperFltSt::InternalSwap(PB_FWiperFltSt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_FWiperFltSt, timeoutst_)
      + sizeof(PB_FWiperFltSt::timeoutst_)
      - PROTOBUF_FIELD_OFFSET(PB_FWiperFltSt, wiperfltst_)>(
          reinterpret_cast<char*>(&wiperfltst_),
          reinterpret_cast<char*>(&other->wiperfltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_FWiperFltSt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[59]);
}

// ===================================================================

class PB_HUset_LaneChangeFrequency::_Internal {
 public:
};

PB_HUset_LaneChangeFrequency::PB_HUset_LaneChangeFrequency(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_LaneChangeFrequency)
}
PB_HUset_LaneChangeFrequency::PB_HUset_LaneChangeFrequency(const PB_HUset_LaneChangeFrequency& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_lanechangefrequency_ = from.hu_lanechangefrequency_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_LaneChangeFrequency)
}

inline void PB_HUset_LaneChangeFrequency::SharedCtor() {
hu_lanechangefrequency_ = 0u;
}

PB_HUset_LaneChangeFrequency::~PB_HUset_LaneChangeFrequency() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_LaneChangeFrequency)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_LaneChangeFrequency::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_LaneChangeFrequency::ArenaDtor(void* object) {
  PB_HUset_LaneChangeFrequency* _this = reinterpret_cast< PB_HUset_LaneChangeFrequency* >(object);
  (void)_this;
}
void PB_HUset_LaneChangeFrequency::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_LaneChangeFrequency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_LaneChangeFrequency::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_LaneChangeFrequency)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_lanechangefrequency_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_LaneChangeFrequency::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_LaneChangeFrequency = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_lanechangefrequency_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_LaneChangeFrequency::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_LaneChangeFrequency)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_LaneChangeFrequency = 1;
  if (this->_internal_hu_lanechangefrequency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_lanechangefrequency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_LaneChangeFrequency)
  return target;
}

size_t PB_HUset_LaneChangeFrequency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_LaneChangeFrequency)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_LaneChangeFrequency = 1;
  if (this->_internal_hu_lanechangefrequency() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_lanechangefrequency());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_LaneChangeFrequency::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_LaneChangeFrequency::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_LaneChangeFrequency::GetClassData() const { return &_class_data_; }

void PB_HUset_LaneChangeFrequency::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_LaneChangeFrequency *>(to)->MergeFrom(
      static_cast<const PB_HUset_LaneChangeFrequency &>(from));
}


void PB_HUset_LaneChangeFrequency::MergeFrom(const PB_HUset_LaneChangeFrequency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_LaneChangeFrequency)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_lanechangefrequency() != 0) {
    _internal_set_hu_lanechangefrequency(from._internal_hu_lanechangefrequency());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_LaneChangeFrequency::CopyFrom(const PB_HUset_LaneChangeFrequency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_LaneChangeFrequency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_LaneChangeFrequency::IsInitialized() const {
  return true;
}

void PB_HUset_LaneChangeFrequency::InternalSwap(PB_HUset_LaneChangeFrequency* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_lanechangefrequency_, other->hu_lanechangefrequency_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_LaneChangeFrequency::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[60]);
}

// ===================================================================

class PB_HUset_ForwardColliAstSenStyle::_Internal {
 public:
};

PB_HUset_ForwardColliAstSenStyle::PB_HUset_ForwardColliAstSenStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_ForwardColliAstSenStyle)
}
PB_HUset_ForwardColliAstSenStyle::PB_HUset_ForwardColliAstSenStyle(const PB_HUset_ForwardColliAstSenStyle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_forwardcolliastsenstyle_ = from.hu_forwardcolliastsenstyle_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_ForwardColliAstSenStyle)
}

inline void PB_HUset_ForwardColliAstSenStyle::SharedCtor() {
hu_forwardcolliastsenstyle_ = 0u;
}

PB_HUset_ForwardColliAstSenStyle::~PB_HUset_ForwardColliAstSenStyle() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_ForwardColliAstSenStyle)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_ForwardColliAstSenStyle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_ForwardColliAstSenStyle::ArenaDtor(void* object) {
  PB_HUset_ForwardColliAstSenStyle* _this = reinterpret_cast< PB_HUset_ForwardColliAstSenStyle* >(object);
  (void)_this;
}
void PB_HUset_ForwardColliAstSenStyle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_ForwardColliAstSenStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_ForwardColliAstSenStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_ForwardColliAstSenStyle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_forwardcolliastsenstyle_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_ForwardColliAstSenStyle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_ForwardColliAstSenStyle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_forwardcolliastsenstyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_ForwardColliAstSenStyle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_ForwardColliAstSenStyle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_ForwardColliAstSenStyle = 1;
  if (this->_internal_hu_forwardcolliastsenstyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_forwardcolliastsenstyle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_ForwardColliAstSenStyle)
  return target;
}

size_t PB_HUset_ForwardColliAstSenStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_ForwardColliAstSenStyle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_ForwardColliAstSenStyle = 1;
  if (this->_internal_hu_forwardcolliastsenstyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_forwardcolliastsenstyle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_ForwardColliAstSenStyle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_ForwardColliAstSenStyle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_ForwardColliAstSenStyle::GetClassData() const { return &_class_data_; }

void PB_HUset_ForwardColliAstSenStyle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_ForwardColliAstSenStyle *>(to)->MergeFrom(
      static_cast<const PB_HUset_ForwardColliAstSenStyle &>(from));
}


void PB_HUset_ForwardColliAstSenStyle::MergeFrom(const PB_HUset_ForwardColliAstSenStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_ForwardColliAstSenStyle)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_forwardcolliastsenstyle() != 0) {
    _internal_set_hu_forwardcolliastsenstyle(from._internal_hu_forwardcolliastsenstyle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_ForwardColliAstSenStyle::CopyFrom(const PB_HUset_ForwardColliAstSenStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_ForwardColliAstSenStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_ForwardColliAstSenStyle::IsInitialized() const {
  return true;
}

void PB_HUset_ForwardColliAstSenStyle::InternalSwap(PB_HUset_ForwardColliAstSenStyle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_forwardcolliastsenstyle_, other->hu_forwardcolliastsenstyle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_ForwardColliAstSenStyle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[61]);
}

// ===================================================================

class PB_LoBeamActCtrlInfo::_Internal {
 public:
};

PB_LoBeamActCtrlInfo::PB_LoBeamActCtrlInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_LoBeamActCtrlInfo)
}
PB_LoBeamActCtrlInfo::PB_LoBeamActCtrlInfo(const PB_LoBeamActCtrlInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_actctrlst_, &from.le_actctrlst_,
    static_cast<size_t>(reinterpret_cast<char*>(&ri_actctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_LoBeamActCtrlInfo)
}

inline void PB_LoBeamActCtrlInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_actctrlst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ri_actctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
}

PB_LoBeamActCtrlInfo::~PB_LoBeamActCtrlInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_LoBeamActCtrlInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_LoBeamActCtrlInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_LoBeamActCtrlInfo::ArenaDtor(void* object) {
  PB_LoBeamActCtrlInfo* _this = reinterpret_cast< PB_LoBeamActCtrlInfo* >(object);
  (void)_this;
}
void PB_LoBeamActCtrlInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_LoBeamActCtrlInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_LoBeamActCtrlInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_LoBeamActCtrlInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_actctrlst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ri_actctrlst_) -
      reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_LoBeamActCtrlInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_ActCtrlSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_ActCtrlSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_LoBeamActCtrlInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_LoBeamActCtrlInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_actctrlst(), target);
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_actctrlst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_LoBeamActCtrlInfo)
  return target;
}

size_t PB_LoBeamActCtrlInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_LoBeamActCtrlInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_actctrlst());
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_actctrlst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_LoBeamActCtrlInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_LoBeamActCtrlInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_LoBeamActCtrlInfo::GetClassData() const { return &_class_data_; }

void PB_LoBeamActCtrlInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_LoBeamActCtrlInfo *>(to)->MergeFrom(
      static_cast<const PB_LoBeamActCtrlInfo &>(from));
}


void PB_LoBeamActCtrlInfo::MergeFrom(const PB_LoBeamActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_LoBeamActCtrlInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_actctrlst() != 0) {
    _internal_set_le_actctrlst(from._internal_le_actctrlst());
  }
  if (from._internal_ri_actctrlst() != 0) {
    _internal_set_ri_actctrlst(from._internal_ri_actctrlst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_LoBeamActCtrlInfo::CopyFrom(const PB_LoBeamActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_LoBeamActCtrlInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LoBeamActCtrlInfo::IsInitialized() const {
  return true;
}

void PB_LoBeamActCtrlInfo::InternalSwap(PB_LoBeamActCtrlInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_LoBeamActCtrlInfo, ri_actctrlst_)
      + sizeof(PB_LoBeamActCtrlInfo::ri_actctrlst_)
      - PROTOBUF_FIELD_OFFSET(PB_LoBeamActCtrlInfo, le_actctrlst_)>(
          reinterpret_cast<char*>(&le_actctrlst_),
          reinterpret_cast<char*>(&other->le_actctrlst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_LoBeamActCtrlInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[62]);
}

// ===================================================================

class PB_BLERpaCmdRspData_Struct::_Internal {
 public:
};

PB_BLERpaCmdRspData_Struct::PB_BLERpaCmdRspData_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  blerpacmdrspdata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_BLERpaCmdRspData_Struct)
}
PB_BLERpaCmdRspData_Struct::PB_BLERpaCmdRspData_Struct(const PB_BLERpaCmdRspData_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      blerpacmdrspdata_(from.blerpacmdrspdata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_BLERpaCmdRspData_Struct)
}

inline void PB_BLERpaCmdRspData_Struct::SharedCtor() {
}

PB_BLERpaCmdRspData_Struct::~PB_BLERpaCmdRspData_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_BLERpaCmdRspData_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_BLERpaCmdRspData_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_BLERpaCmdRspData_Struct::ArenaDtor(void* object) {
  PB_BLERpaCmdRspData_Struct* _this = reinterpret_cast< PB_BLERpaCmdRspData_Struct* >(object);
  (void)_this;
}
void PB_BLERpaCmdRspData_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_BLERpaCmdRspData_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_BLERpaCmdRspData_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_BLERpaCmdRspData_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blerpacmdrspdata_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_BLERpaCmdRspData_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 BLERpaCmdRspData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_blerpacmdrspdata(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_blerpacmdrspdata(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_BLERpaCmdRspData_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_BLERpaCmdRspData_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 BLERpaCmdRspData = 1;
  {
    int byte_size = _blerpacmdrspdata_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_blerpacmdrspdata(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_BLERpaCmdRspData_Struct)
  return target;
}

size_t PB_BLERpaCmdRspData_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_BLERpaCmdRspData_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 BLERpaCmdRspData = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->blerpacmdrspdata_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _blerpacmdrspdata_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_BLERpaCmdRspData_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_BLERpaCmdRspData_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_BLERpaCmdRspData_Struct::GetClassData() const { return &_class_data_; }

void PB_BLERpaCmdRspData_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_BLERpaCmdRspData_Struct *>(to)->MergeFrom(
      static_cast<const PB_BLERpaCmdRspData_Struct &>(from));
}


void PB_BLERpaCmdRspData_Struct::MergeFrom(const PB_BLERpaCmdRspData_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_BLERpaCmdRspData_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  blerpacmdrspdata_.MergeFrom(from.blerpacmdrspdata_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_BLERpaCmdRspData_Struct::CopyFrom(const PB_BLERpaCmdRspData_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_BLERpaCmdRspData_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BLERpaCmdRspData_Struct::IsInitialized() const {
  return true;
}

void PB_BLERpaCmdRspData_Struct::InternalSwap(PB_BLERpaCmdRspData_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  blerpacmdrspdata_.InternalSwap(&other->blerpacmdrspdata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_BLERpaCmdRspData_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[63]);
}

// ===================================================================

class PB_HUset_ELKEnable::_Internal {
 public:
};

PB_HUset_ELKEnable::PB_HUset_ELKEnable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_ELKEnable)
}
PB_HUset_ELKEnable::PB_HUset_ELKEnable(const PB_HUset_ELKEnable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_elkenable_ = from.hu_elkenable_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_ELKEnable)
}

inline void PB_HUset_ELKEnable::SharedCtor() {
hu_elkenable_ = 0u;
}

PB_HUset_ELKEnable::~PB_HUset_ELKEnable() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_ELKEnable)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_ELKEnable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_ELKEnable::ArenaDtor(void* object) {
  PB_HUset_ELKEnable* _this = reinterpret_cast< PB_HUset_ELKEnable* >(object);
  (void)_this;
}
void PB_HUset_ELKEnable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_ELKEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_ELKEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_ELKEnable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_elkenable_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_ELKEnable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_ELKEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_elkenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_ELKEnable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_ELKEnable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_ELKEnable = 1;
  if (this->_internal_hu_elkenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_elkenable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_ELKEnable)
  return target;
}

size_t PB_HUset_ELKEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_ELKEnable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_ELKEnable = 1;
  if (this->_internal_hu_elkenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_elkenable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_ELKEnable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_ELKEnable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_ELKEnable::GetClassData() const { return &_class_data_; }

void PB_HUset_ELKEnable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_ELKEnable *>(to)->MergeFrom(
      static_cast<const PB_HUset_ELKEnable &>(from));
}


void PB_HUset_ELKEnable::MergeFrom(const PB_HUset_ELKEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_ELKEnable)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_elkenable() != 0) {
    _internal_set_hu_elkenable(from._internal_hu_elkenable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_ELKEnable::CopyFrom(const PB_HUset_ELKEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_ELKEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_ELKEnable::IsInitialized() const {
  return true;
}

void PB_HUset_ELKEnable::InternalSwap(PB_HUset_ELKEnable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_elkenable_, other->hu_elkenable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_ELKEnable::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[64]);
}

// ===================================================================

class PB_HUset_VC_CruiseSetSpeed::_Internal {
 public:
};

PB_HUset_VC_CruiseSetSpeed::PB_HUset_VC_CruiseSetSpeed(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_VC_CruiseSetSpeed)
}
PB_HUset_VC_CruiseSetSpeed::PB_HUset_VC_CruiseSetSpeed(const PB_HUset_VC_CruiseSetSpeed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_vc_cruisesetspeed_ = from.hu_vc_cruisesetspeed_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_VC_CruiseSetSpeed)
}

inline void PB_HUset_VC_CruiseSetSpeed::SharedCtor() {
hu_vc_cruisesetspeed_ = 0u;
}

PB_HUset_VC_CruiseSetSpeed::~PB_HUset_VC_CruiseSetSpeed() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_VC_CruiseSetSpeed)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_VC_CruiseSetSpeed::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_VC_CruiseSetSpeed::ArenaDtor(void* object) {
  PB_HUset_VC_CruiseSetSpeed* _this = reinterpret_cast< PB_HUset_VC_CruiseSetSpeed* >(object);
  (void)_this;
}
void PB_HUset_VC_CruiseSetSpeed::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_VC_CruiseSetSpeed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_VC_CruiseSetSpeed::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_VC_CruiseSetSpeed)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_vc_cruisesetspeed_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_VC_CruiseSetSpeed::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_VC_CruiseSetSpeed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_vc_cruisesetspeed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_VC_CruiseSetSpeed::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_VC_CruiseSetSpeed)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_VC_CruiseSetSpeed = 1;
  if (this->_internal_hu_vc_cruisesetspeed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_vc_cruisesetspeed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_VC_CruiseSetSpeed)
  return target;
}

size_t PB_HUset_VC_CruiseSetSpeed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_VC_CruiseSetSpeed)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_VC_CruiseSetSpeed = 1;
  if (this->_internal_hu_vc_cruisesetspeed() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_vc_cruisesetspeed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_VC_CruiseSetSpeed::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_VC_CruiseSetSpeed::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_VC_CruiseSetSpeed::GetClassData() const { return &_class_data_; }

void PB_HUset_VC_CruiseSetSpeed::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_VC_CruiseSetSpeed *>(to)->MergeFrom(
      static_cast<const PB_HUset_VC_CruiseSetSpeed &>(from));
}


void PB_HUset_VC_CruiseSetSpeed::MergeFrom(const PB_HUset_VC_CruiseSetSpeed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_VC_CruiseSetSpeed)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_vc_cruisesetspeed() != 0) {
    _internal_set_hu_vc_cruisesetspeed(from._internal_hu_vc_cruisesetspeed());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_VC_CruiseSetSpeed::CopyFrom(const PB_HUset_VC_CruiseSetSpeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_VC_CruiseSetSpeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_VC_CruiseSetSpeed::IsInitialized() const {
  return true;
}

void PB_HUset_VC_CruiseSetSpeed::InternalSwap(PB_HUset_VC_CruiseSetSpeed* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_vc_cruisesetspeed_, other->hu_vc_cruisesetspeed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_VC_CruiseSetSpeed::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[65]);
}

// ===================================================================

class PB_TireWarnInfo::_Internal {
 public:
};

PB_TireWarnInfo::PB_TireWarnInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TireWarnInfo)
}
PB_TireWarnInfo::PB_TireWarnInfo(const PB_TireWarnInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&tireplowwarnfl_, &from.tireplowwarnfl_,
    static_cast<size_t>(reinterpret_cast<char*>(&tpmssysfailrwarn_) -
    reinterpret_cast<char*>(&tireplowwarnfl_)) + sizeof(tpmssysfailrwarn_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TireWarnInfo)
}

inline void PB_TireWarnInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&tireplowwarnfl_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&tpmssysfailrwarn_) -
    reinterpret_cast<char*>(&tireplowwarnfl_)) + sizeof(tpmssysfailrwarn_));
}

PB_TireWarnInfo::~PB_TireWarnInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_TireWarnInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TireWarnInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TireWarnInfo::ArenaDtor(void* object) {
  PB_TireWarnInfo* _this = reinterpret_cast< PB_TireWarnInfo* >(object);
  (void)_this;
}
void PB_TireWarnInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TireWarnInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TireWarnInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TireWarnInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&tireplowwarnfl_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tpmssysfailrwarn_) -
      reinterpret_cast<char*>(&tireplowwarnfl_)) + sizeof(tpmssysfailrwarn_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TireWarnInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 TirePLowWarnFL = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          tireplowwarnfl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TirePLowWarnFR = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          tireplowwarnfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TirePLowWarnRL = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          tireplowwarnrl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TirePLowWarnRR = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          tireplowwarnrr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TirePLeakWarnFL = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          tirepleakwarnfl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TirePLeakWarnFR = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          tirepleakwarnfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TirePLeakWarnRL = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          tirepleakwarnrl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TirePLeakWarnRR = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          tirepleakwarnrr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TPMSSysFailrWarn = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          tpmssysfailrwarn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TireWarnInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TireWarnInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TirePLowWarnFL = 1;
  if (this->_internal_tireplowwarnfl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_tireplowwarnfl(), target);
  }

  // uint32 TirePLowWarnFR = 2;
  if (this->_internal_tireplowwarnfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_tireplowwarnfr(), target);
  }

  // uint32 TirePLowWarnRL = 3;
  if (this->_internal_tireplowwarnrl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_tireplowwarnrl(), target);
  }

  // uint32 TirePLowWarnRR = 4;
  if (this->_internal_tireplowwarnrr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_tireplowwarnrr(), target);
  }

  // uint32 TirePLeakWarnFL = 5;
  if (this->_internal_tirepleakwarnfl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_tirepleakwarnfl(), target);
  }

  // uint32 TirePLeakWarnFR = 6;
  if (this->_internal_tirepleakwarnfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_tirepleakwarnfr(), target);
  }

  // uint32 TirePLeakWarnRL = 7;
  if (this->_internal_tirepleakwarnrl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_tirepleakwarnrl(), target);
  }

  // uint32 TirePLeakWarnRR = 8;
  if (this->_internal_tirepleakwarnrr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_tirepleakwarnrr(), target);
  }

  // uint32 TPMSSysFailrWarn = 9;
  if (this->_internal_tpmssysfailrwarn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_tpmssysfailrwarn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TireWarnInfo)
  return target;
}

size_t PB_TireWarnInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TireWarnInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 TirePLowWarnFL = 1;
  if (this->_internal_tireplowwarnfl() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tireplowwarnfl());
  }

  // uint32 TirePLowWarnFR = 2;
  if (this->_internal_tireplowwarnfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tireplowwarnfr());
  }

  // uint32 TirePLowWarnRL = 3;
  if (this->_internal_tireplowwarnrl() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tireplowwarnrl());
  }

  // uint32 TirePLowWarnRR = 4;
  if (this->_internal_tireplowwarnrr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tireplowwarnrr());
  }

  // uint32 TirePLeakWarnFL = 5;
  if (this->_internal_tirepleakwarnfl() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tirepleakwarnfl());
  }

  // uint32 TirePLeakWarnFR = 6;
  if (this->_internal_tirepleakwarnfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tirepleakwarnfr());
  }

  // uint32 TirePLeakWarnRL = 7;
  if (this->_internal_tirepleakwarnrl() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tirepleakwarnrl());
  }

  // uint32 TirePLeakWarnRR = 8;
  if (this->_internal_tirepleakwarnrr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tirepleakwarnrr());
  }

  // uint32 TPMSSysFailrWarn = 9;
  if (this->_internal_tpmssysfailrwarn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tpmssysfailrwarn());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TireWarnInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TireWarnInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TireWarnInfo::GetClassData() const { return &_class_data_; }

void PB_TireWarnInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TireWarnInfo *>(to)->MergeFrom(
      static_cast<const PB_TireWarnInfo &>(from));
}


void PB_TireWarnInfo::MergeFrom(const PB_TireWarnInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TireWarnInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_tireplowwarnfl() != 0) {
    _internal_set_tireplowwarnfl(from._internal_tireplowwarnfl());
  }
  if (from._internal_tireplowwarnfr() != 0) {
    _internal_set_tireplowwarnfr(from._internal_tireplowwarnfr());
  }
  if (from._internal_tireplowwarnrl() != 0) {
    _internal_set_tireplowwarnrl(from._internal_tireplowwarnrl());
  }
  if (from._internal_tireplowwarnrr() != 0) {
    _internal_set_tireplowwarnrr(from._internal_tireplowwarnrr());
  }
  if (from._internal_tirepleakwarnfl() != 0) {
    _internal_set_tirepleakwarnfl(from._internal_tirepleakwarnfl());
  }
  if (from._internal_tirepleakwarnfr() != 0) {
    _internal_set_tirepleakwarnfr(from._internal_tirepleakwarnfr());
  }
  if (from._internal_tirepleakwarnrl() != 0) {
    _internal_set_tirepleakwarnrl(from._internal_tirepleakwarnrl());
  }
  if (from._internal_tirepleakwarnrr() != 0) {
    _internal_set_tirepleakwarnrr(from._internal_tirepleakwarnrr());
  }
  if (from._internal_tpmssysfailrwarn() != 0) {
    _internal_set_tpmssysfailrwarn(from._internal_tpmssysfailrwarn());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TireWarnInfo::CopyFrom(const PB_TireWarnInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TireWarnInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TireWarnInfo::IsInitialized() const {
  return true;
}

void PB_TireWarnInfo::InternalSwap(PB_TireWarnInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_TireWarnInfo, tpmssysfailrwarn_)
      + sizeof(PB_TireWarnInfo::tpmssysfailrwarn_)
      - PROTOBUF_FIELD_OFFSET(PB_TireWarnInfo, tireplowwarnfl_)>(
          reinterpret_cast<char*>(&tireplowwarnfl_),
          reinterpret_cast<char*>(&other->tireplowwarnfl_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TireWarnInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[66]);
}

// ===================================================================

class PB_C2_ADASScore::_Internal {
 public:
};

PB_C2_ADASScore::PB_C2_ADASScore(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_C2_ADASScore)
}
PB_C2_ADASScore::PB_C2_ADASScore(const PB_C2_ADASScore& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  c2_useridnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    c2_useridnumber_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_c2_useridnumber().empty()) {
    c2_useridnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_c2_useridnumber(), 
      GetArenaForAllocation());
  }
  ::memcpy(&c2_autodrivinscorereason_, &from.c2_autodrivinscorereason_,
    static_cast<size_t>(reinterpret_cast<char*>(&c2_autodrivingscorethistrip_) -
    reinterpret_cast<char*>(&c2_autodrivinscorereason_)) + sizeof(c2_autodrivingscorethistrip_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_C2_ADASScore)
}

inline void PB_C2_ADASScore::SharedCtor() {
c2_useridnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  c2_useridnumber_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&c2_autodrivinscorereason_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&c2_autodrivingscorethistrip_) -
    reinterpret_cast<char*>(&c2_autodrivinscorereason_)) + sizeof(c2_autodrivingscorethistrip_));
}

PB_C2_ADASScore::~PB_C2_ADASScore() {
  // @@protoc_insertion_point(destructor:Soa.PB_C2_ADASScore)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_C2_ADASScore::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  c2_useridnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PB_C2_ADASScore::ArenaDtor(void* object) {
  PB_C2_ADASScore* _this = reinterpret_cast< PB_C2_ADASScore* >(object);
  (void)_this;
}
void PB_C2_ADASScore::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_C2_ADASScore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_C2_ADASScore::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_C2_ADASScore)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  c2_useridnumber_.ClearToEmpty();
  ::memset(&c2_autodrivinscorereason_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&c2_autodrivingscorethistrip_) -
      reinterpret_cast<char*>(&c2_autodrivinscorereason_)) + sizeof(c2_autodrivingscorethistrip_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_C2_ADASScore::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 C2_AutoDrivinScoreReason = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          c2_autodrivinscorereason_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes C2_UserIDnumber = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_c2_useridnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 C2_AutoDrivingScore = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          c2_autodrivingscore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float C2_IACCTrip = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          c2_iacctrip_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float C2_NIDHighspeedTrip = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          c2_nidhighspeedtrip_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float C2_NIDCityTrip = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          c2_nidcitytrip_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // uint32 C2_AutoDrivingScoreThisTrip = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          c2_autodrivingscorethistrip_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_C2_ADASScore::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_C2_ADASScore)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 C2_AutoDrivinScoreReason = 1;
  if (this->_internal_c2_autodrivinscorereason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_c2_autodrivinscorereason(), target);
  }

  // bytes C2_UserIDnumber = 2;
  if (!this->_internal_c2_useridnumber().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_c2_useridnumber(), target);
  }

  // int32 C2_AutoDrivingScore = 3;
  if (this->_internal_c2_autodrivingscore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_c2_autodrivingscore(), target);
  }

  // float C2_IACCTrip = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_iacctrip = this->_internal_c2_iacctrip();
  uint32_t raw_c2_iacctrip;
  memcpy(&raw_c2_iacctrip, &tmp_c2_iacctrip, sizeof(tmp_c2_iacctrip));
  if (raw_c2_iacctrip != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_c2_iacctrip(), target);
  }

  // float C2_NIDHighspeedTrip = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidhighspeedtrip = this->_internal_c2_nidhighspeedtrip();
  uint32_t raw_c2_nidhighspeedtrip;
  memcpy(&raw_c2_nidhighspeedtrip, &tmp_c2_nidhighspeedtrip, sizeof(tmp_c2_nidhighspeedtrip));
  if (raw_c2_nidhighspeedtrip != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_c2_nidhighspeedtrip(), target);
  }

  // float C2_NIDCityTrip = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidcitytrip = this->_internal_c2_nidcitytrip();
  uint32_t raw_c2_nidcitytrip;
  memcpy(&raw_c2_nidcitytrip, &tmp_c2_nidcitytrip, sizeof(tmp_c2_nidcitytrip));
  if (raw_c2_nidcitytrip != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_c2_nidcitytrip(), target);
  }

  // uint32 C2_AutoDrivingScoreThisTrip = 7;
  if (this->_internal_c2_autodrivingscorethistrip() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_c2_autodrivingscorethistrip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_C2_ADASScore)
  return target;
}

size_t PB_C2_ADASScore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_C2_ADASScore)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes C2_UserIDnumber = 2;
  if (!this->_internal_c2_useridnumber().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_c2_useridnumber());
  }

  // uint32 C2_AutoDrivinScoreReason = 1;
  if (this->_internal_c2_autodrivinscorereason() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_c2_autodrivinscorereason());
  }

  // int32 C2_AutoDrivingScore = 3;
  if (this->_internal_c2_autodrivingscore() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_c2_autodrivingscore());
  }

  // float C2_IACCTrip = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_iacctrip = this->_internal_c2_iacctrip();
  uint32_t raw_c2_iacctrip;
  memcpy(&raw_c2_iacctrip, &tmp_c2_iacctrip, sizeof(tmp_c2_iacctrip));
  if (raw_c2_iacctrip != 0) {
    total_size += 1 + 4;
  }

  // float C2_NIDHighspeedTrip = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidhighspeedtrip = this->_internal_c2_nidhighspeedtrip();
  uint32_t raw_c2_nidhighspeedtrip;
  memcpy(&raw_c2_nidhighspeedtrip, &tmp_c2_nidhighspeedtrip, sizeof(tmp_c2_nidhighspeedtrip));
  if (raw_c2_nidhighspeedtrip != 0) {
    total_size += 1 + 4;
  }

  // float C2_NIDCityTrip = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidcitytrip = this->_internal_c2_nidcitytrip();
  uint32_t raw_c2_nidcitytrip;
  memcpy(&raw_c2_nidcitytrip, &tmp_c2_nidcitytrip, sizeof(tmp_c2_nidcitytrip));
  if (raw_c2_nidcitytrip != 0) {
    total_size += 1 + 4;
  }

  // uint32 C2_AutoDrivingScoreThisTrip = 7;
  if (this->_internal_c2_autodrivingscorethistrip() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_c2_autodrivingscorethistrip());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_C2_ADASScore::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_C2_ADASScore::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_C2_ADASScore::GetClassData() const { return &_class_data_; }

void PB_C2_ADASScore::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_C2_ADASScore *>(to)->MergeFrom(
      static_cast<const PB_C2_ADASScore &>(from));
}


void PB_C2_ADASScore::MergeFrom(const PB_C2_ADASScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_C2_ADASScore)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_c2_useridnumber().empty()) {
    _internal_set_c2_useridnumber(from._internal_c2_useridnumber());
  }
  if (from._internal_c2_autodrivinscorereason() != 0) {
    _internal_set_c2_autodrivinscorereason(from._internal_c2_autodrivinscorereason());
  }
  if (from._internal_c2_autodrivingscore() != 0) {
    _internal_set_c2_autodrivingscore(from._internal_c2_autodrivingscore());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_iacctrip = from._internal_c2_iacctrip();
  uint32_t raw_c2_iacctrip;
  memcpy(&raw_c2_iacctrip, &tmp_c2_iacctrip, sizeof(tmp_c2_iacctrip));
  if (raw_c2_iacctrip != 0) {
    _internal_set_c2_iacctrip(from._internal_c2_iacctrip());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidhighspeedtrip = from._internal_c2_nidhighspeedtrip();
  uint32_t raw_c2_nidhighspeedtrip;
  memcpy(&raw_c2_nidhighspeedtrip, &tmp_c2_nidhighspeedtrip, sizeof(tmp_c2_nidhighspeedtrip));
  if (raw_c2_nidhighspeedtrip != 0) {
    _internal_set_c2_nidhighspeedtrip(from._internal_c2_nidhighspeedtrip());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidcitytrip = from._internal_c2_nidcitytrip();
  uint32_t raw_c2_nidcitytrip;
  memcpy(&raw_c2_nidcitytrip, &tmp_c2_nidcitytrip, sizeof(tmp_c2_nidcitytrip));
  if (raw_c2_nidcitytrip != 0) {
    _internal_set_c2_nidcitytrip(from._internal_c2_nidcitytrip());
  }
  if (from._internal_c2_autodrivingscorethistrip() != 0) {
    _internal_set_c2_autodrivingscorethistrip(from._internal_c2_autodrivingscorethistrip());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_C2_ADASScore::CopyFrom(const PB_C2_ADASScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_C2_ADASScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_C2_ADASScore::IsInitialized() const {
  return true;
}

void PB_C2_ADASScore::InternalSwap(PB_C2_ADASScore* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &c2_useridnumber_, lhs_arena,
      &other->c2_useridnumber_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_C2_ADASScore, c2_autodrivingscorethistrip_)
      + sizeof(PB_C2_ADASScore::c2_autodrivingscorethistrip_)
      - PROTOBUF_FIELD_OFFSET(PB_C2_ADASScore, c2_autodrivinscorereason_)>(
          reinterpret_cast<char*>(&c2_autodrivinscorereason_),
          reinterpret_cast<char*>(&other->c2_autodrivinscorereason_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_C2_ADASScore::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[67]);
}

// ===================================================================

class PB_EDCset_slot_ID::_Internal {
 public:
};

PB_EDCset_slot_ID::PB_EDCset_slot_ID(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDCset_slot_ID)
}
PB_EDCset_slot_ID::PB_EDCset_slot_ID(const PB_EDCset_slot_ID& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_slot_id_ = from.edc_slot_id_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDCset_slot_ID)
}

inline void PB_EDCset_slot_ID::SharedCtor() {
edc_slot_id_ = 0u;
}

PB_EDCset_slot_ID::~PB_EDCset_slot_ID() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDCset_slot_ID)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDCset_slot_ID::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDCset_slot_ID::ArenaDtor(void* object) {
  PB_EDCset_slot_ID* _this = reinterpret_cast< PB_EDCset_slot_ID* >(object);
  (void)_this;
}
void PB_EDCset_slot_ID::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDCset_slot_ID::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDCset_slot_ID::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDCset_slot_ID)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_slot_id_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDCset_slot_ID::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_slot_ID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_slot_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDCset_slot_ID::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDCset_slot_ID)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_slot_ID = 1;
  if (this->_internal_edc_slot_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_slot_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDCset_slot_ID)
  return target;
}

size_t PB_EDCset_slot_ID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDCset_slot_ID)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_slot_ID = 1;
  if (this->_internal_edc_slot_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_slot_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDCset_slot_ID::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDCset_slot_ID::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDCset_slot_ID::GetClassData() const { return &_class_data_; }

void PB_EDCset_slot_ID::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDCset_slot_ID *>(to)->MergeFrom(
      static_cast<const PB_EDCset_slot_ID &>(from));
}


void PB_EDCset_slot_ID::MergeFrom(const PB_EDCset_slot_ID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDCset_slot_ID)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_slot_id() != 0) {
    _internal_set_edc_slot_id(from._internal_edc_slot_id());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDCset_slot_ID::CopyFrom(const PB_EDCset_slot_ID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDCset_slot_ID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDCset_slot_ID::IsInitialized() const {
  return true;
}

void PB_EDCset_slot_ID::InternalSwap(PB_EDCset_slot_ID* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_slot_id_, other->edc_slot_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDCset_slot_ID::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[68]);
}

// ===================================================================

class PB_SwitSetResult::_Internal {
 public:
};

PB_SwitSetResult::PB_SwitSetResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_SwitSetResult)
}
PB_SwitSetResult::PB_SwitSetResult(const PB_SwitSetResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&switfailreson_) -
    reinterpret_cast<char*>(&result_)) + sizeof(switfailreson_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_SwitSetResult)
}

inline void PB_SwitSetResult::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&switfailreson_) -
    reinterpret_cast<char*>(&result_)) + sizeof(switfailreson_));
}

PB_SwitSetResult::~PB_SwitSetResult() {
  // @@protoc_insertion_point(destructor:Soa.PB_SwitSetResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_SwitSetResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_SwitSetResult::ArenaDtor(void* object) {
  PB_SwitSetResult* _this = reinterpret_cast< PB_SwitSetResult* >(object);
  (void)_this;
}
void PB_SwitSetResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_SwitSetResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_SwitSetResult::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_SwitSetResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&switfailreson_) -
      reinterpret_cast<char*>(&result_)) + sizeof(switfailreson_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_SwitSetResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SwitFailReson = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          switfailreson_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_SwitSetResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_SwitSetResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_result(), target);
  }

  // uint32 SwitFailReson = 2;
  if (this->_internal_switfailreson() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_switfailreson(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_SwitSetResult)
  return target;
}

size_t PB_SwitSetResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_SwitSetResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_result());
  }

  // uint32 SwitFailReson = 2;
  if (this->_internal_switfailreson() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_switfailreson());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_SwitSetResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_SwitSetResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_SwitSetResult::GetClassData() const { return &_class_data_; }

void PB_SwitSetResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_SwitSetResult *>(to)->MergeFrom(
      static_cast<const PB_SwitSetResult &>(from));
}


void PB_SwitSetResult::MergeFrom(const PB_SwitSetResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_SwitSetResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  if (from._internal_switfailreson() != 0) {
    _internal_set_switfailreson(from._internal_switfailreson());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_SwitSetResult::CopyFrom(const PB_SwitSetResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_SwitSetResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_SwitSetResult::IsInitialized() const {
  return true;
}

void PB_SwitSetResult::InternalSwap(PB_SwitSetResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_SwitSetResult, switfailreson_)
      + sizeof(PB_SwitSetResult::switfailreson_)
      - PROTOBUF_FIELD_OFFSET(PB_SwitSetResult, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_SwitSetResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[69]);
}

// ===================================================================

class PB_HzrdKeySwtSt::_Internal {
 public:
};

PB_HzrdKeySwtSt::PB_HzrdKeySwtSt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HzrdKeySwtSt)
}
PB_HzrdKeySwtSt::PB_HzrdKeySwtSt(const PB_HzrdKeySwtSt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&hzrdswst_, &from.hzrdswst_,
    static_cast<size_t>(reinterpret_cast<char*>(&hzrdst_) -
    reinterpret_cast<char*>(&hzrdswst_)) + sizeof(hzrdst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HzrdKeySwtSt)
}

inline void PB_HzrdKeySwtSt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&hzrdswst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&hzrdst_) -
    reinterpret_cast<char*>(&hzrdswst_)) + sizeof(hzrdst_));
}

PB_HzrdKeySwtSt::~PB_HzrdKeySwtSt() {
  // @@protoc_insertion_point(destructor:Soa.PB_HzrdKeySwtSt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HzrdKeySwtSt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HzrdKeySwtSt::ArenaDtor(void* object) {
  PB_HzrdKeySwtSt* _this = reinterpret_cast< PB_HzrdKeySwtSt* >(object);
  (void)_this;
}
void PB_HzrdKeySwtSt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HzrdKeySwtSt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HzrdKeySwtSt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HzrdKeySwtSt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hzrdswst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hzrdst_) -
      reinterpret_cast<char*>(&hzrdswst_)) + sizeof(hzrdst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HzrdKeySwtSt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HzrdSwSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hzrdswst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 HzrdSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          hzrdst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HzrdKeySwtSt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HzrdKeySwtSt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HzrdSwSt = 1;
  if (this->_internal_hzrdswst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hzrdswst(), target);
  }

  // uint32 HzrdSt = 2;
  if (this->_internal_hzrdst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_hzrdst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HzrdKeySwtSt)
  return target;
}

size_t PB_HzrdKeySwtSt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HzrdKeySwtSt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HzrdSwSt = 1;
  if (this->_internal_hzrdswst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hzrdswst());
  }

  // uint32 HzrdSt = 2;
  if (this->_internal_hzrdst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hzrdst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HzrdKeySwtSt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HzrdKeySwtSt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HzrdKeySwtSt::GetClassData() const { return &_class_data_; }

void PB_HzrdKeySwtSt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HzrdKeySwtSt *>(to)->MergeFrom(
      static_cast<const PB_HzrdKeySwtSt &>(from));
}


void PB_HzrdKeySwtSt::MergeFrom(const PB_HzrdKeySwtSt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HzrdKeySwtSt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hzrdswst() != 0) {
    _internal_set_hzrdswst(from._internal_hzrdswst());
  }
  if (from._internal_hzrdst() != 0) {
    _internal_set_hzrdst(from._internal_hzrdst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HzrdKeySwtSt::CopyFrom(const PB_HzrdKeySwtSt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HzrdKeySwtSt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HzrdKeySwtSt::IsInitialized() const {
  return true;
}

void PB_HzrdKeySwtSt::InternalSwap(PB_HzrdKeySwtSt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_HzrdKeySwtSt, hzrdst_)
      + sizeof(PB_HzrdKeySwtSt::hzrdst_)
      - PROTOBUF_FIELD_OFFSET(PB_HzrdKeySwtSt, hzrdswst_)>(
          reinterpret_cast<char*>(&hzrdswst_),
          reinterpret_cast<char*>(&other->hzrdswst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HzrdKeySwtSt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[70]);
}

// ===================================================================

class PB_ClusterTurnLiSt::_Internal {
 public:
};

PB_ClusterTurnLiSt::PB_ClusterTurnLiSt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ClusterTurnLiSt)
}
PB_ClusterTurnLiSt::PB_ClusterTurnLiSt(const PB_ClusterTurnLiSt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lesideturnlist_, &from.lesideturnlist_,
    static_cast<size_t>(reinterpret_cast<char*>(&risideturnlist_) -
    reinterpret_cast<char*>(&lesideturnlist_)) + sizeof(risideturnlist_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ClusterTurnLiSt)
}

inline void PB_ClusterTurnLiSt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lesideturnlist_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&risideturnlist_) -
    reinterpret_cast<char*>(&lesideturnlist_)) + sizeof(risideturnlist_));
}

PB_ClusterTurnLiSt::~PB_ClusterTurnLiSt() {
  // @@protoc_insertion_point(destructor:Soa.PB_ClusterTurnLiSt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ClusterTurnLiSt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ClusterTurnLiSt::ArenaDtor(void* object) {
  PB_ClusterTurnLiSt* _this = reinterpret_cast< PB_ClusterTurnLiSt* >(object);
  (void)_this;
}
void PB_ClusterTurnLiSt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ClusterTurnLiSt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ClusterTurnLiSt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ClusterTurnLiSt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lesideturnlist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&risideturnlist_) -
      reinterpret_cast<char*>(&lesideturnlist_)) + sizeof(risideturnlist_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ClusterTurnLiSt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 LeSideTurnLiSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lesideturnlist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RiSideTurnLiSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          risideturnlist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ClusterTurnLiSt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ClusterTurnLiSt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 LeSideTurnLiSt = 1;
  if (this->_internal_lesideturnlist() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_lesideturnlist(), target);
  }

  // uint32 RiSideTurnLiSt = 2;
  if (this->_internal_risideturnlist() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_risideturnlist(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ClusterTurnLiSt)
  return target;
}

size_t PB_ClusterTurnLiSt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ClusterTurnLiSt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 LeSideTurnLiSt = 1;
  if (this->_internal_lesideturnlist() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lesideturnlist());
  }

  // uint32 RiSideTurnLiSt = 2;
  if (this->_internal_risideturnlist() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_risideturnlist());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ClusterTurnLiSt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ClusterTurnLiSt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ClusterTurnLiSt::GetClassData() const { return &_class_data_; }

void PB_ClusterTurnLiSt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ClusterTurnLiSt *>(to)->MergeFrom(
      static_cast<const PB_ClusterTurnLiSt &>(from));
}


void PB_ClusterTurnLiSt::MergeFrom(const PB_ClusterTurnLiSt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ClusterTurnLiSt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lesideturnlist() != 0) {
    _internal_set_lesideturnlist(from._internal_lesideturnlist());
  }
  if (from._internal_risideturnlist() != 0) {
    _internal_set_risideturnlist(from._internal_risideturnlist());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ClusterTurnLiSt::CopyFrom(const PB_ClusterTurnLiSt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ClusterTurnLiSt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ClusterTurnLiSt::IsInitialized() const {
  return true;
}

void PB_ClusterTurnLiSt::InternalSwap(PB_ClusterTurnLiSt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ClusterTurnLiSt, risideturnlist_)
      + sizeof(PB_ClusterTurnLiSt::risideturnlist_)
      - PROTOBUF_FIELD_OFFSET(PB_ClusterTurnLiSt, lesideturnlist_)>(
          reinterpret_cast<char*>(&lesideturnlist_),
          reinterpret_cast<char*>(&other->lesideturnlist_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ClusterTurnLiSt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[71]);
}

// ===================================================================

class PB_LoBeamFltInfo::_Internal {
 public:
};

PB_LoBeamFltInfo::PB_LoBeamFltInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_LoBeamFltInfo)
}
PB_LoBeamFltInfo::PB_LoBeamFltInfo(const PB_LoBeamFltInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_fltst_, &from.le_fltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&ri_fltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_LoBeamFltInfo)
}

inline void PB_LoBeamFltInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_fltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ri_fltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
}

PB_LoBeamFltInfo::~PB_LoBeamFltInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_LoBeamFltInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_LoBeamFltInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_LoBeamFltInfo::ArenaDtor(void* object) {
  PB_LoBeamFltInfo* _this = reinterpret_cast< PB_LoBeamFltInfo* >(object);
  (void)_this;
}
void PB_LoBeamFltInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_LoBeamFltInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_LoBeamFltInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_LoBeamFltInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_fltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ri_fltst_) -
      reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_LoBeamFltInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_FltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_FltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_LoBeamFltInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_LoBeamFltInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_fltst(), target);
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_fltst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_LoBeamFltInfo)
  return target;
}

size_t PB_LoBeamFltInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_LoBeamFltInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_fltst());
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_fltst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_LoBeamFltInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_LoBeamFltInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_LoBeamFltInfo::GetClassData() const { return &_class_data_; }

void PB_LoBeamFltInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_LoBeamFltInfo *>(to)->MergeFrom(
      static_cast<const PB_LoBeamFltInfo &>(from));
}


void PB_LoBeamFltInfo::MergeFrom(const PB_LoBeamFltInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_LoBeamFltInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_fltst() != 0) {
    _internal_set_le_fltst(from._internal_le_fltst());
  }
  if (from._internal_ri_fltst() != 0) {
    _internal_set_ri_fltst(from._internal_ri_fltst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_LoBeamFltInfo::CopyFrom(const PB_LoBeamFltInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_LoBeamFltInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LoBeamFltInfo::IsInitialized() const {
  return true;
}

void PB_LoBeamFltInfo::InternalSwap(PB_LoBeamFltInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_LoBeamFltInfo, ri_fltst_)
      + sizeof(PB_LoBeamFltInfo::ri_fltst_)
      - PROTOBUF_FIELD_OFFSET(PB_LoBeamFltInfo, le_fltst_)>(
          reinterpret_cast<char*>(&le_fltst_),
          reinterpret_cast<char*>(&other->le_fltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_LoBeamFltInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[72]);
}

// ===================================================================

class PB_EDC_APAAudioRmnSetData::_Internal {
 public:
};

PB_EDC_APAAudioRmnSetData::PB_EDC_APAAudioRmnSetData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_APAAudioRmnSetData)
}
PB_EDC_APAAudioRmnSetData::PB_EDC_APAAudioRmnSetData(const PB_EDC_APAAudioRmnSetData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_apaaudiormnset_ = from.edc_apaaudiormnset_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_APAAudioRmnSetData)
}

inline void PB_EDC_APAAudioRmnSetData::SharedCtor() {
edc_apaaudiormnset_ = 0u;
}

PB_EDC_APAAudioRmnSetData::~PB_EDC_APAAudioRmnSetData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_APAAudioRmnSetData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_APAAudioRmnSetData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_APAAudioRmnSetData::ArenaDtor(void* object) {
  PB_EDC_APAAudioRmnSetData* _this = reinterpret_cast< PB_EDC_APAAudioRmnSetData* >(object);
  (void)_this;
}
void PB_EDC_APAAudioRmnSetData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_APAAudioRmnSetData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_APAAudioRmnSetData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_APAAudioRmnSetData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apaaudiormnset_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_APAAudioRmnSetData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_APAAudioRmnSet = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_apaaudiormnset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_APAAudioRmnSetData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_APAAudioRmnSetData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_APAAudioRmnSet = 1;
  if (this->_internal_edc_apaaudiormnset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_apaaudiormnset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_APAAudioRmnSetData)
  return target;
}

size_t PB_EDC_APAAudioRmnSetData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_APAAudioRmnSetData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_APAAudioRmnSet = 1;
  if (this->_internal_edc_apaaudiormnset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_apaaudiormnset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_APAAudioRmnSetData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_APAAudioRmnSetData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_APAAudioRmnSetData::GetClassData() const { return &_class_data_; }

void PB_EDC_APAAudioRmnSetData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_APAAudioRmnSetData *>(to)->MergeFrom(
      static_cast<const PB_EDC_APAAudioRmnSetData &>(from));
}


void PB_EDC_APAAudioRmnSetData::MergeFrom(const PB_EDC_APAAudioRmnSetData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_APAAudioRmnSetData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_apaaudiormnset() != 0) {
    _internal_set_edc_apaaudiormnset(from._internal_edc_apaaudiormnset());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_APAAudioRmnSetData::CopyFrom(const PB_EDC_APAAudioRmnSetData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_APAAudioRmnSetData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_APAAudioRmnSetData::IsInitialized() const {
  return true;
}

void PB_EDC_APAAudioRmnSetData::InternalSwap(PB_EDC_APAAudioRmnSetData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_apaaudiormnset_, other->edc_apaaudiormnset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_APAAudioRmnSetData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[73]);
}

// ===================================================================

class PB_SentrySwitchParam::_Internal {
 public:
};

PB_SentrySwitchParam::PB_SentrySwitchParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_SentrySwitchParam)
}
PB_SentrySwitchParam::PB_SentrySwitchParam(const PB_SentrySwitchParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&switsettyp_, &from.switsettyp_,
    static_cast<size_t>(reinterpret_cast<char*>(&source_) -
    reinterpret_cast<char*>(&switsettyp_)) + sizeof(source_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_SentrySwitchParam)
}

inline void PB_SentrySwitchParam::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&switsettyp_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&source_) -
    reinterpret_cast<char*>(&switsettyp_)) + sizeof(source_));
}

PB_SentrySwitchParam::~PB_SentrySwitchParam() {
  // @@protoc_insertion_point(destructor:Soa.PB_SentrySwitchParam)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_SentrySwitchParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_SentrySwitchParam::ArenaDtor(void* object) {
  PB_SentrySwitchParam* _this = reinterpret_cast< PB_SentrySwitchParam* >(object);
  (void)_this;
}
void PB_SentrySwitchParam::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_SentrySwitchParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_SentrySwitchParam::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_SentrySwitchParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&switsettyp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_) -
      reinterpret_cast<char*>(&switsettyp_)) + sizeof(source_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_SentrySwitchParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 SwitSetTyp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          switsettyp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SwitFirstSetConf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          switfirstsetconf_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Source = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          source_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_SentrySwitchParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_SentrySwitchParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SwitSetTyp = 1;
  if (this->_internal_switsettyp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_switsettyp(), target);
  }

  // uint32 SwitFirstSetConf = 2;
  if (this->_internal_switfirstsetconf() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_switfirstsetconf(), target);
  }

  // uint32 Source = 3;
  if (this->_internal_source() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_source(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_SentrySwitchParam)
  return target;
}

size_t PB_SentrySwitchParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_SentrySwitchParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 SwitSetTyp = 1;
  if (this->_internal_switsettyp() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_switsettyp());
  }

  // uint32 SwitFirstSetConf = 2;
  if (this->_internal_switfirstsetconf() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_switfirstsetconf());
  }

  // uint32 Source = 3;
  if (this->_internal_source() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_source());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_SentrySwitchParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_SentrySwitchParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_SentrySwitchParam::GetClassData() const { return &_class_data_; }

void PB_SentrySwitchParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_SentrySwitchParam *>(to)->MergeFrom(
      static_cast<const PB_SentrySwitchParam &>(from));
}


void PB_SentrySwitchParam::MergeFrom(const PB_SentrySwitchParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_SentrySwitchParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_switsettyp() != 0) {
    _internal_set_switsettyp(from._internal_switsettyp());
  }
  if (from._internal_switfirstsetconf() != 0) {
    _internal_set_switfirstsetconf(from._internal_switfirstsetconf());
  }
  if (from._internal_source() != 0) {
    _internal_set_source(from._internal_source());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_SentrySwitchParam::CopyFrom(const PB_SentrySwitchParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_SentrySwitchParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_SentrySwitchParam::IsInitialized() const {
  return true;
}

void PB_SentrySwitchParam::InternalSwap(PB_SentrySwitchParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_SentrySwitchParam, source_)
      + sizeof(PB_SentrySwitchParam::source_)
      - PROTOBUF_FIELD_OFFSET(PB_SentrySwitchParam, switsettyp_)>(
          reinterpret_cast<char*>(&switsettyp_),
          reinterpret_cast<char*>(&other->switsettyp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_SentrySwitchParam::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[74]);
}

// ===================================================================

class PB_ADAS_MapCommonSignal::_Internal {
 public:
};

PB_ADAS_MapCommonSignal::PB_ADAS_MapCommonSignal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ADAS_MapCommonSignal)
}
PB_ADAS_MapCommonSignal::PB_ADAS_MapCommonSignal(const PB_ADAS_MapCommonSignal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&mapdataupdatestatus_, &from.mapdataupdatestatus_,
    static_cast<size_t>(reinterpret_cast<char*>(&navspeedlimitunits_) -
    reinterpret_cast<char*>(&mapdataupdatestatus_)) + sizeof(navspeedlimitunits_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ADAS_MapCommonSignal)
}

inline void PB_ADAS_MapCommonSignal::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&mapdataupdatestatus_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&navspeedlimitunits_) -
    reinterpret_cast<char*>(&mapdataupdatestatus_)) + sizeof(navspeedlimitunits_));
}

PB_ADAS_MapCommonSignal::~PB_ADAS_MapCommonSignal() {
  // @@protoc_insertion_point(destructor:Soa.PB_ADAS_MapCommonSignal)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ADAS_MapCommonSignal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ADAS_MapCommonSignal::ArenaDtor(void* object) {
  PB_ADAS_MapCommonSignal* _this = reinterpret_cast< PB_ADAS_MapCommonSignal* >(object);
  (void)_this;
}
void PB_ADAS_MapCommonSignal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ADAS_MapCommonSignal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ADAS_MapCommonSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ADAS_MapCommonSignal)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&mapdataupdatestatus_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&navspeedlimitunits_) -
      reinterpret_cast<char*>(&mapdataupdatestatus_)) + sizeof(navspeedlimitunits_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ADAS_MapCommonSignal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 MapDataUpdateStatus = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          mapdataupdatestatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NavStatus = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          navstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NavGuiganceStatus = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          navguigancestatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MapMatchStatus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          mapmatchstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NavCountryCode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          navcountrycode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NavSpeedLimitUnits = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          navspeedlimitunits_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ADAS_MapCommonSignal::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ADAS_MapCommonSignal)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 MapDataUpdateStatus = 1;
  if (this->_internal_mapdataupdatestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_mapdataupdatestatus(), target);
  }

  // uint32 NavStatus = 2;
  if (this->_internal_navstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_navstatus(), target);
  }

  // uint32 NavGuiganceStatus = 3;
  if (this->_internal_navguigancestatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_navguigancestatus(), target);
  }

  // uint32 MapMatchStatus = 4;
  if (this->_internal_mapmatchstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_mapmatchstatus(), target);
  }

  // uint32 NavCountryCode = 5;
  if (this->_internal_navcountrycode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_navcountrycode(), target);
  }

  // uint32 NavSpeedLimitUnits = 6;
  if (this->_internal_navspeedlimitunits() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_navspeedlimitunits(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ADAS_MapCommonSignal)
  return target;
}

size_t PB_ADAS_MapCommonSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ADAS_MapCommonSignal)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 MapDataUpdateStatus = 1;
  if (this->_internal_mapdataupdatestatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mapdataupdatestatus());
  }

  // uint32 NavStatus = 2;
  if (this->_internal_navstatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_navstatus());
  }

  // uint32 NavGuiganceStatus = 3;
  if (this->_internal_navguigancestatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_navguigancestatus());
  }

  // uint32 MapMatchStatus = 4;
  if (this->_internal_mapmatchstatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_mapmatchstatus());
  }

  // uint32 NavCountryCode = 5;
  if (this->_internal_navcountrycode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_navcountrycode());
  }

  // uint32 NavSpeedLimitUnits = 6;
  if (this->_internal_navspeedlimitunits() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_navspeedlimitunits());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ADAS_MapCommonSignal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ADAS_MapCommonSignal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ADAS_MapCommonSignal::GetClassData() const { return &_class_data_; }

void PB_ADAS_MapCommonSignal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ADAS_MapCommonSignal *>(to)->MergeFrom(
      static_cast<const PB_ADAS_MapCommonSignal &>(from));
}


void PB_ADAS_MapCommonSignal::MergeFrom(const PB_ADAS_MapCommonSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ADAS_MapCommonSignal)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_mapdataupdatestatus() != 0) {
    _internal_set_mapdataupdatestatus(from._internal_mapdataupdatestatus());
  }
  if (from._internal_navstatus() != 0) {
    _internal_set_navstatus(from._internal_navstatus());
  }
  if (from._internal_navguigancestatus() != 0) {
    _internal_set_navguigancestatus(from._internal_navguigancestatus());
  }
  if (from._internal_mapmatchstatus() != 0) {
    _internal_set_mapmatchstatus(from._internal_mapmatchstatus());
  }
  if (from._internal_navcountrycode() != 0) {
    _internal_set_navcountrycode(from._internal_navcountrycode());
  }
  if (from._internal_navspeedlimitunits() != 0) {
    _internal_set_navspeedlimitunits(from._internal_navspeedlimitunits());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ADAS_MapCommonSignal::CopyFrom(const PB_ADAS_MapCommonSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ADAS_MapCommonSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ADAS_MapCommonSignal::IsInitialized() const {
  return true;
}

void PB_ADAS_MapCommonSignal::InternalSwap(PB_ADAS_MapCommonSignal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ADAS_MapCommonSignal, navspeedlimitunits_)
      + sizeof(PB_ADAS_MapCommonSignal::navspeedlimitunits_)
      - PROTOBUF_FIELD_OFFSET(PB_ADAS_MapCommonSignal, mapdataupdatestatus_)>(
          reinterpret_cast<char*>(&mapdataupdatestatus_),
          reinterpret_cast<char*>(&other->mapdataupdatestatus_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ADAS_MapCommonSignal::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[75]);
}

// ===================================================================

class PB_APA_availablepoint_Struct::_Internal {
 public:
};

PB_APA_availablepoint_Struct::PB_APA_availablepoint_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  seq_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_APA_availablepoint_Struct)
}
PB_APA_availablepoint_Struct::PB_APA_availablepoint_Struct(const PB_APA_availablepoint_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seq_(from.seq_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_APA_availablepoint_Struct)
}

inline void PB_APA_availablepoint_Struct::SharedCtor() {
}

PB_APA_availablepoint_Struct::~PB_APA_availablepoint_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_APA_availablepoint_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_APA_availablepoint_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_APA_availablepoint_Struct::ArenaDtor(void* object) {
  PB_APA_availablepoint_Struct* _this = reinterpret_cast< PB_APA_availablepoint_Struct* >(object);
  (void)_this;
}
void PB_APA_availablepoint_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_APA_availablepoint_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_APA_availablepoint_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_APA_availablepoint_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seq_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_APA_availablepoint_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Soa.PB_Track_Point1 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_seq(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_APA_availablepoint_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_APA_availablepoint_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Soa.PB_Track_Point1 seq = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_seq_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_seq(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_APA_availablepoint_Struct)
  return target;
}

size_t PB_APA_availablepoint_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_APA_availablepoint_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_Track_Point1 seq = 1;
  total_size += 1UL * this->_internal_seq_size();
  for (const auto& msg : this->seq_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_APA_availablepoint_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_APA_availablepoint_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_APA_availablepoint_Struct::GetClassData() const { return &_class_data_; }

void PB_APA_availablepoint_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_APA_availablepoint_Struct *>(to)->MergeFrom(
      static_cast<const PB_APA_availablepoint_Struct &>(from));
}


void PB_APA_availablepoint_Struct::MergeFrom(const PB_APA_availablepoint_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_APA_availablepoint_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  seq_.MergeFrom(from.seq_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_APA_availablepoint_Struct::CopyFrom(const PB_APA_availablepoint_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_APA_availablepoint_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_APA_availablepoint_Struct::IsInitialized() const {
  return true;
}

void PB_APA_availablepoint_Struct::InternalSwap(PB_APA_availablepoint_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  seq_.InternalSwap(&other->seq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_APA_availablepoint_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[76]);
}

// ===================================================================

class PB_HUset_RedLightRemindEnable::_Internal {
 public:
};

PB_HUset_RedLightRemindEnable::PB_HUset_RedLightRemindEnable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_RedLightRemindEnable)
}
PB_HUset_RedLightRemindEnable::PB_HUset_RedLightRemindEnable(const PB_HUset_RedLightRemindEnable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_redlightremindenable_ = from.hu_redlightremindenable_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_RedLightRemindEnable)
}

inline void PB_HUset_RedLightRemindEnable::SharedCtor() {
hu_redlightremindenable_ = 0u;
}

PB_HUset_RedLightRemindEnable::~PB_HUset_RedLightRemindEnable() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_RedLightRemindEnable)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_RedLightRemindEnable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_RedLightRemindEnable::ArenaDtor(void* object) {
  PB_HUset_RedLightRemindEnable* _this = reinterpret_cast< PB_HUset_RedLightRemindEnable* >(object);
  (void)_this;
}
void PB_HUset_RedLightRemindEnable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_RedLightRemindEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_RedLightRemindEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_RedLightRemindEnable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_redlightremindenable_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_RedLightRemindEnable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_RedLightRemindEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_redlightremindenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_RedLightRemindEnable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_RedLightRemindEnable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_RedLightRemindEnable = 1;
  if (this->_internal_hu_redlightremindenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_redlightremindenable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_RedLightRemindEnable)
  return target;
}

size_t PB_HUset_RedLightRemindEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_RedLightRemindEnable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_RedLightRemindEnable = 1;
  if (this->_internal_hu_redlightremindenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_redlightremindenable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_RedLightRemindEnable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_RedLightRemindEnable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_RedLightRemindEnable::GetClassData() const { return &_class_data_; }

void PB_HUset_RedLightRemindEnable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_RedLightRemindEnable *>(to)->MergeFrom(
      static_cast<const PB_HUset_RedLightRemindEnable &>(from));
}


void PB_HUset_RedLightRemindEnable::MergeFrom(const PB_HUset_RedLightRemindEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_RedLightRemindEnable)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_redlightremindenable() != 0) {
    _internal_set_hu_redlightremindenable(from._internal_hu_redlightremindenable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_RedLightRemindEnable::CopyFrom(const PB_HUset_RedLightRemindEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_RedLightRemindEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_RedLightRemindEnable::IsInitialized() const {
  return true;
}

void PB_HUset_RedLightRemindEnable::InternalSwap(PB_HUset_RedLightRemindEnable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_redlightremindenable_, other->hu_redlightremindenable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_RedLightRemindEnable::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[77]);
}

// ===================================================================

class PB_AD_BSDLCAOnOffSet::_Internal {
 public:
};

PB_AD_BSDLCAOnOffSet::PB_AD_BSDLCAOnOffSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_BSDLCAOnOffSet)
}
PB_AD_BSDLCAOnOffSet::PB_AD_BSDLCAOnOffSet(const PB_AD_BSDLCAOnOffSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ad_bsdlcaonoff_ = from.ad_bsdlcaonoff_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_BSDLCAOnOffSet)
}

inline void PB_AD_BSDLCAOnOffSet::SharedCtor() {
ad_bsdlcaonoff_ = 0u;
}

PB_AD_BSDLCAOnOffSet::~PB_AD_BSDLCAOnOffSet() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_BSDLCAOnOffSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_BSDLCAOnOffSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_AD_BSDLCAOnOffSet::ArenaDtor(void* object) {
  PB_AD_BSDLCAOnOffSet* _this = reinterpret_cast< PB_AD_BSDLCAOnOffSet* >(object);
  (void)_this;
}
void PB_AD_BSDLCAOnOffSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_BSDLCAOnOffSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_BSDLCAOnOffSet::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_BSDLCAOnOffSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ad_bsdlcaonoff_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_BSDLCAOnOffSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_BSDLCAOnOff = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_bsdlcaonoff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_BSDLCAOnOffSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_BSDLCAOnOffSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_BSDLCAOnOff = 1;
  if (this->_internal_ad_bsdlcaonoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_bsdlcaonoff(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_BSDLCAOnOffSet)
  return target;
}

size_t PB_AD_BSDLCAOnOffSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_BSDLCAOnOffSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_BSDLCAOnOff = 1;
  if (this->_internal_ad_bsdlcaonoff() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_bsdlcaonoff());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_BSDLCAOnOffSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_BSDLCAOnOffSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_BSDLCAOnOffSet::GetClassData() const { return &_class_data_; }

void PB_AD_BSDLCAOnOffSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_BSDLCAOnOffSet *>(to)->MergeFrom(
      static_cast<const PB_AD_BSDLCAOnOffSet &>(from));
}


void PB_AD_BSDLCAOnOffSet::MergeFrom(const PB_AD_BSDLCAOnOffSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_BSDLCAOnOffSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_bsdlcaonoff() != 0) {
    _internal_set_ad_bsdlcaonoff(from._internal_ad_bsdlcaonoff());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_BSDLCAOnOffSet::CopyFrom(const PB_AD_BSDLCAOnOffSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_BSDLCAOnOffSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_BSDLCAOnOffSet::IsInitialized() const {
  return true;
}

void PB_AD_BSDLCAOnOffSet::InternalSwap(PB_AD_BSDLCAOnOffSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ad_bsdlcaonoff_, other->ad_bsdlcaonoff_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_BSDLCAOnOffSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[78]);
}

// ===================================================================

class PB_EDC_APAPOCDirSelData::_Internal {
 public:
};

PB_EDC_APAPOCDirSelData::PB_EDC_APAPOCDirSelData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_APAPOCDirSelData)
}
PB_EDC_APAPOCDirSelData::PB_EDC_APAPOCDirSelData(const PB_EDC_APAPOCDirSelData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_apapocdirsel_ = from.edc_apapocdirsel_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_APAPOCDirSelData)
}

inline void PB_EDC_APAPOCDirSelData::SharedCtor() {
edc_apapocdirsel_ = 0u;
}

PB_EDC_APAPOCDirSelData::~PB_EDC_APAPOCDirSelData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_APAPOCDirSelData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_APAPOCDirSelData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_APAPOCDirSelData::ArenaDtor(void* object) {
  PB_EDC_APAPOCDirSelData* _this = reinterpret_cast< PB_EDC_APAPOCDirSelData* >(object);
  (void)_this;
}
void PB_EDC_APAPOCDirSelData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_APAPOCDirSelData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_APAPOCDirSelData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_APAPOCDirSelData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apapocdirsel_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_APAPOCDirSelData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_APAPOCDirSel = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_apapocdirsel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_APAPOCDirSelData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_APAPOCDirSelData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_APAPOCDirSel = 1;
  if (this->_internal_edc_apapocdirsel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_apapocdirsel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_APAPOCDirSelData)
  return target;
}

size_t PB_EDC_APAPOCDirSelData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_APAPOCDirSelData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_APAPOCDirSel = 1;
  if (this->_internal_edc_apapocdirsel() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_apapocdirsel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_APAPOCDirSelData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_APAPOCDirSelData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_APAPOCDirSelData::GetClassData() const { return &_class_data_; }

void PB_EDC_APAPOCDirSelData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_APAPOCDirSelData *>(to)->MergeFrom(
      static_cast<const PB_EDC_APAPOCDirSelData &>(from));
}


void PB_EDC_APAPOCDirSelData::MergeFrom(const PB_EDC_APAPOCDirSelData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_APAPOCDirSelData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_apapocdirsel() != 0) {
    _internal_set_edc_apapocdirsel(from._internal_edc_apapocdirsel());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_APAPOCDirSelData::CopyFrom(const PB_EDC_APAPOCDirSelData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_APAPOCDirSelData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_APAPOCDirSelData::IsInitialized() const {
  return true;
}

void PB_EDC_APAPOCDirSelData::InternalSwap(PB_EDC_APAPOCDirSelData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_apapocdirsel_, other->edc_apapocdirsel_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_APAPOCDirSelData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[79]);
}

// ===================================================================

class PB_SeatInfo::_Internal {
 public:
};

PB_SeatInfo::PB_SeatInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_SeatInfo)
}
PB_SeatInfo::PB_SeatInfo(const PB_SeatInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&pinchstsfr_, &from.pinchstsfr_,
    static_cast<size_t>(reinterpret_cast<char*>(&reserved8_) -
    reinterpret_cast<char*>(&pinchstsfr_)) + sizeof(reserved8_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_SeatInfo)
}

inline void PB_SeatInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pinchstsfr_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&reserved8_) -
    reinterpret_cast<char*>(&pinchstsfr_)) + sizeof(reserved8_));
}

PB_SeatInfo::~PB_SeatInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_SeatInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_SeatInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_SeatInfo::ArenaDtor(void* object) {
  PB_SeatInfo* _this = reinterpret_cast< PB_SeatInfo* >(object);
  (void)_this;
}
void PB_SeatInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_SeatInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_SeatInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_SeatInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pinchstsfr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserved8_) -
      reinterpret_cast<char*>(&pinchstsfr_)) + sizeof(reserved8_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_SeatInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 PinchStsFR = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          pinchstsfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PinchStsHei = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          pinchstshei_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PinchStsBr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          pinchstsbr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PinchStsCus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          pinchstscus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PinchStsLegFR = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          pinchstslegfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PinchStsLegHei = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          pinchstsleghei_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved1 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          reserved1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved2 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          reserved2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved3 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          reserved3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved4 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          reserved4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved5 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          reserved5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved6 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          reserved6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved7 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          reserved7_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved8 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          reserved8_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_SeatInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_SeatInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PinchStsFR = 1;
  if (this->_internal_pinchstsfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_pinchstsfr(), target);
  }

  // uint32 PinchStsHei = 2;
  if (this->_internal_pinchstshei() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_pinchstshei(), target);
  }

  // uint32 PinchStsBr = 3;
  if (this->_internal_pinchstsbr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_pinchstsbr(), target);
  }

  // uint32 PinchStsCus = 4;
  if (this->_internal_pinchstscus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_pinchstscus(), target);
  }

  // uint32 PinchStsLegFR = 5;
  if (this->_internal_pinchstslegfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_pinchstslegfr(), target);
  }

  // uint32 PinchStsLegHei = 6;
  if (this->_internal_pinchstsleghei() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_pinchstsleghei(), target);
  }

  // uint32 reserved1 = 7;
  if (this->_internal_reserved1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_reserved1(), target);
  }

  // uint32 reserved2 = 8;
  if (this->_internal_reserved2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_reserved2(), target);
  }

  // uint32 reserved3 = 9;
  if (this->_internal_reserved3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_reserved3(), target);
  }

  // uint32 reserved4 = 10;
  if (this->_internal_reserved4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_reserved4(), target);
  }

  // uint32 reserved5 = 11;
  if (this->_internal_reserved5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_reserved5(), target);
  }

  // uint32 reserved6 = 12;
  if (this->_internal_reserved6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_reserved6(), target);
  }

  // uint32 reserved7 = 13;
  if (this->_internal_reserved7() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_reserved7(), target);
  }

  // uint32 reserved8 = 14;
  if (this->_internal_reserved8() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_reserved8(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_SeatInfo)
  return target;
}

size_t PB_SeatInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_SeatInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 PinchStsFR = 1;
  if (this->_internal_pinchstsfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_pinchstsfr());
  }

  // uint32 PinchStsHei = 2;
  if (this->_internal_pinchstshei() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_pinchstshei());
  }

  // uint32 PinchStsBr = 3;
  if (this->_internal_pinchstsbr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_pinchstsbr());
  }

  // uint32 PinchStsCus = 4;
  if (this->_internal_pinchstscus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_pinchstscus());
  }

  // uint32 PinchStsLegFR = 5;
  if (this->_internal_pinchstslegfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_pinchstslegfr());
  }

  // uint32 PinchStsLegHei = 6;
  if (this->_internal_pinchstsleghei() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_pinchstsleghei());
  }

  // uint32 reserved1 = 7;
  if (this->_internal_reserved1() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved1());
  }

  // uint32 reserved2 = 8;
  if (this->_internal_reserved2() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved2());
  }

  // uint32 reserved3 = 9;
  if (this->_internal_reserved3() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved3());
  }

  // uint32 reserved4 = 10;
  if (this->_internal_reserved4() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved4());
  }

  // uint32 reserved5 = 11;
  if (this->_internal_reserved5() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved5());
  }

  // uint32 reserved6 = 12;
  if (this->_internal_reserved6() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved6());
  }

  // uint32 reserved7 = 13;
  if (this->_internal_reserved7() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved7());
  }

  // uint32 reserved8 = 14;
  if (this->_internal_reserved8() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved8());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_SeatInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_SeatInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_SeatInfo::GetClassData() const { return &_class_data_; }

void PB_SeatInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_SeatInfo *>(to)->MergeFrom(
      static_cast<const PB_SeatInfo &>(from));
}


void PB_SeatInfo::MergeFrom(const PB_SeatInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_SeatInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_pinchstsfr() != 0) {
    _internal_set_pinchstsfr(from._internal_pinchstsfr());
  }
  if (from._internal_pinchstshei() != 0) {
    _internal_set_pinchstshei(from._internal_pinchstshei());
  }
  if (from._internal_pinchstsbr() != 0) {
    _internal_set_pinchstsbr(from._internal_pinchstsbr());
  }
  if (from._internal_pinchstscus() != 0) {
    _internal_set_pinchstscus(from._internal_pinchstscus());
  }
  if (from._internal_pinchstslegfr() != 0) {
    _internal_set_pinchstslegfr(from._internal_pinchstslegfr());
  }
  if (from._internal_pinchstsleghei() != 0) {
    _internal_set_pinchstsleghei(from._internal_pinchstsleghei());
  }
  if (from._internal_reserved1() != 0) {
    _internal_set_reserved1(from._internal_reserved1());
  }
  if (from._internal_reserved2() != 0) {
    _internal_set_reserved2(from._internal_reserved2());
  }
  if (from._internal_reserved3() != 0) {
    _internal_set_reserved3(from._internal_reserved3());
  }
  if (from._internal_reserved4() != 0) {
    _internal_set_reserved4(from._internal_reserved4());
  }
  if (from._internal_reserved5() != 0) {
    _internal_set_reserved5(from._internal_reserved5());
  }
  if (from._internal_reserved6() != 0) {
    _internal_set_reserved6(from._internal_reserved6());
  }
  if (from._internal_reserved7() != 0) {
    _internal_set_reserved7(from._internal_reserved7());
  }
  if (from._internal_reserved8() != 0) {
    _internal_set_reserved8(from._internal_reserved8());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_SeatInfo::CopyFrom(const PB_SeatInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_SeatInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_SeatInfo::IsInitialized() const {
  return true;
}

void PB_SeatInfo::InternalSwap(PB_SeatInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_SeatInfo, reserved8_)
      + sizeof(PB_SeatInfo::reserved8_)
      - PROTOBUF_FIELD_OFFSET(PB_SeatInfo, pinchstsfr_)>(
          reinterpret_cast<char*>(&pinchstsfr_),
          reinterpret_cast<char*>(&other->pinchstsfr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_SeatInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[80]);
}

// ===================================================================

class PB_HUset_CSLAEnable::_Internal {
 public:
};

PB_HUset_CSLAEnable::PB_HUset_CSLAEnable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_CSLAEnable)
}
PB_HUset_CSLAEnable::PB_HUset_CSLAEnable(const PB_HUset_CSLAEnable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_cslaenable_ = from.hu_cslaenable_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_CSLAEnable)
}

inline void PB_HUset_CSLAEnable::SharedCtor() {
hu_cslaenable_ = 0u;
}

PB_HUset_CSLAEnable::~PB_HUset_CSLAEnable() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_CSLAEnable)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_CSLAEnable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_CSLAEnable::ArenaDtor(void* object) {
  PB_HUset_CSLAEnable* _this = reinterpret_cast< PB_HUset_CSLAEnable* >(object);
  (void)_this;
}
void PB_HUset_CSLAEnable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_CSLAEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_CSLAEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_CSLAEnable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_cslaenable_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_CSLAEnable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_CSLAEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_cslaenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_CSLAEnable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_CSLAEnable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_CSLAEnable = 1;
  if (this->_internal_hu_cslaenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_cslaenable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_CSLAEnable)
  return target;
}

size_t PB_HUset_CSLAEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_CSLAEnable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_CSLAEnable = 1;
  if (this->_internal_hu_cslaenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_cslaenable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_CSLAEnable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_CSLAEnable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_CSLAEnable::GetClassData() const { return &_class_data_; }

void PB_HUset_CSLAEnable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_CSLAEnable *>(to)->MergeFrom(
      static_cast<const PB_HUset_CSLAEnable &>(from));
}


void PB_HUset_CSLAEnable::MergeFrom(const PB_HUset_CSLAEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_CSLAEnable)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_cslaenable() != 0) {
    _internal_set_hu_cslaenable(from._internal_hu_cslaenable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_CSLAEnable::CopyFrom(const PB_HUset_CSLAEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_CSLAEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_CSLAEnable::IsInitialized() const {
  return true;
}

void PB_HUset_CSLAEnable::InternalSwap(PB_HUset_CSLAEnable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_cslaenable_, other->hu_cslaenable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_CSLAEnable::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[81]);
}

// ===================================================================

class PB_HUset_OverspeedSoundWarEnable::_Internal {
 public:
};

PB_HUset_OverspeedSoundWarEnable::PB_HUset_OverspeedSoundWarEnable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_OverspeedSoundWarEnable)
}
PB_HUset_OverspeedSoundWarEnable::PB_HUset_OverspeedSoundWarEnable(const PB_HUset_OverspeedSoundWarEnable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_overspeedsoundwarenable_ = from.hu_overspeedsoundwarenable_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_OverspeedSoundWarEnable)
}

inline void PB_HUset_OverspeedSoundWarEnable::SharedCtor() {
hu_overspeedsoundwarenable_ = 0u;
}

PB_HUset_OverspeedSoundWarEnable::~PB_HUset_OverspeedSoundWarEnable() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_OverspeedSoundWarEnable)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_OverspeedSoundWarEnable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_OverspeedSoundWarEnable::ArenaDtor(void* object) {
  PB_HUset_OverspeedSoundWarEnable* _this = reinterpret_cast< PB_HUset_OverspeedSoundWarEnable* >(object);
  (void)_this;
}
void PB_HUset_OverspeedSoundWarEnable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_OverspeedSoundWarEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_OverspeedSoundWarEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_OverspeedSoundWarEnable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_overspeedsoundwarenable_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_OverspeedSoundWarEnable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_OverspeedSoundWarEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_overspeedsoundwarenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_OverspeedSoundWarEnable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_OverspeedSoundWarEnable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_OverspeedSoundWarEnable = 1;
  if (this->_internal_hu_overspeedsoundwarenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_overspeedsoundwarenable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_OverspeedSoundWarEnable)
  return target;
}

size_t PB_HUset_OverspeedSoundWarEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_OverspeedSoundWarEnable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_OverspeedSoundWarEnable = 1;
  if (this->_internal_hu_overspeedsoundwarenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_overspeedsoundwarenable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_OverspeedSoundWarEnable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_OverspeedSoundWarEnable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_OverspeedSoundWarEnable::GetClassData() const { return &_class_data_; }

void PB_HUset_OverspeedSoundWarEnable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_OverspeedSoundWarEnable *>(to)->MergeFrom(
      static_cast<const PB_HUset_OverspeedSoundWarEnable &>(from));
}


void PB_HUset_OverspeedSoundWarEnable::MergeFrom(const PB_HUset_OverspeedSoundWarEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_OverspeedSoundWarEnable)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_overspeedsoundwarenable() != 0) {
    _internal_set_hu_overspeedsoundwarenable(from._internal_hu_overspeedsoundwarenable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_OverspeedSoundWarEnable::CopyFrom(const PB_HUset_OverspeedSoundWarEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_OverspeedSoundWarEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_OverspeedSoundWarEnable::IsInitialized() const {
  return true;
}

void PB_HUset_OverspeedSoundWarEnable::InternalSwap(PB_HUset_OverspeedSoundWarEnable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_overspeedsoundwarenable_, other->hu_overspeedsoundwarenable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_OverspeedSoundWarEnable::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[82]);
}

// ===================================================================

class PB_DTCArrayInfo_Struct::_Internal {
 public:
};

PB_DTCArrayInfo_Struct::PB_DTCArrayInfo_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  seq_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_DTCArrayInfo_Struct)
}
PB_DTCArrayInfo_Struct::PB_DTCArrayInfo_Struct(const PB_DTCArrayInfo_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seq_(from.seq_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_DTCArrayInfo_Struct)
}

inline void PB_DTCArrayInfo_Struct::SharedCtor() {
}

PB_DTCArrayInfo_Struct::~PB_DTCArrayInfo_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_DTCArrayInfo_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_DTCArrayInfo_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_DTCArrayInfo_Struct::ArenaDtor(void* object) {
  PB_DTCArrayInfo_Struct* _this = reinterpret_cast< PB_DTCArrayInfo_Struct* >(object);
  (void)_this;
}
void PB_DTCArrayInfo_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_DTCArrayInfo_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_DTCArrayInfo_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_DTCArrayInfo_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seq_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_DTCArrayInfo_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_seq(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_seq(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_DTCArrayInfo_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_DTCArrayInfo_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 seq = 1;
  {
    int byte_size = _seq_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_seq(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_DTCArrayInfo_Struct)
  return target;
}

size_t PB_DTCArrayInfo_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_DTCArrayInfo_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 seq = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->seq_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _seq_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_DTCArrayInfo_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_DTCArrayInfo_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_DTCArrayInfo_Struct::GetClassData() const { return &_class_data_; }

void PB_DTCArrayInfo_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_DTCArrayInfo_Struct *>(to)->MergeFrom(
      static_cast<const PB_DTCArrayInfo_Struct &>(from));
}


void PB_DTCArrayInfo_Struct::MergeFrom(const PB_DTCArrayInfo_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_DTCArrayInfo_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  seq_.MergeFrom(from.seq_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_DTCArrayInfo_Struct::CopyFrom(const PB_DTCArrayInfo_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_DTCArrayInfo_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_DTCArrayInfo_Struct::IsInitialized() const {
  return true;
}

void PB_DTCArrayInfo_Struct::InternalSwap(PB_DTCArrayInfo_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  seq_.InternalSwap(&other->seq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_DTCArrayInfo_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[83]);
}

// ===================================================================

class PB_AD_APAFctnIndnMsgData::_Internal {
 public:
};

PB_AD_APAFctnIndnMsgData::PB_AD_APAFctnIndnMsgData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_APAFctnIndnMsgData)
}
PB_AD_APAFctnIndnMsgData::PB_AD_APAFctnIndnMsgData(const PB_AD_APAFctnIndnMsgData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ad_apaunavlreas_, &from.ad_apaunavlreas_,
    static_cast<size_t>(reinterpret_cast<char*>(&ad_radsexitreas_) -
    reinterpret_cast<char*>(&ad_apaunavlreas_)) + sizeof(ad_radsexitreas_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_APAFctnIndnMsgData)
}

inline void PB_AD_APAFctnIndnMsgData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ad_apaunavlreas_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ad_radsexitreas_) -
    reinterpret_cast<char*>(&ad_apaunavlreas_)) + sizeof(ad_radsexitreas_));
}

PB_AD_APAFctnIndnMsgData::~PB_AD_APAFctnIndnMsgData() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_APAFctnIndnMsgData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_APAFctnIndnMsgData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_AD_APAFctnIndnMsgData::ArenaDtor(void* object) {
  PB_AD_APAFctnIndnMsgData* _this = reinterpret_cast< PB_AD_APAFctnIndnMsgData* >(object);
  (void)_this;
}
void PB_AD_APAFctnIndnMsgData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_APAFctnIndnMsgData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_APAFctnIndnMsgData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_APAFctnIndnMsgData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ad_apaunavlreas_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ad_radsexitreas_) -
      reinterpret_cast<char*>(&ad_apaunavlreas_)) + sizeof(ad_radsexitreas_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_APAFctnIndnMsgData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_APAUnavlReas = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_apaunavlreas_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APAProcInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ad_apaprocinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APAAbnormExitReas = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ad_apaabnormexitreas_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_RADSUnavlReas = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ad_radsunavlreas_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_RADSProcInfo = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          ad_radsprocinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_RADSExitReas = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          ad_radsexitreas_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_APAFctnIndnMsgData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_APAFctnIndnMsgData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_APAUnavlReas = 1;
  if (this->_internal_ad_apaunavlreas() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_apaunavlreas(), target);
  }

  // uint32 AD_APAProcInfo = 2;
  if (this->_internal_ad_apaprocinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ad_apaprocinfo(), target);
  }

  // uint32 AD_APAAbnormExitReas = 3;
  if (this->_internal_ad_apaabnormexitreas() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ad_apaabnormexitreas(), target);
  }

  // uint32 AD_RADSUnavlReas = 4;
  if (this->_internal_ad_radsunavlreas() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_ad_radsunavlreas(), target);
  }

  // uint32 AD_RADSProcInfo = 5;
  if (this->_internal_ad_radsprocinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_ad_radsprocinfo(), target);
  }

  // uint32 AD_RADSExitReas = 6;
  if (this->_internal_ad_radsexitreas() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_ad_radsexitreas(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_APAFctnIndnMsgData)
  return target;
}

size_t PB_AD_APAFctnIndnMsgData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_APAFctnIndnMsgData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_APAUnavlReas = 1;
  if (this->_internal_ad_apaunavlreas() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apaunavlreas());
  }

  // uint32 AD_APAProcInfo = 2;
  if (this->_internal_ad_apaprocinfo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apaprocinfo());
  }

  // uint32 AD_APAAbnormExitReas = 3;
  if (this->_internal_ad_apaabnormexitreas() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apaabnormexitreas());
  }

  // uint32 AD_RADSUnavlReas = 4;
  if (this->_internal_ad_radsunavlreas() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_radsunavlreas());
  }

  // uint32 AD_RADSProcInfo = 5;
  if (this->_internal_ad_radsprocinfo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_radsprocinfo());
  }

  // uint32 AD_RADSExitReas = 6;
  if (this->_internal_ad_radsexitreas() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_radsexitreas());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_APAFctnIndnMsgData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_APAFctnIndnMsgData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_APAFctnIndnMsgData::GetClassData() const { return &_class_data_; }

void PB_AD_APAFctnIndnMsgData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_APAFctnIndnMsgData *>(to)->MergeFrom(
      static_cast<const PB_AD_APAFctnIndnMsgData &>(from));
}


void PB_AD_APAFctnIndnMsgData::MergeFrom(const PB_AD_APAFctnIndnMsgData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_APAFctnIndnMsgData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_apaunavlreas() != 0) {
    _internal_set_ad_apaunavlreas(from._internal_ad_apaunavlreas());
  }
  if (from._internal_ad_apaprocinfo() != 0) {
    _internal_set_ad_apaprocinfo(from._internal_ad_apaprocinfo());
  }
  if (from._internal_ad_apaabnormexitreas() != 0) {
    _internal_set_ad_apaabnormexitreas(from._internal_ad_apaabnormexitreas());
  }
  if (from._internal_ad_radsunavlreas() != 0) {
    _internal_set_ad_radsunavlreas(from._internal_ad_radsunavlreas());
  }
  if (from._internal_ad_radsprocinfo() != 0) {
    _internal_set_ad_radsprocinfo(from._internal_ad_radsprocinfo());
  }
  if (from._internal_ad_radsexitreas() != 0) {
    _internal_set_ad_radsexitreas(from._internal_ad_radsexitreas());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_APAFctnIndnMsgData::CopyFrom(const PB_AD_APAFctnIndnMsgData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_APAFctnIndnMsgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_APAFctnIndnMsgData::IsInitialized() const {
  return true;
}

void PB_AD_APAFctnIndnMsgData::InternalSwap(PB_AD_APAFctnIndnMsgData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_AD_APAFctnIndnMsgData, ad_radsexitreas_)
      + sizeof(PB_AD_APAFctnIndnMsgData::ad_radsexitreas_)
      - PROTOBUF_FIELD_OFFSET(PB_AD_APAFctnIndnMsgData, ad_apaunavlreas_)>(
          reinterpret_cast<char*>(&ad_apaunavlreas_),
          reinterpret_cast<char*>(&other->ad_apaunavlreas_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_APAFctnIndnMsgData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[84]);
}

// ===================================================================

class PB_TurnLiCtrlCmd::_Internal {
 public:
};

PB_TurnLiCtrlCmd::PB_TurnLiCtrlCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TurnLiCtrlCmd)
}
PB_TurnLiCtrlCmd::PB_TurnLiCtrlCmd(const PB_TurnLiCtrlCmd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&turnlictrlposn_, &from.turnlictrlposn_,
    static_cast<size_t>(reinterpret_cast<char*>(&flowingefc_) -
    reinterpret_cast<char*>(&turnlictrlposn_)) + sizeof(flowingefc_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TurnLiCtrlCmd)
}

inline void PB_TurnLiCtrlCmd::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&turnlictrlposn_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&flowingefc_) -
    reinterpret_cast<char*>(&turnlictrlposn_)) + sizeof(flowingefc_));
}

PB_TurnLiCtrlCmd::~PB_TurnLiCtrlCmd() {
  // @@protoc_insertion_point(destructor:Soa.PB_TurnLiCtrlCmd)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TurnLiCtrlCmd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TurnLiCtrlCmd::ArenaDtor(void* object) {
  PB_TurnLiCtrlCmd* _this = reinterpret_cast< PB_TurnLiCtrlCmd* >(object);
  (void)_this;
}
void PB_TurnLiCtrlCmd::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TurnLiCtrlCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TurnLiCtrlCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TurnLiCtrlCmd)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&turnlictrlposn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flowingefc_) -
      reinterpret_cast<char*>(&turnlictrlposn_)) + sizeof(flowingefc_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TurnLiCtrlCmd::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 TurnLiCtrlPosn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          turnlictrlposn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TurnLiOffDurn = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          turnlioffdurn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TurnLiOnDurn = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          turnliondurn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TurnLiPRI = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          turnlipri_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TurnLiCnt = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          turnlicnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TurnLiRecover = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          turnlirecover_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FlowingEfc = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          flowingefc_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TurnLiCtrlCmd::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TurnLiCtrlCmd)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TurnLiCtrlPosn = 1;
  if (this->_internal_turnlictrlposn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_turnlictrlposn(), target);
  }

  // uint32 TurnLiOffDurn = 2;
  if (this->_internal_turnlioffdurn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_turnlioffdurn(), target);
  }

  // uint32 TurnLiOnDurn = 3;
  if (this->_internal_turnliondurn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_turnliondurn(), target);
  }

  // uint32 TurnLiPRI = 4;
  if (this->_internal_turnlipri() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_turnlipri(), target);
  }

  // uint32 TurnLiCnt = 5;
  if (this->_internal_turnlicnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_turnlicnt(), target);
  }

  // uint32 TurnLiRecover = 6;
  if (this->_internal_turnlirecover() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_turnlirecover(), target);
  }

  // uint32 FlowingEfc = 7;
  if (this->_internal_flowingefc() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_flowingefc(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TurnLiCtrlCmd)
  return target;
}

size_t PB_TurnLiCtrlCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TurnLiCtrlCmd)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 TurnLiCtrlPosn = 1;
  if (this->_internal_turnlictrlposn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_turnlictrlposn());
  }

  // uint32 TurnLiOffDurn = 2;
  if (this->_internal_turnlioffdurn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_turnlioffdurn());
  }

  // uint32 TurnLiOnDurn = 3;
  if (this->_internal_turnliondurn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_turnliondurn());
  }

  // uint32 TurnLiPRI = 4;
  if (this->_internal_turnlipri() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_turnlipri());
  }

  // uint32 TurnLiCnt = 5;
  if (this->_internal_turnlicnt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_turnlicnt());
  }

  // uint32 TurnLiRecover = 6;
  if (this->_internal_turnlirecover() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_turnlirecover());
  }

  // uint32 FlowingEfc = 7;
  if (this->_internal_flowingefc() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_flowingefc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TurnLiCtrlCmd::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TurnLiCtrlCmd::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TurnLiCtrlCmd::GetClassData() const { return &_class_data_; }

void PB_TurnLiCtrlCmd::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TurnLiCtrlCmd *>(to)->MergeFrom(
      static_cast<const PB_TurnLiCtrlCmd &>(from));
}


void PB_TurnLiCtrlCmd::MergeFrom(const PB_TurnLiCtrlCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TurnLiCtrlCmd)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_turnlictrlposn() != 0) {
    _internal_set_turnlictrlposn(from._internal_turnlictrlposn());
  }
  if (from._internal_turnlioffdurn() != 0) {
    _internal_set_turnlioffdurn(from._internal_turnlioffdurn());
  }
  if (from._internal_turnliondurn() != 0) {
    _internal_set_turnliondurn(from._internal_turnliondurn());
  }
  if (from._internal_turnlipri() != 0) {
    _internal_set_turnlipri(from._internal_turnlipri());
  }
  if (from._internal_turnlicnt() != 0) {
    _internal_set_turnlicnt(from._internal_turnlicnt());
  }
  if (from._internal_turnlirecover() != 0) {
    _internal_set_turnlirecover(from._internal_turnlirecover());
  }
  if (from._internal_flowingefc() != 0) {
    _internal_set_flowingefc(from._internal_flowingefc());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TurnLiCtrlCmd::CopyFrom(const PB_TurnLiCtrlCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TurnLiCtrlCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TurnLiCtrlCmd::IsInitialized() const {
  return true;
}

void PB_TurnLiCtrlCmd::InternalSwap(PB_TurnLiCtrlCmd* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_TurnLiCtrlCmd, flowingefc_)
      + sizeof(PB_TurnLiCtrlCmd::flowingefc_)
      - PROTOBUF_FIELD_OFFSET(PB_TurnLiCtrlCmd, turnlictrlposn_)>(
          reinterpret_cast<char*>(&turnlictrlposn_),
          reinterpret_cast<char*>(&other->turnlictrlposn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TurnLiCtrlCmd::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[85]);
}

// ===================================================================

class PB_double_Struct::_Internal {
 public:
};

PB_double_Struct::PB_double_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_double_Struct)
}
PB_double_Struct::PB_double_Struct(const PB_double_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_double_Struct)
}

inline void PB_double_Struct::SharedCtor() {
data_ = 0;
}

PB_double_Struct::~PB_double_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_double_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_double_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_double_Struct::ArenaDtor(void* object) {
  PB_double_Struct* _this = reinterpret_cast< PB_double_Struct* >(object);
  (void)_this;
}
void PB_double_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_double_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_double_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_double_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_double_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_double_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_double_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double data = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_data = this->_internal_data();
  uint64_t raw_data;
  memcpy(&raw_data, &tmp_data, sizeof(tmp_data));
  if (raw_data != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_double_Struct)
  return target;
}

size_t PB_double_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_double_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double data = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_data = this->_internal_data();
  uint64_t raw_data;
  memcpy(&raw_data, &tmp_data, sizeof(tmp_data));
  if (raw_data != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_double_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_double_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_double_Struct::GetClassData() const { return &_class_data_; }

void PB_double_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_double_Struct *>(to)->MergeFrom(
      static_cast<const PB_double_Struct &>(from));
}


void PB_double_Struct::MergeFrom(const PB_double_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_double_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_data = from._internal_data();
  uint64_t raw_data;
  memcpy(&raw_data, &tmp_data, sizeof(tmp_data));
  if (raw_data != 0) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_double_Struct::CopyFrom(const PB_double_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_double_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_double_Struct::IsInitialized() const {
  return true;
}

void PB_double_Struct::InternalSwap(PB_double_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_double_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[86]);
}

// ===================================================================

class PB_RLSSts::_Internal {
 public:
};

PB_RLSSts::PB_RLSSts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_RLSSts)
}
PB_RLSSts::PB_RLSSts(const PB_RLSSts& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&rlsst_, &from.rlsst_,
    static_cast<size_t>(reinterpret_cast<char*>(&wiprspd_) -
    reinterpret_cast<char*>(&rlsst_)) + sizeof(wiprspd_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_RLSSts)
}

inline void PB_RLSSts::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&rlsst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&wiprspd_) -
    reinterpret_cast<char*>(&rlsst_)) + sizeof(wiprspd_));
}

PB_RLSSts::~PB_RLSSts() {
  // @@protoc_insertion_point(destructor:Soa.PB_RLSSts)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_RLSSts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_RLSSts::ArenaDtor(void* object) {
  PB_RLSSts* _this = reinterpret_cast< PB_RLSSts* >(object);
  (void)_this;
}
void PB_RLSSts::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_RLSSts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_RLSSts::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_RLSSts)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rlsst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wiprspd_) -
      reinterpret_cast<char*>(&rlsst_)) + sizeof(wiprspd_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_RLSSts::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RLSSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          rlsst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RLSErrorSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          rlserrorst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RainfallLevel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          rainfalllevel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RLSComError = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          rlscomerror_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WiprSpd = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          wiprspd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_RLSSts::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_RLSSts)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RLSSt = 1;
  if (this->_internal_rlsst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_rlsst(), target);
  }

  // uint32 RLSErrorSt = 2;
  if (this->_internal_rlserrorst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_rlserrorst(), target);
  }

  // uint32 RainfallLevel = 3;
  if (this->_internal_rainfalllevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rainfalllevel(), target);
  }

  // uint32 RLSComError = 4;
  if (this->_internal_rlscomerror() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_rlscomerror(), target);
  }

  // uint32 WiprSpd = 5;
  if (this->_internal_wiprspd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_wiprspd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_RLSSts)
  return target;
}

size_t PB_RLSSts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_RLSSts)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RLSSt = 1;
  if (this->_internal_rlsst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rlsst());
  }

  // uint32 RLSErrorSt = 2;
  if (this->_internal_rlserrorst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rlserrorst());
  }

  // uint32 RainfallLevel = 3;
  if (this->_internal_rainfalllevel() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rainfalllevel());
  }

  // uint32 RLSComError = 4;
  if (this->_internal_rlscomerror() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rlscomerror());
  }

  // uint32 WiprSpd = 5;
  if (this->_internal_wiprspd() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_wiprspd());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_RLSSts::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_RLSSts::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_RLSSts::GetClassData() const { return &_class_data_; }

void PB_RLSSts::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_RLSSts *>(to)->MergeFrom(
      static_cast<const PB_RLSSts &>(from));
}


void PB_RLSSts::MergeFrom(const PB_RLSSts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_RLSSts)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rlsst() != 0) {
    _internal_set_rlsst(from._internal_rlsst());
  }
  if (from._internal_rlserrorst() != 0) {
    _internal_set_rlserrorst(from._internal_rlserrorst());
  }
  if (from._internal_rainfalllevel() != 0) {
    _internal_set_rainfalllevel(from._internal_rainfalllevel());
  }
  if (from._internal_rlscomerror() != 0) {
    _internal_set_rlscomerror(from._internal_rlscomerror());
  }
  if (from._internal_wiprspd() != 0) {
    _internal_set_wiprspd(from._internal_wiprspd());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_RLSSts::CopyFrom(const PB_RLSSts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_RLSSts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RLSSts::IsInitialized() const {
  return true;
}

void PB_RLSSts::InternalSwap(PB_RLSSts* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_RLSSts, wiprspd_)
      + sizeof(PB_RLSSts::wiprspd_)
      - PROTOBUF_FIELD_OFFSET(PB_RLSSts, rlsst_)>(
          reinterpret_cast<char*>(&rlsst_),
          reinterpret_cast<char*>(&other->rlsst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_RLSSts::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[87]);
}

// ===================================================================

class PB_String_Struct::_Internal {
 public:
};

PB_String_Struct::PB_String_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_String_Struct)
}
PB_String_Struct::PB_String_Struct(const PB_String_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_data(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:Soa.PB_String_Struct)
}

inline void PB_String_Struct::SharedCtor() {
data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  data_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PB_String_Struct::~PB_String_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_String_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_String_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PB_String_Struct::ArenaDtor(void* object) {
  PB_String_Struct* _this = reinterpret_cast< PB_String_Struct* >(object);
  (void)_this;
}
void PB_String_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_String_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_String_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_String_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_String_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_String_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_String_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_String_Struct)
  return target;
}

size_t PB_String_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_String_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes data = 1;
  if (!this->_internal_data().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_String_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_String_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_String_Struct::GetClassData() const { return &_class_data_; }

void PB_String_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_String_Struct *>(to)->MergeFrom(
      static_cast<const PB_String_Struct &>(from));
}


void PB_String_Struct::MergeFrom(const PB_String_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_String_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data().empty()) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_String_Struct::CopyFrom(const PB_String_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_String_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_String_Struct::IsInitialized() const {
  return true;
}

void PB_String_Struct::InternalSwap(PB_String_Struct* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &data_, lhs_arena,
      &other->data_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_String_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[88]);
}

// ===================================================================

class PB_PosnLiActCtrlInfo::_Internal {
 public:
};

PB_PosnLiActCtrlInfo::PB_PosnLiActCtrlInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_PosnLiActCtrlInfo)
}
PB_PosnLiActCtrlInfo::PB_PosnLiActCtrlInfo(const PB_PosnLiActCtrlInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&fl_actctrlst_, &from.fl_actctrlst_,
    static_cast<size_t>(reinterpret_cast<char*>(&rr_actctrlst_) -
    reinterpret_cast<char*>(&fl_actctrlst_)) + sizeof(rr_actctrlst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_PosnLiActCtrlInfo)
}

inline void PB_PosnLiActCtrlInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fl_actctrlst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rr_actctrlst_) -
    reinterpret_cast<char*>(&fl_actctrlst_)) + sizeof(rr_actctrlst_));
}

PB_PosnLiActCtrlInfo::~PB_PosnLiActCtrlInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_PosnLiActCtrlInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_PosnLiActCtrlInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_PosnLiActCtrlInfo::ArenaDtor(void* object) {
  PB_PosnLiActCtrlInfo* _this = reinterpret_cast< PB_PosnLiActCtrlInfo* >(object);
  (void)_this;
}
void PB_PosnLiActCtrlInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_PosnLiActCtrlInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_PosnLiActCtrlInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_PosnLiActCtrlInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fl_actctrlst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rr_actctrlst_) -
      reinterpret_cast<char*>(&fl_actctrlst_)) + sizeof(rr_actctrlst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_PosnLiActCtrlInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FL_ActCtrlSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          fl_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FR_ActCtrlSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          fr_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RL_ActCtrlSt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          rl_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RR_ActCtrlSt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          rr_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_PosnLiActCtrlInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_PosnLiActCtrlInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FL_ActCtrlSt = 1;
  if (this->_internal_fl_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_fl_actctrlst(), target);
  }

  // uint32 FR_ActCtrlSt = 2;
  if (this->_internal_fr_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_fr_actctrlst(), target);
  }

  // uint32 RL_ActCtrlSt = 3;
  if (this->_internal_rl_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rl_actctrlst(), target);
  }

  // uint32 RR_ActCtrlSt = 4;
  if (this->_internal_rr_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_rr_actctrlst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_PosnLiActCtrlInfo)
  return target;
}

size_t PB_PosnLiActCtrlInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_PosnLiActCtrlInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FL_ActCtrlSt = 1;
  if (this->_internal_fl_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_fl_actctrlst());
  }

  // uint32 FR_ActCtrlSt = 2;
  if (this->_internal_fr_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_fr_actctrlst());
  }

  // uint32 RL_ActCtrlSt = 3;
  if (this->_internal_rl_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rl_actctrlst());
  }

  // uint32 RR_ActCtrlSt = 4;
  if (this->_internal_rr_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rr_actctrlst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_PosnLiActCtrlInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_PosnLiActCtrlInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_PosnLiActCtrlInfo::GetClassData() const { return &_class_data_; }

void PB_PosnLiActCtrlInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_PosnLiActCtrlInfo *>(to)->MergeFrom(
      static_cast<const PB_PosnLiActCtrlInfo &>(from));
}


void PB_PosnLiActCtrlInfo::MergeFrom(const PB_PosnLiActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_PosnLiActCtrlInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fl_actctrlst() != 0) {
    _internal_set_fl_actctrlst(from._internal_fl_actctrlst());
  }
  if (from._internal_fr_actctrlst() != 0) {
    _internal_set_fr_actctrlst(from._internal_fr_actctrlst());
  }
  if (from._internal_rl_actctrlst() != 0) {
    _internal_set_rl_actctrlst(from._internal_rl_actctrlst());
  }
  if (from._internal_rr_actctrlst() != 0) {
    _internal_set_rr_actctrlst(from._internal_rr_actctrlst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_PosnLiActCtrlInfo::CopyFrom(const PB_PosnLiActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_PosnLiActCtrlInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PosnLiActCtrlInfo::IsInitialized() const {
  return true;
}

void PB_PosnLiActCtrlInfo::InternalSwap(PB_PosnLiActCtrlInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_PosnLiActCtrlInfo, rr_actctrlst_)
      + sizeof(PB_PosnLiActCtrlInfo::rr_actctrlst_)
      - PROTOBUF_FIELD_OFFSET(PB_PosnLiActCtrlInfo, fl_actctrlst_)>(
          reinterpret_cast<char*>(&fl_actctrlst_),
          reinterpret_cast<char*>(&other->fl_actctrlst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_PosnLiActCtrlInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[89]);
}

// ===================================================================

class PB_HUset_LASModeSelection::_Internal {
 public:
};

PB_HUset_LASModeSelection::PB_HUset_LASModeSelection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_LASModeSelection)
}
PB_HUset_LASModeSelection::PB_HUset_LASModeSelection(const PB_HUset_LASModeSelection& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_lasmodeselection_ = from.hu_lasmodeselection_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_LASModeSelection)
}

inline void PB_HUset_LASModeSelection::SharedCtor() {
hu_lasmodeselection_ = 0u;
}

PB_HUset_LASModeSelection::~PB_HUset_LASModeSelection() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_LASModeSelection)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_LASModeSelection::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_LASModeSelection::ArenaDtor(void* object) {
  PB_HUset_LASModeSelection* _this = reinterpret_cast< PB_HUset_LASModeSelection* >(object);
  (void)_this;
}
void PB_HUset_LASModeSelection::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_LASModeSelection::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_LASModeSelection::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_LASModeSelection)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_lasmodeselection_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_LASModeSelection::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_LASModeSelection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_lasmodeselection_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_LASModeSelection::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_LASModeSelection)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_LASModeSelection = 1;
  if (this->_internal_hu_lasmodeselection() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_lasmodeselection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_LASModeSelection)
  return target;
}

size_t PB_HUset_LASModeSelection::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_LASModeSelection)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_LASModeSelection = 1;
  if (this->_internal_hu_lasmodeselection() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_lasmodeselection());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_LASModeSelection::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_LASModeSelection::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_LASModeSelection::GetClassData() const { return &_class_data_; }

void PB_HUset_LASModeSelection::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_LASModeSelection *>(to)->MergeFrom(
      static_cast<const PB_HUset_LASModeSelection &>(from));
}


void PB_HUset_LASModeSelection::MergeFrom(const PB_HUset_LASModeSelection& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_LASModeSelection)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_lasmodeselection() != 0) {
    _internal_set_hu_lasmodeselection(from._internal_hu_lasmodeselection());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_LASModeSelection::CopyFrom(const PB_HUset_LASModeSelection& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_LASModeSelection)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_LASModeSelection::IsInitialized() const {
  return true;
}

void PB_HUset_LASModeSelection::InternalSwap(PB_HUset_LASModeSelection* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_lasmodeselection_, other->hu_lasmodeselection_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_LASModeSelection::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[90]);
}

// ===================================================================

class PB_LineCurve::_Internal {
 public:
};

PB_LineCurve::PB_LineCurve(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_LineCurve)
}
PB_LineCurve::PB_LineCurve(const PB_LineCurve& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&linecruve_5m_, &from.linecruve_5m_,
    static_cast<size_t>(reinterpret_cast<char*>(&linecruve_30m_) -
    reinterpret_cast<char*>(&linecruve_5m_)) + sizeof(linecruve_30m_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_LineCurve)
}

inline void PB_LineCurve::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&linecruve_5m_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&linecruve_30m_) -
    reinterpret_cast<char*>(&linecruve_5m_)) + sizeof(linecruve_30m_));
}

PB_LineCurve::~PB_LineCurve() {
  // @@protoc_insertion_point(destructor:Soa.PB_LineCurve)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_LineCurve::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_LineCurve::ArenaDtor(void* object) {
  PB_LineCurve* _this = reinterpret_cast< PB_LineCurve* >(object);
  (void)_this;
}
void PB_LineCurve::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_LineCurve::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_LineCurve::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_LineCurve)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&linecruve_5m_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&linecruve_30m_) -
      reinterpret_cast<char*>(&linecruve_5m_)) + sizeof(linecruve_30m_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_LineCurve::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float Linecruve_5m = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          linecruve_5m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Linecruve_10m = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          linecruve_10m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Linecruve_15m = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          linecruve_15m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Linecruve_20m = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          linecruve_20m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Linecruve_25m = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          linecruve_25m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Linecruve_30m = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          linecruve_30m_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_LineCurve::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_LineCurve)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float Linecruve_5m = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_5m = this->_internal_linecruve_5m();
  uint32_t raw_linecruve_5m;
  memcpy(&raw_linecruve_5m, &tmp_linecruve_5m, sizeof(tmp_linecruve_5m));
  if (raw_linecruve_5m != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_linecruve_5m(), target);
  }

  // float Linecruve_10m = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_10m = this->_internal_linecruve_10m();
  uint32_t raw_linecruve_10m;
  memcpy(&raw_linecruve_10m, &tmp_linecruve_10m, sizeof(tmp_linecruve_10m));
  if (raw_linecruve_10m != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_linecruve_10m(), target);
  }

  // float Linecruve_15m = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_15m = this->_internal_linecruve_15m();
  uint32_t raw_linecruve_15m;
  memcpy(&raw_linecruve_15m, &tmp_linecruve_15m, sizeof(tmp_linecruve_15m));
  if (raw_linecruve_15m != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_linecruve_15m(), target);
  }

  // float Linecruve_20m = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_20m = this->_internal_linecruve_20m();
  uint32_t raw_linecruve_20m;
  memcpy(&raw_linecruve_20m, &tmp_linecruve_20m, sizeof(tmp_linecruve_20m));
  if (raw_linecruve_20m != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_linecruve_20m(), target);
  }

  // float Linecruve_25m = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_25m = this->_internal_linecruve_25m();
  uint32_t raw_linecruve_25m;
  memcpy(&raw_linecruve_25m, &tmp_linecruve_25m, sizeof(tmp_linecruve_25m));
  if (raw_linecruve_25m != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_linecruve_25m(), target);
  }

  // float Linecruve_30m = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_30m = this->_internal_linecruve_30m();
  uint32_t raw_linecruve_30m;
  memcpy(&raw_linecruve_30m, &tmp_linecruve_30m, sizeof(tmp_linecruve_30m));
  if (raw_linecruve_30m != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_linecruve_30m(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_LineCurve)
  return target;
}

size_t PB_LineCurve::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_LineCurve)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float Linecruve_5m = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_5m = this->_internal_linecruve_5m();
  uint32_t raw_linecruve_5m;
  memcpy(&raw_linecruve_5m, &tmp_linecruve_5m, sizeof(tmp_linecruve_5m));
  if (raw_linecruve_5m != 0) {
    total_size += 1 + 4;
  }

  // float Linecruve_10m = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_10m = this->_internal_linecruve_10m();
  uint32_t raw_linecruve_10m;
  memcpy(&raw_linecruve_10m, &tmp_linecruve_10m, sizeof(tmp_linecruve_10m));
  if (raw_linecruve_10m != 0) {
    total_size += 1 + 4;
  }

  // float Linecruve_15m = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_15m = this->_internal_linecruve_15m();
  uint32_t raw_linecruve_15m;
  memcpy(&raw_linecruve_15m, &tmp_linecruve_15m, sizeof(tmp_linecruve_15m));
  if (raw_linecruve_15m != 0) {
    total_size += 1 + 4;
  }

  // float Linecruve_20m = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_20m = this->_internal_linecruve_20m();
  uint32_t raw_linecruve_20m;
  memcpy(&raw_linecruve_20m, &tmp_linecruve_20m, sizeof(tmp_linecruve_20m));
  if (raw_linecruve_20m != 0) {
    total_size += 1 + 4;
  }

  // float Linecruve_25m = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_25m = this->_internal_linecruve_25m();
  uint32_t raw_linecruve_25m;
  memcpy(&raw_linecruve_25m, &tmp_linecruve_25m, sizeof(tmp_linecruve_25m));
  if (raw_linecruve_25m != 0) {
    total_size += 1 + 4;
  }

  // float Linecruve_30m = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_30m = this->_internal_linecruve_30m();
  uint32_t raw_linecruve_30m;
  memcpy(&raw_linecruve_30m, &tmp_linecruve_30m, sizeof(tmp_linecruve_30m));
  if (raw_linecruve_30m != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_LineCurve::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_LineCurve::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_LineCurve::GetClassData() const { return &_class_data_; }

void PB_LineCurve::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_LineCurve *>(to)->MergeFrom(
      static_cast<const PB_LineCurve &>(from));
}


void PB_LineCurve::MergeFrom(const PB_LineCurve& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_LineCurve)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_5m = from._internal_linecruve_5m();
  uint32_t raw_linecruve_5m;
  memcpy(&raw_linecruve_5m, &tmp_linecruve_5m, sizeof(tmp_linecruve_5m));
  if (raw_linecruve_5m != 0) {
    _internal_set_linecruve_5m(from._internal_linecruve_5m());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_10m = from._internal_linecruve_10m();
  uint32_t raw_linecruve_10m;
  memcpy(&raw_linecruve_10m, &tmp_linecruve_10m, sizeof(tmp_linecruve_10m));
  if (raw_linecruve_10m != 0) {
    _internal_set_linecruve_10m(from._internal_linecruve_10m());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_15m = from._internal_linecruve_15m();
  uint32_t raw_linecruve_15m;
  memcpy(&raw_linecruve_15m, &tmp_linecruve_15m, sizeof(tmp_linecruve_15m));
  if (raw_linecruve_15m != 0) {
    _internal_set_linecruve_15m(from._internal_linecruve_15m());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_20m = from._internal_linecruve_20m();
  uint32_t raw_linecruve_20m;
  memcpy(&raw_linecruve_20m, &tmp_linecruve_20m, sizeof(tmp_linecruve_20m));
  if (raw_linecruve_20m != 0) {
    _internal_set_linecruve_20m(from._internal_linecruve_20m());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_25m = from._internal_linecruve_25m();
  uint32_t raw_linecruve_25m;
  memcpy(&raw_linecruve_25m, &tmp_linecruve_25m, sizeof(tmp_linecruve_25m));
  if (raw_linecruve_25m != 0) {
    _internal_set_linecruve_25m(from._internal_linecruve_25m());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_linecruve_30m = from._internal_linecruve_30m();
  uint32_t raw_linecruve_30m;
  memcpy(&raw_linecruve_30m, &tmp_linecruve_30m, sizeof(tmp_linecruve_30m));
  if (raw_linecruve_30m != 0) {
    _internal_set_linecruve_30m(from._internal_linecruve_30m());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_LineCurve::CopyFrom(const PB_LineCurve& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_LineCurve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LineCurve::IsInitialized() const {
  return true;
}

void PB_LineCurve::InternalSwap(PB_LineCurve* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_LineCurve, linecruve_30m_)
      + sizeof(PB_LineCurve::linecruve_30m_)
      - PROTOBUF_FIELD_OFFSET(PB_LineCurve, linecruve_5m_)>(
          reinterpret_cast<char*>(&linecruve_5m_),
          reinterpret_cast<char*>(&other->linecruve_5m_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_LineCurve::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[91]);
}

// ===================================================================

class PB_DrSeatSts::_Internal {
 public:
};

PB_DrSeatSts::PB_DrSeatSts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_DrSeatSts)
}
PB_DrSeatSts::PB_DrSeatSts(const PB_DrSeatSts& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&seatadjswtfr_, &from.seatadjswtfr_,
    static_cast<size_t>(reinterpret_cast<char*>(&drseatsbr_) -
    reinterpret_cast<char*>(&seatadjswtfr_)) + sizeof(drseatsbr_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_DrSeatSts)
}

inline void PB_DrSeatSts::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&seatadjswtfr_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&drseatsbr_) -
    reinterpret_cast<char*>(&seatadjswtfr_)) + sizeof(drseatsbr_));
}

PB_DrSeatSts::~PB_DrSeatSts() {
  // @@protoc_insertion_point(destructor:Soa.PB_DrSeatSts)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_DrSeatSts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_DrSeatSts::ArenaDtor(void* object) {
  PB_DrSeatSts* _this = reinterpret_cast< PB_DrSeatSts* >(object);
  (void)_this;
}
void PB_DrSeatSts::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_DrSeatSts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_DrSeatSts::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_DrSeatSts)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&seatadjswtfr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drseatsbr_) -
      reinterpret_cast<char*>(&seatadjswtfr_)) + sizeof(drseatsbr_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_DrSeatSts::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 SeatAdjSwtFR = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          seatadjswtfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SeatAdjSwtHei = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          seatadjswthei_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SeatAdjSwtBr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          seatadjswtbr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SeatAdjSwtCus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          seatadjswtcus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SeatAdjSwtLegFR = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          seatadjswtlegfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SeatAdjSwtLegHei = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          seatadjswtleghei_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SeatAdjSwtZeroGravity = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          seatadjswtzerogravity_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FRInitializedSts = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          frinitializedsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 HeiInitializedSts = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          heiinitializedsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 BrInitializedSts = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          brinitializedsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CusInitializedSts = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          cusinitializedsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LegFRInitializedSts = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          legfrinitializedsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LegHeiInitializedSts = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          legheiinitializedsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SeatHeat = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          seatheat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SeatVent = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          seatvent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FRStopStsReason = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          frstopstsreason_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 HeiStopStsReason = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          heistopstsreason_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 BrStopStsReason = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          brstopstsreason_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CusStopStsReason = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          cusstopstsreason_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LegFRStopStsReason = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          legfrstopstsreason_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LegHeiStopStsReason = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          legheistopstsreason_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 DrSeatSBR = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          drseatsbr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_DrSeatSts::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_DrSeatSts)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SeatAdjSwtFR = 1;
  if (this->_internal_seatadjswtfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_seatadjswtfr(), target);
  }

  // uint32 SeatAdjSwtHei = 2;
  if (this->_internal_seatadjswthei() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_seatadjswthei(), target);
  }

  // uint32 SeatAdjSwtBr = 3;
  if (this->_internal_seatadjswtbr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_seatadjswtbr(), target);
  }

  // uint32 SeatAdjSwtCus = 4;
  if (this->_internal_seatadjswtcus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_seatadjswtcus(), target);
  }

  // uint32 SeatAdjSwtLegFR = 5;
  if (this->_internal_seatadjswtlegfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_seatadjswtlegfr(), target);
  }

  // uint32 SeatAdjSwtLegHei = 6;
  if (this->_internal_seatadjswtleghei() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_seatadjswtleghei(), target);
  }

  // uint32 SeatAdjSwtZeroGravity = 7;
  if (this->_internal_seatadjswtzerogravity() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_seatadjswtzerogravity(), target);
  }

  // uint32 FRInitializedSts = 8;
  if (this->_internal_frinitializedsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_frinitializedsts(), target);
  }

  // uint32 HeiInitializedSts = 9;
  if (this->_internal_heiinitializedsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_heiinitializedsts(), target);
  }

  // uint32 BrInitializedSts = 10;
  if (this->_internal_brinitializedsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_brinitializedsts(), target);
  }

  // uint32 CusInitializedSts = 11;
  if (this->_internal_cusinitializedsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_cusinitializedsts(), target);
  }

  // uint32 LegFRInitializedSts = 12;
  if (this->_internal_legfrinitializedsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_legfrinitializedsts(), target);
  }

  // uint32 LegHeiInitializedSts = 13;
  if (this->_internal_legheiinitializedsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_legheiinitializedsts(), target);
  }

  // uint32 SeatHeat = 14;
  if (this->_internal_seatheat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_seatheat(), target);
  }

  // uint32 SeatVent = 15;
  if (this->_internal_seatvent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_seatvent(), target);
  }

  // uint32 FRStopStsReason = 16;
  if (this->_internal_frstopstsreason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_frstopstsreason(), target);
  }

  // uint32 HeiStopStsReason = 17;
  if (this->_internal_heistopstsreason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_heistopstsreason(), target);
  }

  // uint32 BrStopStsReason = 18;
  if (this->_internal_brstopstsreason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_brstopstsreason(), target);
  }

  // uint32 CusStopStsReason = 19;
  if (this->_internal_cusstopstsreason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(19, this->_internal_cusstopstsreason(), target);
  }

  // uint32 LegFRStopStsReason = 20;
  if (this->_internal_legfrstopstsreason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_legfrstopstsreason(), target);
  }

  // uint32 LegHeiStopStsReason = 21;
  if (this->_internal_legheistopstsreason() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_legheistopstsreason(), target);
  }

  // uint32 DrSeatSBR = 22;
  if (this->_internal_drseatsbr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_drseatsbr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_DrSeatSts)
  return target;
}

size_t PB_DrSeatSts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_DrSeatSts)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 SeatAdjSwtFR = 1;
  if (this->_internal_seatadjswtfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_seatadjswtfr());
  }

  // uint32 SeatAdjSwtHei = 2;
  if (this->_internal_seatadjswthei() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_seatadjswthei());
  }

  // uint32 SeatAdjSwtBr = 3;
  if (this->_internal_seatadjswtbr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_seatadjswtbr());
  }

  // uint32 SeatAdjSwtCus = 4;
  if (this->_internal_seatadjswtcus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_seatadjswtcus());
  }

  // uint32 SeatAdjSwtLegFR = 5;
  if (this->_internal_seatadjswtlegfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_seatadjswtlegfr());
  }

  // uint32 SeatAdjSwtLegHei = 6;
  if (this->_internal_seatadjswtleghei() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_seatadjswtleghei());
  }

  // uint32 SeatAdjSwtZeroGravity = 7;
  if (this->_internal_seatadjswtzerogravity() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_seatadjswtzerogravity());
  }

  // uint32 FRInitializedSts = 8;
  if (this->_internal_frinitializedsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_frinitializedsts());
  }

  // uint32 HeiInitializedSts = 9;
  if (this->_internal_heiinitializedsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_heiinitializedsts());
  }

  // uint32 BrInitializedSts = 10;
  if (this->_internal_brinitializedsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_brinitializedsts());
  }

  // uint32 CusInitializedSts = 11;
  if (this->_internal_cusinitializedsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_cusinitializedsts());
  }

  // uint32 LegFRInitializedSts = 12;
  if (this->_internal_legfrinitializedsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_legfrinitializedsts());
  }

  // uint32 LegHeiInitializedSts = 13;
  if (this->_internal_legheiinitializedsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_legheiinitializedsts());
  }

  // uint32 SeatHeat = 14;
  if (this->_internal_seatheat() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_seatheat());
  }

  // uint32 SeatVent = 15;
  if (this->_internal_seatvent() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_seatvent());
  }

  // uint32 FRStopStsReason = 16;
  if (this->_internal_frstopstsreason() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_frstopstsreason());
  }

  // uint32 HeiStopStsReason = 17;
  if (this->_internal_heistopstsreason() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_heistopstsreason());
  }

  // uint32 BrStopStsReason = 18;
  if (this->_internal_brstopstsreason() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_brstopstsreason());
  }

  // uint32 CusStopStsReason = 19;
  if (this->_internal_cusstopstsreason() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_cusstopstsreason());
  }

  // uint32 LegFRStopStsReason = 20;
  if (this->_internal_legfrstopstsreason() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_legfrstopstsreason());
  }

  // uint32 LegHeiStopStsReason = 21;
  if (this->_internal_legheistopstsreason() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_legheistopstsreason());
  }

  // uint32 DrSeatSBR = 22;
  if (this->_internal_drseatsbr() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_drseatsbr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_DrSeatSts::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_DrSeatSts::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_DrSeatSts::GetClassData() const { return &_class_data_; }

void PB_DrSeatSts::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_DrSeatSts *>(to)->MergeFrom(
      static_cast<const PB_DrSeatSts &>(from));
}


void PB_DrSeatSts::MergeFrom(const PB_DrSeatSts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_DrSeatSts)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seatadjswtfr() != 0) {
    _internal_set_seatadjswtfr(from._internal_seatadjswtfr());
  }
  if (from._internal_seatadjswthei() != 0) {
    _internal_set_seatadjswthei(from._internal_seatadjswthei());
  }
  if (from._internal_seatadjswtbr() != 0) {
    _internal_set_seatadjswtbr(from._internal_seatadjswtbr());
  }
  if (from._internal_seatadjswtcus() != 0) {
    _internal_set_seatadjswtcus(from._internal_seatadjswtcus());
  }
  if (from._internal_seatadjswtlegfr() != 0) {
    _internal_set_seatadjswtlegfr(from._internal_seatadjswtlegfr());
  }
  if (from._internal_seatadjswtleghei() != 0) {
    _internal_set_seatadjswtleghei(from._internal_seatadjswtleghei());
  }
  if (from._internal_seatadjswtzerogravity() != 0) {
    _internal_set_seatadjswtzerogravity(from._internal_seatadjswtzerogravity());
  }
  if (from._internal_frinitializedsts() != 0) {
    _internal_set_frinitializedsts(from._internal_frinitializedsts());
  }
  if (from._internal_heiinitializedsts() != 0) {
    _internal_set_heiinitializedsts(from._internal_heiinitializedsts());
  }
  if (from._internal_brinitializedsts() != 0) {
    _internal_set_brinitializedsts(from._internal_brinitializedsts());
  }
  if (from._internal_cusinitializedsts() != 0) {
    _internal_set_cusinitializedsts(from._internal_cusinitializedsts());
  }
  if (from._internal_legfrinitializedsts() != 0) {
    _internal_set_legfrinitializedsts(from._internal_legfrinitializedsts());
  }
  if (from._internal_legheiinitializedsts() != 0) {
    _internal_set_legheiinitializedsts(from._internal_legheiinitializedsts());
  }
  if (from._internal_seatheat() != 0) {
    _internal_set_seatheat(from._internal_seatheat());
  }
  if (from._internal_seatvent() != 0) {
    _internal_set_seatvent(from._internal_seatvent());
  }
  if (from._internal_frstopstsreason() != 0) {
    _internal_set_frstopstsreason(from._internal_frstopstsreason());
  }
  if (from._internal_heistopstsreason() != 0) {
    _internal_set_heistopstsreason(from._internal_heistopstsreason());
  }
  if (from._internal_brstopstsreason() != 0) {
    _internal_set_brstopstsreason(from._internal_brstopstsreason());
  }
  if (from._internal_cusstopstsreason() != 0) {
    _internal_set_cusstopstsreason(from._internal_cusstopstsreason());
  }
  if (from._internal_legfrstopstsreason() != 0) {
    _internal_set_legfrstopstsreason(from._internal_legfrstopstsreason());
  }
  if (from._internal_legheistopstsreason() != 0) {
    _internal_set_legheistopstsreason(from._internal_legheistopstsreason());
  }
  if (from._internal_drseatsbr() != 0) {
    _internal_set_drseatsbr(from._internal_drseatsbr());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_DrSeatSts::CopyFrom(const PB_DrSeatSts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_DrSeatSts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_DrSeatSts::IsInitialized() const {
  return true;
}

void PB_DrSeatSts::InternalSwap(PB_DrSeatSts* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_DrSeatSts, drseatsbr_)
      + sizeof(PB_DrSeatSts::drseatsbr_)
      - PROTOBUF_FIELD_OFFSET(PB_DrSeatSts, seatadjswtfr_)>(
          reinterpret_cast<char*>(&seatadjswtfr_),
          reinterpret_cast<char*>(&other->seatadjswtfr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_DrSeatSts::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[92]);
}

// ===================================================================

class PB_AD_SEAOnOffStsSet::_Internal {
 public:
};

PB_AD_SEAOnOffStsSet::PB_AD_SEAOnOffStsSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_SEAOnOffStsSet)
}
PB_AD_SEAOnOffStsSet::PB_AD_SEAOnOffStsSet(const PB_AD_SEAOnOffStsSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ad_seaonoffsts_ = from.ad_seaonoffsts_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_SEAOnOffStsSet)
}

inline void PB_AD_SEAOnOffStsSet::SharedCtor() {
ad_seaonoffsts_ = 0u;
}

PB_AD_SEAOnOffStsSet::~PB_AD_SEAOnOffStsSet() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_SEAOnOffStsSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_SEAOnOffStsSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_AD_SEAOnOffStsSet::ArenaDtor(void* object) {
  PB_AD_SEAOnOffStsSet* _this = reinterpret_cast< PB_AD_SEAOnOffStsSet* >(object);
  (void)_this;
}
void PB_AD_SEAOnOffStsSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_SEAOnOffStsSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_SEAOnOffStsSet::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_SEAOnOffStsSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ad_seaonoffsts_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_SEAOnOffStsSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_SEAOnOffSts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_seaonoffsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_SEAOnOffStsSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_SEAOnOffStsSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_SEAOnOffSts = 1;
  if (this->_internal_ad_seaonoffsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_seaonoffsts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_SEAOnOffStsSet)
  return target;
}

size_t PB_AD_SEAOnOffStsSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_SEAOnOffStsSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_SEAOnOffSts = 1;
  if (this->_internal_ad_seaonoffsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_seaonoffsts());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_SEAOnOffStsSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_SEAOnOffStsSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_SEAOnOffStsSet::GetClassData() const { return &_class_data_; }

void PB_AD_SEAOnOffStsSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_SEAOnOffStsSet *>(to)->MergeFrom(
      static_cast<const PB_AD_SEAOnOffStsSet &>(from));
}


void PB_AD_SEAOnOffStsSet::MergeFrom(const PB_AD_SEAOnOffStsSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_SEAOnOffStsSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_seaonoffsts() != 0) {
    _internal_set_ad_seaonoffsts(from._internal_ad_seaonoffsts());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_SEAOnOffStsSet::CopyFrom(const PB_AD_SEAOnOffStsSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_SEAOnOffStsSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_SEAOnOffStsSet::IsInitialized() const {
  return true;
}

void PB_AD_SEAOnOffStsSet::InternalSwap(PB_AD_SEAOnOffStsSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ad_seaonoffsts_, other->ad_seaonoffsts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_SEAOnOffStsSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[93]);
}

// ===================================================================

class PB_ObjStTypeDoorAll_Struct::_Internal {
 public:
};

PB_ObjStTypeDoorAll_Struct::PB_ObjStTypeDoorAll_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  objsttypedoorall_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ObjStTypeDoorAll_Struct)
}
PB_ObjStTypeDoorAll_Struct::PB_ObjStTypeDoorAll_Struct(const PB_ObjStTypeDoorAll_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      objsttypedoorall_(from.objsttypedoorall_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ObjStTypeDoorAll_Struct)
}

inline void PB_ObjStTypeDoorAll_Struct::SharedCtor() {
}

PB_ObjStTypeDoorAll_Struct::~PB_ObjStTypeDoorAll_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_ObjStTypeDoorAll_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ObjStTypeDoorAll_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ObjStTypeDoorAll_Struct::ArenaDtor(void* object) {
  PB_ObjStTypeDoorAll_Struct* _this = reinterpret_cast< PB_ObjStTypeDoorAll_Struct* >(object);
  (void)_this;
}
void PB_ObjStTypeDoorAll_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ObjStTypeDoorAll_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ObjStTypeDoorAll_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ObjStTypeDoorAll_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objsttypedoorall_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ObjStTypeDoorAll_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 ObjStTypeDoorAll = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_objsttypedoorall(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_objsttypedoorall(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ObjStTypeDoorAll_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ObjStTypeDoorAll_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 ObjStTypeDoorAll = 1;
  {
    int byte_size = _objsttypedoorall_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_objsttypedoorall(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ObjStTypeDoorAll_Struct)
  return target;
}

size_t PB_ObjStTypeDoorAll_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ObjStTypeDoorAll_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 ObjStTypeDoorAll = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->objsttypedoorall_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _objsttypedoorall_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ObjStTypeDoorAll_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ObjStTypeDoorAll_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ObjStTypeDoorAll_Struct::GetClassData() const { return &_class_data_; }

void PB_ObjStTypeDoorAll_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ObjStTypeDoorAll_Struct *>(to)->MergeFrom(
      static_cast<const PB_ObjStTypeDoorAll_Struct &>(from));
}


void PB_ObjStTypeDoorAll_Struct::MergeFrom(const PB_ObjStTypeDoorAll_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ObjStTypeDoorAll_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  objsttypedoorall_.MergeFrom(from.objsttypedoorall_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ObjStTypeDoorAll_Struct::CopyFrom(const PB_ObjStTypeDoorAll_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ObjStTypeDoorAll_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ObjStTypeDoorAll_Struct::IsInitialized() const {
  return true;
}

void PB_ObjStTypeDoorAll_Struct::InternalSwap(PB_ObjStTypeDoorAll_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  objsttypedoorall_.InternalSwap(&other->objsttypedoorall_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ObjStTypeDoorAll_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[94]);
}

// ===================================================================

class PB_HUset_ForwardColliAstType::_Internal {
 public:
};

PB_HUset_ForwardColliAstType::PB_HUset_ForwardColliAstType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_ForwardColliAstType)
}
PB_HUset_ForwardColliAstType::PB_HUset_ForwardColliAstType(const PB_HUset_ForwardColliAstType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_forwardcolliasttype_ = from.hu_forwardcolliasttype_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_ForwardColliAstType)
}

inline void PB_HUset_ForwardColliAstType::SharedCtor() {
hu_forwardcolliasttype_ = 0u;
}

PB_HUset_ForwardColliAstType::~PB_HUset_ForwardColliAstType() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_ForwardColliAstType)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_ForwardColliAstType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_ForwardColliAstType::ArenaDtor(void* object) {
  PB_HUset_ForwardColliAstType* _this = reinterpret_cast< PB_HUset_ForwardColliAstType* >(object);
  (void)_this;
}
void PB_HUset_ForwardColliAstType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_ForwardColliAstType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_ForwardColliAstType::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_ForwardColliAstType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_forwardcolliasttype_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_ForwardColliAstType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_ForwardColliAstType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_forwardcolliasttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_ForwardColliAstType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_ForwardColliAstType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_ForwardColliAstType = 1;
  if (this->_internal_hu_forwardcolliasttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_forwardcolliasttype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_ForwardColliAstType)
  return target;
}

size_t PB_HUset_ForwardColliAstType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_ForwardColliAstType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_ForwardColliAstType = 1;
  if (this->_internal_hu_forwardcolliasttype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_forwardcolliasttype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_ForwardColliAstType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_ForwardColliAstType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_ForwardColliAstType::GetClassData() const { return &_class_data_; }

void PB_HUset_ForwardColliAstType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_ForwardColliAstType *>(to)->MergeFrom(
      static_cast<const PB_HUset_ForwardColliAstType &>(from));
}


void PB_HUset_ForwardColliAstType::MergeFrom(const PB_HUset_ForwardColliAstType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_ForwardColliAstType)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_forwardcolliasttype() != 0) {
    _internal_set_hu_forwardcolliasttype(from._internal_hu_forwardcolliasttype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_ForwardColliAstType::CopyFrom(const PB_HUset_ForwardColliAstType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_ForwardColliAstType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_ForwardColliAstType::IsInitialized() const {
  return true;
}

void PB_HUset_ForwardColliAstType::InternalSwap(PB_HUset_ForwardColliAstType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_forwardcolliasttype_, other->hu_forwardcolliasttype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_ForwardColliAstType::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[95]);
}

// ===================================================================

class PB_HUset_VehicleStartRemindEnable::_Internal {
 public:
};

PB_HUset_VehicleStartRemindEnable::PB_HUset_VehicleStartRemindEnable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_VehicleStartRemindEnable)
}
PB_HUset_VehicleStartRemindEnable::PB_HUset_VehicleStartRemindEnable(const PB_HUset_VehicleStartRemindEnable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_vehiclestartremindenable_ = from.hu_vehiclestartremindenable_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_VehicleStartRemindEnable)
}

inline void PB_HUset_VehicleStartRemindEnable::SharedCtor() {
hu_vehiclestartremindenable_ = 0u;
}

PB_HUset_VehicleStartRemindEnable::~PB_HUset_VehicleStartRemindEnable() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_VehicleStartRemindEnable)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_VehicleStartRemindEnable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_VehicleStartRemindEnable::ArenaDtor(void* object) {
  PB_HUset_VehicleStartRemindEnable* _this = reinterpret_cast< PB_HUset_VehicleStartRemindEnable* >(object);
  (void)_this;
}
void PB_HUset_VehicleStartRemindEnable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_VehicleStartRemindEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_VehicleStartRemindEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_VehicleStartRemindEnable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_vehiclestartremindenable_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_VehicleStartRemindEnable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_VehicleStartRemindEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_vehiclestartremindenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_VehicleStartRemindEnable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_VehicleStartRemindEnable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_VehicleStartRemindEnable = 1;
  if (this->_internal_hu_vehiclestartremindenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_vehiclestartremindenable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_VehicleStartRemindEnable)
  return target;
}

size_t PB_HUset_VehicleStartRemindEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_VehicleStartRemindEnable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_VehicleStartRemindEnable = 1;
  if (this->_internal_hu_vehiclestartremindenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_vehiclestartremindenable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_VehicleStartRemindEnable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_VehicleStartRemindEnable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_VehicleStartRemindEnable::GetClassData() const { return &_class_data_; }

void PB_HUset_VehicleStartRemindEnable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_VehicleStartRemindEnable *>(to)->MergeFrom(
      static_cast<const PB_HUset_VehicleStartRemindEnable &>(from));
}


void PB_HUset_VehicleStartRemindEnable::MergeFrom(const PB_HUset_VehicleStartRemindEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_VehicleStartRemindEnable)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_vehiclestartremindenable() != 0) {
    _internal_set_hu_vehiclestartremindenable(from._internal_hu_vehiclestartremindenable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_VehicleStartRemindEnable::CopyFrom(const PB_HUset_VehicleStartRemindEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_VehicleStartRemindEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_VehicleStartRemindEnable::IsInitialized() const {
  return true;
}

void PB_HUset_VehicleStartRemindEnable::InternalSwap(PB_HUset_VehicleStartRemindEnable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_vehiclestartremindenable_, other->hu_vehiclestartremindenable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_VehicleStartRemindEnable::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[96]);
}

// ===================================================================

class PB_FWiperStsInfo::_Internal {
 public:
};

PB_FWiperStsInfo::PB_FWiperStsInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_FWiperStsInfo)
}
PB_FWiperStsInfo::PB_FWiperStsInfo(const PB_FWiperStsInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&fwiperlogicsts_, &from.fwiperlogicsts_,
    static_cast<size_t>(reinterpret_cast<char*>(&wiperintgeartimehard_) -
    reinterpret_cast<char*>(&fwiperlogicsts_)) + sizeof(wiperintgeartimehard_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_FWiperStsInfo)
}

inline void PB_FWiperStsInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fwiperlogicsts_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&wiperintgeartimehard_) -
    reinterpret_cast<char*>(&fwiperlogicsts_)) + sizeof(wiperintgeartimehard_));
}

PB_FWiperStsInfo::~PB_FWiperStsInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_FWiperStsInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_FWiperStsInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_FWiperStsInfo::ArenaDtor(void* object) {
  PB_FWiperStsInfo* _this = reinterpret_cast< PB_FWiperStsInfo* >(object);
  (void)_this;
}
void PB_FWiperStsInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_FWiperStsInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_FWiperStsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_FWiperStsInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fwiperlogicsts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&wiperintgeartimehard_) -
      reinterpret_cast<char*>(&fwiperlogicsts_)) + sizeof(wiperintgeartimehard_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_FWiperStsInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FWiperLogicSts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          fwiperlogicsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WashLogicSts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          washlogicsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WiperPosSts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          wiperpossts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WashActualSts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          washactualsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WiperRunningSt = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          wiperrunningst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MotAngle = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          motangle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WiprMotSpd = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          wiprmotspd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WiperActSt = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          wiperactst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ParkAreaSt = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          parkareast_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SrvPosSt = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          srvposst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TunPosSt = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          tunposst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 MoveDir = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          movedir_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FusbMovedtimes = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          fusbmovedtimes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FrntWiperSwt = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          frntwiperswt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WshrSwt = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          wshrswt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WiperINTGearTimeHard = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          wiperintgeartimehard_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_FWiperStsInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_FWiperStsInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FWiperLogicSts = 1;
  if (this->_internal_fwiperlogicsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_fwiperlogicsts(), target);
  }

  // uint32 WashLogicSts = 2;
  if (this->_internal_washlogicsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_washlogicsts(), target);
  }

  // uint32 WiperPosSts = 3;
  if (this->_internal_wiperpossts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_wiperpossts(), target);
  }

  // uint32 WashActualSts = 4;
  if (this->_internal_washactualsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_washactualsts(), target);
  }

  // uint32 WiperRunningSt = 5;
  if (this->_internal_wiperrunningst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_wiperrunningst(), target);
  }

  // uint32 MotAngle = 6;
  if (this->_internal_motangle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_motangle(), target);
  }

  // uint32 WiprMotSpd = 7;
  if (this->_internal_wiprmotspd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_wiprmotspd(), target);
  }

  // uint32 WiperActSt = 8;
  if (this->_internal_wiperactst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_wiperactst(), target);
  }

  // uint32 ParkAreaSt = 9;
  if (this->_internal_parkareast() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_parkareast(), target);
  }

  // uint32 SrvPosSt = 10;
  if (this->_internal_srvposst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_srvposst(), target);
  }

  // uint32 TunPosSt = 11;
  if (this->_internal_tunposst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_tunposst(), target);
  }

  // uint32 MoveDir = 12;
  if (this->_internal_movedir() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_movedir(), target);
  }

  // uint32 FusbMovedtimes = 13;
  if (this->_internal_fusbmovedtimes() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_fusbmovedtimes(), target);
  }

  // uint32 FrntWiperSwt = 14;
  if (this->_internal_frntwiperswt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_frntwiperswt(), target);
  }

  // uint32 WshrSwt = 15;
  if (this->_internal_wshrswt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_wshrswt(), target);
  }

  // uint32 WiperINTGearTimeHard = 16;
  if (this->_internal_wiperintgeartimehard() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_wiperintgeartimehard(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_FWiperStsInfo)
  return target;
}

size_t PB_FWiperStsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_FWiperStsInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FWiperLogicSts = 1;
  if (this->_internal_fwiperlogicsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_fwiperlogicsts());
  }

  // uint32 WashLogicSts = 2;
  if (this->_internal_washlogicsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_washlogicsts());
  }

  // uint32 WiperPosSts = 3;
  if (this->_internal_wiperpossts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_wiperpossts());
  }

  // uint32 WashActualSts = 4;
  if (this->_internal_washactualsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_washactualsts());
  }

  // uint32 WiperRunningSt = 5;
  if (this->_internal_wiperrunningst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_wiperrunningst());
  }

  // uint32 MotAngle = 6;
  if (this->_internal_motangle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_motangle());
  }

  // uint32 WiprMotSpd = 7;
  if (this->_internal_wiprmotspd() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_wiprmotspd());
  }

  // uint32 WiperActSt = 8;
  if (this->_internal_wiperactst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_wiperactst());
  }

  // uint32 ParkAreaSt = 9;
  if (this->_internal_parkareast() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_parkareast());
  }

  // uint32 SrvPosSt = 10;
  if (this->_internal_srvposst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srvposst());
  }

  // uint32 TunPosSt = 11;
  if (this->_internal_tunposst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tunposst());
  }

  // uint32 MoveDir = 12;
  if (this->_internal_movedir() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_movedir());
  }

  // uint32 FusbMovedtimes = 13;
  if (this->_internal_fusbmovedtimes() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_fusbmovedtimes());
  }

  // uint32 FrntWiperSwt = 14;
  if (this->_internal_frntwiperswt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_frntwiperswt());
  }

  // uint32 WshrSwt = 15;
  if (this->_internal_wshrswt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_wshrswt());
  }

  // uint32 WiperINTGearTimeHard = 16;
  if (this->_internal_wiperintgeartimehard() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_wiperintgeartimehard());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_FWiperStsInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_FWiperStsInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_FWiperStsInfo::GetClassData() const { return &_class_data_; }

void PB_FWiperStsInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_FWiperStsInfo *>(to)->MergeFrom(
      static_cast<const PB_FWiperStsInfo &>(from));
}


void PB_FWiperStsInfo::MergeFrom(const PB_FWiperStsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_FWiperStsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fwiperlogicsts() != 0) {
    _internal_set_fwiperlogicsts(from._internal_fwiperlogicsts());
  }
  if (from._internal_washlogicsts() != 0) {
    _internal_set_washlogicsts(from._internal_washlogicsts());
  }
  if (from._internal_wiperpossts() != 0) {
    _internal_set_wiperpossts(from._internal_wiperpossts());
  }
  if (from._internal_washactualsts() != 0) {
    _internal_set_washactualsts(from._internal_washactualsts());
  }
  if (from._internal_wiperrunningst() != 0) {
    _internal_set_wiperrunningst(from._internal_wiperrunningst());
  }
  if (from._internal_motangle() != 0) {
    _internal_set_motangle(from._internal_motangle());
  }
  if (from._internal_wiprmotspd() != 0) {
    _internal_set_wiprmotspd(from._internal_wiprmotspd());
  }
  if (from._internal_wiperactst() != 0) {
    _internal_set_wiperactst(from._internal_wiperactst());
  }
  if (from._internal_parkareast() != 0) {
    _internal_set_parkareast(from._internal_parkareast());
  }
  if (from._internal_srvposst() != 0) {
    _internal_set_srvposst(from._internal_srvposst());
  }
  if (from._internal_tunposst() != 0) {
    _internal_set_tunposst(from._internal_tunposst());
  }
  if (from._internal_movedir() != 0) {
    _internal_set_movedir(from._internal_movedir());
  }
  if (from._internal_fusbmovedtimes() != 0) {
    _internal_set_fusbmovedtimes(from._internal_fusbmovedtimes());
  }
  if (from._internal_frntwiperswt() != 0) {
    _internal_set_frntwiperswt(from._internal_frntwiperswt());
  }
  if (from._internal_wshrswt() != 0) {
    _internal_set_wshrswt(from._internal_wshrswt());
  }
  if (from._internal_wiperintgeartimehard() != 0) {
    _internal_set_wiperintgeartimehard(from._internal_wiperintgeartimehard());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_FWiperStsInfo::CopyFrom(const PB_FWiperStsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_FWiperStsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FWiperStsInfo::IsInitialized() const {
  return true;
}

void PB_FWiperStsInfo::InternalSwap(PB_FWiperStsInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_FWiperStsInfo, wiperintgeartimehard_)
      + sizeof(PB_FWiperStsInfo::wiperintgeartimehard_)
      - PROTOBUF_FIELD_OFFSET(PB_FWiperStsInfo, fwiperlogicsts_)>(
          reinterpret_cast<char*>(&fwiperlogicsts_),
          reinterpret_cast<char*>(&other->fwiperlogicsts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_FWiperStsInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[97]);
}

// ===================================================================

class PB_UserNotiConfirEvt::_Internal {
 public:
};

PB_UserNotiConfirEvt::PB_UserNotiConfirEvt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_UserNotiConfirEvt)
}
PB_UserNotiConfirEvt::PB_UserNotiConfirEvt(const PB_UserNotiConfirEvt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&functype_, &from.functype_,
    static_cast<size_t>(reinterpret_cast<char*>(&noticonfirevt_) -
    reinterpret_cast<char*>(&functype_)) + sizeof(noticonfirevt_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_UserNotiConfirEvt)
}

inline void PB_UserNotiConfirEvt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&functype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&noticonfirevt_) -
    reinterpret_cast<char*>(&functype_)) + sizeof(noticonfirevt_));
}

PB_UserNotiConfirEvt::~PB_UserNotiConfirEvt() {
  // @@protoc_insertion_point(destructor:Soa.PB_UserNotiConfirEvt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_UserNotiConfirEvt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_UserNotiConfirEvt::ArenaDtor(void* object) {
  PB_UserNotiConfirEvt* _this = reinterpret_cast< PB_UserNotiConfirEvt* >(object);
  (void)_this;
}
void PB_UserNotiConfirEvt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_UserNotiConfirEvt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_UserNotiConfirEvt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_UserNotiConfirEvt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&functype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&noticonfirevt_) -
      reinterpret_cast<char*>(&functype_)) + sizeof(noticonfirevt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_UserNotiConfirEvt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FuncType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          functype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NotiConfirEvt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          noticonfirevt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_UserNotiConfirEvt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_UserNotiConfirEvt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FuncType = 1;
  if (this->_internal_functype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_functype(), target);
  }

  // uint32 NotiConfirEvt = 2;
  if (this->_internal_noticonfirevt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_noticonfirevt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_UserNotiConfirEvt)
  return target;
}

size_t PB_UserNotiConfirEvt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_UserNotiConfirEvt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FuncType = 1;
  if (this->_internal_functype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_functype());
  }

  // uint32 NotiConfirEvt = 2;
  if (this->_internal_noticonfirevt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_noticonfirevt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_UserNotiConfirEvt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_UserNotiConfirEvt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_UserNotiConfirEvt::GetClassData() const { return &_class_data_; }

void PB_UserNotiConfirEvt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_UserNotiConfirEvt *>(to)->MergeFrom(
      static_cast<const PB_UserNotiConfirEvt &>(from));
}


void PB_UserNotiConfirEvt::MergeFrom(const PB_UserNotiConfirEvt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_UserNotiConfirEvt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_functype() != 0) {
    _internal_set_functype(from._internal_functype());
  }
  if (from._internal_noticonfirevt() != 0) {
    _internal_set_noticonfirevt(from._internal_noticonfirevt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_UserNotiConfirEvt::CopyFrom(const PB_UserNotiConfirEvt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_UserNotiConfirEvt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_UserNotiConfirEvt::IsInitialized() const {
  return true;
}

void PB_UserNotiConfirEvt::InternalSwap(PB_UserNotiConfirEvt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_UserNotiConfirEvt, noticonfirevt_)
      + sizeof(PB_UserNotiConfirEvt::noticonfirevt_)
      - PROTOBUF_FIELD_OFFSET(PB_UserNotiConfirEvt, functype_)>(
          reinterpret_cast<char*>(&functype_),
          reinterpret_cast<char*>(&other->functype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_UserNotiConfirEvt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[98]);
}

// ===================================================================

class PB_Point2DArray_Struct::_Internal {
 public:
};

PB_Point2DArray_Struct::PB_Point2DArray_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  point2darray_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Point2DArray_Struct)
}
PB_Point2DArray_Struct::PB_Point2DArray_Struct(const PB_Point2DArray_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      point2darray_(from.point2darray_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Point2DArray_Struct)
}

inline void PB_Point2DArray_Struct::SharedCtor() {
}

PB_Point2DArray_Struct::~PB_Point2DArray_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_Point2DArray_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Point2DArray_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_Point2DArray_Struct::ArenaDtor(void* object) {
  PB_Point2DArray_Struct* _this = reinterpret_cast< PB_Point2DArray_Struct* >(object);
  (void)_this;
}
void PB_Point2DArray_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Point2DArray_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Point2DArray_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Point2DArray_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point2darray_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Point2DArray_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Soa.PB_Point2DStruct Point2DArray = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_point2darray(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Point2DArray_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Point2DArray_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct Point2DArray = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_point2darray_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_point2darray(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Point2DArray_Struct)
  return target;
}

size_t PB_Point2DArray_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Point2DArray_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct Point2DArray = 1;
  total_size += 1UL * this->_internal_point2darray_size();
  for (const auto& msg : this->point2darray_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Point2DArray_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Point2DArray_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Point2DArray_Struct::GetClassData() const { return &_class_data_; }

void PB_Point2DArray_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Point2DArray_Struct *>(to)->MergeFrom(
      static_cast<const PB_Point2DArray_Struct &>(from));
}


void PB_Point2DArray_Struct::MergeFrom(const PB_Point2DArray_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Point2DArray_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  point2darray_.MergeFrom(from.point2darray_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Point2DArray_Struct::CopyFrom(const PB_Point2DArray_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Point2DArray_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Point2DArray_Struct::IsInitialized() const {
  return true;
}

void PB_Point2DArray_Struct::InternalSwap(PB_Point2DArray_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  point2darray_.InternalSwap(&other->point2darray_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Point2DArray_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[99]);
}

// ===================================================================

class PB_BrkLiActCtrlInfo::_Internal {
 public:
};

PB_BrkLiActCtrlInfo::PB_BrkLiActCtrlInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_BrkLiActCtrlInfo)
}
PB_BrkLiActCtrlInfo::PB_BrkLiActCtrlInfo(const PB_BrkLiActCtrlInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_actctrlst_, &from.le_actctrlst_,
    static_cast<size_t>(reinterpret_cast<char*>(&chsml_actctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(chsml_actctrlst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_BrkLiActCtrlInfo)
}

inline void PB_BrkLiActCtrlInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_actctrlst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&chsml_actctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(chsml_actctrlst_));
}

PB_BrkLiActCtrlInfo::~PB_BrkLiActCtrlInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_BrkLiActCtrlInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_BrkLiActCtrlInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_BrkLiActCtrlInfo::ArenaDtor(void* object) {
  PB_BrkLiActCtrlInfo* _this = reinterpret_cast< PB_BrkLiActCtrlInfo* >(object);
  (void)_this;
}
void PB_BrkLiActCtrlInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_BrkLiActCtrlInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_BrkLiActCtrlInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_BrkLiActCtrlInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_actctrlst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chsml_actctrlst_) -
      reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(chsml_actctrlst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_BrkLiActCtrlInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_ActCtrlSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_ActCtrlSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CHSML_ActCtrlSt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          chsml_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_BrkLiActCtrlInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_BrkLiActCtrlInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_actctrlst(), target);
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_actctrlst(), target);
  }

  // uint32 CHSML_ActCtrlSt = 3;
  if (this->_internal_chsml_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_chsml_actctrlst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_BrkLiActCtrlInfo)
  return target;
}

size_t PB_BrkLiActCtrlInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_BrkLiActCtrlInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_actctrlst());
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_actctrlst());
  }

  // uint32 CHSML_ActCtrlSt = 3;
  if (this->_internal_chsml_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_chsml_actctrlst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_BrkLiActCtrlInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_BrkLiActCtrlInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_BrkLiActCtrlInfo::GetClassData() const { return &_class_data_; }

void PB_BrkLiActCtrlInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_BrkLiActCtrlInfo *>(to)->MergeFrom(
      static_cast<const PB_BrkLiActCtrlInfo &>(from));
}


void PB_BrkLiActCtrlInfo::MergeFrom(const PB_BrkLiActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_BrkLiActCtrlInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_actctrlst() != 0) {
    _internal_set_le_actctrlst(from._internal_le_actctrlst());
  }
  if (from._internal_ri_actctrlst() != 0) {
    _internal_set_ri_actctrlst(from._internal_ri_actctrlst());
  }
  if (from._internal_chsml_actctrlst() != 0) {
    _internal_set_chsml_actctrlst(from._internal_chsml_actctrlst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_BrkLiActCtrlInfo::CopyFrom(const PB_BrkLiActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_BrkLiActCtrlInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BrkLiActCtrlInfo::IsInitialized() const {
  return true;
}

void PB_BrkLiActCtrlInfo::InternalSwap(PB_BrkLiActCtrlInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_BrkLiActCtrlInfo, chsml_actctrlst_)
      + sizeof(PB_BrkLiActCtrlInfo::chsml_actctrlst_)
      - PROTOBUF_FIELD_OFFSET(PB_BrkLiActCtrlInfo, le_actctrlst_)>(
          reinterpret_cast<char*>(&le_actctrlst_),
          reinterpret_cast<char*>(&other->le_actctrlst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_BrkLiActCtrlInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[100]);
}

// ===================================================================

class PB_EDC_APADynamicOperateData::_Internal {
 public:
};

PB_EDC_APADynamicOperateData::PB_EDC_APADynamicOperateData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_APADynamicOperateData)
}
PB_EDC_APADynamicOperateData::PB_EDC_APADynamicOperateData(const PB_EDC_APADynamicOperateData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_apadynamicoperate_ = from.edc_apadynamicoperate_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_APADynamicOperateData)
}

inline void PB_EDC_APADynamicOperateData::SharedCtor() {
edc_apadynamicoperate_ = 0u;
}

PB_EDC_APADynamicOperateData::~PB_EDC_APADynamicOperateData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_APADynamicOperateData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_APADynamicOperateData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_APADynamicOperateData::ArenaDtor(void* object) {
  PB_EDC_APADynamicOperateData* _this = reinterpret_cast< PB_EDC_APADynamicOperateData* >(object);
  (void)_this;
}
void PB_EDC_APADynamicOperateData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_APADynamicOperateData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_APADynamicOperateData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_APADynamicOperateData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apadynamicoperate_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_APADynamicOperateData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_APADynamicOperate = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_apadynamicoperate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_APADynamicOperateData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_APADynamicOperateData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_APADynamicOperate = 1;
  if (this->_internal_edc_apadynamicoperate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_apadynamicoperate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_APADynamicOperateData)
  return target;
}

size_t PB_EDC_APADynamicOperateData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_APADynamicOperateData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_APADynamicOperate = 1;
  if (this->_internal_edc_apadynamicoperate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_apadynamicoperate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_APADynamicOperateData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_APADynamicOperateData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_APADynamicOperateData::GetClassData() const { return &_class_data_; }

void PB_EDC_APADynamicOperateData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_APADynamicOperateData *>(to)->MergeFrom(
      static_cast<const PB_EDC_APADynamicOperateData &>(from));
}


void PB_EDC_APADynamicOperateData::MergeFrom(const PB_EDC_APADynamicOperateData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_APADynamicOperateData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_apadynamicoperate() != 0) {
    _internal_set_edc_apadynamicoperate(from._internal_edc_apadynamicoperate());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_APADynamicOperateData::CopyFrom(const PB_EDC_APADynamicOperateData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_APADynamicOperateData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_APADynamicOperateData::IsInitialized() const {
  return true;
}

void PB_EDC_APADynamicOperateData::InternalSwap(PB_EDC_APADynamicOperateData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_apadynamicoperate_, other->edc_apadynamicoperate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_APADynamicOperateData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[101]);
}

// ===================================================================

class PB_RvsLiFltInfo::_Internal {
 public:
};

PB_RvsLiFltInfo::PB_RvsLiFltInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_RvsLiFltInfo)
}
PB_RvsLiFltInfo::PB_RvsLiFltInfo(const PB_RvsLiFltInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_fltst_, &from.le_fltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&ri_fltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_RvsLiFltInfo)
}

inline void PB_RvsLiFltInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_fltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ri_fltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
}

PB_RvsLiFltInfo::~PB_RvsLiFltInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_RvsLiFltInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_RvsLiFltInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_RvsLiFltInfo::ArenaDtor(void* object) {
  PB_RvsLiFltInfo* _this = reinterpret_cast< PB_RvsLiFltInfo* >(object);
  (void)_this;
}
void PB_RvsLiFltInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_RvsLiFltInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_RvsLiFltInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_RvsLiFltInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_fltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ri_fltst_) -
      reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_RvsLiFltInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_FltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_FltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_RvsLiFltInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_RvsLiFltInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_fltst(), target);
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_fltst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_RvsLiFltInfo)
  return target;
}

size_t PB_RvsLiFltInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_RvsLiFltInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_fltst());
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_fltst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_RvsLiFltInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_RvsLiFltInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_RvsLiFltInfo::GetClassData() const { return &_class_data_; }

void PB_RvsLiFltInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_RvsLiFltInfo *>(to)->MergeFrom(
      static_cast<const PB_RvsLiFltInfo &>(from));
}


void PB_RvsLiFltInfo::MergeFrom(const PB_RvsLiFltInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_RvsLiFltInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_fltst() != 0) {
    _internal_set_le_fltst(from._internal_le_fltst());
  }
  if (from._internal_ri_fltst() != 0) {
    _internal_set_ri_fltst(from._internal_ri_fltst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_RvsLiFltInfo::CopyFrom(const PB_RvsLiFltInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_RvsLiFltInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RvsLiFltInfo::IsInitialized() const {
  return true;
}

void PB_RvsLiFltInfo::InternalSwap(PB_RvsLiFltInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_RvsLiFltInfo, ri_fltst_)
      + sizeof(PB_RvsLiFltInfo::ri_fltst_)
      - PROTOBUF_FIELD_OFFSET(PB_RvsLiFltInfo, le_fltst_)>(
          reinterpret_cast<char*>(&le_fltst_),
          reinterpret_cast<char*>(&other->le_fltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_RvsLiFltInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[102]);
}

// ===================================================================

class PB_AD_NIDSelfLrngFbset::_Internal {
 public:
};

PB_AD_NIDSelfLrngFbset::PB_AD_NIDSelfLrngFbset(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_NIDSelfLrngFbset)
}
PB_AD_NIDSelfLrngFbset::PB_AD_NIDSelfLrngFbset(const PB_AD_NIDSelfLrngFbset& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ad_nidselflrngfb_ = from.ad_nidselflrngfb_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_NIDSelfLrngFbset)
}

inline void PB_AD_NIDSelfLrngFbset::SharedCtor() {
ad_nidselflrngfb_ = 0u;
}

PB_AD_NIDSelfLrngFbset::~PB_AD_NIDSelfLrngFbset() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_NIDSelfLrngFbset)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_NIDSelfLrngFbset::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_AD_NIDSelfLrngFbset::ArenaDtor(void* object) {
  PB_AD_NIDSelfLrngFbset* _this = reinterpret_cast< PB_AD_NIDSelfLrngFbset* >(object);
  (void)_this;
}
void PB_AD_NIDSelfLrngFbset::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_NIDSelfLrngFbset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_NIDSelfLrngFbset::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_NIDSelfLrngFbset)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ad_nidselflrngfb_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_NIDSelfLrngFbset::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_NIDSelfLrngFb = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_nidselflrngfb_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_NIDSelfLrngFbset::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_NIDSelfLrngFbset)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_NIDSelfLrngFb = 1;
  if (this->_internal_ad_nidselflrngfb() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_nidselflrngfb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_NIDSelfLrngFbset)
  return target;
}

size_t PB_AD_NIDSelfLrngFbset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_NIDSelfLrngFbset)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_NIDSelfLrngFb = 1;
  if (this->_internal_ad_nidselflrngfb() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_nidselflrngfb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_NIDSelfLrngFbset::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_NIDSelfLrngFbset::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_NIDSelfLrngFbset::GetClassData() const { return &_class_data_; }

void PB_AD_NIDSelfLrngFbset::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_NIDSelfLrngFbset *>(to)->MergeFrom(
      static_cast<const PB_AD_NIDSelfLrngFbset &>(from));
}


void PB_AD_NIDSelfLrngFbset::MergeFrom(const PB_AD_NIDSelfLrngFbset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_NIDSelfLrngFbset)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_nidselflrngfb() != 0) {
    _internal_set_ad_nidselflrngfb(from._internal_ad_nidselflrngfb());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_NIDSelfLrngFbset::CopyFrom(const PB_AD_NIDSelfLrngFbset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_NIDSelfLrngFbset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_NIDSelfLrngFbset::IsInitialized() const {
  return true;
}

void PB_AD_NIDSelfLrngFbset::InternalSwap(PB_AD_NIDSelfLrngFbset* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ad_nidselflrngfb_, other->ad_nidselflrngfb_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_NIDSelfLrngFbset::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[103]);
}

// ===================================================================

class PB_VideoParam::_Internal {
 public:
};

PB_VideoParam::PB_VideoParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_VideoParam)
}
PB_VideoParam::PB_VideoParam(const PB_VideoParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&camera_, &from.camera_,
    static_cast<size_t>(reinterpret_cast<char*>(&recordtime_) -
    reinterpret_cast<char*>(&camera_)) + sizeof(recordtime_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_VideoParam)
}

inline void PB_VideoParam::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&camera_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&recordtime_) -
    reinterpret_cast<char*>(&camera_)) + sizeof(recordtime_));
}

PB_VideoParam::~PB_VideoParam() {
  // @@protoc_insertion_point(destructor:Soa.PB_VideoParam)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_VideoParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_VideoParam::ArenaDtor(void* object) {
  PB_VideoParam* _this = reinterpret_cast< PB_VideoParam* >(object);
  (void)_this;
}
void PB_VideoParam::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_VideoParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_VideoParam::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_VideoParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&camera_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recordtime_) -
      reinterpret_cast<char*>(&camera_)) + sizeof(recordtime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_VideoParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 camera = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          camera_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 recordTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          recordtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_VideoParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_VideoParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 camera = 1;
  if (this->_internal_camera() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_camera(), target);
  }

  // uint32 recordTime = 2;
  if (this->_internal_recordtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_recordtime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_VideoParam)
  return target;
}

size_t PB_VideoParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_VideoParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 camera = 1;
  if (this->_internal_camera() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_camera());
  }

  // uint32 recordTime = 2;
  if (this->_internal_recordtime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_recordtime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_VideoParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_VideoParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_VideoParam::GetClassData() const { return &_class_data_; }

void PB_VideoParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_VideoParam *>(to)->MergeFrom(
      static_cast<const PB_VideoParam &>(from));
}


void PB_VideoParam::MergeFrom(const PB_VideoParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_VideoParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_camera() != 0) {
    _internal_set_camera(from._internal_camera());
  }
  if (from._internal_recordtime() != 0) {
    _internal_set_recordtime(from._internal_recordtime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_VideoParam::CopyFrom(const PB_VideoParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_VideoParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_VideoParam::IsInitialized() const {
  return true;
}

void PB_VideoParam::InternalSwap(PB_VideoParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_VideoParam, recordtime_)
      + sizeof(PB_VideoParam::recordtime_)
      - PROTOBUF_FIELD_OFFSET(PB_VideoParam, camera_)>(
          reinterpret_cast<char*>(&camera_),
          reinterpret_cast<char*>(&other->camera_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_VideoParam::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[104]);
}

// ===================================================================

class PB_ADAS_MapNavigationSignal::_Internal {
 public:
};

PB_ADAS_MapNavigationSignal::PB_ADAS_MapNavigationSignal(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ADAS_MapNavigationSignal)
}
PB_ADAS_MapNavigationSignal::PB_ADAS_MapNavigationSignal(const PB_ADAS_MapNavigationSignal& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&curvedistance_, &from.curvedistance_,
    static_cast<size_t>(reinterpret_cast<char*>(&llong_tunnel_len_) -
    reinterpret_cast<char*>(&curvedistance_)) + sizeof(llong_tunnel_len_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ADAS_MapNavigationSignal)
}

inline void PB_ADAS_MapNavigationSignal::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&curvedistance_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&llong_tunnel_len_) -
    reinterpret_cast<char*>(&curvedistance_)) + sizeof(llong_tunnel_len_));
}

PB_ADAS_MapNavigationSignal::~PB_ADAS_MapNavigationSignal() {
  // @@protoc_insertion_point(destructor:Soa.PB_ADAS_MapNavigationSignal)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ADAS_MapNavigationSignal::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ADAS_MapNavigationSignal::ArenaDtor(void* object) {
  PB_ADAS_MapNavigationSignal* _this = reinterpret_cast< PB_ADAS_MapNavigationSignal* >(object);
  (void)_this;
}
void PB_ADAS_MapNavigationSignal::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ADAS_MapNavigationSignal::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ADAS_MapNavigationSignal::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ADAS_MapNavigationSignal)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&curvedistance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&llong_tunnel_len_) -
      reinterpret_cast<char*>(&curvedistance_)) + sizeof(llong_tunnel_len_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ADAS_MapNavigationSignal::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 CurveDistance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          curvedistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 EnterCurveInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          entercurveinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RampDistance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          rampdistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 EnterRampInfo = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          enterrampinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RampInfo = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          rampinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RampSide = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          rampside_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NavCurrentRoadType = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          navcurrentroadtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ForwardRoadType = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          forwardroadtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LaneCnt = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          lanecnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NavSpeedLimitType = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          navspeedlimittype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NavSpeedLimit = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          navspeedlimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SpeedLimitDistance = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          speedlimitdistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 EnterTunnelInfo = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          entertunnelinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TunnelDistance = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          tunneldistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TunnelLength = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          tunnellength_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 EnterSlopeInfo = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          enterslopeinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SlopeDistance = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          slopedistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FallingRockInfo = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          fallingrockinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FallingRockDis = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          fallingrockdis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TollInfo = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          tollinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TollDis = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          tolldis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Construction_Info = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          construction_info_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Construction_Dis = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          construction_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TrafficAccident_Info = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          trafficaccident_info_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TrafficAccident_Dis = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          trafficaccident_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 BranchInfo = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          branchinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Branch_Dis = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 216)) {
          branch_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NumchangeOfLanes_Dist = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          numchangeoflanes_dist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Lane_Changtype = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 232)) {
          lane_changtype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Road_TrafficFlow = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          road_trafficflow_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          roadcurvature_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_10m = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          roadcurvature_10m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_20m = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          roadcurvature_20m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_30m = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          roadcurvature_30m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_40m = 35;
      case 35:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          roadcurvature_40m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_50m = 36;
      case 36:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          roadcurvature_50m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_60m = 37;
      case 37:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          roadcurvature_60m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_70m = 38;
      case 38:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          roadcurvature_70m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_80m = 39;
      case 39:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          roadcurvature_80m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_90m = 40;
      case 40:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          roadcurvature_90m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_100m = 41;
      case 41:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          roadcurvature_100m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvatureFar = 42;
      case 42:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          roadcurvaturefar_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_300m = 43;
      case 43:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          roadcurvature_300m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_400m = 44;
      case 44:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          roadcurvature_400m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RoadCurvature_600m = 45;
      case 45:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          roadcurvature_600m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SlopeGradient = 46;
      case 46:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          slopegradient_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SlopeGradientFar = 47;
      case 47:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          slopegradientfar_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SlopeGradient_300m = 48;
      case 48:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          slopegradient_300m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SlopeGradient_10m = 49;
      case 49:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          slopegradient_10m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SlopeGradient_20m = 50;
      case 50:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          slopegradient_20m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SlopeGradient_30m = 51;
      case 51:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          slopegradient_30m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SlopeGradient_40m = 52;
      case 52:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 160)) {
          slopegradient_40m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SlopeGradient_50m = 53;
      case 53:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 168)) {
          slopegradient_50m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SlopeGradient_100m = 54;
      case 54:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 176)) {
          slopegradient_100m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 IntervalVelocityInfo = 55;
      case 55:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 184)) {
          intervalvelocityinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 IntervalVelocityDis = 56;
      case 56:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 192)) {
          intervalvelocitydis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AccidentProne = 57;
      case 57:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 200)) {
          accidentprone_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AccidentProneDistance = 58;
      case 58:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 208)) {
          accidentpronedistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LaneConfluence = 59;
      case 59:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 216)) {
          laneconfluence_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LaneConfluenceDis = 60;
      case 60:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 224)) {
          laneconfluencedis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 BridgeInfo = 61;
      case 61:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 232)) {
          bridgeinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 BridgeDis = 62;
      case 62:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 240)) {
          bridgedis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 WeatherType = 63;
      case 63:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 248)) {
          weathertype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ServiceRoad = 64;
      case 64:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 0)) {
          serviceroad_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ServiceRoadDis = 65;
      case 65:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          serviceroaddis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LaneType_ID1 = 66;
      case 66:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          lanetype_id1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LaneType_ID2 = 67;
      case 67:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          lanetype_id2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LaneType_ID3 = 68;
      case 68:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          lanetype_id3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LaneType_ID4 = 69;
      case 69:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          lanetype_id4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LaneType_ID5 = 70;
      case 70:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          lanetype_id5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LaneType_ID6 = 71;
      case 71:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          lanetype_id6_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 EHRHeartFlag = 72;
      case 72:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          ehrheartflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 EHPHeartFlag = 73;
      case 73:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          ehpheartflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADAS_Posn_Pathldx = 74;
      case 74:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          adas_posn_pathldx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ADAS_Posn_Offset = 75;
      case 75:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          adas_posn_offset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Byroad = 76;
      case 76:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          byroad_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Long_Ramp_Dis = 77;
      case 77:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          long_ramp_dis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Long_Ramp_Side = 78;
      case 78:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          long_ramp_side_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Llong_Tunnel_Len = 79;
      case 79:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          llong_tunnel_len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ADAS_MapNavigationSignal::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ADAS_MapNavigationSignal)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 CurveDistance = 1;
  if (this->_internal_curvedistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_curvedistance(), target);
  }

  // uint32 EnterCurveInfo = 2;
  if (this->_internal_entercurveinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_entercurveinfo(), target);
  }

  // uint32 RampDistance = 3;
  if (this->_internal_rampdistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rampdistance(), target);
  }

  // uint32 EnterRampInfo = 4;
  if (this->_internal_enterrampinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_enterrampinfo(), target);
  }

  // uint32 RampInfo = 5;
  if (this->_internal_rampinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_rampinfo(), target);
  }

  // uint32 RampSide = 6;
  if (this->_internal_rampside() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_rampside(), target);
  }

  // uint32 NavCurrentRoadType = 7;
  if (this->_internal_navcurrentroadtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_navcurrentroadtype(), target);
  }

  // uint32 ForwardRoadType = 8;
  if (this->_internal_forwardroadtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_forwardroadtype(), target);
  }

  // uint32 LaneCnt = 9;
  if (this->_internal_lanecnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_lanecnt(), target);
  }

  // uint32 NavSpeedLimitType = 10;
  if (this->_internal_navspeedlimittype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_navspeedlimittype(), target);
  }

  // uint32 NavSpeedLimit = 11;
  if (this->_internal_navspeedlimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_navspeedlimit(), target);
  }

  // uint32 SpeedLimitDistance = 12;
  if (this->_internal_speedlimitdistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_speedlimitdistance(), target);
  }

  // uint32 EnterTunnelInfo = 13;
  if (this->_internal_entertunnelinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_entertunnelinfo(), target);
  }

  // uint32 TunnelDistance = 14;
  if (this->_internal_tunneldistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_tunneldistance(), target);
  }

  // uint32 TunnelLength = 15;
  if (this->_internal_tunnellength() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_tunnellength(), target);
  }

  // uint32 EnterSlopeInfo = 16;
  if (this->_internal_enterslopeinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_enterslopeinfo(), target);
  }

  // uint32 SlopeDistance = 17;
  if (this->_internal_slopedistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_slopedistance(), target);
  }

  // uint32 FallingRockInfo = 18;
  if (this->_internal_fallingrockinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_fallingrockinfo(), target);
  }

  // uint32 FallingRockDis = 19;
  if (this->_internal_fallingrockdis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(19, this->_internal_fallingrockdis(), target);
  }

  // uint32 TollInfo = 20;
  if (this->_internal_tollinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(20, this->_internal_tollinfo(), target);
  }

  // uint32 TollDis = 21;
  if (this->_internal_tolldis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(21, this->_internal_tolldis(), target);
  }

  // uint32 Construction_Info = 22;
  if (this->_internal_construction_info() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(22, this->_internal_construction_info(), target);
  }

  // uint32 Construction_Dis = 23;
  if (this->_internal_construction_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(23, this->_internal_construction_dis(), target);
  }

  // uint32 TrafficAccident_Info = 24;
  if (this->_internal_trafficaccident_info() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(24, this->_internal_trafficaccident_info(), target);
  }

  // uint32 TrafficAccident_Dis = 25;
  if (this->_internal_trafficaccident_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(25, this->_internal_trafficaccident_dis(), target);
  }

  // uint32 BranchInfo = 26;
  if (this->_internal_branchinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(26, this->_internal_branchinfo(), target);
  }

  // uint32 Branch_Dis = 27;
  if (this->_internal_branch_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(27, this->_internal_branch_dis(), target);
  }

  // uint32 NumchangeOfLanes_Dist = 28;
  if (this->_internal_numchangeoflanes_dist() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(28, this->_internal_numchangeoflanes_dist(), target);
  }

  // uint32 Lane_Changtype = 29;
  if (this->_internal_lane_changtype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(29, this->_internal_lane_changtype(), target);
  }

  // uint32 Road_TrafficFlow = 30;
  if (this->_internal_road_trafficflow() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(30, this->_internal_road_trafficflow(), target);
  }

  // uint32 RoadCurvature = 31;
  if (this->_internal_roadcurvature() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(31, this->_internal_roadcurvature(), target);
  }

  // uint32 RoadCurvature_10m = 32;
  if (this->_internal_roadcurvature_10m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(32, this->_internal_roadcurvature_10m(), target);
  }

  // uint32 RoadCurvature_20m = 33;
  if (this->_internal_roadcurvature_20m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(33, this->_internal_roadcurvature_20m(), target);
  }

  // uint32 RoadCurvature_30m = 34;
  if (this->_internal_roadcurvature_30m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(34, this->_internal_roadcurvature_30m(), target);
  }

  // uint32 RoadCurvature_40m = 35;
  if (this->_internal_roadcurvature_40m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(35, this->_internal_roadcurvature_40m(), target);
  }

  // uint32 RoadCurvature_50m = 36;
  if (this->_internal_roadcurvature_50m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(36, this->_internal_roadcurvature_50m(), target);
  }

  // uint32 RoadCurvature_60m = 37;
  if (this->_internal_roadcurvature_60m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(37, this->_internal_roadcurvature_60m(), target);
  }

  // uint32 RoadCurvature_70m = 38;
  if (this->_internal_roadcurvature_70m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(38, this->_internal_roadcurvature_70m(), target);
  }

  // uint32 RoadCurvature_80m = 39;
  if (this->_internal_roadcurvature_80m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(39, this->_internal_roadcurvature_80m(), target);
  }

  // uint32 RoadCurvature_90m = 40;
  if (this->_internal_roadcurvature_90m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(40, this->_internal_roadcurvature_90m(), target);
  }

  // uint32 RoadCurvature_100m = 41;
  if (this->_internal_roadcurvature_100m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(41, this->_internal_roadcurvature_100m(), target);
  }

  // uint32 RoadCurvatureFar = 42;
  if (this->_internal_roadcurvaturefar() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(42, this->_internal_roadcurvaturefar(), target);
  }

  // uint32 RoadCurvature_300m = 43;
  if (this->_internal_roadcurvature_300m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(43, this->_internal_roadcurvature_300m(), target);
  }

  // uint32 RoadCurvature_400m = 44;
  if (this->_internal_roadcurvature_400m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(44, this->_internal_roadcurvature_400m(), target);
  }

  // uint32 RoadCurvature_600m = 45;
  if (this->_internal_roadcurvature_600m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(45, this->_internal_roadcurvature_600m(), target);
  }

  // uint32 SlopeGradient = 46;
  if (this->_internal_slopegradient() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(46, this->_internal_slopegradient(), target);
  }

  // uint32 SlopeGradientFar = 47;
  if (this->_internal_slopegradientfar() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(47, this->_internal_slopegradientfar(), target);
  }

  // uint32 SlopeGradient_300m = 48;
  if (this->_internal_slopegradient_300m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(48, this->_internal_slopegradient_300m(), target);
  }

  // uint32 SlopeGradient_10m = 49;
  if (this->_internal_slopegradient_10m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(49, this->_internal_slopegradient_10m(), target);
  }

  // uint32 SlopeGradient_20m = 50;
  if (this->_internal_slopegradient_20m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(50, this->_internal_slopegradient_20m(), target);
  }

  // uint32 SlopeGradient_30m = 51;
  if (this->_internal_slopegradient_30m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(51, this->_internal_slopegradient_30m(), target);
  }

  // uint32 SlopeGradient_40m = 52;
  if (this->_internal_slopegradient_40m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(52, this->_internal_slopegradient_40m(), target);
  }

  // uint32 SlopeGradient_50m = 53;
  if (this->_internal_slopegradient_50m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(53, this->_internal_slopegradient_50m(), target);
  }

  // uint32 SlopeGradient_100m = 54;
  if (this->_internal_slopegradient_100m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(54, this->_internal_slopegradient_100m(), target);
  }

  // uint32 IntervalVelocityInfo = 55;
  if (this->_internal_intervalvelocityinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(55, this->_internal_intervalvelocityinfo(), target);
  }

  // uint32 IntervalVelocityDis = 56;
  if (this->_internal_intervalvelocitydis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(56, this->_internal_intervalvelocitydis(), target);
  }

  // uint32 AccidentProne = 57;
  if (this->_internal_accidentprone() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(57, this->_internal_accidentprone(), target);
  }

  // uint32 AccidentProneDistance = 58;
  if (this->_internal_accidentpronedistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(58, this->_internal_accidentpronedistance(), target);
  }

  // uint32 LaneConfluence = 59;
  if (this->_internal_laneconfluence() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(59, this->_internal_laneconfluence(), target);
  }

  // uint32 LaneConfluenceDis = 60;
  if (this->_internal_laneconfluencedis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(60, this->_internal_laneconfluencedis(), target);
  }

  // uint32 BridgeInfo = 61;
  if (this->_internal_bridgeinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(61, this->_internal_bridgeinfo(), target);
  }

  // uint32 BridgeDis = 62;
  if (this->_internal_bridgedis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(62, this->_internal_bridgedis(), target);
  }

  // uint32 WeatherType = 63;
  if (this->_internal_weathertype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(63, this->_internal_weathertype(), target);
  }

  // uint32 ServiceRoad = 64;
  if (this->_internal_serviceroad() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(64, this->_internal_serviceroad(), target);
  }

  // uint32 ServiceRoadDis = 65;
  if (this->_internal_serviceroaddis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(65, this->_internal_serviceroaddis(), target);
  }

  // uint32 LaneType_ID1 = 66;
  if (this->_internal_lanetype_id1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(66, this->_internal_lanetype_id1(), target);
  }

  // uint32 LaneType_ID2 = 67;
  if (this->_internal_lanetype_id2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(67, this->_internal_lanetype_id2(), target);
  }

  // uint32 LaneType_ID3 = 68;
  if (this->_internal_lanetype_id3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(68, this->_internal_lanetype_id3(), target);
  }

  // uint32 LaneType_ID4 = 69;
  if (this->_internal_lanetype_id4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(69, this->_internal_lanetype_id4(), target);
  }

  // uint32 LaneType_ID5 = 70;
  if (this->_internal_lanetype_id5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(70, this->_internal_lanetype_id5(), target);
  }

  // uint32 LaneType_ID6 = 71;
  if (this->_internal_lanetype_id6() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(71, this->_internal_lanetype_id6(), target);
  }

  // uint32 EHRHeartFlag = 72;
  if (this->_internal_ehrheartflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(72, this->_internal_ehrheartflag(), target);
  }

  // uint32 EHPHeartFlag = 73;
  if (this->_internal_ehpheartflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(73, this->_internal_ehpheartflag(), target);
  }

  // uint32 ADAS_Posn_Pathldx = 74;
  if (this->_internal_adas_posn_pathldx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(74, this->_internal_adas_posn_pathldx(), target);
  }

  // uint32 ADAS_Posn_Offset = 75;
  if (this->_internal_adas_posn_offset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(75, this->_internal_adas_posn_offset(), target);
  }

  // uint32 Byroad = 76;
  if (this->_internal_byroad() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(76, this->_internal_byroad(), target);
  }

  // uint32 Long_Ramp_Dis = 77;
  if (this->_internal_long_ramp_dis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(77, this->_internal_long_ramp_dis(), target);
  }

  // uint32 Long_Ramp_Side = 78;
  if (this->_internal_long_ramp_side() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(78, this->_internal_long_ramp_side(), target);
  }

  // uint32 Llong_Tunnel_Len = 79;
  if (this->_internal_llong_tunnel_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(79, this->_internal_llong_tunnel_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ADAS_MapNavigationSignal)
  return target;
}

size_t PB_ADAS_MapNavigationSignal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ADAS_MapNavigationSignal)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 CurveDistance = 1;
  if (this->_internal_curvedistance() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_curvedistance());
  }

  // uint32 EnterCurveInfo = 2;
  if (this->_internal_entercurveinfo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_entercurveinfo());
  }

  // uint32 RampDistance = 3;
  if (this->_internal_rampdistance() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rampdistance());
  }

  // uint32 EnterRampInfo = 4;
  if (this->_internal_enterrampinfo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_enterrampinfo());
  }

  // uint32 RampInfo = 5;
  if (this->_internal_rampinfo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rampinfo());
  }

  // uint32 RampSide = 6;
  if (this->_internal_rampside() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rampside());
  }

  // uint32 NavCurrentRoadType = 7;
  if (this->_internal_navcurrentroadtype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_navcurrentroadtype());
  }

  // uint32 ForwardRoadType = 8;
  if (this->_internal_forwardroadtype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_forwardroadtype());
  }

  // uint32 LaneCnt = 9;
  if (this->_internal_lanecnt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lanecnt());
  }

  // uint32 NavSpeedLimitType = 10;
  if (this->_internal_navspeedlimittype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_navspeedlimittype());
  }

  // uint32 NavSpeedLimit = 11;
  if (this->_internal_navspeedlimit() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_navspeedlimit());
  }

  // uint32 SpeedLimitDistance = 12;
  if (this->_internal_speedlimitdistance() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_speedlimitdistance());
  }

  // uint32 EnterTunnelInfo = 13;
  if (this->_internal_entertunnelinfo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_entertunnelinfo());
  }

  // uint32 TunnelDistance = 14;
  if (this->_internal_tunneldistance() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tunneldistance());
  }

  // uint32 TunnelLength = 15;
  if (this->_internal_tunnellength() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_tunnellength());
  }

  // uint32 EnterSlopeInfo = 16;
  if (this->_internal_enterslopeinfo() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_enterslopeinfo());
  }

  // uint32 SlopeDistance = 17;
  if (this->_internal_slopedistance() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_slopedistance());
  }

  // uint32 FallingRockInfo = 18;
  if (this->_internal_fallingrockinfo() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_fallingrockinfo());
  }

  // uint32 FallingRockDis = 19;
  if (this->_internal_fallingrockdis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_fallingrockdis());
  }

  // uint32 TollInfo = 20;
  if (this->_internal_tollinfo() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_tollinfo());
  }

  // uint32 TollDis = 21;
  if (this->_internal_tolldis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_tolldis());
  }

  // uint32 Construction_Info = 22;
  if (this->_internal_construction_info() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_construction_info());
  }

  // uint32 Construction_Dis = 23;
  if (this->_internal_construction_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_construction_dis());
  }

  // uint32 TrafficAccident_Info = 24;
  if (this->_internal_trafficaccident_info() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_trafficaccident_info());
  }

  // uint32 TrafficAccident_Dis = 25;
  if (this->_internal_trafficaccident_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_trafficaccident_dis());
  }

  // uint32 BranchInfo = 26;
  if (this->_internal_branchinfo() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_branchinfo());
  }

  // uint32 Branch_Dis = 27;
  if (this->_internal_branch_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_branch_dis());
  }

  // uint32 NumchangeOfLanes_Dist = 28;
  if (this->_internal_numchangeoflanes_dist() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_numchangeoflanes_dist());
  }

  // uint32 Lane_Changtype = 29;
  if (this->_internal_lane_changtype() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lane_changtype());
  }

  // uint32 Road_TrafficFlow = 30;
  if (this->_internal_road_trafficflow() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_road_trafficflow());
  }

  // uint32 RoadCurvature = 31;
  if (this->_internal_roadcurvature() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature());
  }

  // uint32 RoadCurvature_10m = 32;
  if (this->_internal_roadcurvature_10m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_10m());
  }

  // uint32 RoadCurvature_20m = 33;
  if (this->_internal_roadcurvature_20m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_20m());
  }

  // uint32 RoadCurvature_30m = 34;
  if (this->_internal_roadcurvature_30m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_30m());
  }

  // uint32 RoadCurvature_40m = 35;
  if (this->_internal_roadcurvature_40m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_40m());
  }

  // uint32 RoadCurvature_50m = 36;
  if (this->_internal_roadcurvature_50m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_50m());
  }

  // uint32 RoadCurvature_60m = 37;
  if (this->_internal_roadcurvature_60m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_60m());
  }

  // uint32 RoadCurvature_70m = 38;
  if (this->_internal_roadcurvature_70m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_70m());
  }

  // uint32 RoadCurvature_80m = 39;
  if (this->_internal_roadcurvature_80m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_80m());
  }

  // uint32 RoadCurvature_90m = 40;
  if (this->_internal_roadcurvature_90m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_90m());
  }

  // uint32 RoadCurvature_100m = 41;
  if (this->_internal_roadcurvature_100m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_100m());
  }

  // uint32 RoadCurvatureFar = 42;
  if (this->_internal_roadcurvaturefar() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvaturefar());
  }

  // uint32 RoadCurvature_300m = 43;
  if (this->_internal_roadcurvature_300m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_300m());
  }

  // uint32 RoadCurvature_400m = 44;
  if (this->_internal_roadcurvature_400m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_400m());
  }

  // uint32 RoadCurvature_600m = 45;
  if (this->_internal_roadcurvature_600m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_roadcurvature_600m());
  }

  // uint32 SlopeGradient = 46;
  if (this->_internal_slopegradient() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_slopegradient());
  }

  // uint32 SlopeGradientFar = 47;
  if (this->_internal_slopegradientfar() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_slopegradientfar());
  }

  // uint32 SlopeGradient_300m = 48;
  if (this->_internal_slopegradient_300m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_slopegradient_300m());
  }

  // uint32 SlopeGradient_10m = 49;
  if (this->_internal_slopegradient_10m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_slopegradient_10m());
  }

  // uint32 SlopeGradient_20m = 50;
  if (this->_internal_slopegradient_20m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_slopegradient_20m());
  }

  // uint32 SlopeGradient_30m = 51;
  if (this->_internal_slopegradient_30m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_slopegradient_30m());
  }

  // uint32 SlopeGradient_40m = 52;
  if (this->_internal_slopegradient_40m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_slopegradient_40m());
  }

  // uint32 SlopeGradient_50m = 53;
  if (this->_internal_slopegradient_50m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_slopegradient_50m());
  }

  // uint32 SlopeGradient_100m = 54;
  if (this->_internal_slopegradient_100m() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_slopegradient_100m());
  }

  // uint32 IntervalVelocityInfo = 55;
  if (this->_internal_intervalvelocityinfo() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_intervalvelocityinfo());
  }

  // uint32 IntervalVelocityDis = 56;
  if (this->_internal_intervalvelocitydis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_intervalvelocitydis());
  }

  // uint32 AccidentProne = 57;
  if (this->_internal_accidentprone() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_accidentprone());
  }

  // uint32 AccidentProneDistance = 58;
  if (this->_internal_accidentpronedistance() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_accidentpronedistance());
  }

  // uint32 LaneConfluence = 59;
  if (this->_internal_laneconfluence() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_laneconfluence());
  }

  // uint32 LaneConfluenceDis = 60;
  if (this->_internal_laneconfluencedis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_laneconfluencedis());
  }

  // uint32 BridgeInfo = 61;
  if (this->_internal_bridgeinfo() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_bridgeinfo());
  }

  // uint32 BridgeDis = 62;
  if (this->_internal_bridgedis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_bridgedis());
  }

  // uint32 WeatherType = 63;
  if (this->_internal_weathertype() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_weathertype());
  }

  // uint32 ServiceRoad = 64;
  if (this->_internal_serviceroad() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_serviceroad());
  }

  // uint32 ServiceRoadDis = 65;
  if (this->_internal_serviceroaddis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_serviceroaddis());
  }

  // uint32 LaneType_ID1 = 66;
  if (this->_internal_lanetype_id1() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lanetype_id1());
  }

  // uint32 LaneType_ID2 = 67;
  if (this->_internal_lanetype_id2() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lanetype_id2());
  }

  // uint32 LaneType_ID3 = 68;
  if (this->_internal_lanetype_id3() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lanetype_id3());
  }

  // uint32 LaneType_ID4 = 69;
  if (this->_internal_lanetype_id4() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lanetype_id4());
  }

  // uint32 LaneType_ID5 = 70;
  if (this->_internal_lanetype_id5() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lanetype_id5());
  }

  // uint32 LaneType_ID6 = 71;
  if (this->_internal_lanetype_id6() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_lanetype_id6());
  }

  // uint32 EHRHeartFlag = 72;
  if (this->_internal_ehrheartflag() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ehrheartflag());
  }

  // uint32 EHPHeartFlag = 73;
  if (this->_internal_ehpheartflag() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_ehpheartflag());
  }

  // uint32 ADAS_Posn_Pathldx = 74;
  if (this->_internal_adas_posn_pathldx() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_adas_posn_pathldx());
  }

  // uint32 ADAS_Posn_Offset = 75;
  if (this->_internal_adas_posn_offset() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_adas_posn_offset());
  }

  // uint32 Byroad = 76;
  if (this->_internal_byroad() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_byroad());
  }

  // uint32 Long_Ramp_Dis = 77;
  if (this->_internal_long_ramp_dis() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_long_ramp_dis());
  }

  // uint32 Long_Ramp_Side = 78;
  if (this->_internal_long_ramp_side() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_long_ramp_side());
  }

  // uint32 Llong_Tunnel_Len = 79;
  if (this->_internal_llong_tunnel_len() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_llong_tunnel_len());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ADAS_MapNavigationSignal::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ADAS_MapNavigationSignal::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ADAS_MapNavigationSignal::GetClassData() const { return &_class_data_; }

void PB_ADAS_MapNavigationSignal::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ADAS_MapNavigationSignal *>(to)->MergeFrom(
      static_cast<const PB_ADAS_MapNavigationSignal &>(from));
}


void PB_ADAS_MapNavigationSignal::MergeFrom(const PB_ADAS_MapNavigationSignal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ADAS_MapNavigationSignal)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_curvedistance() != 0) {
    _internal_set_curvedistance(from._internal_curvedistance());
  }
  if (from._internal_entercurveinfo() != 0) {
    _internal_set_entercurveinfo(from._internal_entercurveinfo());
  }
  if (from._internal_rampdistance() != 0) {
    _internal_set_rampdistance(from._internal_rampdistance());
  }
  if (from._internal_enterrampinfo() != 0) {
    _internal_set_enterrampinfo(from._internal_enterrampinfo());
  }
  if (from._internal_rampinfo() != 0) {
    _internal_set_rampinfo(from._internal_rampinfo());
  }
  if (from._internal_rampside() != 0) {
    _internal_set_rampside(from._internal_rampside());
  }
  if (from._internal_navcurrentroadtype() != 0) {
    _internal_set_navcurrentroadtype(from._internal_navcurrentroadtype());
  }
  if (from._internal_forwardroadtype() != 0) {
    _internal_set_forwardroadtype(from._internal_forwardroadtype());
  }
  if (from._internal_lanecnt() != 0) {
    _internal_set_lanecnt(from._internal_lanecnt());
  }
  if (from._internal_navspeedlimittype() != 0) {
    _internal_set_navspeedlimittype(from._internal_navspeedlimittype());
  }
  if (from._internal_navspeedlimit() != 0) {
    _internal_set_navspeedlimit(from._internal_navspeedlimit());
  }
  if (from._internal_speedlimitdistance() != 0) {
    _internal_set_speedlimitdistance(from._internal_speedlimitdistance());
  }
  if (from._internal_entertunnelinfo() != 0) {
    _internal_set_entertunnelinfo(from._internal_entertunnelinfo());
  }
  if (from._internal_tunneldistance() != 0) {
    _internal_set_tunneldistance(from._internal_tunneldistance());
  }
  if (from._internal_tunnellength() != 0) {
    _internal_set_tunnellength(from._internal_tunnellength());
  }
  if (from._internal_enterslopeinfo() != 0) {
    _internal_set_enterslopeinfo(from._internal_enterslopeinfo());
  }
  if (from._internal_slopedistance() != 0) {
    _internal_set_slopedistance(from._internal_slopedistance());
  }
  if (from._internal_fallingrockinfo() != 0) {
    _internal_set_fallingrockinfo(from._internal_fallingrockinfo());
  }
  if (from._internal_fallingrockdis() != 0) {
    _internal_set_fallingrockdis(from._internal_fallingrockdis());
  }
  if (from._internal_tollinfo() != 0) {
    _internal_set_tollinfo(from._internal_tollinfo());
  }
  if (from._internal_tolldis() != 0) {
    _internal_set_tolldis(from._internal_tolldis());
  }
  if (from._internal_construction_info() != 0) {
    _internal_set_construction_info(from._internal_construction_info());
  }
  if (from._internal_construction_dis() != 0) {
    _internal_set_construction_dis(from._internal_construction_dis());
  }
  if (from._internal_trafficaccident_info() != 0) {
    _internal_set_trafficaccident_info(from._internal_trafficaccident_info());
  }
  if (from._internal_trafficaccident_dis() != 0) {
    _internal_set_trafficaccident_dis(from._internal_trafficaccident_dis());
  }
  if (from._internal_branchinfo() != 0) {
    _internal_set_branchinfo(from._internal_branchinfo());
  }
  if (from._internal_branch_dis() != 0) {
    _internal_set_branch_dis(from._internal_branch_dis());
  }
  if (from._internal_numchangeoflanes_dist() != 0) {
    _internal_set_numchangeoflanes_dist(from._internal_numchangeoflanes_dist());
  }
  if (from._internal_lane_changtype() != 0) {
    _internal_set_lane_changtype(from._internal_lane_changtype());
  }
  if (from._internal_road_trafficflow() != 0) {
    _internal_set_road_trafficflow(from._internal_road_trafficflow());
  }
  if (from._internal_roadcurvature() != 0) {
    _internal_set_roadcurvature(from._internal_roadcurvature());
  }
  if (from._internal_roadcurvature_10m() != 0) {
    _internal_set_roadcurvature_10m(from._internal_roadcurvature_10m());
  }
  if (from._internal_roadcurvature_20m() != 0) {
    _internal_set_roadcurvature_20m(from._internal_roadcurvature_20m());
  }
  if (from._internal_roadcurvature_30m() != 0) {
    _internal_set_roadcurvature_30m(from._internal_roadcurvature_30m());
  }
  if (from._internal_roadcurvature_40m() != 0) {
    _internal_set_roadcurvature_40m(from._internal_roadcurvature_40m());
  }
  if (from._internal_roadcurvature_50m() != 0) {
    _internal_set_roadcurvature_50m(from._internal_roadcurvature_50m());
  }
  if (from._internal_roadcurvature_60m() != 0) {
    _internal_set_roadcurvature_60m(from._internal_roadcurvature_60m());
  }
  if (from._internal_roadcurvature_70m() != 0) {
    _internal_set_roadcurvature_70m(from._internal_roadcurvature_70m());
  }
  if (from._internal_roadcurvature_80m() != 0) {
    _internal_set_roadcurvature_80m(from._internal_roadcurvature_80m());
  }
  if (from._internal_roadcurvature_90m() != 0) {
    _internal_set_roadcurvature_90m(from._internal_roadcurvature_90m());
  }
  if (from._internal_roadcurvature_100m() != 0) {
    _internal_set_roadcurvature_100m(from._internal_roadcurvature_100m());
  }
  if (from._internal_roadcurvaturefar() != 0) {
    _internal_set_roadcurvaturefar(from._internal_roadcurvaturefar());
  }
  if (from._internal_roadcurvature_300m() != 0) {
    _internal_set_roadcurvature_300m(from._internal_roadcurvature_300m());
  }
  if (from._internal_roadcurvature_400m() != 0) {
    _internal_set_roadcurvature_400m(from._internal_roadcurvature_400m());
  }
  if (from._internal_roadcurvature_600m() != 0) {
    _internal_set_roadcurvature_600m(from._internal_roadcurvature_600m());
  }
  if (from._internal_slopegradient() != 0) {
    _internal_set_slopegradient(from._internal_slopegradient());
  }
  if (from._internal_slopegradientfar() != 0) {
    _internal_set_slopegradientfar(from._internal_slopegradientfar());
  }
  if (from._internal_slopegradient_300m() != 0) {
    _internal_set_slopegradient_300m(from._internal_slopegradient_300m());
  }
  if (from._internal_slopegradient_10m() != 0) {
    _internal_set_slopegradient_10m(from._internal_slopegradient_10m());
  }
  if (from._internal_slopegradient_20m() != 0) {
    _internal_set_slopegradient_20m(from._internal_slopegradient_20m());
  }
  if (from._internal_slopegradient_30m() != 0) {
    _internal_set_slopegradient_30m(from._internal_slopegradient_30m());
  }
  if (from._internal_slopegradient_40m() != 0) {
    _internal_set_slopegradient_40m(from._internal_slopegradient_40m());
  }
  if (from._internal_slopegradient_50m() != 0) {
    _internal_set_slopegradient_50m(from._internal_slopegradient_50m());
  }
  if (from._internal_slopegradient_100m() != 0) {
    _internal_set_slopegradient_100m(from._internal_slopegradient_100m());
  }
  if (from._internal_intervalvelocityinfo() != 0) {
    _internal_set_intervalvelocityinfo(from._internal_intervalvelocityinfo());
  }
  if (from._internal_intervalvelocitydis() != 0) {
    _internal_set_intervalvelocitydis(from._internal_intervalvelocitydis());
  }
  if (from._internal_accidentprone() != 0) {
    _internal_set_accidentprone(from._internal_accidentprone());
  }
  if (from._internal_accidentpronedistance() != 0) {
    _internal_set_accidentpronedistance(from._internal_accidentpronedistance());
  }
  if (from._internal_laneconfluence() != 0) {
    _internal_set_laneconfluence(from._internal_laneconfluence());
  }
  if (from._internal_laneconfluencedis() != 0) {
    _internal_set_laneconfluencedis(from._internal_laneconfluencedis());
  }
  if (from._internal_bridgeinfo() != 0) {
    _internal_set_bridgeinfo(from._internal_bridgeinfo());
  }
  if (from._internal_bridgedis() != 0) {
    _internal_set_bridgedis(from._internal_bridgedis());
  }
  if (from._internal_weathertype() != 0) {
    _internal_set_weathertype(from._internal_weathertype());
  }
  if (from._internal_serviceroad() != 0) {
    _internal_set_serviceroad(from._internal_serviceroad());
  }
  if (from._internal_serviceroaddis() != 0) {
    _internal_set_serviceroaddis(from._internal_serviceroaddis());
  }
  if (from._internal_lanetype_id1() != 0) {
    _internal_set_lanetype_id1(from._internal_lanetype_id1());
  }
  if (from._internal_lanetype_id2() != 0) {
    _internal_set_lanetype_id2(from._internal_lanetype_id2());
  }
  if (from._internal_lanetype_id3() != 0) {
    _internal_set_lanetype_id3(from._internal_lanetype_id3());
  }
  if (from._internal_lanetype_id4() != 0) {
    _internal_set_lanetype_id4(from._internal_lanetype_id4());
  }
  if (from._internal_lanetype_id5() != 0) {
    _internal_set_lanetype_id5(from._internal_lanetype_id5());
  }
  if (from._internal_lanetype_id6() != 0) {
    _internal_set_lanetype_id6(from._internal_lanetype_id6());
  }
  if (from._internal_ehrheartflag() != 0) {
    _internal_set_ehrheartflag(from._internal_ehrheartflag());
  }
  if (from._internal_ehpheartflag() != 0) {
    _internal_set_ehpheartflag(from._internal_ehpheartflag());
  }
  if (from._internal_adas_posn_pathldx() != 0) {
    _internal_set_adas_posn_pathldx(from._internal_adas_posn_pathldx());
  }
  if (from._internal_adas_posn_offset() != 0) {
    _internal_set_adas_posn_offset(from._internal_adas_posn_offset());
  }
  if (from._internal_byroad() != 0) {
    _internal_set_byroad(from._internal_byroad());
  }
  if (from._internal_long_ramp_dis() != 0) {
    _internal_set_long_ramp_dis(from._internal_long_ramp_dis());
  }
  if (from._internal_long_ramp_side() != 0) {
    _internal_set_long_ramp_side(from._internal_long_ramp_side());
  }
  if (from._internal_llong_tunnel_len() != 0) {
    _internal_set_llong_tunnel_len(from._internal_llong_tunnel_len());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ADAS_MapNavigationSignal::CopyFrom(const PB_ADAS_MapNavigationSignal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ADAS_MapNavigationSignal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ADAS_MapNavigationSignal::IsInitialized() const {
  return true;
}

void PB_ADAS_MapNavigationSignal::InternalSwap(PB_ADAS_MapNavigationSignal* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ADAS_MapNavigationSignal, llong_tunnel_len_)
      + sizeof(PB_ADAS_MapNavigationSignal::llong_tunnel_len_)
      - PROTOBUF_FIELD_OFFSET(PB_ADAS_MapNavigationSignal, curvedistance_)>(
          reinterpret_cast<char*>(&curvedistance_),
          reinterpret_cast<char*>(&other->curvedistance_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ADAS_MapNavigationSignal::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[105]);
}

// ===================================================================

class PB_APAReqreply::_Internal {
 public:
};

PB_APAReqreply::PB_APAReqreply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_APAReqreply)
}
PB_APAReqreply::PB_APAReqreply(const PB_APAReqreply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  reply_ = from.reply_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_APAReqreply)
}

inline void PB_APAReqreply::SharedCtor() {
reply_ = 0u;
}

PB_APAReqreply::~PB_APAReqreply() {
  // @@protoc_insertion_point(destructor:Soa.PB_APAReqreply)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_APAReqreply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_APAReqreply::ArenaDtor(void* object) {
  PB_APAReqreply* _this = reinterpret_cast< PB_APAReqreply* >(object);
  (void)_this;
}
void PB_APAReqreply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_APAReqreply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_APAReqreply::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_APAReqreply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reply_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_APAReqreply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 reply = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          reply_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_APAReqreply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_APAReqreply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 reply = 1;
  if (this->_internal_reply() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_reply(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_APAReqreply)
  return target;
}

size_t PB_APAReqreply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_APAReqreply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 reply = 1;
  if (this->_internal_reply() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reply());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_APAReqreply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_APAReqreply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_APAReqreply::GetClassData() const { return &_class_data_; }

void PB_APAReqreply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_APAReqreply *>(to)->MergeFrom(
      static_cast<const PB_APAReqreply &>(from));
}


void PB_APAReqreply::MergeFrom(const PB_APAReqreply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_APAReqreply)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_reply() != 0) {
    _internal_set_reply(from._internal_reply());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_APAReqreply::CopyFrom(const PB_APAReqreply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_APAReqreply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_APAReqreply::IsInitialized() const {
  return true;
}

void PB_APAReqreply::InternalSwap(PB_APAReqreply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(reply_, other->reply_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_APAReqreply::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[106]);
}

// ===================================================================

class PB_ReevTotalMilg::_Internal {
 public:
};

PB_ReevTotalMilg::PB_ReevTotalMilg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ReevTotalMilg)
}
PB_ReevTotalMilg::PB_ReevTotalMilg(const PB_ReevTotalMilg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&futotalmilg_, &from.futotalmilg_,
    static_cast<size_t>(reinterpret_cast<char*>(&evtotalmilg_) -
    reinterpret_cast<char*>(&futotalmilg_)) + sizeof(evtotalmilg_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ReevTotalMilg)
}

inline void PB_ReevTotalMilg::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&futotalmilg_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&evtotalmilg_) -
    reinterpret_cast<char*>(&futotalmilg_)) + sizeof(evtotalmilg_));
}

PB_ReevTotalMilg::~PB_ReevTotalMilg() {
  // @@protoc_insertion_point(destructor:Soa.PB_ReevTotalMilg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ReevTotalMilg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ReevTotalMilg::ArenaDtor(void* object) {
  PB_ReevTotalMilg* _this = reinterpret_cast< PB_ReevTotalMilg* >(object);
  (void)_this;
}
void PB_ReevTotalMilg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ReevTotalMilg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ReevTotalMilg::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ReevTotalMilg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&futotalmilg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&evtotalmilg_) -
      reinterpret_cast<char*>(&futotalmilg_)) + sizeof(evtotalmilg_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ReevTotalMilg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FuTotalMilg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          futotalmilg_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 EvTotalMilg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          evtotalmilg_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ReevTotalMilg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ReevTotalMilg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FuTotalMilg = 1;
  if (this->_internal_futotalmilg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_futotalmilg(), target);
  }

  // uint32 EvTotalMilg = 2;
  if (this->_internal_evtotalmilg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_evtotalmilg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ReevTotalMilg)
  return target;
}

size_t PB_ReevTotalMilg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ReevTotalMilg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FuTotalMilg = 1;
  if (this->_internal_futotalmilg() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_futotalmilg());
  }

  // uint32 EvTotalMilg = 2;
  if (this->_internal_evtotalmilg() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_evtotalmilg());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ReevTotalMilg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ReevTotalMilg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ReevTotalMilg::GetClassData() const { return &_class_data_; }

void PB_ReevTotalMilg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ReevTotalMilg *>(to)->MergeFrom(
      static_cast<const PB_ReevTotalMilg &>(from));
}


void PB_ReevTotalMilg::MergeFrom(const PB_ReevTotalMilg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ReevTotalMilg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_futotalmilg() != 0) {
    _internal_set_futotalmilg(from._internal_futotalmilg());
  }
  if (from._internal_evtotalmilg() != 0) {
    _internal_set_evtotalmilg(from._internal_evtotalmilg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ReevTotalMilg::CopyFrom(const PB_ReevTotalMilg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ReevTotalMilg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ReevTotalMilg::IsInitialized() const {
  return true;
}

void PB_ReevTotalMilg::InternalSwap(PB_ReevTotalMilg* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ReevTotalMilg, evtotalmilg_)
      + sizeof(PB_ReevTotalMilg::evtotalmilg_)
      - PROTOBUF_FIELD_OFFSET(PB_ReevTotalMilg, futotalmilg_)>(
          reinterpret_cast<char*>(&futotalmilg_),
          reinterpret_cast<char*>(&other->futotalmilg_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ReevTotalMilg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[107]);
}

// ===================================================================

class PB_int8_Struct::_Internal {
 public:
};

PB_int8_Struct::PB_int8_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_int8_Struct)
}
PB_int8_Struct::PB_int8_Struct(const PB_int8_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_int8_Struct)
}

inline void PB_int8_Struct::SharedCtor() {
data_ = 0;
}

PB_int8_Struct::~PB_int8_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_int8_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_int8_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_int8_Struct::ArenaDtor(void* object) {
  PB_int8_Struct* _this = reinterpret_cast< PB_int8_Struct* >(object);
  (void)_this;
}
void PB_int8_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_int8_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_int8_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_int8_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_int8_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_int8_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_int8_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 data = 1;
  if (this->_internal_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_int8_Struct)
  return target;
}

size_t PB_int8_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_int8_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 data = 1;
  if (this->_internal_data() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_int8_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_int8_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_int8_Struct::GetClassData() const { return &_class_data_; }

void PB_int8_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_int8_Struct *>(to)->MergeFrom(
      static_cast<const PB_int8_Struct &>(from));
}


void PB_int8_Struct::MergeFrom(const PB_int8_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_int8_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_data() != 0) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_int8_Struct::CopyFrom(const PB_int8_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_int8_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_int8_Struct::IsInitialized() const {
  return true;
}

void PB_int8_Struct::InternalSwap(PB_int8_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_int8_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[108]);
}

// ===================================================================

class PB_OperationInfo::_Internal {
 public:
};

PB_OperationInfo::PB_OperationInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_OperationInfo)
}
PB_OperationInfo::PB_OperationInfo(const PB_OperationInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&service_st_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(service_st_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_OperationInfo)
}

inline void PB_OperationInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&request_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&service_st_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(service_st_));
}

PB_OperationInfo::~PB_OperationInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_OperationInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_OperationInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_OperationInfo::ArenaDtor(void* object) {
  PB_OperationInfo* _this = reinterpret_cast< PB_OperationInfo* >(object);
  (void)_this;
}
void PB_OperationInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_OperationInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_OperationInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_OperationInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&service_st_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(service_st_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_OperationInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Request_ID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Session_ID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Service_St = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          service_st_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_OperationInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_OperationInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Request_ID = 1;
  if (this->_internal_request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // uint32 Session_ID = 2;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_session_id(), target);
  }

  // uint32 Service_St = 3;
  if (this->_internal_service_st() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_service_st(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_OperationInfo)
  return target;
}

size_t PB_OperationInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_OperationInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Request_ID = 1;
  if (this->_internal_request_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_request_id());
  }

  // uint32 Session_ID = 2;
  if (this->_internal_session_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_session_id());
  }

  // uint32 Service_St = 3;
  if (this->_internal_service_st() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_service_st());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_OperationInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_OperationInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_OperationInfo::GetClassData() const { return &_class_data_; }

void PB_OperationInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_OperationInfo *>(to)->MergeFrom(
      static_cast<const PB_OperationInfo &>(from));
}


void PB_OperationInfo::MergeFrom(const PB_OperationInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_OperationInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
  if (from._internal_session_id() != 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_service_st() != 0) {
    _internal_set_service_st(from._internal_service_st());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_OperationInfo::CopyFrom(const PB_OperationInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_OperationInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_OperationInfo::IsInitialized() const {
  return true;
}

void PB_OperationInfo::InternalSwap(PB_OperationInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_OperationInfo, service_st_)
      + sizeof(PB_OperationInfo::service_st_)
      - PROTOBUF_FIELD_OFFSET(PB_OperationInfo, request_id_)>(
          reinterpret_cast<char*>(&request_id_),
          reinterpret_cast<char*>(&other->request_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_OperationInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[109]);
}

// ===================================================================

class PB_BrkLiFltInfo::_Internal {
 public:
};

PB_BrkLiFltInfo::PB_BrkLiFltInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_BrkLiFltInfo)
}
PB_BrkLiFltInfo::PB_BrkLiFltInfo(const PB_BrkLiFltInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_fltst_, &from.le_fltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&chsml_fltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(chsml_fltst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_BrkLiFltInfo)
}

inline void PB_BrkLiFltInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_fltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&chsml_fltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(chsml_fltst_));
}

PB_BrkLiFltInfo::~PB_BrkLiFltInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_BrkLiFltInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_BrkLiFltInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_BrkLiFltInfo::ArenaDtor(void* object) {
  PB_BrkLiFltInfo* _this = reinterpret_cast< PB_BrkLiFltInfo* >(object);
  (void)_this;
}
void PB_BrkLiFltInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_BrkLiFltInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_BrkLiFltInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_BrkLiFltInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_fltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chsml_fltst_) -
      reinterpret_cast<char*>(&le_fltst_)) + sizeof(chsml_fltst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_BrkLiFltInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_FltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_FltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CHSML_FltSt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          chsml_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_BrkLiFltInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_BrkLiFltInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_fltst(), target);
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_fltst(), target);
  }

  // uint32 CHSML_FltSt = 3;
  if (this->_internal_chsml_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_chsml_fltst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_BrkLiFltInfo)
  return target;
}

size_t PB_BrkLiFltInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_BrkLiFltInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_fltst());
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_fltst());
  }

  // uint32 CHSML_FltSt = 3;
  if (this->_internal_chsml_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_chsml_fltst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_BrkLiFltInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_BrkLiFltInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_BrkLiFltInfo::GetClassData() const { return &_class_data_; }

void PB_BrkLiFltInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_BrkLiFltInfo *>(to)->MergeFrom(
      static_cast<const PB_BrkLiFltInfo &>(from));
}


void PB_BrkLiFltInfo::MergeFrom(const PB_BrkLiFltInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_BrkLiFltInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_fltst() != 0) {
    _internal_set_le_fltst(from._internal_le_fltst());
  }
  if (from._internal_ri_fltst() != 0) {
    _internal_set_ri_fltst(from._internal_ri_fltst());
  }
  if (from._internal_chsml_fltst() != 0) {
    _internal_set_chsml_fltst(from._internal_chsml_fltst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_BrkLiFltInfo::CopyFrom(const PB_BrkLiFltInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_BrkLiFltInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BrkLiFltInfo::IsInitialized() const {
  return true;
}

void PB_BrkLiFltInfo::InternalSwap(PB_BrkLiFltInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_BrkLiFltInfo, chsml_fltst_)
      + sizeof(PB_BrkLiFltInfo::chsml_fltst_)
      - PROTOBUF_FIELD_OFFSET(PB_BrkLiFltInfo, le_fltst_)>(
          reinterpret_cast<char*>(&le_fltst_),
          reinterpret_cast<char*>(&other->le_fltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_BrkLiFltInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[110]);
}

// ===================================================================

class PB_HUset_BSDLCASetting::_Internal {
 public:
};

PB_HUset_BSDLCASetting::PB_HUset_BSDLCASetting(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_BSDLCASetting)
}
PB_HUset_BSDLCASetting::PB_HUset_BSDLCASetting(const PB_HUset_BSDLCASetting& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_bsdlcasetting_ = from.hu_bsdlcasetting_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_BSDLCASetting)
}

inline void PB_HUset_BSDLCASetting::SharedCtor() {
hu_bsdlcasetting_ = 0u;
}

PB_HUset_BSDLCASetting::~PB_HUset_BSDLCASetting() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_BSDLCASetting)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_BSDLCASetting::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_BSDLCASetting::ArenaDtor(void* object) {
  PB_HUset_BSDLCASetting* _this = reinterpret_cast< PB_HUset_BSDLCASetting* >(object);
  (void)_this;
}
void PB_HUset_BSDLCASetting::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_BSDLCASetting::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_BSDLCASetting::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_BSDLCASetting)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_bsdlcasetting_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_BSDLCASetting::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_BSDLCASetting = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_bsdlcasetting_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_BSDLCASetting::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_BSDLCASetting)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_BSDLCASetting = 1;
  if (this->_internal_hu_bsdlcasetting() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_bsdlcasetting(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_BSDLCASetting)
  return target;
}

size_t PB_HUset_BSDLCASetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_BSDLCASetting)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_BSDLCASetting = 1;
  if (this->_internal_hu_bsdlcasetting() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_bsdlcasetting());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_BSDLCASetting::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_BSDLCASetting::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_BSDLCASetting::GetClassData() const { return &_class_data_; }

void PB_HUset_BSDLCASetting::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_BSDLCASetting *>(to)->MergeFrom(
      static_cast<const PB_HUset_BSDLCASetting &>(from));
}


void PB_HUset_BSDLCASetting::MergeFrom(const PB_HUset_BSDLCASetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_BSDLCASetting)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_bsdlcasetting() != 0) {
    _internal_set_hu_bsdlcasetting(from._internal_hu_bsdlcasetting());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_BSDLCASetting::CopyFrom(const PB_HUset_BSDLCASetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_BSDLCASetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_BSDLCASetting::IsInitialized() const {
  return true;
}

void PB_HUset_BSDLCASetting::InternalSwap(PB_HUset_BSDLCASetting* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_bsdlcasetting_, other->hu_bsdlcasetting_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_BSDLCASetting::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[111]);
}

// ===================================================================

class PB_InfoSetResult::_Internal {
 public:
};

PB_InfoSetResult::PB_InfoSetResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_InfoSetResult)
}
PB_InfoSetResult::PB_InfoSetResult(const PB_InfoSetResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&result_, &from.result_,
    static_cast<size_t>(reinterpret_cast<char*>(&infosetfailreson_) -
    reinterpret_cast<char*>(&result_)) + sizeof(infosetfailreson_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_InfoSetResult)
}

inline void PB_InfoSetResult::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&result_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&infosetfailreson_) -
    reinterpret_cast<char*>(&result_)) + sizeof(infosetfailreson_));
}

PB_InfoSetResult::~PB_InfoSetResult() {
  // @@protoc_insertion_point(destructor:Soa.PB_InfoSetResult)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_InfoSetResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_InfoSetResult::ArenaDtor(void* object) {
  PB_InfoSetResult* _this = reinterpret_cast< PB_InfoSetResult* >(object);
  (void)_this;
}
void PB_InfoSetResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_InfoSetResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_InfoSetResult::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_InfoSetResult)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&result_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&infosetfailreson_) -
      reinterpret_cast<char*>(&result_)) + sizeof(infosetfailreson_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_InfoSetResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 InfoSetFailReson = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          infosetfailreson_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_InfoSetResult::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_InfoSetResult)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_result(), target);
  }

  // uint32 InfoSetFailReson = 2;
  if (this->_internal_infosetfailreson() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_infosetfailreson(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_InfoSetResult)
  return target;
}

size_t PB_InfoSetResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_InfoSetResult)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_result());
  }

  // uint32 InfoSetFailReson = 2;
  if (this->_internal_infosetfailreson() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_infosetfailreson());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_InfoSetResult::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_InfoSetResult::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_InfoSetResult::GetClassData() const { return &_class_data_; }

void PB_InfoSetResult::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_InfoSetResult *>(to)->MergeFrom(
      static_cast<const PB_InfoSetResult &>(from));
}


void PB_InfoSetResult::MergeFrom(const PB_InfoSetResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_InfoSetResult)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  if (from._internal_infosetfailreson() != 0) {
    _internal_set_infosetfailreson(from._internal_infosetfailreson());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_InfoSetResult::CopyFrom(const PB_InfoSetResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_InfoSetResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_InfoSetResult::IsInitialized() const {
  return true;
}

void PB_InfoSetResult::InternalSwap(PB_InfoSetResult* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_InfoSetResult, infosetfailreson_)
      + sizeof(PB_InfoSetResult::infosetfailreson_)
      - PROTOBUF_FIELD_OFFSET(PB_InfoSetResult, result_)>(
          reinterpret_cast<char*>(&result_),
          reinterpret_cast<char*>(&other->result_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_InfoSetResult::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[112]);
}

// ===================================================================

class PB_EDCset_APAvoicecontrol::_Internal {
 public:
};

PB_EDCset_APAvoicecontrol::PB_EDCset_APAvoicecontrol(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDCset_APAvoicecontrol)
}
PB_EDCset_APAvoicecontrol::PB_EDCset_APAvoicecontrol(const PB_EDCset_APAvoicecontrol& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_apavoicecontrol_ = from.edc_apavoicecontrol_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDCset_APAvoicecontrol)
}

inline void PB_EDCset_APAvoicecontrol::SharedCtor() {
edc_apavoicecontrol_ = 0u;
}

PB_EDCset_APAvoicecontrol::~PB_EDCset_APAvoicecontrol() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDCset_APAvoicecontrol)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDCset_APAvoicecontrol::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDCset_APAvoicecontrol::ArenaDtor(void* object) {
  PB_EDCset_APAvoicecontrol* _this = reinterpret_cast< PB_EDCset_APAvoicecontrol* >(object);
  (void)_this;
}
void PB_EDCset_APAvoicecontrol::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDCset_APAvoicecontrol::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDCset_APAvoicecontrol::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDCset_APAvoicecontrol)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apavoicecontrol_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDCset_APAvoicecontrol::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_APAvoicecontrol = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_apavoicecontrol_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDCset_APAvoicecontrol::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDCset_APAvoicecontrol)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_APAvoicecontrol = 1;
  if (this->_internal_edc_apavoicecontrol() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_apavoicecontrol(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDCset_APAvoicecontrol)
  return target;
}

size_t PB_EDCset_APAvoicecontrol::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDCset_APAvoicecontrol)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_APAvoicecontrol = 1;
  if (this->_internal_edc_apavoicecontrol() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_apavoicecontrol());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDCset_APAvoicecontrol::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDCset_APAvoicecontrol::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDCset_APAvoicecontrol::GetClassData() const { return &_class_data_; }

void PB_EDCset_APAvoicecontrol::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDCset_APAvoicecontrol *>(to)->MergeFrom(
      static_cast<const PB_EDCset_APAvoicecontrol &>(from));
}


void PB_EDCset_APAvoicecontrol::MergeFrom(const PB_EDCset_APAvoicecontrol& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDCset_APAvoicecontrol)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_apavoicecontrol() != 0) {
    _internal_set_edc_apavoicecontrol(from._internal_edc_apavoicecontrol());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDCset_APAvoicecontrol::CopyFrom(const PB_EDCset_APAvoicecontrol& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDCset_APAvoicecontrol)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDCset_APAvoicecontrol::IsInitialized() const {
  return true;
}

void PB_EDCset_APAvoicecontrol::InternalSwap(PB_EDCset_APAvoicecontrol* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_apavoicecontrol_, other->edc_apavoicecontrol_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDCset_APAvoicecontrol::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[113]);
}

// ===================================================================

class PB_RMAset_APP_MainScreenOperate::_Internal {
 public:
};

PB_RMAset_APP_MainScreenOperate::PB_RMAset_APP_MainScreenOperate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_RMAset_APP_MainScreenOperate)
}
PB_RMAset_APP_MainScreenOperate::PB_RMAset_APP_MainScreenOperate(const PB_RMAset_APP_MainScreenOperate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rma_app_mainscreenoperate_ = from.rma_app_mainscreenoperate_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_RMAset_APP_MainScreenOperate)
}

inline void PB_RMAset_APP_MainScreenOperate::SharedCtor() {
rma_app_mainscreenoperate_ = 0u;
}

PB_RMAset_APP_MainScreenOperate::~PB_RMAset_APP_MainScreenOperate() {
  // @@protoc_insertion_point(destructor:Soa.PB_RMAset_APP_MainScreenOperate)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_RMAset_APP_MainScreenOperate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_RMAset_APP_MainScreenOperate::ArenaDtor(void* object) {
  PB_RMAset_APP_MainScreenOperate* _this = reinterpret_cast< PB_RMAset_APP_MainScreenOperate* >(object);
  (void)_this;
}
void PB_RMAset_APP_MainScreenOperate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_RMAset_APP_MainScreenOperate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_RMAset_APP_MainScreenOperate::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_RMAset_APP_MainScreenOperate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rma_app_mainscreenoperate_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_RMAset_APP_MainScreenOperate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 RMA_APP_MainScreenOperate = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          rma_app_mainscreenoperate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_RMAset_APP_MainScreenOperate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_RMAset_APP_MainScreenOperate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 RMA_APP_MainScreenOperate = 1;
  if (this->_internal_rma_app_mainscreenoperate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_rma_app_mainscreenoperate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_RMAset_APP_MainScreenOperate)
  return target;
}

size_t PB_RMAset_APP_MainScreenOperate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_RMAset_APP_MainScreenOperate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 RMA_APP_MainScreenOperate = 1;
  if (this->_internal_rma_app_mainscreenoperate() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rma_app_mainscreenoperate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_RMAset_APP_MainScreenOperate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_RMAset_APP_MainScreenOperate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_RMAset_APP_MainScreenOperate::GetClassData() const { return &_class_data_; }

void PB_RMAset_APP_MainScreenOperate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_RMAset_APP_MainScreenOperate *>(to)->MergeFrom(
      static_cast<const PB_RMAset_APP_MainScreenOperate &>(from));
}


void PB_RMAset_APP_MainScreenOperate::MergeFrom(const PB_RMAset_APP_MainScreenOperate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_RMAset_APP_MainScreenOperate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_rma_app_mainscreenoperate() != 0) {
    _internal_set_rma_app_mainscreenoperate(from._internal_rma_app_mainscreenoperate());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_RMAset_APP_MainScreenOperate::CopyFrom(const PB_RMAset_APP_MainScreenOperate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_RMAset_APP_MainScreenOperate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RMAset_APP_MainScreenOperate::IsInitialized() const {
  return true;
}

void PB_RMAset_APP_MainScreenOperate::InternalSwap(PB_RMAset_APP_MainScreenOperate* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(rma_app_mainscreenoperate_, other->rma_app_mainscreenoperate_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_RMAset_APP_MainScreenOperate::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[114]);
}

// ===================================================================

class PB_DDSData_Msg::_Internal {
 public:
};

PB_DDSData_Msg::PB_DDSData_Msg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  payload_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_DDSData_Msg)
}
PB_DDSData_Msg::PB_DDSData_Msg(const PB_DDSData_Msg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      payload_(from.payload_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_topic().empty()) {
    topic_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_topic(), 
      GetArenaForAllocation());
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_DDSData_Msg)
}

inline void PB_DDSData_Msg::SharedCtor() {
topic_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  topic_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
timestamp_ = 0;
}

PB_DDSData_Msg::~PB_DDSData_Msg() {
  // @@protoc_insertion_point(destructor:Soa.PB_DDSData_Msg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_DDSData_Msg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  topic_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PB_DDSData_Msg::ArenaDtor(void* object) {
  PB_DDSData_Msg* _this = reinterpret_cast< PB_DDSData_Msg* >(object);
  (void)_this;
}
void PB_DDSData_Msg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_DDSData_Msg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_DDSData_Msg::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_DDSData_Msg)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payload_.Clear();
  topic_.ClearToEmpty();
  timestamp_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_DDSData_Msg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes topic = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_topic();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 payload = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_payload(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 24) {
          _internal_add_payload(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_DDSData_Msg::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_DDSData_Msg)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes topic = 1;
  if (!this->_internal_topic().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_topic(), target);
  }

  // double timestamp = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_timestamp = this->_internal_timestamp();
  uint64_t raw_timestamp;
  memcpy(&raw_timestamp, &tmp_timestamp, sizeof(tmp_timestamp));
  if (raw_timestamp != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_timestamp(), target);
  }

  // repeated uint32 payload = 3;
  {
    int byte_size = _payload_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          3, _internal_payload(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_DDSData_Msg)
  return target;
}

size_t PB_DDSData_Msg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_DDSData_Msg)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 payload = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->payload_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _payload_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bytes topic = 1;
  if (!this->_internal_topic().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_topic());
  }

  // double timestamp = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_timestamp = this->_internal_timestamp();
  uint64_t raw_timestamp;
  memcpy(&raw_timestamp, &tmp_timestamp, sizeof(tmp_timestamp));
  if (raw_timestamp != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_DDSData_Msg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_DDSData_Msg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_DDSData_Msg::GetClassData() const { return &_class_data_; }

void PB_DDSData_Msg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_DDSData_Msg *>(to)->MergeFrom(
      static_cast<const PB_DDSData_Msg &>(from));
}


void PB_DDSData_Msg::MergeFrom(const PB_DDSData_Msg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_DDSData_Msg)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  payload_.MergeFrom(from.payload_);
  if (!from._internal_topic().empty()) {
    _internal_set_topic(from._internal_topic());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_timestamp = from._internal_timestamp();
  uint64_t raw_timestamp;
  memcpy(&raw_timestamp, &tmp_timestamp, sizeof(tmp_timestamp));
  if (raw_timestamp != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_DDSData_Msg::CopyFrom(const PB_DDSData_Msg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_DDSData_Msg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_DDSData_Msg::IsInitialized() const {
  return true;
}

void PB_DDSData_Msg::InternalSwap(PB_DDSData_Msg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  payload_.InternalSwap(&other->payload_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &topic_, lhs_arena,
      &other->topic_, rhs_arena
  );
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_DDSData_Msg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[115]);
}

// ===================================================================

class PB_GpsTime_Struct::_Internal {
 public:
};

PB_GpsTime_Struct::PB_GpsTime_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  gpstime_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_GpsTime_Struct)
}
PB_GpsTime_Struct::PB_GpsTime_Struct(const PB_GpsTime_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      gpstime_(from.gpstime_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_GpsTime_Struct)
}

inline void PB_GpsTime_Struct::SharedCtor() {
}

PB_GpsTime_Struct::~PB_GpsTime_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_GpsTime_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_GpsTime_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_GpsTime_Struct::ArenaDtor(void* object) {
  PB_GpsTime_Struct* _this = reinterpret_cast< PB_GpsTime_Struct* >(object);
  (void)_this;
}
void PB_GpsTime_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_GpsTime_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_GpsTime_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_GpsTime_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gpstime_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_GpsTime_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 GpsTime = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_gpstime(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_gpstime(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_GpsTime_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_GpsTime_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 GpsTime = 1;
  {
    int byte_size = _gpstime_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_gpstime(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_GpsTime_Struct)
  return target;
}

size_t PB_GpsTime_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_GpsTime_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 GpsTime = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->gpstime_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _gpstime_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_GpsTime_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_GpsTime_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_GpsTime_Struct::GetClassData() const { return &_class_data_; }

void PB_GpsTime_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_GpsTime_Struct *>(to)->MergeFrom(
      static_cast<const PB_GpsTime_Struct &>(from));
}


void PB_GpsTime_Struct::MergeFrom(const PB_GpsTime_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_GpsTime_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  gpstime_.MergeFrom(from.gpstime_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_GpsTime_Struct::CopyFrom(const PB_GpsTime_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_GpsTime_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_GpsTime_Struct::IsInitialized() const {
  return true;
}

void PB_GpsTime_Struct::InternalSwap(PB_GpsTime_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  gpstime_.InternalSwap(&other->gpstime_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_GpsTime_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[116]);
}

// ===================================================================

class PB_EDC_APAVoiceCtrlData::_Internal {
 public:
};

PB_EDC_APAVoiceCtrlData::PB_EDC_APAVoiceCtrlData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_APAVoiceCtrlData)
}
PB_EDC_APAVoiceCtrlData::PB_EDC_APAVoiceCtrlData(const PB_EDC_APAVoiceCtrlData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_apavoicectrl_ = from.edc_apavoicectrl_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_APAVoiceCtrlData)
}

inline void PB_EDC_APAVoiceCtrlData::SharedCtor() {
edc_apavoicectrl_ = 0u;
}

PB_EDC_APAVoiceCtrlData::~PB_EDC_APAVoiceCtrlData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_APAVoiceCtrlData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_APAVoiceCtrlData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_APAVoiceCtrlData::ArenaDtor(void* object) {
  PB_EDC_APAVoiceCtrlData* _this = reinterpret_cast< PB_EDC_APAVoiceCtrlData* >(object);
  (void)_this;
}
void PB_EDC_APAVoiceCtrlData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_APAVoiceCtrlData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_APAVoiceCtrlData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_APAVoiceCtrlData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apavoicectrl_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_APAVoiceCtrlData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_APAVoiceCtrl = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_apavoicectrl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_APAVoiceCtrlData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_APAVoiceCtrlData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_APAVoiceCtrl = 1;
  if (this->_internal_edc_apavoicectrl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_apavoicectrl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_APAVoiceCtrlData)
  return target;
}

size_t PB_EDC_APAVoiceCtrlData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_APAVoiceCtrlData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_APAVoiceCtrl = 1;
  if (this->_internal_edc_apavoicectrl() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_apavoicectrl());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_APAVoiceCtrlData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_APAVoiceCtrlData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_APAVoiceCtrlData::GetClassData() const { return &_class_data_; }

void PB_EDC_APAVoiceCtrlData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_APAVoiceCtrlData *>(to)->MergeFrom(
      static_cast<const PB_EDC_APAVoiceCtrlData &>(from));
}


void PB_EDC_APAVoiceCtrlData::MergeFrom(const PB_EDC_APAVoiceCtrlData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_APAVoiceCtrlData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_apavoicectrl() != 0) {
    _internal_set_edc_apavoicectrl(from._internal_edc_apavoicectrl());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_APAVoiceCtrlData::CopyFrom(const PB_EDC_APAVoiceCtrlData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_APAVoiceCtrlData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_APAVoiceCtrlData::IsInitialized() const {
  return true;
}

void PB_EDC_APAVoiceCtrlData::InternalSwap(PB_EDC_APAVoiceCtrlData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_apavoicectrl_, other->edc_apavoicectrl_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_APAVoiceCtrlData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[117]);
}

// ===================================================================

class PB_HUset_CuriseMode::_Internal {
 public:
};

PB_HUset_CuriseMode::PB_HUset_CuriseMode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_CuriseMode)
}
PB_HUset_CuriseMode::PB_HUset_CuriseMode(const PB_HUset_CuriseMode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_curisemode_ = from.hu_curisemode_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_CuriseMode)
}

inline void PB_HUset_CuriseMode::SharedCtor() {
hu_curisemode_ = 0u;
}

PB_HUset_CuriseMode::~PB_HUset_CuriseMode() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_CuriseMode)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_CuriseMode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_CuriseMode::ArenaDtor(void* object) {
  PB_HUset_CuriseMode* _this = reinterpret_cast< PB_HUset_CuriseMode* >(object);
  (void)_this;
}
void PB_HUset_CuriseMode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_CuriseMode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_CuriseMode::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_CuriseMode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_curisemode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_CuriseMode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_CuriseMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_curisemode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_CuriseMode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_CuriseMode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_CuriseMode = 1;
  if (this->_internal_hu_curisemode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_curisemode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_CuriseMode)
  return target;
}

size_t PB_HUset_CuriseMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_CuriseMode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_CuriseMode = 1;
  if (this->_internal_hu_curisemode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_curisemode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_CuriseMode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_CuriseMode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_CuriseMode::GetClassData() const { return &_class_data_; }

void PB_HUset_CuriseMode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_CuriseMode *>(to)->MergeFrom(
      static_cast<const PB_HUset_CuriseMode &>(from));
}


void PB_HUset_CuriseMode::MergeFrom(const PB_HUset_CuriseMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_CuriseMode)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_curisemode() != 0) {
    _internal_set_hu_curisemode(from._internal_hu_curisemode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_CuriseMode::CopyFrom(const PB_HUset_CuriseMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_CuriseMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_CuriseMode::IsInitialized() const {
  return true;
}

void PB_HUset_CuriseMode::InternalSwap(PB_HUset_CuriseMode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_curisemode_, other->hu_curisemode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_CuriseMode::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[118]);
}

// ===================================================================

class PB_APAFunctionReq::_Internal {
 public:
};

PB_APAFunctionReq::PB_APAFunctionReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_APAFunctionReq)
}
PB_APAFunctionReq::PB_APAFunctionReq(const PB_APAFunctionReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  apafunction_ = from.apafunction_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_APAFunctionReq)
}

inline void PB_APAFunctionReq::SharedCtor() {
apafunction_ = 0u;
}

PB_APAFunctionReq::~PB_APAFunctionReq() {
  // @@protoc_insertion_point(destructor:Soa.PB_APAFunctionReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_APAFunctionReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_APAFunctionReq::ArenaDtor(void* object) {
  PB_APAFunctionReq* _this = reinterpret_cast< PB_APAFunctionReq* >(object);
  (void)_this;
}
void PB_APAFunctionReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_APAFunctionReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_APAFunctionReq::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_APAFunctionReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apafunction_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_APAFunctionReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 APAFunction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          apafunction_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_APAFunctionReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_APAFunctionReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 APAFunction = 1;
  if (this->_internal_apafunction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_apafunction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_APAFunctionReq)
  return target;
}

size_t PB_APAFunctionReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_APAFunctionReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 APAFunction = 1;
  if (this->_internal_apafunction() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apafunction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_APAFunctionReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_APAFunctionReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_APAFunctionReq::GetClassData() const { return &_class_data_; }

void PB_APAFunctionReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_APAFunctionReq *>(to)->MergeFrom(
      static_cast<const PB_APAFunctionReq &>(from));
}


void PB_APAFunctionReq::MergeFrom(const PB_APAFunctionReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_APAFunctionReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_apafunction() != 0) {
    _internal_set_apafunction(from._internal_apafunction());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_APAFunctionReq::CopyFrom(const PB_APAFunctionReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_APAFunctionReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_APAFunctionReq::IsInitialized() const {
  return true;
}

void PB_APAFunctionReq::InternalSwap(PB_APAFunctionReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(apafunction_, other->apafunction_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_APAFunctionReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[119]);
}

// ===================================================================

class PB_HUset_VC_CruiseSetDistance::_Internal {
 public:
};

PB_HUset_VC_CruiseSetDistance::PB_HUset_VC_CruiseSetDistance(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_VC_CruiseSetDistance)
}
PB_HUset_VC_CruiseSetDistance::PB_HUset_VC_CruiseSetDistance(const PB_HUset_VC_CruiseSetDistance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_vc_cruisesetdistance_ = from.hu_vc_cruisesetdistance_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_VC_CruiseSetDistance)
}

inline void PB_HUset_VC_CruiseSetDistance::SharedCtor() {
hu_vc_cruisesetdistance_ = 0u;
}

PB_HUset_VC_CruiseSetDistance::~PB_HUset_VC_CruiseSetDistance() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_VC_CruiseSetDistance)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_VC_CruiseSetDistance::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_VC_CruiseSetDistance::ArenaDtor(void* object) {
  PB_HUset_VC_CruiseSetDistance* _this = reinterpret_cast< PB_HUset_VC_CruiseSetDistance* >(object);
  (void)_this;
}
void PB_HUset_VC_CruiseSetDistance::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_VC_CruiseSetDistance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_VC_CruiseSetDistance::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_VC_CruiseSetDistance)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_vc_cruisesetdistance_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_VC_CruiseSetDistance::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_VC_CruiseSetDistance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_vc_cruisesetdistance_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_VC_CruiseSetDistance::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_VC_CruiseSetDistance)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_VC_CruiseSetDistance = 1;
  if (this->_internal_hu_vc_cruisesetdistance() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_vc_cruisesetdistance(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_VC_CruiseSetDistance)
  return target;
}

size_t PB_HUset_VC_CruiseSetDistance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_VC_CruiseSetDistance)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_VC_CruiseSetDistance = 1;
  if (this->_internal_hu_vc_cruisesetdistance() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_vc_cruisesetdistance());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_VC_CruiseSetDistance::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_VC_CruiseSetDistance::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_VC_CruiseSetDistance::GetClassData() const { return &_class_data_; }

void PB_HUset_VC_CruiseSetDistance::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_VC_CruiseSetDistance *>(to)->MergeFrom(
      static_cast<const PB_HUset_VC_CruiseSetDistance &>(from));
}


void PB_HUset_VC_CruiseSetDistance::MergeFrom(const PB_HUset_VC_CruiseSetDistance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_VC_CruiseSetDistance)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_vc_cruisesetdistance() != 0) {
    _internal_set_hu_vc_cruisesetdistance(from._internal_hu_vc_cruisesetdistance());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_VC_CruiseSetDistance::CopyFrom(const PB_HUset_VC_CruiseSetDistance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_VC_CruiseSetDistance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_VC_CruiseSetDistance::IsInitialized() const {
  return true;
}

void PB_HUset_VC_CruiseSetDistance::InternalSwap(PB_HUset_VC_CruiseSetDistance* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_vc_cruisesetdistance_, other->hu_vc_cruisesetdistance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_VC_CruiseSetDistance::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[120]);
}

// ===================================================================

class PB_EDC_RPAVoiceCtrlData::_Internal {
 public:
};

PB_EDC_RPAVoiceCtrlData::PB_EDC_RPAVoiceCtrlData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_RPAVoiceCtrlData)
}
PB_EDC_RPAVoiceCtrlData::PB_EDC_RPAVoiceCtrlData(const PB_EDC_RPAVoiceCtrlData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_rpavoicectrl_ = from.edc_rpavoicectrl_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_RPAVoiceCtrlData)
}

inline void PB_EDC_RPAVoiceCtrlData::SharedCtor() {
edc_rpavoicectrl_ = 0u;
}

PB_EDC_RPAVoiceCtrlData::~PB_EDC_RPAVoiceCtrlData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_RPAVoiceCtrlData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_RPAVoiceCtrlData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_RPAVoiceCtrlData::ArenaDtor(void* object) {
  PB_EDC_RPAVoiceCtrlData* _this = reinterpret_cast< PB_EDC_RPAVoiceCtrlData* >(object);
  (void)_this;
}
void PB_EDC_RPAVoiceCtrlData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_RPAVoiceCtrlData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_RPAVoiceCtrlData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_RPAVoiceCtrlData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_rpavoicectrl_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_RPAVoiceCtrlData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_RPAVoiceCtrl = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_rpavoicectrl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_RPAVoiceCtrlData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_RPAVoiceCtrlData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_RPAVoiceCtrl = 1;
  if (this->_internal_edc_rpavoicectrl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_rpavoicectrl(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_RPAVoiceCtrlData)
  return target;
}

size_t PB_EDC_RPAVoiceCtrlData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_RPAVoiceCtrlData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_RPAVoiceCtrl = 1;
  if (this->_internal_edc_rpavoicectrl() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_rpavoicectrl());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_RPAVoiceCtrlData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_RPAVoiceCtrlData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_RPAVoiceCtrlData::GetClassData() const { return &_class_data_; }

void PB_EDC_RPAVoiceCtrlData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_RPAVoiceCtrlData *>(to)->MergeFrom(
      static_cast<const PB_EDC_RPAVoiceCtrlData &>(from));
}


void PB_EDC_RPAVoiceCtrlData::MergeFrom(const PB_EDC_RPAVoiceCtrlData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_RPAVoiceCtrlData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_rpavoicectrl() != 0) {
    _internal_set_edc_rpavoicectrl(from._internal_edc_rpavoicectrl());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_RPAVoiceCtrlData::CopyFrom(const PB_EDC_RPAVoiceCtrlData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_RPAVoiceCtrlData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_RPAVoiceCtrlData::IsInitialized() const {
  return true;
}

void PB_EDC_RPAVoiceCtrlData::InternalSwap(PB_EDC_RPAVoiceCtrlData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_rpavoicectrl_, other->edc_rpavoicectrl_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_RPAVoiceCtrlData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[121]);
}

// ===================================================================

class PB_HUset_ADACCStyle::_Internal {
 public:
};

PB_HUset_ADACCStyle::PB_HUset_ADACCStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_ADACCStyle)
}
PB_HUset_ADACCStyle::PB_HUset_ADACCStyle(const PB_HUset_ADACCStyle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_adaccstyle_ = from.hu_adaccstyle_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_ADACCStyle)
}

inline void PB_HUset_ADACCStyle::SharedCtor() {
hu_adaccstyle_ = 0u;
}

PB_HUset_ADACCStyle::~PB_HUset_ADACCStyle() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_ADACCStyle)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_ADACCStyle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_ADACCStyle::ArenaDtor(void* object) {
  PB_HUset_ADACCStyle* _this = reinterpret_cast< PB_HUset_ADACCStyle* >(object);
  (void)_this;
}
void PB_HUset_ADACCStyle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_ADACCStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_ADACCStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_ADACCStyle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_adaccstyle_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_ADACCStyle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_ADACCStyle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_adaccstyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_ADACCStyle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_ADACCStyle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_ADACCStyle = 1;
  if (this->_internal_hu_adaccstyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_adaccstyle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_ADACCStyle)
  return target;
}

size_t PB_HUset_ADACCStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_ADACCStyle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_ADACCStyle = 1;
  if (this->_internal_hu_adaccstyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_adaccstyle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_ADACCStyle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_ADACCStyle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_ADACCStyle::GetClassData() const { return &_class_data_; }

void PB_HUset_ADACCStyle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_ADACCStyle *>(to)->MergeFrom(
      static_cast<const PB_HUset_ADACCStyle &>(from));
}


void PB_HUset_ADACCStyle::MergeFrom(const PB_HUset_ADACCStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_ADACCStyle)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_adaccstyle() != 0) {
    _internal_set_hu_adaccstyle(from._internal_hu_adaccstyle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_ADACCStyle::CopyFrom(const PB_HUset_ADACCStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_ADACCStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_ADACCStyle::IsInitialized() const {
  return true;
}

void PB_HUset_ADACCStyle::InternalSwap(PB_HUset_ADACCStyle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_adaccstyle_, other->hu_adaccstyle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_ADACCStyle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[122]);
}

// ===================================================================

class PB_APAFunctionRes::_Internal {
 public:
};

PB_APAFunctionRes::PB_APAFunctionRes(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_APAFunctionRes)
}
PB_APAFunctionRes::PB_APAFunctionRes(const PB_APAFunctionRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  apafunction_ = from.apafunction_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_APAFunctionRes)
}

inline void PB_APAFunctionRes::SharedCtor() {
apafunction_ = 0u;
}

PB_APAFunctionRes::~PB_APAFunctionRes() {
  // @@protoc_insertion_point(destructor:Soa.PB_APAFunctionRes)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_APAFunctionRes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_APAFunctionRes::ArenaDtor(void* object) {
  PB_APAFunctionRes* _this = reinterpret_cast< PB_APAFunctionRes* >(object);
  (void)_this;
}
void PB_APAFunctionRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_APAFunctionRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_APAFunctionRes::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_APAFunctionRes)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  apafunction_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_APAFunctionRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 APAFunction = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          apafunction_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_APAFunctionRes::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_APAFunctionRes)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 APAFunction = 1;
  if (this->_internal_apafunction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_apafunction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_APAFunctionRes)
  return target;
}

size_t PB_APAFunctionRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_APAFunctionRes)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 APAFunction = 1;
  if (this->_internal_apafunction() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_apafunction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_APAFunctionRes::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_APAFunctionRes::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_APAFunctionRes::GetClassData() const { return &_class_data_; }

void PB_APAFunctionRes::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_APAFunctionRes *>(to)->MergeFrom(
      static_cast<const PB_APAFunctionRes &>(from));
}


void PB_APAFunctionRes::MergeFrom(const PB_APAFunctionRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_APAFunctionRes)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_apafunction() != 0) {
    _internal_set_apafunction(from._internal_apafunction());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_APAFunctionRes::CopyFrom(const PB_APAFunctionRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_APAFunctionRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_APAFunctionRes::IsInitialized() const {
  return true;
}

void PB_APAFunctionRes::InternalSwap(PB_APAFunctionRes* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(apafunction_, other->apafunction_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_APAFunctionRes::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[123]);
}

// ===================================================================

class PB_HiBeamActCtrlInfo::_Internal {
 public:
};

PB_HiBeamActCtrlInfo::PB_HiBeamActCtrlInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HiBeamActCtrlInfo)
}
PB_HiBeamActCtrlInfo::PB_HiBeamActCtrlInfo(const PB_HiBeamActCtrlInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_actctrlst_, &from.le_actctrlst_,
    static_cast<size_t>(reinterpret_cast<char*>(&ri_actctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HiBeamActCtrlInfo)
}

inline void PB_HiBeamActCtrlInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_actctrlst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ri_actctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
}

PB_HiBeamActCtrlInfo::~PB_HiBeamActCtrlInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_HiBeamActCtrlInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HiBeamActCtrlInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HiBeamActCtrlInfo::ArenaDtor(void* object) {
  PB_HiBeamActCtrlInfo* _this = reinterpret_cast< PB_HiBeamActCtrlInfo* >(object);
  (void)_this;
}
void PB_HiBeamActCtrlInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HiBeamActCtrlInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HiBeamActCtrlInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HiBeamActCtrlInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_actctrlst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ri_actctrlst_) -
      reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HiBeamActCtrlInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_ActCtrlSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_ActCtrlSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HiBeamActCtrlInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HiBeamActCtrlInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_actctrlst(), target);
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_actctrlst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HiBeamActCtrlInfo)
  return target;
}

size_t PB_HiBeamActCtrlInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HiBeamActCtrlInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_actctrlst());
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_actctrlst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HiBeamActCtrlInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HiBeamActCtrlInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HiBeamActCtrlInfo::GetClassData() const { return &_class_data_; }

void PB_HiBeamActCtrlInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HiBeamActCtrlInfo *>(to)->MergeFrom(
      static_cast<const PB_HiBeamActCtrlInfo &>(from));
}


void PB_HiBeamActCtrlInfo::MergeFrom(const PB_HiBeamActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HiBeamActCtrlInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_actctrlst() != 0) {
    _internal_set_le_actctrlst(from._internal_le_actctrlst());
  }
  if (from._internal_ri_actctrlst() != 0) {
    _internal_set_ri_actctrlst(from._internal_ri_actctrlst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HiBeamActCtrlInfo::CopyFrom(const PB_HiBeamActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HiBeamActCtrlInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HiBeamActCtrlInfo::IsInitialized() const {
  return true;
}

void PB_HiBeamActCtrlInfo::InternalSwap(PB_HiBeamActCtrlInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_HiBeamActCtrlInfo, ri_actctrlst_)
      + sizeof(PB_HiBeamActCtrlInfo::ri_actctrlst_)
      - PROTOBUF_FIELD_OFFSET(PB_HiBeamActCtrlInfo, le_actctrlst_)>(
          reinterpret_cast<char*>(&le_actctrlst_),
          reinterpret_cast<char*>(&other->le_actctrlst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HiBeamActCtrlInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[124]);
}

// ===================================================================

class PB_TurnLiActCtrlInfo::_Internal {
 public:
};

PB_TurnLiActCtrlInfo::PB_TurnLiActCtrlInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TurnLiActCtrlInfo)
}
PB_TurnLiActCtrlInfo::PB_TurnLiActCtrlInfo(const PB_TurnLiActCtrlInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&fl_actctrlst_, &from.fl_actctrlst_,
    static_cast<size_t>(reinterpret_cast<char*>(&rr_actctrlst_) -
    reinterpret_cast<char*>(&fl_actctrlst_)) + sizeof(rr_actctrlst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TurnLiActCtrlInfo)
}

inline void PB_TurnLiActCtrlInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&fl_actctrlst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&rr_actctrlst_) -
    reinterpret_cast<char*>(&fl_actctrlst_)) + sizeof(rr_actctrlst_));
}

PB_TurnLiActCtrlInfo::~PB_TurnLiActCtrlInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_TurnLiActCtrlInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TurnLiActCtrlInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TurnLiActCtrlInfo::ArenaDtor(void* object) {
  PB_TurnLiActCtrlInfo* _this = reinterpret_cast< PB_TurnLiActCtrlInfo* >(object);
  (void)_this;
}
void PB_TurnLiActCtrlInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TurnLiActCtrlInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TurnLiActCtrlInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TurnLiActCtrlInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&fl_actctrlst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rr_actctrlst_) -
      reinterpret_cast<char*>(&fl_actctrlst_)) + sizeof(rr_actctrlst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TurnLiActCtrlInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FL_ActCtrlSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          fl_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 FR_ActCtrlSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          fr_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RL_ActCtrlSt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          rl_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RR_ActCtrlSt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          rr_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TurnLiActCtrlInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TurnLiActCtrlInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FL_ActCtrlSt = 1;
  if (this->_internal_fl_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_fl_actctrlst(), target);
  }

  // uint32 FR_ActCtrlSt = 2;
  if (this->_internal_fr_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_fr_actctrlst(), target);
  }

  // uint32 RL_ActCtrlSt = 3;
  if (this->_internal_rl_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_rl_actctrlst(), target);
  }

  // uint32 RR_ActCtrlSt = 4;
  if (this->_internal_rr_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_rr_actctrlst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TurnLiActCtrlInfo)
  return target;
}

size_t PB_TurnLiActCtrlInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TurnLiActCtrlInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FL_ActCtrlSt = 1;
  if (this->_internal_fl_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_fl_actctrlst());
  }

  // uint32 FR_ActCtrlSt = 2;
  if (this->_internal_fr_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_fr_actctrlst());
  }

  // uint32 RL_ActCtrlSt = 3;
  if (this->_internal_rl_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rl_actctrlst());
  }

  // uint32 RR_ActCtrlSt = 4;
  if (this->_internal_rr_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rr_actctrlst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TurnLiActCtrlInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TurnLiActCtrlInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TurnLiActCtrlInfo::GetClassData() const { return &_class_data_; }

void PB_TurnLiActCtrlInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TurnLiActCtrlInfo *>(to)->MergeFrom(
      static_cast<const PB_TurnLiActCtrlInfo &>(from));
}


void PB_TurnLiActCtrlInfo::MergeFrom(const PB_TurnLiActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TurnLiActCtrlInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_fl_actctrlst() != 0) {
    _internal_set_fl_actctrlst(from._internal_fl_actctrlst());
  }
  if (from._internal_fr_actctrlst() != 0) {
    _internal_set_fr_actctrlst(from._internal_fr_actctrlst());
  }
  if (from._internal_rl_actctrlst() != 0) {
    _internal_set_rl_actctrlst(from._internal_rl_actctrlst());
  }
  if (from._internal_rr_actctrlst() != 0) {
    _internal_set_rr_actctrlst(from._internal_rr_actctrlst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TurnLiActCtrlInfo::CopyFrom(const PB_TurnLiActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TurnLiActCtrlInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TurnLiActCtrlInfo::IsInitialized() const {
  return true;
}

void PB_TurnLiActCtrlInfo::InternalSwap(PB_TurnLiActCtrlInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_TurnLiActCtrlInfo, rr_actctrlst_)
      + sizeof(PB_TurnLiActCtrlInfo::rr_actctrlst_)
      - PROTOBUF_FIELD_OFFSET(PB_TurnLiActCtrlInfo, fl_actctrlst_)>(
          reinterpret_cast<char*>(&fl_actctrlst_),
          reinterpret_cast<char*>(&other->fl_actctrlst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TurnLiActCtrlInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[125]);
}

// ===================================================================

class PB_SeatPosInfo::_Internal {
 public:
};

PB_SeatPosInfo::PB_SeatPosInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_SeatPosInfo)
}
PB_SeatPosInfo::PB_SeatPosInfo(const PB_SeatPosInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&poscmdreqfr_, &from.poscmdreqfr_,
    static_cast<size_t>(reinterpret_cast<char*>(&ntctemp_) -
    reinterpret_cast<char*>(&poscmdreqfr_)) + sizeof(ntctemp_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_SeatPosInfo)
}

inline void PB_SeatPosInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&poscmdreqfr_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ntctemp_) -
    reinterpret_cast<char*>(&poscmdreqfr_)) + sizeof(ntctemp_));
}

PB_SeatPosInfo::~PB_SeatPosInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_SeatPosInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_SeatPosInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_SeatPosInfo::ArenaDtor(void* object) {
  PB_SeatPosInfo* _this = reinterpret_cast< PB_SeatPosInfo* >(object);
  (void)_this;
}
void PB_SeatPosInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_SeatPosInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_SeatPosInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_SeatPosInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&poscmdreqfr_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ntctemp_) -
      reinterpret_cast<char*>(&poscmdreqfr_)) + sizeof(ntctemp_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_SeatPosInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 PosCmdReqFR = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          poscmdreqfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PosCmdReqHei = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          poscmdreqhei_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PosCmdReqBr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          poscmdreqbr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PosCmdReqCus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          poscmdreqcus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PosCmdReqLegFR = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          poscmdreqlegfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PosCmdReqLegHei = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          poscmdreqleghei_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisPosFR = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          axisposfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisPosHei = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          axisposhei_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisPosBr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          axisposbr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisPosCus = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          axisposcus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisPosLegFR = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          axisposlegfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisPosLegHei = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          axisposleghei_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisActiveMovigStsFR = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          axisactivemovigstsfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisActiveMovigStsHei = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          axisactivemovigstshei_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisActiveMovigStsBr = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          axisactivemovigstsbr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisActiveMovigStsCus = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          axisactivemovigstscus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisActiveMovigStsLegFR = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          axisactivemovigstslegfr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AxisActiveMovigStsLegHei = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 144)) {
          axisactivemovigstsleghei_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 NTCTemp = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 152)) {
          ntctemp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_SeatPosInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_SeatPosInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PosCmdReqFR = 1;
  if (this->_internal_poscmdreqfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_poscmdreqfr(), target);
  }

  // uint32 PosCmdReqHei = 2;
  if (this->_internal_poscmdreqhei() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_poscmdreqhei(), target);
  }

  // uint32 PosCmdReqBr = 3;
  if (this->_internal_poscmdreqbr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_poscmdreqbr(), target);
  }

  // uint32 PosCmdReqCus = 4;
  if (this->_internal_poscmdreqcus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_poscmdreqcus(), target);
  }

  // uint32 PosCmdReqLegFR = 5;
  if (this->_internal_poscmdreqlegfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_poscmdreqlegfr(), target);
  }

  // uint32 PosCmdReqLegHei = 6;
  if (this->_internal_poscmdreqleghei() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_poscmdreqleghei(), target);
  }

  // uint32 AxisPosFR = 7;
  if (this->_internal_axisposfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_axisposfr(), target);
  }

  // uint32 AxisPosHei = 8;
  if (this->_internal_axisposhei() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_axisposhei(), target);
  }

  // uint32 AxisPosBr = 9;
  if (this->_internal_axisposbr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_axisposbr(), target);
  }

  // uint32 AxisPosCus = 10;
  if (this->_internal_axisposcus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_axisposcus(), target);
  }

  // uint32 AxisPosLegFR = 11;
  if (this->_internal_axisposlegfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_axisposlegfr(), target);
  }

  // uint32 AxisPosLegHei = 12;
  if (this->_internal_axisposleghei() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_axisposleghei(), target);
  }

  // uint32 AxisActiveMovigStsFR = 13;
  if (this->_internal_axisactivemovigstsfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_axisactivemovigstsfr(), target);
  }

  // uint32 AxisActiveMovigStsHei = 14;
  if (this->_internal_axisactivemovigstshei() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_axisactivemovigstshei(), target);
  }

  // uint32 AxisActiveMovigStsBr = 15;
  if (this->_internal_axisactivemovigstsbr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_axisactivemovigstsbr(), target);
  }

  // uint32 AxisActiveMovigStsCus = 16;
  if (this->_internal_axisactivemovigstscus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_axisactivemovigstscus(), target);
  }

  // uint32 AxisActiveMovigStsLegFR = 17;
  if (this->_internal_axisactivemovigstslegfr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(17, this->_internal_axisactivemovigstslegfr(), target);
  }

  // uint32 AxisActiveMovigStsLegHei = 18;
  if (this->_internal_axisactivemovigstsleghei() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(18, this->_internal_axisactivemovigstsleghei(), target);
  }

  // int32 NTCTemp = 19;
  if (this->_internal_ntctemp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(19, this->_internal_ntctemp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_SeatPosInfo)
  return target;
}

size_t PB_SeatPosInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_SeatPosInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 PosCmdReqFR = 1;
  if (this->_internal_poscmdreqfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_poscmdreqfr());
  }

  // uint32 PosCmdReqHei = 2;
  if (this->_internal_poscmdreqhei() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_poscmdreqhei());
  }

  // uint32 PosCmdReqBr = 3;
  if (this->_internal_poscmdreqbr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_poscmdreqbr());
  }

  // uint32 PosCmdReqCus = 4;
  if (this->_internal_poscmdreqcus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_poscmdreqcus());
  }

  // uint32 PosCmdReqLegFR = 5;
  if (this->_internal_poscmdreqlegfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_poscmdreqlegfr());
  }

  // uint32 PosCmdReqLegHei = 6;
  if (this->_internal_poscmdreqleghei() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_poscmdreqleghei());
  }

  // uint32 AxisPosFR = 7;
  if (this->_internal_axisposfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_axisposfr());
  }

  // uint32 AxisPosHei = 8;
  if (this->_internal_axisposhei() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_axisposhei());
  }

  // uint32 AxisPosBr = 9;
  if (this->_internal_axisposbr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_axisposbr());
  }

  // uint32 AxisPosCus = 10;
  if (this->_internal_axisposcus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_axisposcus());
  }

  // uint32 AxisPosLegFR = 11;
  if (this->_internal_axisposlegfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_axisposlegfr());
  }

  // uint32 AxisPosLegHei = 12;
  if (this->_internal_axisposleghei() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_axisposleghei());
  }

  // uint32 AxisActiveMovigStsFR = 13;
  if (this->_internal_axisactivemovigstsfr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_axisactivemovigstsfr());
  }

  // uint32 AxisActiveMovigStsHei = 14;
  if (this->_internal_axisactivemovigstshei() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_axisactivemovigstshei());
  }

  // uint32 AxisActiveMovigStsBr = 15;
  if (this->_internal_axisactivemovigstsbr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_axisactivemovigstsbr());
  }

  // uint32 AxisActiveMovigStsCus = 16;
  if (this->_internal_axisactivemovigstscus() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_axisactivemovigstscus());
  }

  // uint32 AxisActiveMovigStsLegFR = 17;
  if (this->_internal_axisactivemovigstslegfr() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_axisactivemovigstslegfr());
  }

  // uint32 AxisActiveMovigStsLegHei = 18;
  if (this->_internal_axisactivemovigstsleghei() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_axisactivemovigstsleghei());
  }

  // int32 NTCTemp = 19;
  if (this->_internal_ntctemp() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_ntctemp());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_SeatPosInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_SeatPosInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_SeatPosInfo::GetClassData() const { return &_class_data_; }

void PB_SeatPosInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_SeatPosInfo *>(to)->MergeFrom(
      static_cast<const PB_SeatPosInfo &>(from));
}


void PB_SeatPosInfo::MergeFrom(const PB_SeatPosInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_SeatPosInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_poscmdreqfr() != 0) {
    _internal_set_poscmdreqfr(from._internal_poscmdreqfr());
  }
  if (from._internal_poscmdreqhei() != 0) {
    _internal_set_poscmdreqhei(from._internal_poscmdreqhei());
  }
  if (from._internal_poscmdreqbr() != 0) {
    _internal_set_poscmdreqbr(from._internal_poscmdreqbr());
  }
  if (from._internal_poscmdreqcus() != 0) {
    _internal_set_poscmdreqcus(from._internal_poscmdreqcus());
  }
  if (from._internal_poscmdreqlegfr() != 0) {
    _internal_set_poscmdreqlegfr(from._internal_poscmdreqlegfr());
  }
  if (from._internal_poscmdreqleghei() != 0) {
    _internal_set_poscmdreqleghei(from._internal_poscmdreqleghei());
  }
  if (from._internal_axisposfr() != 0) {
    _internal_set_axisposfr(from._internal_axisposfr());
  }
  if (from._internal_axisposhei() != 0) {
    _internal_set_axisposhei(from._internal_axisposhei());
  }
  if (from._internal_axisposbr() != 0) {
    _internal_set_axisposbr(from._internal_axisposbr());
  }
  if (from._internal_axisposcus() != 0) {
    _internal_set_axisposcus(from._internal_axisposcus());
  }
  if (from._internal_axisposlegfr() != 0) {
    _internal_set_axisposlegfr(from._internal_axisposlegfr());
  }
  if (from._internal_axisposleghei() != 0) {
    _internal_set_axisposleghei(from._internal_axisposleghei());
  }
  if (from._internal_axisactivemovigstsfr() != 0) {
    _internal_set_axisactivemovigstsfr(from._internal_axisactivemovigstsfr());
  }
  if (from._internal_axisactivemovigstshei() != 0) {
    _internal_set_axisactivemovigstshei(from._internal_axisactivemovigstshei());
  }
  if (from._internal_axisactivemovigstsbr() != 0) {
    _internal_set_axisactivemovigstsbr(from._internal_axisactivemovigstsbr());
  }
  if (from._internal_axisactivemovigstscus() != 0) {
    _internal_set_axisactivemovigstscus(from._internal_axisactivemovigstscus());
  }
  if (from._internal_axisactivemovigstslegfr() != 0) {
    _internal_set_axisactivemovigstslegfr(from._internal_axisactivemovigstslegfr());
  }
  if (from._internal_axisactivemovigstsleghei() != 0) {
    _internal_set_axisactivemovigstsleghei(from._internal_axisactivemovigstsleghei());
  }
  if (from._internal_ntctemp() != 0) {
    _internal_set_ntctemp(from._internal_ntctemp());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_SeatPosInfo::CopyFrom(const PB_SeatPosInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_SeatPosInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_SeatPosInfo::IsInitialized() const {
  return true;
}

void PB_SeatPosInfo::InternalSwap(PB_SeatPosInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_SeatPosInfo, ntctemp_)
      + sizeof(PB_SeatPosInfo::ntctemp_)
      - PROTOBUF_FIELD_OFFSET(PB_SeatPosInfo, poscmdreqfr_)>(
          reinterpret_cast<char*>(&poscmdreqfr_),
          reinterpret_cast<char*>(&other->poscmdreqfr_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_SeatPosInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[126]);
}

// ===================================================================

class PB_BLEPhyKeyBascInfo::_Internal {
 public:
};

PB_BLEPhyKeyBascInfo::PB_BLEPhyKeyBascInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_BLEPhyKeyBascInfo)
}
PB_BLEPhyKeyBascInfo::PB_BLEPhyKeyBascInfo(const PB_BLEPhyKeyBascInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&keydatacnt_, &from.keydatacnt_,
    static_cast<size_t>(reinterpret_cast<char*>(&insidekeyst_) -
    reinterpret_cast<char*>(&keydatacnt_)) + sizeof(insidekeyst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_BLEPhyKeyBascInfo)
}

inline void PB_BLEPhyKeyBascInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&keydatacnt_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&insidekeyst_) -
    reinterpret_cast<char*>(&keydatacnt_)) + sizeof(insidekeyst_));
}

PB_BLEPhyKeyBascInfo::~PB_BLEPhyKeyBascInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_BLEPhyKeyBascInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_BLEPhyKeyBascInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_BLEPhyKeyBascInfo::ArenaDtor(void* object) {
  PB_BLEPhyKeyBascInfo* _this = reinterpret_cast< PB_BLEPhyKeyBascInfo* >(object);
  (void)_this;
}
void PB_BLEPhyKeyBascInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_BLEPhyKeyBascInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_BLEPhyKeyBascInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_BLEPhyKeyBascInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&keydatacnt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&insidekeyst_) -
      reinterpret_cast<char*>(&keydatacnt_)) + sizeof(insidekeyst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_BLEPhyKeyBascInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 KeyDataCnt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          keydatacnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 KeyStCnt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          keystcnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 BLEPhyKeyPowLFlag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          blephykeypowlflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 BLEPhyKeyChrSt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          blephykeychrst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 BLEPhyKeyPowPer = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          blephykeypowper_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 CompsiteSt = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          compsitest_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 UnLockKeySt = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          unlockkeyst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LockKeySt = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          lockkeyst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 DefKey1St = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          defkey1st_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 DefKey2St = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          defkey2st_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 InsideKeySt = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          insidekeyst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_BLEPhyKeyBascInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_BLEPhyKeyBascInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 KeyDataCnt = 1;
  if (this->_internal_keydatacnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_keydatacnt(), target);
  }

  // uint32 KeyStCnt = 2;
  if (this->_internal_keystcnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_keystcnt(), target);
  }

  // uint32 BLEPhyKeyPowLFlag = 3;
  if (this->_internal_blephykeypowlflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_blephykeypowlflag(), target);
  }

  // uint32 BLEPhyKeyChrSt = 4;
  if (this->_internal_blephykeychrst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_blephykeychrst(), target);
  }

  // uint32 BLEPhyKeyPowPer = 5;
  if (this->_internal_blephykeypowper() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_blephykeypowper(), target);
  }

  // uint32 CompsiteSt = 6;
  if (this->_internal_compsitest() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_compsitest(), target);
  }

  // uint32 UnLockKeySt = 7;
  if (this->_internal_unlockkeyst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_unlockkeyst(), target);
  }

  // uint32 LockKeySt = 8;
  if (this->_internal_lockkeyst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_lockkeyst(), target);
  }

  // uint32 DefKey1St = 9;
  if (this->_internal_defkey1st() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_defkey1st(), target);
  }

  // uint32 DefKey2St = 10;
  if (this->_internal_defkey2st() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_defkey2st(), target);
  }

  // uint32 InsideKeySt = 11;
  if (this->_internal_insidekeyst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_insidekeyst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_BLEPhyKeyBascInfo)
  return target;
}

size_t PB_BLEPhyKeyBascInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_BLEPhyKeyBascInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 KeyDataCnt = 1;
  if (this->_internal_keydatacnt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_keydatacnt());
  }

  // uint32 KeyStCnt = 2;
  if (this->_internal_keystcnt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_keystcnt());
  }

  // uint32 BLEPhyKeyPowLFlag = 3;
  if (this->_internal_blephykeypowlflag() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_blephykeypowlflag());
  }

  // uint32 BLEPhyKeyChrSt = 4;
  if (this->_internal_blephykeychrst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_blephykeychrst());
  }

  // uint32 BLEPhyKeyPowPer = 5;
  if (this->_internal_blephykeypowper() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_blephykeypowper());
  }

  // uint32 CompsiteSt = 6;
  if (this->_internal_compsitest() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_compsitest());
  }

  // uint32 UnLockKeySt = 7;
  if (this->_internal_unlockkeyst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_unlockkeyst());
  }

  // uint32 LockKeySt = 8;
  if (this->_internal_lockkeyst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lockkeyst());
  }

  // uint32 DefKey1St = 9;
  if (this->_internal_defkey1st() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_defkey1st());
  }

  // uint32 DefKey2St = 10;
  if (this->_internal_defkey2st() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_defkey2st());
  }

  // uint32 InsideKeySt = 11;
  if (this->_internal_insidekeyst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_insidekeyst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_BLEPhyKeyBascInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_BLEPhyKeyBascInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_BLEPhyKeyBascInfo::GetClassData() const { return &_class_data_; }

void PB_BLEPhyKeyBascInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_BLEPhyKeyBascInfo *>(to)->MergeFrom(
      static_cast<const PB_BLEPhyKeyBascInfo &>(from));
}


void PB_BLEPhyKeyBascInfo::MergeFrom(const PB_BLEPhyKeyBascInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_BLEPhyKeyBascInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_keydatacnt() != 0) {
    _internal_set_keydatacnt(from._internal_keydatacnt());
  }
  if (from._internal_keystcnt() != 0) {
    _internal_set_keystcnt(from._internal_keystcnt());
  }
  if (from._internal_blephykeypowlflag() != 0) {
    _internal_set_blephykeypowlflag(from._internal_blephykeypowlflag());
  }
  if (from._internal_blephykeychrst() != 0) {
    _internal_set_blephykeychrst(from._internal_blephykeychrst());
  }
  if (from._internal_blephykeypowper() != 0) {
    _internal_set_blephykeypowper(from._internal_blephykeypowper());
  }
  if (from._internal_compsitest() != 0) {
    _internal_set_compsitest(from._internal_compsitest());
  }
  if (from._internal_unlockkeyst() != 0) {
    _internal_set_unlockkeyst(from._internal_unlockkeyst());
  }
  if (from._internal_lockkeyst() != 0) {
    _internal_set_lockkeyst(from._internal_lockkeyst());
  }
  if (from._internal_defkey1st() != 0) {
    _internal_set_defkey1st(from._internal_defkey1st());
  }
  if (from._internal_defkey2st() != 0) {
    _internal_set_defkey2st(from._internal_defkey2st());
  }
  if (from._internal_insidekeyst() != 0) {
    _internal_set_insidekeyst(from._internal_insidekeyst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_BLEPhyKeyBascInfo::CopyFrom(const PB_BLEPhyKeyBascInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_BLEPhyKeyBascInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BLEPhyKeyBascInfo::IsInitialized() const {
  return true;
}

void PB_BLEPhyKeyBascInfo::InternalSwap(PB_BLEPhyKeyBascInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_BLEPhyKeyBascInfo, insidekeyst_)
      + sizeof(PB_BLEPhyKeyBascInfo::insidekeyst_)
      - PROTOBUF_FIELD_OFFSET(PB_BLEPhyKeyBascInfo, keydatacnt_)>(
          reinterpret_cast<char*>(&keydatacnt_),
          reinterpret_cast<char*>(&other->keydatacnt_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_BLEPhyKeyBascInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[127]);
}

// ===================================================================

class PB_TailGateSysSwSt_Struct::_Internal {
 public:
};

PB_TailGateSysSwSt_Struct::PB_TailGateSysSwSt_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  tailgatesysswst_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TailGateSysSwSt_Struct)
}
PB_TailGateSysSwSt_Struct::PB_TailGateSysSwSt_Struct(const PB_TailGateSysSwSt_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tailgatesysswst_(from.tailgatesysswst_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TailGateSysSwSt_Struct)
}

inline void PB_TailGateSysSwSt_Struct::SharedCtor() {
}

PB_TailGateSysSwSt_Struct::~PB_TailGateSysSwSt_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_TailGateSysSwSt_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TailGateSysSwSt_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TailGateSysSwSt_Struct::ArenaDtor(void* object) {
  PB_TailGateSysSwSt_Struct* _this = reinterpret_cast< PB_TailGateSysSwSt_Struct* >(object);
  (void)_this;
}
void PB_TailGateSysSwSt_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TailGateSysSwSt_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TailGateSysSwSt_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TailGateSysSwSt_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tailgatesysswst_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TailGateSysSwSt_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 TailGateSysSwSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_tailgatesysswst(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_tailgatesysswst(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TailGateSysSwSt_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TailGateSysSwSt_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 TailGateSysSwSt = 1;
  {
    int byte_size = _tailgatesysswst_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_tailgatesysswst(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TailGateSysSwSt_Struct)
  return target;
}

size_t PB_TailGateSysSwSt_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TailGateSysSwSt_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 TailGateSysSwSt = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->tailgatesysswst_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _tailgatesysswst_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TailGateSysSwSt_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TailGateSysSwSt_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TailGateSysSwSt_Struct::GetClassData() const { return &_class_data_; }

void PB_TailGateSysSwSt_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TailGateSysSwSt_Struct *>(to)->MergeFrom(
      static_cast<const PB_TailGateSysSwSt_Struct &>(from));
}


void PB_TailGateSysSwSt_Struct::MergeFrom(const PB_TailGateSysSwSt_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TailGateSysSwSt_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  tailgatesysswst_.MergeFrom(from.tailgatesysswst_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TailGateSysSwSt_Struct::CopyFrom(const PB_TailGateSysSwSt_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TailGateSysSwSt_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TailGateSysSwSt_Struct::IsInitialized() const {
  return true;
}

void PB_TailGateSysSwSt_Struct::InternalSwap(PB_TailGateSysSwSt_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  tailgatesysswst_.InternalSwap(&other->tailgatesysswst_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TailGateSysSwSt_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[128]);
}

// ===================================================================

class PB_HUset_BSDLCAOnOff::_Internal {
 public:
};

PB_HUset_BSDLCAOnOff::PB_HUset_BSDLCAOnOff(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_BSDLCAOnOff)
}
PB_HUset_BSDLCAOnOff::PB_HUset_BSDLCAOnOff(const PB_HUset_BSDLCAOnOff& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_bsdlcaonoff_ = from.hu_bsdlcaonoff_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_BSDLCAOnOff)
}

inline void PB_HUset_BSDLCAOnOff::SharedCtor() {
hu_bsdlcaonoff_ = 0u;
}

PB_HUset_BSDLCAOnOff::~PB_HUset_BSDLCAOnOff() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_BSDLCAOnOff)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_BSDLCAOnOff::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_BSDLCAOnOff::ArenaDtor(void* object) {
  PB_HUset_BSDLCAOnOff* _this = reinterpret_cast< PB_HUset_BSDLCAOnOff* >(object);
  (void)_this;
}
void PB_HUset_BSDLCAOnOff::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_BSDLCAOnOff::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_BSDLCAOnOff::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_BSDLCAOnOff)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_bsdlcaonoff_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_BSDLCAOnOff::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_BSDLCAOnOff = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_bsdlcaonoff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_BSDLCAOnOff::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_BSDLCAOnOff)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_BSDLCAOnOff = 1;
  if (this->_internal_hu_bsdlcaonoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_bsdlcaonoff(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_BSDLCAOnOff)
  return target;
}

size_t PB_HUset_BSDLCAOnOff::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_BSDLCAOnOff)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_BSDLCAOnOff = 1;
  if (this->_internal_hu_bsdlcaonoff() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_bsdlcaonoff());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_BSDLCAOnOff::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_BSDLCAOnOff::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_BSDLCAOnOff::GetClassData() const { return &_class_data_; }

void PB_HUset_BSDLCAOnOff::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_BSDLCAOnOff *>(to)->MergeFrom(
      static_cast<const PB_HUset_BSDLCAOnOff &>(from));
}


void PB_HUset_BSDLCAOnOff::MergeFrom(const PB_HUset_BSDLCAOnOff& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_BSDLCAOnOff)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_bsdlcaonoff() != 0) {
    _internal_set_hu_bsdlcaonoff(from._internal_hu_bsdlcaonoff());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_BSDLCAOnOff::CopyFrom(const PB_HUset_BSDLCAOnOff& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_BSDLCAOnOff)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_BSDLCAOnOff::IsInitialized() const {
  return true;
}

void PB_HUset_BSDLCAOnOff::InternalSwap(PB_HUset_BSDLCAOnOff* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_bsdlcaonoff_, other->hu_bsdlcaonoff_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_BSDLCAOnOff::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[129]);
}

// ===================================================================

class PB_uint64_Struct::_Internal {
 public:
};

PB_uint64_Struct::PB_uint64_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_uint64_Struct)
}
PB_uint64_Struct::PB_uint64_Struct(const PB_uint64_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_uint64_Struct)
}

inline void PB_uint64_Struct::SharedCtor() {
data_ = uint64_t{0u};
}

PB_uint64_Struct::~PB_uint64_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_uint64_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_uint64_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_uint64_Struct::ArenaDtor(void* object) {
  PB_uint64_Struct* _this = reinterpret_cast< PB_uint64_Struct* >(object);
  (void)_this;
}
void PB_uint64_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_uint64_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_uint64_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_uint64_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_uint64_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_uint64_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_uint64_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 data = 1;
  if (this->_internal_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_uint64_Struct)
  return target;
}

size_t PB_uint64_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_uint64_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 data = 1;
  if (this->_internal_data() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_uint64_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_uint64_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_uint64_Struct::GetClassData() const { return &_class_data_; }

void PB_uint64_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_uint64_Struct *>(to)->MergeFrom(
      static_cast<const PB_uint64_Struct &>(from));
}


void PB_uint64_Struct::MergeFrom(const PB_uint64_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_uint64_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_data() != 0) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_uint64_Struct::CopyFrom(const PB_uint64_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_uint64_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_uint64_Struct::IsInitialized() const {
  return true;
}

void PB_uint64_Struct::InternalSwap(PB_uint64_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_uint64_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[130]);
}

// ===================================================================

class PB_C2_GetADASScore::_Internal {
 public:
};

PB_C2_GetADASScore::PB_C2_GetADASScore(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_C2_GetADASScore)
}
PB_C2_GetADASScore::PB_C2_GetADASScore(const PB_C2_GetADASScore& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  c2_useridnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    c2_useridnumber_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_c2_useridnumber().empty()) {
    c2_useridnumber_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_c2_useridnumber(), 
      GetArenaForAllocation());
  }
  ::memcpy(&c2_autodrivingscore_, &from.c2_autodrivingscore_,
    static_cast<size_t>(reinterpret_cast<char*>(&c2_nidcitytrip_) -
    reinterpret_cast<char*>(&c2_autodrivingscore_)) + sizeof(c2_nidcitytrip_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_C2_GetADASScore)
}

inline void PB_C2_GetADASScore::SharedCtor() {
c2_useridnumber_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  c2_useridnumber_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&c2_autodrivingscore_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&c2_nidcitytrip_) -
    reinterpret_cast<char*>(&c2_autodrivingscore_)) + sizeof(c2_nidcitytrip_));
}

PB_C2_GetADASScore::~PB_C2_GetADASScore() {
  // @@protoc_insertion_point(destructor:Soa.PB_C2_GetADASScore)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_C2_GetADASScore::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  c2_useridnumber_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PB_C2_GetADASScore::ArenaDtor(void* object) {
  PB_C2_GetADASScore* _this = reinterpret_cast< PB_C2_GetADASScore* >(object);
  (void)_this;
}
void PB_C2_GetADASScore::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_C2_GetADASScore::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_C2_GetADASScore::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_C2_GetADASScore)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  c2_useridnumber_.ClearToEmpty();
  ::memset(&c2_autodrivingscore_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&c2_nidcitytrip_) -
      reinterpret_cast<char*>(&c2_autodrivingscore_)) + sizeof(c2_nidcitytrip_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_C2_GetADASScore::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes C2_UserIDnumber = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_c2_useridnumber();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 C2_AutoDrivingScore = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          c2_autodrivingscore_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float C2_IACCTrip = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          c2_iacctrip_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float C2_NIDHighspeedTrip = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          c2_nidhighspeedtrip_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float C2_NIDCityTrip = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          c2_nidcitytrip_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_C2_GetADASScore::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_C2_GetADASScore)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes C2_UserIDnumber = 1;
  if (!this->_internal_c2_useridnumber().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_c2_useridnumber(), target);
  }

  // int32 C2_AutoDrivingScore = 2;
  if (this->_internal_c2_autodrivingscore() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_c2_autodrivingscore(), target);
  }

  // float C2_IACCTrip = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_iacctrip = this->_internal_c2_iacctrip();
  uint32_t raw_c2_iacctrip;
  memcpy(&raw_c2_iacctrip, &tmp_c2_iacctrip, sizeof(tmp_c2_iacctrip));
  if (raw_c2_iacctrip != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_c2_iacctrip(), target);
  }

  // float C2_NIDHighspeedTrip = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidhighspeedtrip = this->_internal_c2_nidhighspeedtrip();
  uint32_t raw_c2_nidhighspeedtrip;
  memcpy(&raw_c2_nidhighspeedtrip, &tmp_c2_nidhighspeedtrip, sizeof(tmp_c2_nidhighspeedtrip));
  if (raw_c2_nidhighspeedtrip != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_c2_nidhighspeedtrip(), target);
  }

  // float C2_NIDCityTrip = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidcitytrip = this->_internal_c2_nidcitytrip();
  uint32_t raw_c2_nidcitytrip;
  memcpy(&raw_c2_nidcitytrip, &tmp_c2_nidcitytrip, sizeof(tmp_c2_nidcitytrip));
  if (raw_c2_nidcitytrip != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_c2_nidcitytrip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_C2_GetADASScore)
  return target;
}

size_t PB_C2_GetADASScore::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_C2_GetADASScore)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes C2_UserIDnumber = 1;
  if (!this->_internal_c2_useridnumber().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_c2_useridnumber());
  }

  // int32 C2_AutoDrivingScore = 2;
  if (this->_internal_c2_autodrivingscore() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_c2_autodrivingscore());
  }

  // float C2_IACCTrip = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_iacctrip = this->_internal_c2_iacctrip();
  uint32_t raw_c2_iacctrip;
  memcpy(&raw_c2_iacctrip, &tmp_c2_iacctrip, sizeof(tmp_c2_iacctrip));
  if (raw_c2_iacctrip != 0) {
    total_size += 1 + 4;
  }

  // float C2_NIDHighspeedTrip = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidhighspeedtrip = this->_internal_c2_nidhighspeedtrip();
  uint32_t raw_c2_nidhighspeedtrip;
  memcpy(&raw_c2_nidhighspeedtrip, &tmp_c2_nidhighspeedtrip, sizeof(tmp_c2_nidhighspeedtrip));
  if (raw_c2_nidhighspeedtrip != 0) {
    total_size += 1 + 4;
  }

  // float C2_NIDCityTrip = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidcitytrip = this->_internal_c2_nidcitytrip();
  uint32_t raw_c2_nidcitytrip;
  memcpy(&raw_c2_nidcitytrip, &tmp_c2_nidcitytrip, sizeof(tmp_c2_nidcitytrip));
  if (raw_c2_nidcitytrip != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_C2_GetADASScore::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_C2_GetADASScore::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_C2_GetADASScore::GetClassData() const { return &_class_data_; }

void PB_C2_GetADASScore::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_C2_GetADASScore *>(to)->MergeFrom(
      static_cast<const PB_C2_GetADASScore &>(from));
}


void PB_C2_GetADASScore::MergeFrom(const PB_C2_GetADASScore& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_C2_GetADASScore)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_c2_useridnumber().empty()) {
    _internal_set_c2_useridnumber(from._internal_c2_useridnumber());
  }
  if (from._internal_c2_autodrivingscore() != 0) {
    _internal_set_c2_autodrivingscore(from._internal_c2_autodrivingscore());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_iacctrip = from._internal_c2_iacctrip();
  uint32_t raw_c2_iacctrip;
  memcpy(&raw_c2_iacctrip, &tmp_c2_iacctrip, sizeof(tmp_c2_iacctrip));
  if (raw_c2_iacctrip != 0) {
    _internal_set_c2_iacctrip(from._internal_c2_iacctrip());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidhighspeedtrip = from._internal_c2_nidhighspeedtrip();
  uint32_t raw_c2_nidhighspeedtrip;
  memcpy(&raw_c2_nidhighspeedtrip, &tmp_c2_nidhighspeedtrip, sizeof(tmp_c2_nidhighspeedtrip));
  if (raw_c2_nidhighspeedtrip != 0) {
    _internal_set_c2_nidhighspeedtrip(from._internal_c2_nidhighspeedtrip());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_c2_nidcitytrip = from._internal_c2_nidcitytrip();
  uint32_t raw_c2_nidcitytrip;
  memcpy(&raw_c2_nidcitytrip, &tmp_c2_nidcitytrip, sizeof(tmp_c2_nidcitytrip));
  if (raw_c2_nidcitytrip != 0) {
    _internal_set_c2_nidcitytrip(from._internal_c2_nidcitytrip());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_C2_GetADASScore::CopyFrom(const PB_C2_GetADASScore& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_C2_GetADASScore)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_C2_GetADASScore::IsInitialized() const {
  return true;
}

void PB_C2_GetADASScore::InternalSwap(PB_C2_GetADASScore* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &c2_useridnumber_, lhs_arena,
      &other->c2_useridnumber_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_C2_GetADASScore, c2_nidcitytrip_)
      + sizeof(PB_C2_GetADASScore::c2_nidcitytrip_)
      - PROTOBUF_FIELD_OFFSET(PB_C2_GetADASScore, c2_autodrivingscore_)>(
          reinterpret_cast<char*>(&c2_autodrivingscore_),
          reinterpret_cast<char*>(&other->c2_autodrivingscore_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_C2_GetADASScore::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[131]);
}

// ===================================================================

class PB_HUset_RCWEnable::_Internal {
 public:
};

PB_HUset_RCWEnable::PB_HUset_RCWEnable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_RCWEnable)
}
PB_HUset_RCWEnable::PB_HUset_RCWEnable(const PB_HUset_RCWEnable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_rcwenable_ = from.hu_rcwenable_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_RCWEnable)
}

inline void PB_HUset_RCWEnable::SharedCtor() {
hu_rcwenable_ = 0u;
}

PB_HUset_RCWEnable::~PB_HUset_RCWEnable() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_RCWEnable)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_RCWEnable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_RCWEnable::ArenaDtor(void* object) {
  PB_HUset_RCWEnable* _this = reinterpret_cast< PB_HUset_RCWEnable* >(object);
  (void)_this;
}
void PB_HUset_RCWEnable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_RCWEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_RCWEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_RCWEnable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_rcwenable_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_RCWEnable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_RCWEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_rcwenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_RCWEnable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_RCWEnable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_RCWEnable = 1;
  if (this->_internal_hu_rcwenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_rcwenable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_RCWEnable)
  return target;
}

size_t PB_HUset_RCWEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_RCWEnable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_RCWEnable = 1;
  if (this->_internal_hu_rcwenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_rcwenable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_RCWEnable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_RCWEnable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_RCWEnable::GetClassData() const { return &_class_data_; }

void PB_HUset_RCWEnable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_RCWEnable *>(to)->MergeFrom(
      static_cast<const PB_HUset_RCWEnable &>(from));
}


void PB_HUset_RCWEnable::MergeFrom(const PB_HUset_RCWEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_RCWEnable)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_rcwenable() != 0) {
    _internal_set_hu_rcwenable(from._internal_hu_rcwenable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_RCWEnable::CopyFrom(const PB_HUset_RCWEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_RCWEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_RCWEnable::IsInitialized() const {
  return true;
}

void PB_HUset_RCWEnable::InternalSwap(PB_HUset_RCWEnable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_rcwenable_, other->hu_rcwenable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_RCWEnable::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[132]);
}

// ===================================================================

class PB_HUset_SEAMode::_Internal {
 public:
};

PB_HUset_SEAMode::PB_HUset_SEAMode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_SEAMode)
}
PB_HUset_SEAMode::PB_HUset_SEAMode(const PB_HUset_SEAMode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_seamode_ = from.hu_seamode_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_SEAMode)
}

inline void PB_HUset_SEAMode::SharedCtor() {
hu_seamode_ = 0u;
}

PB_HUset_SEAMode::~PB_HUset_SEAMode() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_SEAMode)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_SEAMode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_SEAMode::ArenaDtor(void* object) {
  PB_HUset_SEAMode* _this = reinterpret_cast< PB_HUset_SEAMode* >(object);
  (void)_this;
}
void PB_HUset_SEAMode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_SEAMode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_SEAMode::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_SEAMode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_seamode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_SEAMode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_SEAMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_seamode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_SEAMode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_SEAMode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_SEAMode = 1;
  if (this->_internal_hu_seamode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_seamode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_SEAMode)
  return target;
}

size_t PB_HUset_SEAMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_SEAMode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_SEAMode = 1;
  if (this->_internal_hu_seamode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_seamode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_SEAMode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_SEAMode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_SEAMode::GetClassData() const { return &_class_data_; }

void PB_HUset_SEAMode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_SEAMode *>(to)->MergeFrom(
      static_cast<const PB_HUset_SEAMode &>(from));
}


void PB_HUset_SEAMode::MergeFrom(const PB_HUset_SEAMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_SEAMode)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_seamode() != 0) {
    _internal_set_hu_seamode(from._internal_hu_seamode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_SEAMode::CopyFrom(const PB_HUset_SEAMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_SEAMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_SEAMode::IsInitialized() const {
  return true;
}

void PB_HUset_SEAMode::InternalSwap(PB_HUset_SEAMode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_seamode_, other->hu_seamode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_SEAMode::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[133]);
}

// ===================================================================

class PB_Track_Point1::_Internal {
 public:
};

PB_Track_Point1::PB_Track_Point1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Track_Point1)
}
PB_Track_Point1::PB_Track_Point1(const PB_Track_Point1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&pointx_, &from.pointx_,
    static_cast<size_t>(reinterpret_cast<char*>(&pointy_) -
    reinterpret_cast<char*>(&pointx_)) + sizeof(pointy_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Track_Point1)
}

inline void PB_Track_Point1::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pointx_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&pointy_) -
    reinterpret_cast<char*>(&pointx_)) + sizeof(pointy_));
}

PB_Track_Point1::~PB_Track_Point1() {
  // @@protoc_insertion_point(destructor:Soa.PB_Track_Point1)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Track_Point1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_Track_Point1::ArenaDtor(void* object) {
  PB_Track_Point1* _this = reinterpret_cast< PB_Track_Point1* >(object);
  (void)_this;
}
void PB_Track_Point1::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Track_Point1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Track_Point1::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Track_Point1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pointx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pointy_) -
      reinterpret_cast<char*>(&pointx_)) + sizeof(pointy_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Track_Point1::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double PointX = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          pointx_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // double PointY = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          pointy_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Track_Point1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Track_Point1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double PointX = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_pointx = this->_internal_pointx();
  uint64_t raw_pointx;
  memcpy(&raw_pointx, &tmp_pointx, sizeof(tmp_pointx));
  if (raw_pointx != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_pointx(), target);
  }

  // double PointY = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_pointy = this->_internal_pointy();
  uint64_t raw_pointy;
  memcpy(&raw_pointy, &tmp_pointy, sizeof(tmp_pointy));
  if (raw_pointy != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_pointy(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Track_Point1)
  return target;
}

size_t PB_Track_Point1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Track_Point1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // double PointX = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_pointx = this->_internal_pointx();
  uint64_t raw_pointx;
  memcpy(&raw_pointx, &tmp_pointx, sizeof(tmp_pointx));
  if (raw_pointx != 0) {
    total_size += 1 + 8;
  }

  // double PointY = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_pointy = this->_internal_pointy();
  uint64_t raw_pointy;
  memcpy(&raw_pointy, &tmp_pointy, sizeof(tmp_pointy));
  if (raw_pointy != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Track_Point1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Track_Point1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Track_Point1::GetClassData() const { return &_class_data_; }

void PB_Track_Point1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Track_Point1 *>(to)->MergeFrom(
      static_cast<const PB_Track_Point1 &>(from));
}


void PB_Track_Point1::MergeFrom(const PB_Track_Point1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Track_Point1)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_pointx = from._internal_pointx();
  uint64_t raw_pointx;
  memcpy(&raw_pointx, &tmp_pointx, sizeof(tmp_pointx));
  if (raw_pointx != 0) {
    _internal_set_pointx(from._internal_pointx());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_pointy = from._internal_pointy();
  uint64_t raw_pointy;
  memcpy(&raw_pointy, &tmp_pointy, sizeof(tmp_pointy));
  if (raw_pointy != 0) {
    _internal_set_pointy(from._internal_pointy());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Track_Point1::CopyFrom(const PB_Track_Point1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Track_Point1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Track_Point1::IsInitialized() const {
  return true;
}

void PB_Track_Point1::InternalSwap(PB_Track_Point1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_Track_Point1, pointy_)
      + sizeof(PB_Track_Point1::pointy_)
      - PROTOBUF_FIELD_OFFSET(PB_Track_Point1, pointx_)>(
          reinterpret_cast<char*>(&pointx_),
          reinterpret_cast<char*>(&other->pointx_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Track_Point1::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[134]);
}

// ===================================================================

class PB_PwrPortCtr_Struct::_Internal {
 public:
};

PB_PwrPortCtr_Struct::PB_PwrPortCtr_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  pwrportctr_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_PwrPortCtr_Struct)
}
PB_PwrPortCtr_Struct::PB_PwrPortCtr_Struct(const PB_PwrPortCtr_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      pwrportctr_(from.pwrportctr_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_PwrPortCtr_Struct)
}

inline void PB_PwrPortCtr_Struct::SharedCtor() {
}

PB_PwrPortCtr_Struct::~PB_PwrPortCtr_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_PwrPortCtr_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_PwrPortCtr_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_PwrPortCtr_Struct::ArenaDtor(void* object) {
  PB_PwrPortCtr_Struct* _this = reinterpret_cast< PB_PwrPortCtr_Struct* >(object);
  (void)_this;
}
void PB_PwrPortCtr_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_PwrPortCtr_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_PwrPortCtr_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_PwrPortCtr_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pwrportctr_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_PwrPortCtr_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Soa.PB_PwrCtr PwrPortCtr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_pwrportctr(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_PwrPortCtr_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_PwrPortCtr_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Soa.PB_PwrCtr PwrPortCtr = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_pwrportctr_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_pwrportctr(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_PwrPortCtr_Struct)
  return target;
}

size_t PB_PwrPortCtr_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_PwrPortCtr_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_PwrCtr PwrPortCtr = 1;
  total_size += 1UL * this->_internal_pwrportctr_size();
  for (const auto& msg : this->pwrportctr_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_PwrPortCtr_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_PwrPortCtr_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_PwrPortCtr_Struct::GetClassData() const { return &_class_data_; }

void PB_PwrPortCtr_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_PwrPortCtr_Struct *>(to)->MergeFrom(
      static_cast<const PB_PwrPortCtr_Struct &>(from));
}


void PB_PwrPortCtr_Struct::MergeFrom(const PB_PwrPortCtr_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_PwrPortCtr_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  pwrportctr_.MergeFrom(from.pwrportctr_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_PwrPortCtr_Struct::CopyFrom(const PB_PwrPortCtr_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_PwrPortCtr_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PwrPortCtr_Struct::IsInitialized() const {
  return true;
}

void PB_PwrPortCtr_Struct::InternalSwap(PB_PwrPortCtr_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  pwrportctr_.InternalSwap(&other->pwrportctr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_PwrPortCtr_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[135]);
}

// ===================================================================

class PB_FogFltInfo::_Internal {
 public:
};

PB_FogFltInfo::PB_FogFltInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_FogFltInfo)
}
PB_FogFltInfo::PB_FogFltInfo(const PB_FogFltInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_fltst_, &from.le_fltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&ri_refltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_refltst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_FogFltInfo)
}

inline void PB_FogFltInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_fltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ri_refltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_refltst_));
}

PB_FogFltInfo::~PB_FogFltInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_FogFltInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_FogFltInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_FogFltInfo::ArenaDtor(void* object) {
  PB_FogFltInfo* _this = reinterpret_cast< PB_FogFltInfo* >(object);
  (void)_this;
}
void PB_FogFltInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_FogFltInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_FogFltInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_FogFltInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_fltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ri_refltst_) -
      reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_refltst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_FogFltInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_FltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_FltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Le_ReFltSt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          le_refltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_ReFltSt = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ri_refltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_FogFltInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_FogFltInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_fltst(), target);
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_fltst(), target);
  }

  // uint32 Le_ReFltSt = 3;
  if (this->_internal_le_refltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_le_refltst(), target);
  }

  // uint32 Ri_ReFltSt = 4;
  if (this->_internal_ri_refltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_ri_refltst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_FogFltInfo)
  return target;
}

size_t PB_FogFltInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_FogFltInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_fltst());
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_fltst());
  }

  // uint32 Le_ReFltSt = 3;
  if (this->_internal_le_refltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_refltst());
  }

  // uint32 Ri_ReFltSt = 4;
  if (this->_internal_ri_refltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_refltst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_FogFltInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_FogFltInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_FogFltInfo::GetClassData() const { return &_class_data_; }

void PB_FogFltInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_FogFltInfo *>(to)->MergeFrom(
      static_cast<const PB_FogFltInfo &>(from));
}


void PB_FogFltInfo::MergeFrom(const PB_FogFltInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_FogFltInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_fltst() != 0) {
    _internal_set_le_fltst(from._internal_le_fltst());
  }
  if (from._internal_ri_fltst() != 0) {
    _internal_set_ri_fltst(from._internal_ri_fltst());
  }
  if (from._internal_le_refltst() != 0) {
    _internal_set_le_refltst(from._internal_le_refltst());
  }
  if (from._internal_ri_refltst() != 0) {
    _internal_set_ri_refltst(from._internal_ri_refltst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_FogFltInfo::CopyFrom(const PB_FogFltInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_FogFltInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_FogFltInfo::IsInitialized() const {
  return true;
}

void PB_FogFltInfo::InternalSwap(PB_FogFltInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_FogFltInfo, ri_refltst_)
      + sizeof(PB_FogFltInfo::ri_refltst_)
      - PROTOBUF_FIELD_OFFSET(PB_FogFltInfo, le_fltst_)>(
          reinterpret_cast<char*>(&le_fltst_),
          reinterpret_cast<char*>(&other->le_fltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_FogFltInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[136]);
}

// ===================================================================

class PB_EDC_APASelfdefnSlotData::_Internal {
 public:
};

PB_EDC_APASelfdefnSlotData::PB_EDC_APASelfdefnSlotData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  edc_apaselfdefnslot_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_APASelfdefnSlotData)
}
PB_EDC_APASelfdefnSlotData::PB_EDC_APASelfdefnSlotData(const PB_EDC_APASelfdefnSlotData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      edc_apaselfdefnslot_(from.edc_apaselfdefnslot_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_APASelfdefnSlotData)
}

inline void PB_EDC_APASelfdefnSlotData::SharedCtor() {
}

PB_EDC_APASelfdefnSlotData::~PB_EDC_APASelfdefnSlotData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_APASelfdefnSlotData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_APASelfdefnSlotData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_APASelfdefnSlotData::ArenaDtor(void* object) {
  PB_EDC_APASelfdefnSlotData* _this = reinterpret_cast< PB_EDC_APASelfdefnSlotData* >(object);
  (void)_this;
}
void PB_EDC_APASelfdefnSlotData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_APASelfdefnSlotData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_APASelfdefnSlotData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_APASelfdefnSlotData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apaselfdefnslot_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_APASelfdefnSlotData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Soa.PB_Point2DStruct EDC_APASelfdefnSlot = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_edc_apaselfdefnslot(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_APASelfdefnSlotData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_APASelfdefnSlotData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct EDC_APASelfdefnSlot = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_edc_apaselfdefnslot_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_edc_apaselfdefnslot(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_APASelfdefnSlotData)
  return target;
}

size_t PB_EDC_APASelfdefnSlotData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_APASelfdefnSlotData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct EDC_APASelfdefnSlot = 1;
  total_size += 1UL * this->_internal_edc_apaselfdefnslot_size();
  for (const auto& msg : this->edc_apaselfdefnslot_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_APASelfdefnSlotData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_APASelfdefnSlotData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_APASelfdefnSlotData::GetClassData() const { return &_class_data_; }

void PB_EDC_APASelfdefnSlotData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_APASelfdefnSlotData *>(to)->MergeFrom(
      static_cast<const PB_EDC_APASelfdefnSlotData &>(from));
}


void PB_EDC_APASelfdefnSlotData::MergeFrom(const PB_EDC_APASelfdefnSlotData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_APASelfdefnSlotData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  edc_apaselfdefnslot_.MergeFrom(from.edc_apaselfdefnslot_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_APASelfdefnSlotData::CopyFrom(const PB_EDC_APASelfdefnSlotData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_APASelfdefnSlotData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_APASelfdefnSlotData::IsInitialized() const {
  return true;
}

void PB_EDC_APASelfdefnSlotData::InternalSwap(PB_EDC_APASelfdefnSlotData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  edc_apaselfdefnslot_.InternalSwap(&other->edc_apaselfdefnslot_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_APASelfdefnSlotData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[137]);
}

// ===================================================================

class PB_ObjStTypeCurPosVITAll_Struct::_Internal {
 public:
};

PB_ObjStTypeCurPosVITAll_Struct::PB_ObjStTypeCurPosVITAll_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  objsttypecurposvitall_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ObjStTypeCurPosVITAll_Struct)
}
PB_ObjStTypeCurPosVITAll_Struct::PB_ObjStTypeCurPosVITAll_Struct(const PB_ObjStTypeCurPosVITAll_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      objsttypecurposvitall_(from.objsttypecurposvitall_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ObjStTypeCurPosVITAll_Struct)
}

inline void PB_ObjStTypeCurPosVITAll_Struct::SharedCtor() {
}

PB_ObjStTypeCurPosVITAll_Struct::~PB_ObjStTypeCurPosVITAll_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_ObjStTypeCurPosVITAll_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ObjStTypeCurPosVITAll_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ObjStTypeCurPosVITAll_Struct::ArenaDtor(void* object) {
  PB_ObjStTypeCurPosVITAll_Struct* _this = reinterpret_cast< PB_ObjStTypeCurPosVITAll_Struct* >(object);
  (void)_this;
}
void PB_ObjStTypeCurPosVITAll_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ObjStTypeCurPosVITAll_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ObjStTypeCurPosVITAll_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ObjStTypeCurPosVITAll_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objsttypecurposvitall_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ObjStTypeCurPosVITAll_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 ObjStTypeCurPosVITAll = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_objsttypecurposvitall(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_objsttypecurposvitall(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ObjStTypeCurPosVITAll_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ObjStTypeCurPosVITAll_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 ObjStTypeCurPosVITAll = 1;
  {
    int byte_size = _objsttypecurposvitall_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_objsttypecurposvitall(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ObjStTypeCurPosVITAll_Struct)
  return target;
}

size_t PB_ObjStTypeCurPosVITAll_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ObjStTypeCurPosVITAll_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 ObjStTypeCurPosVITAll = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->objsttypecurposvitall_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _objsttypecurposvitall_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ObjStTypeCurPosVITAll_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ObjStTypeCurPosVITAll_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ObjStTypeCurPosVITAll_Struct::GetClassData() const { return &_class_data_; }

void PB_ObjStTypeCurPosVITAll_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ObjStTypeCurPosVITAll_Struct *>(to)->MergeFrom(
      static_cast<const PB_ObjStTypeCurPosVITAll_Struct &>(from));
}


void PB_ObjStTypeCurPosVITAll_Struct::MergeFrom(const PB_ObjStTypeCurPosVITAll_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ObjStTypeCurPosVITAll_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  objsttypecurposvitall_.MergeFrom(from.objsttypecurposvitall_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ObjStTypeCurPosVITAll_Struct::CopyFrom(const PB_ObjStTypeCurPosVITAll_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ObjStTypeCurPosVITAll_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ObjStTypeCurPosVITAll_Struct::IsInitialized() const {
  return true;
}

void PB_ObjStTypeCurPosVITAll_Struct::InternalSwap(PB_ObjStTypeCurPosVITAll_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  objsttypecurposvitall_.InternalSwap(&other->objsttypecurposvitall_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ObjStTypeCurPosVITAll_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[138]);
}

// ===================================================================

class PB_EDC_APAParkOutSelectData::_Internal {
 public:
};

PB_EDC_APAParkOutSelectData::PB_EDC_APAParkOutSelectData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_APAParkOutSelectData)
}
PB_EDC_APAParkOutSelectData::PB_EDC_APAParkOutSelectData(const PB_EDC_APAParkOutSelectData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_apaparkoutselect_ = from.edc_apaparkoutselect_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_APAParkOutSelectData)
}

inline void PB_EDC_APAParkOutSelectData::SharedCtor() {
edc_apaparkoutselect_ = 0u;
}

PB_EDC_APAParkOutSelectData::~PB_EDC_APAParkOutSelectData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_APAParkOutSelectData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_APAParkOutSelectData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_APAParkOutSelectData::ArenaDtor(void* object) {
  PB_EDC_APAParkOutSelectData* _this = reinterpret_cast< PB_EDC_APAParkOutSelectData* >(object);
  (void)_this;
}
void PB_EDC_APAParkOutSelectData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_APAParkOutSelectData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_APAParkOutSelectData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_APAParkOutSelectData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apaparkoutselect_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_APAParkOutSelectData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_APAParkOutSelect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_apaparkoutselect_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_APAParkOutSelectData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_APAParkOutSelectData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_APAParkOutSelect = 1;
  if (this->_internal_edc_apaparkoutselect() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_apaparkoutselect(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_APAParkOutSelectData)
  return target;
}

size_t PB_EDC_APAParkOutSelectData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_APAParkOutSelectData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_APAParkOutSelect = 1;
  if (this->_internal_edc_apaparkoutselect() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_apaparkoutselect());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_APAParkOutSelectData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_APAParkOutSelectData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_APAParkOutSelectData::GetClassData() const { return &_class_data_; }

void PB_EDC_APAParkOutSelectData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_APAParkOutSelectData *>(to)->MergeFrom(
      static_cast<const PB_EDC_APAParkOutSelectData &>(from));
}


void PB_EDC_APAParkOutSelectData::MergeFrom(const PB_EDC_APAParkOutSelectData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_APAParkOutSelectData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_apaparkoutselect() != 0) {
    _internal_set_edc_apaparkoutselect(from._internal_edc_apaparkoutselect());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_APAParkOutSelectData::CopyFrom(const PB_EDC_APAParkOutSelectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_APAParkOutSelectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_APAParkOutSelectData::IsInitialized() const {
  return true;
}

void PB_EDC_APAParkOutSelectData::InternalSwap(PB_EDC_APAParkOutSelectData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_apaparkoutselect_, other->edc_apaparkoutselect_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_APAParkOutSelectData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[139]);
}

// ===================================================================

class PB_CamLinesCurve::_Internal {
 public:
  static const ::Soa::PB_LineCurve& all_lines_curve(const PB_CamLinesCurve* msg);
  static const ::Soa::PB_LineCurveValid& all_lines_curve_valid(const PB_CamLinesCurve* msg);
};

const ::Soa::PB_LineCurve&
PB_CamLinesCurve::_Internal::all_lines_curve(const PB_CamLinesCurve* msg) {
  return *msg->all_lines_curve_;
}
const ::Soa::PB_LineCurveValid&
PB_CamLinesCurve::_Internal::all_lines_curve_valid(const PB_CamLinesCurve* msg) {
  return *msg->all_lines_curve_valid_;
}
PB_CamLinesCurve::PB_CamLinesCurve(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_CamLinesCurve)
}
PB_CamLinesCurve::PB_CamLinesCurve(const PB_CamLinesCurve& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_all_lines_curve()) {
    all_lines_curve_ = new ::Soa::PB_LineCurve(*from.all_lines_curve_);
  } else {
    all_lines_curve_ = nullptr;
  }
  if (from._internal_has_all_lines_curve_valid()) {
    all_lines_curve_valid_ = new ::Soa::PB_LineCurveValid(*from.all_lines_curve_valid_);
  } else {
    all_lines_curve_valid_ = nullptr;
  }
  ::memcpy(&time_stamp_, &from.time_stamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&frame_index_) -
    reinterpret_cast<char*>(&time_stamp_)) + sizeof(frame_index_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_CamLinesCurve)
}

inline void PB_CamLinesCurve::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&all_lines_curve_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&frame_index_) -
    reinterpret_cast<char*>(&all_lines_curve_)) + sizeof(frame_index_));
}

PB_CamLinesCurve::~PB_CamLinesCurve() {
  // @@protoc_insertion_point(destructor:Soa.PB_CamLinesCurve)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_CamLinesCurve::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete all_lines_curve_;
  if (this != internal_default_instance()) delete all_lines_curve_valid_;
}

void PB_CamLinesCurve::ArenaDtor(void* object) {
  PB_CamLinesCurve* _this = reinterpret_cast< PB_CamLinesCurve* >(object);
  (void)_this;
}
void PB_CamLinesCurve::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_CamLinesCurve::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_CamLinesCurve::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_CamLinesCurve)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && all_lines_curve_ != nullptr) {
    delete all_lines_curve_;
  }
  all_lines_curve_ = nullptr;
  if (GetArenaForAllocation() == nullptr && all_lines_curve_valid_ != nullptr) {
    delete all_lines_curve_valid_;
  }
  all_lines_curve_valid_ = nullptr;
  ::memset(&time_stamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_index_) -
      reinterpret_cast<char*>(&time_stamp_)) + sizeof(frame_index_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_CamLinesCurve::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // double time_stamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 9)) {
          time_stamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      // int32 frame_index = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          frame_index_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Soa.PB_LineCurve all_lines_curve = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_all_lines_curve(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Soa.PB_LineCurveValid all_lines_curve_valid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_all_lines_curve_valid(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_CamLinesCurve::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_CamLinesCurve)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // double time_stamp = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_time_stamp = this->_internal_time_stamp();
  uint64_t raw_time_stamp;
  memcpy(&raw_time_stamp, &tmp_time_stamp, sizeof(tmp_time_stamp));
  if (raw_time_stamp != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_time_stamp(), target);
  }

  // int32 frame_index = 2;
  if (this->_internal_frame_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_frame_index(), target);
  }

  // .Soa.PB_LineCurve all_lines_curve = 3;
  if (this->_internal_has_all_lines_curve()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::all_lines_curve(this), target, stream);
  }

  // .Soa.PB_LineCurveValid all_lines_curve_valid = 4;
  if (this->_internal_has_all_lines_curve_valid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::all_lines_curve_valid(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_CamLinesCurve)
  return target;
}

size_t PB_CamLinesCurve::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_CamLinesCurve)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Soa.PB_LineCurve all_lines_curve = 3;
  if (this->_internal_has_all_lines_curve()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *all_lines_curve_);
  }

  // .Soa.PB_LineCurveValid all_lines_curve_valid = 4;
  if (this->_internal_has_all_lines_curve_valid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *all_lines_curve_valid_);
  }

  // double time_stamp = 1;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_time_stamp = this->_internal_time_stamp();
  uint64_t raw_time_stamp;
  memcpy(&raw_time_stamp, &tmp_time_stamp, sizeof(tmp_time_stamp));
  if (raw_time_stamp != 0) {
    total_size += 1 + 8;
  }

  // int32 frame_index = 2;
  if (this->_internal_frame_index() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_frame_index());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_CamLinesCurve::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_CamLinesCurve::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_CamLinesCurve::GetClassData() const { return &_class_data_; }

void PB_CamLinesCurve::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_CamLinesCurve *>(to)->MergeFrom(
      static_cast<const PB_CamLinesCurve &>(from));
}


void PB_CamLinesCurve::MergeFrom(const PB_CamLinesCurve& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_CamLinesCurve)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_all_lines_curve()) {
    _internal_mutable_all_lines_curve()->::Soa::PB_LineCurve::MergeFrom(from._internal_all_lines_curve());
  }
  if (from._internal_has_all_lines_curve_valid()) {
    _internal_mutable_all_lines_curve_valid()->::Soa::PB_LineCurveValid::MergeFrom(from._internal_all_lines_curve_valid());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_time_stamp = from._internal_time_stamp();
  uint64_t raw_time_stamp;
  memcpy(&raw_time_stamp, &tmp_time_stamp, sizeof(tmp_time_stamp));
  if (raw_time_stamp != 0) {
    _internal_set_time_stamp(from._internal_time_stamp());
  }
  if (from._internal_frame_index() != 0) {
    _internal_set_frame_index(from._internal_frame_index());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_CamLinesCurve::CopyFrom(const PB_CamLinesCurve& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_CamLinesCurve)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CamLinesCurve::IsInitialized() const {
  return true;
}

void PB_CamLinesCurve::InternalSwap(PB_CamLinesCurve* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_CamLinesCurve, frame_index_)
      + sizeof(PB_CamLinesCurve::frame_index_)
      - PROTOBUF_FIELD_OFFSET(PB_CamLinesCurve, all_lines_curve_)>(
          reinterpret_cast<char*>(&all_lines_curve_),
          reinterpret_cast<char*>(&other->all_lines_curve_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_CamLinesCurve::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[140]);
}

// ===================================================================

class PB_APA_apaguidepoint_Struct::_Internal {
 public:
};

PB_APA_apaguidepoint_Struct::PB_APA_apaguidepoint_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  seq_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_APA_apaguidepoint_Struct)
}
PB_APA_apaguidepoint_Struct::PB_APA_apaguidepoint_Struct(const PB_APA_apaguidepoint_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      seq_(from.seq_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_APA_apaguidepoint_Struct)
}

inline void PB_APA_apaguidepoint_Struct::SharedCtor() {
}

PB_APA_apaguidepoint_Struct::~PB_APA_apaguidepoint_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_APA_apaguidepoint_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_APA_apaguidepoint_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_APA_apaguidepoint_Struct::ArenaDtor(void* object) {
  PB_APA_apaguidepoint_Struct* _this = reinterpret_cast< PB_APA_apaguidepoint_Struct* >(object);
  (void)_this;
}
void PB_APA_apaguidepoint_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_APA_apaguidepoint_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_APA_apaguidepoint_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_APA_apaguidepoint_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  seq_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_APA_apaguidepoint_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Soa.PB_Track_Point1 seq = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_seq(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_APA_apaguidepoint_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_APA_apaguidepoint_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Soa.PB_Track_Point1 seq = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_seq_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_seq(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_APA_apaguidepoint_Struct)
  return target;
}

size_t PB_APA_apaguidepoint_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_APA_apaguidepoint_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_Track_Point1 seq = 1;
  total_size += 1UL * this->_internal_seq_size();
  for (const auto& msg : this->seq_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_APA_apaguidepoint_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_APA_apaguidepoint_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_APA_apaguidepoint_Struct::GetClassData() const { return &_class_data_; }

void PB_APA_apaguidepoint_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_APA_apaguidepoint_Struct *>(to)->MergeFrom(
      static_cast<const PB_APA_apaguidepoint_Struct &>(from));
}


void PB_APA_apaguidepoint_Struct::MergeFrom(const PB_APA_apaguidepoint_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_APA_apaguidepoint_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  seq_.MergeFrom(from.seq_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_APA_apaguidepoint_Struct::CopyFrom(const PB_APA_apaguidepoint_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_APA_apaguidepoint_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_APA_apaguidepoint_Struct::IsInitialized() const {
  return true;
}

void PB_APA_apaguidepoint_Struct::InternalSwap(PB_APA_apaguidepoint_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  seq_.InternalSwap(&other->seq_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_APA_apaguidepoint_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[141]);
}

// ===================================================================

class PB_TurnLiSt::_Internal {
 public:
};

PB_TurnLiSt::PB_TurnLiSt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TurnLiSt)
}
PB_TurnLiSt::PB_TurnLiSt(const PB_TurnLiSt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lesideturnlist_, &from.lesideturnlist_,
    static_cast<size_t>(reinterpret_cast<char*>(&risideturnlist_) -
    reinterpret_cast<char*>(&lesideturnlist_)) + sizeof(risideturnlist_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TurnLiSt)
}

inline void PB_TurnLiSt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lesideturnlist_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&risideturnlist_) -
    reinterpret_cast<char*>(&lesideturnlist_)) + sizeof(risideturnlist_));
}

PB_TurnLiSt::~PB_TurnLiSt() {
  // @@protoc_insertion_point(destructor:Soa.PB_TurnLiSt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TurnLiSt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TurnLiSt::ArenaDtor(void* object) {
  PB_TurnLiSt* _this = reinterpret_cast< PB_TurnLiSt* >(object);
  (void)_this;
}
void PB_TurnLiSt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TurnLiSt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TurnLiSt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TurnLiSt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lesideturnlist_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&risideturnlist_) -
      reinterpret_cast<char*>(&lesideturnlist_)) + sizeof(risideturnlist_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TurnLiSt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 LeSideTurnLiSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lesideturnlist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RiSideTurnLiSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          risideturnlist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TurnLiSt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TurnLiSt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 LeSideTurnLiSt = 1;
  if (this->_internal_lesideturnlist() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_lesideturnlist(), target);
  }

  // uint32 RiSideTurnLiSt = 2;
  if (this->_internal_risideturnlist() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_risideturnlist(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TurnLiSt)
  return target;
}

size_t PB_TurnLiSt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TurnLiSt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 LeSideTurnLiSt = 1;
  if (this->_internal_lesideturnlist() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lesideturnlist());
  }

  // uint32 RiSideTurnLiSt = 2;
  if (this->_internal_risideturnlist() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_risideturnlist());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TurnLiSt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TurnLiSt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TurnLiSt::GetClassData() const { return &_class_data_; }

void PB_TurnLiSt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TurnLiSt *>(to)->MergeFrom(
      static_cast<const PB_TurnLiSt &>(from));
}


void PB_TurnLiSt::MergeFrom(const PB_TurnLiSt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TurnLiSt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lesideturnlist() != 0) {
    _internal_set_lesideturnlist(from._internal_lesideturnlist());
  }
  if (from._internal_risideturnlist() != 0) {
    _internal_set_risideturnlist(from._internal_risideturnlist());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TurnLiSt::CopyFrom(const PB_TurnLiSt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TurnLiSt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TurnLiSt::IsInitialized() const {
  return true;
}

void PB_TurnLiSt::InternalSwap(PB_TurnLiSt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_TurnLiSt, risideturnlist_)
      + sizeof(PB_TurnLiSt::risideturnlist_)
      - PROTOBUF_FIELD_OFFSET(PB_TurnLiSt, lesideturnlist_)>(
          reinterpret_cast<char*>(&lesideturnlist_),
          reinterpret_cast<char*>(&other->lesideturnlist_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TurnLiSt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[142]);
}

// ===================================================================

class PB_HUset_CESEnable::_Internal {
 public:
};

PB_HUset_CESEnable::PB_HUset_CESEnable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_CESEnable)
}
PB_HUset_CESEnable::PB_HUset_CESEnable(const PB_HUset_CESEnable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_cesenable_ = from.hu_cesenable_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_CESEnable)
}

inline void PB_HUset_CESEnable::SharedCtor() {
hu_cesenable_ = 0u;
}

PB_HUset_CESEnable::~PB_HUset_CESEnable() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_CESEnable)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_CESEnable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_CESEnable::ArenaDtor(void* object) {
  PB_HUset_CESEnable* _this = reinterpret_cast< PB_HUset_CESEnable* >(object);
  (void)_this;
}
void PB_HUset_CESEnable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_CESEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_CESEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_CESEnable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_cesenable_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_CESEnable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_CESEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_cesenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_CESEnable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_CESEnable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_CESEnable = 1;
  if (this->_internal_hu_cesenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_cesenable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_CESEnable)
  return target;
}

size_t PB_HUset_CESEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_CESEnable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_CESEnable = 1;
  if (this->_internal_hu_cesenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_cesenable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_CESEnable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_CESEnable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_CESEnable::GetClassData() const { return &_class_data_; }

void PB_HUset_CESEnable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_CESEnable *>(to)->MergeFrom(
      static_cast<const PB_HUset_CESEnable &>(from));
}


void PB_HUset_CESEnable::MergeFrom(const PB_HUset_CESEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_CESEnable)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_cesenable() != 0) {
    _internal_set_hu_cesenable(from._internal_hu_cesenable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_CESEnable::CopyFrom(const PB_HUset_CESEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_CESEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_CESEnable::IsInitialized() const {
  return true;
}

void PB_HUset_CESEnable::InternalSwap(PB_HUset_CESEnable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_cesenable_, other->hu_cesenable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_CESEnable::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[143]);
}

// ===================================================================

class PB_HUset_IDAEnable::_Internal {
 public:
};

PB_HUset_IDAEnable::PB_HUset_IDAEnable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_IDAEnable)
}
PB_HUset_IDAEnable::PB_HUset_IDAEnable(const PB_HUset_IDAEnable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_idaenable_ = from.hu_idaenable_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_IDAEnable)
}

inline void PB_HUset_IDAEnable::SharedCtor() {
hu_idaenable_ = 0u;
}

PB_HUset_IDAEnable::~PB_HUset_IDAEnable() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_IDAEnable)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_IDAEnable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_IDAEnable::ArenaDtor(void* object) {
  PB_HUset_IDAEnable* _this = reinterpret_cast< PB_HUset_IDAEnable* >(object);
  (void)_this;
}
void PB_HUset_IDAEnable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_IDAEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_IDAEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_IDAEnable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_idaenable_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_IDAEnable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_IDAEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_idaenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_IDAEnable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_IDAEnable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_IDAEnable = 1;
  if (this->_internal_hu_idaenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_idaenable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_IDAEnable)
  return target;
}

size_t PB_HUset_IDAEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_IDAEnable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_IDAEnable = 1;
  if (this->_internal_hu_idaenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_idaenable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_IDAEnable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_IDAEnable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_IDAEnable::GetClassData() const { return &_class_data_; }

void PB_HUset_IDAEnable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_IDAEnable *>(to)->MergeFrom(
      static_cast<const PB_HUset_IDAEnable &>(from));
}


void PB_HUset_IDAEnable::MergeFrom(const PB_HUset_IDAEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_IDAEnable)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_idaenable() != 0) {
    _internal_set_hu_idaenable(from._internal_hu_idaenable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_IDAEnable::CopyFrom(const PB_HUset_IDAEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_IDAEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_IDAEnable::IsInitialized() const {
  return true;
}

void PB_HUset_IDAEnable::InternalSwap(PB_HUset_IDAEnable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_idaenable_, other->hu_idaenable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_IDAEnable::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[144]);
}

// ===================================================================

class PB_HUset_RearColliAstType::_Internal {
 public:
};

PB_HUset_RearColliAstType::PB_HUset_RearColliAstType(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_RearColliAstType)
}
PB_HUset_RearColliAstType::PB_HUset_RearColliAstType(const PB_HUset_RearColliAstType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_rearcolliasttype_ = from.hu_rearcolliasttype_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_RearColliAstType)
}

inline void PB_HUset_RearColliAstType::SharedCtor() {
hu_rearcolliasttype_ = 0u;
}

PB_HUset_RearColliAstType::~PB_HUset_RearColliAstType() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_RearColliAstType)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_RearColliAstType::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_RearColliAstType::ArenaDtor(void* object) {
  PB_HUset_RearColliAstType* _this = reinterpret_cast< PB_HUset_RearColliAstType* >(object);
  (void)_this;
}
void PB_HUset_RearColliAstType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_RearColliAstType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_RearColliAstType::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_RearColliAstType)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_rearcolliasttype_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_RearColliAstType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_RearColliAstType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_rearcolliasttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_RearColliAstType::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_RearColliAstType)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_RearColliAstType = 1;
  if (this->_internal_hu_rearcolliasttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_rearcolliasttype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_RearColliAstType)
  return target;
}

size_t PB_HUset_RearColliAstType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_RearColliAstType)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_RearColliAstType = 1;
  if (this->_internal_hu_rearcolliasttype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_rearcolliasttype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_RearColliAstType::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_RearColliAstType::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_RearColliAstType::GetClassData() const { return &_class_data_; }

void PB_HUset_RearColliAstType::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_RearColliAstType *>(to)->MergeFrom(
      static_cast<const PB_HUset_RearColliAstType &>(from));
}


void PB_HUset_RearColliAstType::MergeFrom(const PB_HUset_RearColliAstType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_RearColliAstType)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_rearcolliasttype() != 0) {
    _internal_set_hu_rearcolliasttype(from._internal_hu_rearcolliasttype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_RearColliAstType::CopyFrom(const PB_HUset_RearColliAstType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_RearColliAstType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_RearColliAstType::IsInitialized() const {
  return true;
}

void PB_HUset_RearColliAstType::InternalSwap(PB_HUset_RearColliAstType* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_rearcolliasttype_, other->hu_rearcolliasttype_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_RearColliAstType::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[145]);
}

// ===================================================================

class PB_VideoRequestParam::_Internal {
 public:
};

PB_VideoRequestParam::PB_VideoRequestParam(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_VideoRequestParam)
}
PB_VideoRequestParam::PB_VideoRequestParam(const PB_VideoRequestParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&triggertype_, &from.triggertype_,
    static_cast<size_t>(reinterpret_cast<char*>(&taskid_) -
    reinterpret_cast<char*>(&triggertype_)) + sizeof(taskid_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_VideoRequestParam)
}

inline void PB_VideoRequestParam::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&triggertype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&taskid_) -
    reinterpret_cast<char*>(&triggertype_)) + sizeof(taskid_));
}

PB_VideoRequestParam::~PB_VideoRequestParam() {
  // @@protoc_insertion_point(destructor:Soa.PB_VideoRequestParam)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_VideoRequestParam::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_VideoRequestParam::ArenaDtor(void* object) {
  PB_VideoRequestParam* _this = reinterpret_cast< PB_VideoRequestParam* >(object);
  (void)_this;
}
void PB_VideoRequestParam::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_VideoRequestParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_VideoRequestParam::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_VideoRequestParam)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&triggertype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&taskid_) -
      reinterpret_cast<char*>(&triggertype_)) + sizeof(taskid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_VideoRequestParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 triggerType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          triggertype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 beforeTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          beforetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 backTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          backtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 camera = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          camera_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 taskId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          taskid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_VideoRequestParam::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_VideoRequestParam)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 triggerType = 1;
  if (this->_internal_triggertype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_triggertype(), target);
  }

  // uint32 beforeTime = 2;
  if (this->_internal_beforetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_beforetime(), target);
  }

  // uint32 backTime = 3;
  if (this->_internal_backtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_backtime(), target);
  }

  // uint32 camera = 4;
  if (this->_internal_camera() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_camera(), target);
  }

  // uint64 taskId = 5;
  if (this->_internal_taskid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_taskid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_VideoRequestParam)
  return target;
}

size_t PB_VideoRequestParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_VideoRequestParam)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 triggerType = 1;
  if (this->_internal_triggertype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_triggertype());
  }

  // uint32 beforeTime = 2;
  if (this->_internal_beforetime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_beforetime());
  }

  // uint32 backTime = 3;
  if (this->_internal_backtime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_backtime());
  }

  // uint32 camera = 4;
  if (this->_internal_camera() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_camera());
  }

  // uint64 taskId = 5;
  if (this->_internal_taskid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_taskid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_VideoRequestParam::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_VideoRequestParam::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_VideoRequestParam::GetClassData() const { return &_class_data_; }

void PB_VideoRequestParam::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_VideoRequestParam *>(to)->MergeFrom(
      static_cast<const PB_VideoRequestParam &>(from));
}


void PB_VideoRequestParam::MergeFrom(const PB_VideoRequestParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_VideoRequestParam)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_triggertype() != 0) {
    _internal_set_triggertype(from._internal_triggertype());
  }
  if (from._internal_beforetime() != 0) {
    _internal_set_beforetime(from._internal_beforetime());
  }
  if (from._internal_backtime() != 0) {
    _internal_set_backtime(from._internal_backtime());
  }
  if (from._internal_camera() != 0) {
    _internal_set_camera(from._internal_camera());
  }
  if (from._internal_taskid() != 0) {
    _internal_set_taskid(from._internal_taskid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_VideoRequestParam::CopyFrom(const PB_VideoRequestParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_VideoRequestParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_VideoRequestParam::IsInitialized() const {
  return true;
}

void PB_VideoRequestParam::InternalSwap(PB_VideoRequestParam* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_VideoRequestParam, taskid_)
      + sizeof(PB_VideoRequestParam::taskid_)
      - PROTOBUF_FIELD_OFFSET(PB_VideoRequestParam, triggertype_)>(
          reinterpret_cast<char*>(&triggertype_),
          reinterpret_cast<char*>(&other->triggertype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_VideoRequestParam::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[146]);
}

// ===================================================================

class PB_ThrLiActCtrlInfo::_Internal {
 public:
};

PB_ThrLiActCtrlInfo::PB_ThrLiActCtrlInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ThrLiActCtrlInfo)
}
PB_ThrLiActCtrlInfo::PB_ThrLiActCtrlInfo(const PB_ThrLiActCtrlInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&frntactctrlst_, &from.frntactctrlst_,
    static_cast<size_t>(reinterpret_cast<char*>(&reactctrlst_) -
    reinterpret_cast<char*>(&frntactctrlst_)) + sizeof(reactctrlst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ThrLiActCtrlInfo)
}

inline void PB_ThrLiActCtrlInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&frntactctrlst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&reactctrlst_) -
    reinterpret_cast<char*>(&frntactctrlst_)) + sizeof(reactctrlst_));
}

PB_ThrLiActCtrlInfo::~PB_ThrLiActCtrlInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_ThrLiActCtrlInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ThrLiActCtrlInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ThrLiActCtrlInfo::ArenaDtor(void* object) {
  PB_ThrLiActCtrlInfo* _this = reinterpret_cast< PB_ThrLiActCtrlInfo* >(object);
  (void)_this;
}
void PB_ThrLiActCtrlInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ThrLiActCtrlInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ThrLiActCtrlInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ThrLiActCtrlInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&frntactctrlst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reactctrlst_) -
      reinterpret_cast<char*>(&frntactctrlst_)) + sizeof(reactctrlst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ThrLiActCtrlInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FrntActCtrlSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          frntactctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ReActCtrlSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          reactctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ThrLiActCtrlInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ThrLiActCtrlInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FrntActCtrlSt = 1;
  if (this->_internal_frntactctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_frntactctrlst(), target);
  }

  // uint32 ReActCtrlSt = 2;
  if (this->_internal_reactctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_reactctrlst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ThrLiActCtrlInfo)
  return target;
}

size_t PB_ThrLiActCtrlInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ThrLiActCtrlInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FrntActCtrlSt = 1;
  if (this->_internal_frntactctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_frntactctrlst());
  }

  // uint32 ReActCtrlSt = 2;
  if (this->_internal_reactctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reactctrlst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ThrLiActCtrlInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ThrLiActCtrlInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ThrLiActCtrlInfo::GetClassData() const { return &_class_data_; }

void PB_ThrLiActCtrlInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ThrLiActCtrlInfo *>(to)->MergeFrom(
      static_cast<const PB_ThrLiActCtrlInfo &>(from));
}


void PB_ThrLiActCtrlInfo::MergeFrom(const PB_ThrLiActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ThrLiActCtrlInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_frntactctrlst() != 0) {
    _internal_set_frntactctrlst(from._internal_frntactctrlst());
  }
  if (from._internal_reactctrlst() != 0) {
    _internal_set_reactctrlst(from._internal_reactctrlst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ThrLiActCtrlInfo::CopyFrom(const PB_ThrLiActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ThrLiActCtrlInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ThrLiActCtrlInfo::IsInitialized() const {
  return true;
}

void PB_ThrLiActCtrlInfo::InternalSwap(PB_ThrLiActCtrlInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ThrLiActCtrlInfo, reactctrlst_)
      + sizeof(PB_ThrLiActCtrlInfo::reactctrlst_)
      - PROTOBUF_FIELD_OFFSET(PB_ThrLiActCtrlInfo, frntactctrlst_)>(
          reinterpret_cast<char*>(&frntactctrlst_),
          reinterpret_cast<char*>(&other->frntactctrlst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ThrLiActCtrlInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[147]);
}

// ===================================================================

class PB_TurnLiKeySwtSt::_Internal {
 public:
};

PB_TurnLiKeySwtSt::PB_TurnLiKeySwtSt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TurnLiKeySwtSt)
}
PB_TurnLiKeySwtSt::PB_TurnLiKeySwtSt(const PB_TurnLiKeySwtSt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&turnliswtst_, &from.turnliswtst_,
    static_cast<size_t>(reinterpret_cast<char*>(&turnlikeyswt_) -
    reinterpret_cast<char*>(&turnliswtst_)) + sizeof(turnlikeyswt_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TurnLiKeySwtSt)
}

inline void PB_TurnLiKeySwtSt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&turnliswtst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&turnlikeyswt_) -
    reinterpret_cast<char*>(&turnliswtst_)) + sizeof(turnlikeyswt_));
}

PB_TurnLiKeySwtSt::~PB_TurnLiKeySwtSt() {
  // @@protoc_insertion_point(destructor:Soa.PB_TurnLiKeySwtSt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TurnLiKeySwtSt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TurnLiKeySwtSt::ArenaDtor(void* object) {
  PB_TurnLiKeySwtSt* _this = reinterpret_cast< PB_TurnLiKeySwtSt* >(object);
  (void)_this;
}
void PB_TurnLiKeySwtSt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TurnLiKeySwtSt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TurnLiKeySwtSt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TurnLiKeySwtSt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&turnliswtst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&turnlikeyswt_) -
      reinterpret_cast<char*>(&turnliswtst_)) + sizeof(turnlikeyswt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TurnLiKeySwtSt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 TurnLiSwtSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          turnliswtst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TurnLiKeySwt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          turnlikeyswt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TurnLiKeySwtSt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TurnLiKeySwtSt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 TurnLiSwtSt = 1;
  if (this->_internal_turnliswtst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_turnliswtst(), target);
  }

  // uint32 TurnLiKeySwt = 2;
  if (this->_internal_turnlikeyswt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_turnlikeyswt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TurnLiKeySwtSt)
  return target;
}

size_t PB_TurnLiKeySwtSt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TurnLiKeySwtSt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 TurnLiSwtSt = 1;
  if (this->_internal_turnliswtst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_turnliswtst());
  }

  // uint32 TurnLiKeySwt = 2;
  if (this->_internal_turnlikeyswt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_turnlikeyswt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TurnLiKeySwtSt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TurnLiKeySwtSt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TurnLiKeySwtSt::GetClassData() const { return &_class_data_; }

void PB_TurnLiKeySwtSt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TurnLiKeySwtSt *>(to)->MergeFrom(
      static_cast<const PB_TurnLiKeySwtSt &>(from));
}


void PB_TurnLiKeySwtSt::MergeFrom(const PB_TurnLiKeySwtSt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TurnLiKeySwtSt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_turnliswtst() != 0) {
    _internal_set_turnliswtst(from._internal_turnliswtst());
  }
  if (from._internal_turnlikeyswt() != 0) {
    _internal_set_turnlikeyswt(from._internal_turnlikeyswt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TurnLiKeySwtSt::CopyFrom(const PB_TurnLiKeySwtSt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TurnLiKeySwtSt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TurnLiKeySwtSt::IsInitialized() const {
  return true;
}

void PB_TurnLiKeySwtSt::InternalSwap(PB_TurnLiKeySwtSt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_TurnLiKeySwtSt, turnlikeyswt_)
      + sizeof(PB_TurnLiKeySwtSt::turnlikeyswt_)
      - PROTOBUF_FIELD_OFFSET(PB_TurnLiKeySwtSt, turnliswtst_)>(
          reinterpret_cast<char*>(&turnliswtst_),
          reinterpret_cast<char*>(&other->turnliswtst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TurnLiKeySwtSt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[148]);
}

// ===================================================================

class PB_SenMoInfoSet::_Internal {
 public:
};

PB_SenMoInfoSet::PB_SenMoInfoSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_SenMoInfoSet)
}
PB_SenMoInfoSet::PB_SenMoInfoSet(const PB_SenMoInfoSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&senopenmode_, &from.senopenmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&senelecfen_) -
    reinterpret_cast<char*>(&senopenmode_)) + sizeof(senelecfen_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_SenMoInfoSet)
}

inline void PB_SenMoInfoSet::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&senopenmode_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&senelecfen_) -
    reinterpret_cast<char*>(&senopenmode_)) + sizeof(senelecfen_));
}

PB_SenMoInfoSet::~PB_SenMoInfoSet() {
  // @@protoc_insertion_point(destructor:Soa.PB_SenMoInfoSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_SenMoInfoSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_SenMoInfoSet::ArenaDtor(void* object) {
  PB_SenMoInfoSet* _this = reinterpret_cast< PB_SenMoInfoSet* >(object);
  (void)_this;
}
void PB_SenMoInfoSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_SenMoInfoSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_SenMoInfoSet::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_SenMoInfoSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&senopenmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&senelecfen_) -
      reinterpret_cast<char*>(&senopenmode_)) + sizeof(senelecfen_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_SenMoInfoSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 SenOpenMode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          senopenmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SenElecFen = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          senelecfen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_SenMoInfoSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_SenMoInfoSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SenOpenMode = 1;
  if (this->_internal_senopenmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_senopenmode(), target);
  }

  // uint32 SenElecFen = 2;
  if (this->_internal_senelecfen() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_senelecfen(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_SenMoInfoSet)
  return target;
}

size_t PB_SenMoInfoSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_SenMoInfoSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 SenOpenMode = 1;
  if (this->_internal_senopenmode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_senopenmode());
  }

  // uint32 SenElecFen = 2;
  if (this->_internal_senelecfen() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_senelecfen());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_SenMoInfoSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_SenMoInfoSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_SenMoInfoSet::GetClassData() const { return &_class_data_; }

void PB_SenMoInfoSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_SenMoInfoSet *>(to)->MergeFrom(
      static_cast<const PB_SenMoInfoSet &>(from));
}


void PB_SenMoInfoSet::MergeFrom(const PB_SenMoInfoSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_SenMoInfoSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_senopenmode() != 0) {
    _internal_set_senopenmode(from._internal_senopenmode());
  }
  if (from._internal_senelecfen() != 0) {
    _internal_set_senelecfen(from._internal_senelecfen());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_SenMoInfoSet::CopyFrom(const PB_SenMoInfoSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_SenMoInfoSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_SenMoInfoSet::IsInitialized() const {
  return true;
}

void PB_SenMoInfoSet::InternalSwap(PB_SenMoInfoSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_SenMoInfoSet, senelecfen_)
      + sizeof(PB_SenMoInfoSet::senelecfen_)
      - PROTOBUF_FIELD_OFFSET(PB_SenMoInfoSet, senopenmode_)>(
          reinterpret_cast<char*>(&senopenmode_),
          reinterpret_cast<char*>(&other->senopenmode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_SenMoInfoSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[149]);
}

// ===================================================================

class PB_MFSFltStInfo::_Internal {
 public:
};

PB_MFSFltStInfo::PB_MFSFltStInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_MFSFltStInfo)
}
PB_MFSFltStInfo::PB_MFSFltStInfo(const PB_MFSFltStInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&diaginfosw_, &from.diaginfosw_,
    static_cast<size_t>(reinterpret_cast<char*>(&lincommerr_) -
    reinterpret_cast<char*>(&diaginfosw_)) + sizeof(lincommerr_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_MFSFltStInfo)
}

inline void PB_MFSFltStInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&diaginfosw_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&lincommerr_) -
    reinterpret_cast<char*>(&diaginfosw_)) + sizeof(lincommerr_));
}

PB_MFSFltStInfo::~PB_MFSFltStInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_MFSFltStInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_MFSFltStInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_MFSFltStInfo::ArenaDtor(void* object) {
  PB_MFSFltStInfo* _this = reinterpret_cast< PB_MFSFltStInfo* >(object);
  (void)_this;
}
void PB_MFSFltStInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_MFSFltStInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_MFSFltStInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_MFSFltStInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&diaginfosw_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lincommerr_) -
      reinterpret_cast<char*>(&diaginfosw_)) + sizeof(lincommerr_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_MFSFltStInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 DiagInfoSW = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          diaginfosw_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LINCommErr = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          lincommerr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_MFSFltStInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_MFSFltStInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 DiagInfoSW = 1;
  if (this->_internal_diaginfosw() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_diaginfosw(), target);
  }

  // uint32 LINCommErr = 2;
  if (this->_internal_lincommerr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_lincommerr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_MFSFltStInfo)
  return target;
}

size_t PB_MFSFltStInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_MFSFltStInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 DiagInfoSW = 1;
  if (this->_internal_diaginfosw() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_diaginfosw());
  }

  // uint32 LINCommErr = 2;
  if (this->_internal_lincommerr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lincommerr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_MFSFltStInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_MFSFltStInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_MFSFltStInfo::GetClassData() const { return &_class_data_; }

void PB_MFSFltStInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_MFSFltStInfo *>(to)->MergeFrom(
      static_cast<const PB_MFSFltStInfo &>(from));
}


void PB_MFSFltStInfo::MergeFrom(const PB_MFSFltStInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_MFSFltStInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_diaginfosw() != 0) {
    _internal_set_diaginfosw(from._internal_diaginfosw());
  }
  if (from._internal_lincommerr() != 0) {
    _internal_set_lincommerr(from._internal_lincommerr());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_MFSFltStInfo::CopyFrom(const PB_MFSFltStInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_MFSFltStInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_MFSFltStInfo::IsInitialized() const {
  return true;
}

void PB_MFSFltStInfo::InternalSwap(PB_MFSFltStInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_MFSFltStInfo, lincommerr_)
      + sizeof(PB_MFSFltStInfo::lincommerr_)
      - PROTOBUF_FIELD_OFFSET(PB_MFSFltStInfo, diaginfosw_)>(
          reinterpret_cast<char*>(&diaginfosw_),
          reinterpret_cast<char*>(&other->diaginfosw_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_MFSFltStInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[150]);
}

// ===================================================================

class PB_HUset_AbsOverSpdWarnOffset::_Internal {
 public:
};

PB_HUset_AbsOverSpdWarnOffset::PB_HUset_AbsOverSpdWarnOffset(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_AbsOverSpdWarnOffset)
}
PB_HUset_AbsOverSpdWarnOffset::PB_HUset_AbsOverSpdWarnOffset(const PB_HUset_AbsOverSpdWarnOffset& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_absoverspdwarnoffset_ = from.hu_absoverspdwarnoffset_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_AbsOverSpdWarnOffset)
}

inline void PB_HUset_AbsOverSpdWarnOffset::SharedCtor() {
hu_absoverspdwarnoffset_ = 0u;
}

PB_HUset_AbsOverSpdWarnOffset::~PB_HUset_AbsOverSpdWarnOffset() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_AbsOverSpdWarnOffset)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_AbsOverSpdWarnOffset::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_AbsOverSpdWarnOffset::ArenaDtor(void* object) {
  PB_HUset_AbsOverSpdWarnOffset* _this = reinterpret_cast< PB_HUset_AbsOverSpdWarnOffset* >(object);
  (void)_this;
}
void PB_HUset_AbsOverSpdWarnOffset::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_AbsOverSpdWarnOffset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_AbsOverSpdWarnOffset::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_AbsOverSpdWarnOffset)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_absoverspdwarnoffset_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_AbsOverSpdWarnOffset::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_AbsOverSpdWarnOffset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_absoverspdwarnoffset_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_AbsOverSpdWarnOffset::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_AbsOverSpdWarnOffset)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_AbsOverSpdWarnOffset = 1;
  if (this->_internal_hu_absoverspdwarnoffset() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_absoverspdwarnoffset(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_AbsOverSpdWarnOffset)
  return target;
}

size_t PB_HUset_AbsOverSpdWarnOffset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_AbsOverSpdWarnOffset)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_AbsOverSpdWarnOffset = 1;
  if (this->_internal_hu_absoverspdwarnoffset() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_absoverspdwarnoffset());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_AbsOverSpdWarnOffset::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_AbsOverSpdWarnOffset::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_AbsOverSpdWarnOffset::GetClassData() const { return &_class_data_; }

void PB_HUset_AbsOverSpdWarnOffset::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_AbsOverSpdWarnOffset *>(to)->MergeFrom(
      static_cast<const PB_HUset_AbsOverSpdWarnOffset &>(from));
}


void PB_HUset_AbsOverSpdWarnOffset::MergeFrom(const PB_HUset_AbsOverSpdWarnOffset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_AbsOverSpdWarnOffset)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_absoverspdwarnoffset() != 0) {
    _internal_set_hu_absoverspdwarnoffset(from._internal_hu_absoverspdwarnoffset());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_AbsOverSpdWarnOffset::CopyFrom(const PB_HUset_AbsOverSpdWarnOffset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_AbsOverSpdWarnOffset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_AbsOverSpdWarnOffset::IsInitialized() const {
  return true;
}

void PB_HUset_AbsOverSpdWarnOffset::InternalSwap(PB_HUset_AbsOverSpdWarnOffset* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_absoverspdwarnoffset_, other->hu_absoverspdwarnoffset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_AbsOverSpdWarnOffset::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[151]);
}

// ===================================================================

class PB_uint16_Struct::_Internal {
 public:
};

PB_uint16_Struct::PB_uint16_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_uint16_Struct)
}
PB_uint16_Struct::PB_uint16_Struct(const PB_uint16_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_uint16_Struct)
}

inline void PB_uint16_Struct::SharedCtor() {
data_ = 0u;
}

PB_uint16_Struct::~PB_uint16_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_uint16_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_uint16_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_uint16_Struct::ArenaDtor(void* object) {
  PB_uint16_Struct* _this = reinterpret_cast< PB_uint16_Struct* >(object);
  (void)_this;
}
void PB_uint16_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_uint16_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_uint16_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_uint16_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_uint16_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_uint16_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_uint16_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->_internal_data() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_uint16_Struct)
  return target;
}

size_t PB_uint16_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_uint16_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 data = 1;
  if (this->_internal_data() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_data());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_uint16_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_uint16_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_uint16_Struct::GetClassData() const { return &_class_data_; }

void PB_uint16_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_uint16_Struct *>(to)->MergeFrom(
      static_cast<const PB_uint16_Struct &>(from));
}


void PB_uint16_Struct::MergeFrom(const PB_uint16_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_uint16_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_data() != 0) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_uint16_Struct::CopyFrom(const PB_uint16_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_uint16_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_uint16_Struct::IsInitialized() const {
  return true;
}

void PB_uint16_Struct::InternalSwap(PB_uint16_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_uint16_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[152]);
}

// ===================================================================

class PB_LogoActCtrlInfo::_Internal {
 public:
};

PB_LogoActCtrlInfo::PB_LogoActCtrlInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_LogoActCtrlInfo)
}
PB_LogoActCtrlInfo::PB_LogoActCtrlInfo(const PB_LogoActCtrlInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&frntactctrlst_, &from.frntactctrlst_,
    static_cast<size_t>(reinterpret_cast<char*>(&reactctrlst_) -
    reinterpret_cast<char*>(&frntactctrlst_)) + sizeof(reactctrlst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_LogoActCtrlInfo)
}

inline void PB_LogoActCtrlInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&frntactctrlst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&reactctrlst_) -
    reinterpret_cast<char*>(&frntactctrlst_)) + sizeof(reactctrlst_));
}

PB_LogoActCtrlInfo::~PB_LogoActCtrlInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_LogoActCtrlInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_LogoActCtrlInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_LogoActCtrlInfo::ArenaDtor(void* object) {
  PB_LogoActCtrlInfo* _this = reinterpret_cast< PB_LogoActCtrlInfo* >(object);
  (void)_this;
}
void PB_LogoActCtrlInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_LogoActCtrlInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_LogoActCtrlInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_LogoActCtrlInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&frntactctrlst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reactctrlst_) -
      reinterpret_cast<char*>(&frntactctrlst_)) + sizeof(reactctrlst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_LogoActCtrlInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 FrntActCtrlSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          frntactctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 ReActCtrlSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          reactctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_LogoActCtrlInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_LogoActCtrlInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 FrntActCtrlSt = 1;
  if (this->_internal_frntactctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_frntactctrlst(), target);
  }

  // uint32 ReActCtrlSt = 2;
  if (this->_internal_reactctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_reactctrlst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_LogoActCtrlInfo)
  return target;
}

size_t PB_LogoActCtrlInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_LogoActCtrlInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 FrntActCtrlSt = 1;
  if (this->_internal_frntactctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_frntactctrlst());
  }

  // uint32 ReActCtrlSt = 2;
  if (this->_internal_reactctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reactctrlst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_LogoActCtrlInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_LogoActCtrlInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_LogoActCtrlInfo::GetClassData() const { return &_class_data_; }

void PB_LogoActCtrlInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_LogoActCtrlInfo *>(to)->MergeFrom(
      static_cast<const PB_LogoActCtrlInfo &>(from));
}


void PB_LogoActCtrlInfo::MergeFrom(const PB_LogoActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_LogoActCtrlInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_frntactctrlst() != 0) {
    _internal_set_frntactctrlst(from._internal_frntactctrlst());
  }
  if (from._internal_reactctrlst() != 0) {
    _internal_set_reactctrlst(from._internal_reactctrlst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_LogoActCtrlInfo::CopyFrom(const PB_LogoActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_LogoActCtrlInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LogoActCtrlInfo::IsInitialized() const {
  return true;
}

void PB_LogoActCtrlInfo::InternalSwap(PB_LogoActCtrlInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_LogoActCtrlInfo, reactctrlst_)
      + sizeof(PB_LogoActCtrlInfo::reactctrlst_)
      - PROTOBUF_FIELD_OFFSET(PB_LogoActCtrlInfo, frntactctrlst_)>(
          reinterpret_cast<char*>(&frntactctrlst_),
          reinterpret_cast<char*>(&other->frntactctrlst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_LogoActCtrlInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[153]);
}

// ===================================================================

class PB_HornCtrlCmd::_Internal {
 public:
};

PB_HornCtrlCmd::PB_HornCtrlCmd(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HornCtrlCmd)
}
PB_HornCtrlCmd::PB_HornCtrlCmd(const PB_HornCtrlCmd& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&horncmdprio_, &from.horncmdprio_,
    static_cast<size_t>(reinterpret_cast<char*>(&hornofftime_) -
    reinterpret_cast<char*>(&horncmdprio_)) + sizeof(hornofftime_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HornCtrlCmd)
}

inline void PB_HornCtrlCmd::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&horncmdprio_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&hornofftime_) -
    reinterpret_cast<char*>(&horncmdprio_)) + sizeof(hornofftime_));
}

PB_HornCtrlCmd::~PB_HornCtrlCmd() {
  // @@protoc_insertion_point(destructor:Soa.PB_HornCtrlCmd)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HornCtrlCmd::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HornCtrlCmd::ArenaDtor(void* object) {
  PB_HornCtrlCmd* _this = reinterpret_cast< PB_HornCtrlCmd* >(object);
  (void)_this;
}
void PB_HornCtrlCmd::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HornCtrlCmd::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HornCtrlCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HornCtrlCmd)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&horncmdprio_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hornofftime_) -
      reinterpret_cast<char*>(&horncmdprio_)) + sizeof(hornofftime_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HornCtrlCmd::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HornCmdPrio = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          horncmdprio_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 HornCmd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          horncmd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 HornCount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          horncount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 HornOnTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          hornontime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 HornOffTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          hornofftime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HornCtrlCmd::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HornCtrlCmd)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HornCmdPrio = 1;
  if (this->_internal_horncmdprio() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_horncmdprio(), target);
  }

  // uint32 HornCmd = 2;
  if (this->_internal_horncmd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_horncmd(), target);
  }

  // uint32 HornCount = 3;
  if (this->_internal_horncount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_horncount(), target);
  }

  // uint32 HornOnTime = 4;
  if (this->_internal_hornontime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_hornontime(), target);
  }

  // uint32 HornOffTime = 5;
  if (this->_internal_hornofftime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_hornofftime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HornCtrlCmd)
  return target;
}

size_t PB_HornCtrlCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HornCtrlCmd)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HornCmdPrio = 1;
  if (this->_internal_horncmdprio() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_horncmdprio());
  }

  // uint32 HornCmd = 2;
  if (this->_internal_horncmd() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_horncmd());
  }

  // uint32 HornCount = 3;
  if (this->_internal_horncount() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_horncount());
  }

  // uint32 HornOnTime = 4;
  if (this->_internal_hornontime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hornontime());
  }

  // uint32 HornOffTime = 5;
  if (this->_internal_hornofftime() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hornofftime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HornCtrlCmd::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HornCtrlCmd::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HornCtrlCmd::GetClassData() const { return &_class_data_; }

void PB_HornCtrlCmd::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HornCtrlCmd *>(to)->MergeFrom(
      static_cast<const PB_HornCtrlCmd &>(from));
}


void PB_HornCtrlCmd::MergeFrom(const PB_HornCtrlCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HornCtrlCmd)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_horncmdprio() != 0) {
    _internal_set_horncmdprio(from._internal_horncmdprio());
  }
  if (from._internal_horncmd() != 0) {
    _internal_set_horncmd(from._internal_horncmd());
  }
  if (from._internal_horncount() != 0) {
    _internal_set_horncount(from._internal_horncount());
  }
  if (from._internal_hornontime() != 0) {
    _internal_set_hornontime(from._internal_hornontime());
  }
  if (from._internal_hornofftime() != 0) {
    _internal_set_hornofftime(from._internal_hornofftime());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HornCtrlCmd::CopyFrom(const PB_HornCtrlCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HornCtrlCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HornCtrlCmd::IsInitialized() const {
  return true;
}

void PB_HornCtrlCmd::InternalSwap(PB_HornCtrlCmd* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_HornCtrlCmd, hornofftime_)
      + sizeof(PB_HornCtrlCmd::hornofftime_)
      - PROTOBUF_FIELD_OFFSET(PB_HornCtrlCmd, horncmdprio_)>(
          reinterpret_cast<char*>(&horncmdprio_),
          reinterpret_cast<char*>(&other->horncmdprio_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HornCtrlCmd::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[154]);
}

// ===================================================================

class PB_DRLActCtrlInfo::_Internal {
 public:
};

PB_DRLActCtrlInfo::PB_DRLActCtrlInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_DRLActCtrlInfo)
}
PB_DRLActCtrlInfo::PB_DRLActCtrlInfo(const PB_DRLActCtrlInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_actctrlst_, &from.le_actctrlst_,
    static_cast<size_t>(reinterpret_cast<char*>(&ri_actctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_DRLActCtrlInfo)
}

inline void PB_DRLActCtrlInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_actctrlst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ri_actctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
}

PB_DRLActCtrlInfo::~PB_DRLActCtrlInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_DRLActCtrlInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_DRLActCtrlInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_DRLActCtrlInfo::ArenaDtor(void* object) {
  PB_DRLActCtrlInfo* _this = reinterpret_cast< PB_DRLActCtrlInfo* >(object);
  (void)_this;
}
void PB_DRLActCtrlInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_DRLActCtrlInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_DRLActCtrlInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_DRLActCtrlInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_actctrlst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ri_actctrlst_) -
      reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_DRLActCtrlInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_ActCtrlSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_ActCtrlSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_DRLActCtrlInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_DRLActCtrlInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_actctrlst(), target);
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_actctrlst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_DRLActCtrlInfo)
  return target;
}

size_t PB_DRLActCtrlInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_DRLActCtrlInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_actctrlst());
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_actctrlst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_DRLActCtrlInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_DRLActCtrlInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_DRLActCtrlInfo::GetClassData() const { return &_class_data_; }

void PB_DRLActCtrlInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_DRLActCtrlInfo *>(to)->MergeFrom(
      static_cast<const PB_DRLActCtrlInfo &>(from));
}


void PB_DRLActCtrlInfo::MergeFrom(const PB_DRLActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_DRLActCtrlInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_actctrlst() != 0) {
    _internal_set_le_actctrlst(from._internal_le_actctrlst());
  }
  if (from._internal_ri_actctrlst() != 0) {
    _internal_set_ri_actctrlst(from._internal_ri_actctrlst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_DRLActCtrlInfo::CopyFrom(const PB_DRLActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_DRLActCtrlInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_DRLActCtrlInfo::IsInitialized() const {
  return true;
}

void PB_DRLActCtrlInfo::InternalSwap(PB_DRLActCtrlInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_DRLActCtrlInfo, ri_actctrlst_)
      + sizeof(PB_DRLActCtrlInfo::ri_actctrlst_)
      - PROTOBUF_FIELD_OFFSET(PB_DRLActCtrlInfo, le_actctrlst_)>(
          reinterpret_cast<char*>(&le_actctrlst_),
          reinterpret_cast<char*>(&other->le_actctrlst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_DRLActCtrlInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[155]);
}

// ===================================================================

class PB_AD_APADynguidanceData::_Internal {
 public:
  static const ::Soa::PB_TarposeData& ad_apatarpose(const PB_AD_APADynguidanceData* msg);
};

const ::Soa::PB_TarposeData&
PB_AD_APADynguidanceData::_Internal::ad_apatarpose(const PB_AD_APADynguidanceData* msg) {
  return *msg->ad_apatarpose_;
}
PB_AD_APADynguidanceData::PB_AD_APADynguidanceData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  ad_apaguidepiont_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_APADynguidanceData)
}
PB_AD_APADynguidanceData::PB_AD_APADynguidanceData(const PB_AD_APADynguidanceData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ad_apaguidepiont_(from.ad_apaguidepiont_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_ad_apatarpose()) {
    ad_apatarpose_ = new ::Soa::PB_TarposeData(*from.ad_apatarpose_);
  } else {
    ad_apatarpose_ = nullptr;
  }
  ::memcpy(&ad_apasyspahflg_, &from.ad_apasyspahflg_,
    static_cast<size_t>(reinterpret_cast<char*>(&ad_aparoadtrfcinfo_) -
    reinterpret_cast<char*>(&ad_apasyspahflg_)) + sizeof(ad_aparoadtrfcinfo_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_APADynguidanceData)
}

inline void PB_AD_APADynguidanceData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ad_apatarpose_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ad_aparoadtrfcinfo_) -
    reinterpret_cast<char*>(&ad_apatarpose_)) + sizeof(ad_aparoadtrfcinfo_));
}

PB_AD_APADynguidanceData::~PB_AD_APADynguidanceData() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_APADynguidanceData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_APADynguidanceData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete ad_apatarpose_;
}

void PB_AD_APADynguidanceData::ArenaDtor(void* object) {
  PB_AD_APADynguidanceData* _this = reinterpret_cast< PB_AD_APADynguidanceData* >(object);
  (void)_this;
}
void PB_AD_APADynguidanceData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_APADynguidanceData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_APADynguidanceData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_APADynguidanceData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ad_apaguidepiont_.Clear();
  if (GetArenaForAllocation() == nullptr && ad_apatarpose_ != nullptr) {
    delete ad_apatarpose_;
  }
  ad_apatarpose_ = nullptr;
  ::memset(&ad_apasyspahflg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ad_aparoadtrfcinfo_) -
      reinterpret_cast<char*>(&ad_apasyspahflg_)) + sizeof(ad_aparoadtrfcinfo_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_APADynguidanceData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_APASysPahFlg = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_apasyspahflg_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float AD_APARemainDst = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          ad_aparemaindst_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // repeated .Soa.PB_Point2DStruct AD_APAGuidePiont = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ad_apaguidepiont(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .Soa.PB_TarposeData AD_APATarPose = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ad_apatarpose(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APARoadTrfcInfo = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          ad_aparoadtrfcinfo_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_APADynguidanceData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_APADynguidanceData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_APASysPahFlg = 1;
  if (this->_internal_ad_apasyspahflg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_apasyspahflg(), target);
  }

  // float AD_APARemainDst = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ad_aparemaindst = this->_internal_ad_aparemaindst();
  uint32_t raw_ad_aparemaindst;
  memcpy(&raw_ad_aparemaindst, &tmp_ad_aparemaindst, sizeof(tmp_ad_aparemaindst));
  if (raw_ad_aparemaindst != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_ad_aparemaindst(), target);
  }

  // repeated .Soa.PB_Point2DStruct AD_APAGuidePiont = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ad_apaguidepiont_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_ad_apaguidepiont(i), target, stream);
  }

  // .Soa.PB_TarposeData AD_APATarPose = 4;
  if (this->_internal_has_ad_apatarpose()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::ad_apatarpose(this), target, stream);
  }

  // uint32 AD_APARoadTrfcInfo = 5;
  if (this->_internal_ad_aparoadtrfcinfo() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_ad_aparoadtrfcinfo(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_APADynguidanceData)
  return target;
}

size_t PB_AD_APADynguidanceData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_APADynguidanceData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct AD_APAGuidePiont = 3;
  total_size += 1UL * this->_internal_ad_apaguidepiont_size();
  for (const auto& msg : this->ad_apaguidepiont_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Soa.PB_TarposeData AD_APATarPose = 4;
  if (this->_internal_has_ad_apatarpose()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *ad_apatarpose_);
  }

  // uint32 AD_APASysPahFlg = 1;
  if (this->_internal_ad_apasyspahflg() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apasyspahflg());
  }

  // float AD_APARemainDst = 2;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ad_aparemaindst = this->_internal_ad_aparemaindst();
  uint32_t raw_ad_aparemaindst;
  memcpy(&raw_ad_aparemaindst, &tmp_ad_aparemaindst, sizeof(tmp_ad_aparemaindst));
  if (raw_ad_aparemaindst != 0) {
    total_size += 1 + 4;
  }

  // uint32 AD_APARoadTrfcInfo = 5;
  if (this->_internal_ad_aparoadtrfcinfo() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_aparoadtrfcinfo());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_APADynguidanceData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_APADynguidanceData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_APADynguidanceData::GetClassData() const { return &_class_data_; }

void PB_AD_APADynguidanceData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_APADynguidanceData *>(to)->MergeFrom(
      static_cast<const PB_AD_APADynguidanceData &>(from));
}


void PB_AD_APADynguidanceData::MergeFrom(const PB_AD_APADynguidanceData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_APADynguidanceData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  ad_apaguidepiont_.MergeFrom(from.ad_apaguidepiont_);
  if (from._internal_has_ad_apatarpose()) {
    _internal_mutable_ad_apatarpose()->::Soa::PB_TarposeData::MergeFrom(from._internal_ad_apatarpose());
  }
  if (from._internal_ad_apasyspahflg() != 0) {
    _internal_set_ad_apasyspahflg(from._internal_ad_apasyspahflg());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_ad_aparemaindst = from._internal_ad_aparemaindst();
  uint32_t raw_ad_aparemaindst;
  memcpy(&raw_ad_aparemaindst, &tmp_ad_aparemaindst, sizeof(tmp_ad_aparemaindst));
  if (raw_ad_aparemaindst != 0) {
    _internal_set_ad_aparemaindst(from._internal_ad_aparemaindst());
  }
  if (from._internal_ad_aparoadtrfcinfo() != 0) {
    _internal_set_ad_aparoadtrfcinfo(from._internal_ad_aparoadtrfcinfo());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_APADynguidanceData::CopyFrom(const PB_AD_APADynguidanceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_APADynguidanceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_APADynguidanceData::IsInitialized() const {
  return true;
}

void PB_AD_APADynguidanceData::InternalSwap(PB_AD_APADynguidanceData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ad_apaguidepiont_.InternalSwap(&other->ad_apaguidepiont_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_AD_APADynguidanceData, ad_aparoadtrfcinfo_)
      + sizeof(PB_AD_APADynguidanceData::ad_aparoadtrfcinfo_)
      - PROTOBUF_FIELD_OFFSET(PB_AD_APADynguidanceData, ad_apatarpose_)>(
          reinterpret_cast<char*>(&ad_apatarpose_),
          reinterpret_cast<char*>(&other->ad_apatarpose_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_APADynguidanceData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[156]);
}

// ===================================================================

class PB_HUset_IACCFamlrRdModSwt::_Internal {
 public:
};

PB_HUset_IACCFamlrRdModSwt::PB_HUset_IACCFamlrRdModSwt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_IACCFamlrRdModSwt)
}
PB_HUset_IACCFamlrRdModSwt::PB_HUset_IACCFamlrRdModSwt(const PB_HUset_IACCFamlrRdModSwt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_iaccfamlrrdmodswt_ = from.hu_iaccfamlrrdmodswt_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_IACCFamlrRdModSwt)
}

inline void PB_HUset_IACCFamlrRdModSwt::SharedCtor() {
hu_iaccfamlrrdmodswt_ = 0u;
}

PB_HUset_IACCFamlrRdModSwt::~PB_HUset_IACCFamlrRdModSwt() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_IACCFamlrRdModSwt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_IACCFamlrRdModSwt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_IACCFamlrRdModSwt::ArenaDtor(void* object) {
  PB_HUset_IACCFamlrRdModSwt* _this = reinterpret_cast< PB_HUset_IACCFamlrRdModSwt* >(object);
  (void)_this;
}
void PB_HUset_IACCFamlrRdModSwt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_IACCFamlrRdModSwt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_IACCFamlrRdModSwt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_IACCFamlrRdModSwt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_iaccfamlrrdmodswt_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_IACCFamlrRdModSwt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_IACCFamlrRdModSwt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_iaccfamlrrdmodswt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_IACCFamlrRdModSwt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_IACCFamlrRdModSwt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_IACCFamlrRdModSwt = 1;
  if (this->_internal_hu_iaccfamlrrdmodswt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_iaccfamlrrdmodswt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_IACCFamlrRdModSwt)
  return target;
}

size_t PB_HUset_IACCFamlrRdModSwt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_IACCFamlrRdModSwt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_IACCFamlrRdModSwt = 1;
  if (this->_internal_hu_iaccfamlrrdmodswt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_iaccfamlrrdmodswt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_IACCFamlrRdModSwt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_IACCFamlrRdModSwt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_IACCFamlrRdModSwt::GetClassData() const { return &_class_data_; }

void PB_HUset_IACCFamlrRdModSwt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_IACCFamlrRdModSwt *>(to)->MergeFrom(
      static_cast<const PB_HUset_IACCFamlrRdModSwt &>(from));
}


void PB_HUset_IACCFamlrRdModSwt::MergeFrom(const PB_HUset_IACCFamlrRdModSwt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_IACCFamlrRdModSwt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_iaccfamlrrdmodswt() != 0) {
    _internal_set_hu_iaccfamlrrdmodswt(from._internal_hu_iaccfamlrrdmodswt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_IACCFamlrRdModSwt::CopyFrom(const PB_HUset_IACCFamlrRdModSwt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_IACCFamlrRdModSwt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_IACCFamlrRdModSwt::IsInitialized() const {
  return true;
}

void PB_HUset_IACCFamlrRdModSwt::InternalSwap(PB_HUset_IACCFamlrRdModSwt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_iaccfamlrrdmodswt_, other->hu_iaccfamlrrdmodswt_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_IACCFamlrRdModSwt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[157]);
}

// ===================================================================

class PB_OperationCode::_Internal {
 public:
};

PB_OperationCode::PB_OperationCode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_OperationCode)
}
PB_OperationCode::PB_OperationCode(const PB_OperationCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&request_id_, &from.request_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&counter_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(counter_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_OperationCode)
}

inline void PB_OperationCode::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&request_id_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&counter_) -
    reinterpret_cast<char*>(&request_id_)) + sizeof(counter_));
}

PB_OperationCode::~PB_OperationCode() {
  // @@protoc_insertion_point(destructor:Soa.PB_OperationCode)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_OperationCode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_OperationCode::ArenaDtor(void* object) {
  PB_OperationCode* _this = reinterpret_cast< PB_OperationCode* >(object);
  (void)_this;
}
void PB_OperationCode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_OperationCode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_OperationCode::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_OperationCode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&request_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&counter_) -
      reinterpret_cast<char*>(&request_id_)) + sizeof(counter_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_OperationCode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Request_ID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          request_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Session_ID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          session_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 VehField = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          vehfield_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SourceMod = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          sourcemod_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RtnCode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          rtncode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Counter = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          counter_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_OperationCode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_OperationCode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Request_ID = 1;
  if (this->_internal_request_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_request_id(), target);
  }

  // uint32 Session_ID = 2;
  if (this->_internal_session_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_session_id(), target);
  }

  // uint32 VehField = 3;
  if (this->_internal_vehfield() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_vehfield(), target);
  }

  // uint32 SourceMod = 4;
  if (this->_internal_sourcemod() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_sourcemod(), target);
  }

  // uint32 RtnCode = 5;
  if (this->_internal_rtncode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_rtncode(), target);
  }

  // uint32 Counter = 6;
  if (this->_internal_counter() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_counter(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_OperationCode)
  return target;
}

size_t PB_OperationCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_OperationCode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Request_ID = 1;
  if (this->_internal_request_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_request_id());
  }

  // uint32 Session_ID = 2;
  if (this->_internal_session_id() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_session_id());
  }

  // uint32 VehField = 3;
  if (this->_internal_vehfield() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vehfield());
  }

  // uint32 SourceMod = 4;
  if (this->_internal_sourcemod() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_sourcemod());
  }

  // uint32 RtnCode = 5;
  if (this->_internal_rtncode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_rtncode());
  }

  // uint32 Counter = 6;
  if (this->_internal_counter() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_counter());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_OperationCode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_OperationCode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_OperationCode::GetClassData() const { return &_class_data_; }

void PB_OperationCode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_OperationCode *>(to)->MergeFrom(
      static_cast<const PB_OperationCode &>(from));
}


void PB_OperationCode::MergeFrom(const PB_OperationCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_OperationCode)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_request_id() != 0) {
    _internal_set_request_id(from._internal_request_id());
  }
  if (from._internal_session_id() != 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  if (from._internal_vehfield() != 0) {
    _internal_set_vehfield(from._internal_vehfield());
  }
  if (from._internal_sourcemod() != 0) {
    _internal_set_sourcemod(from._internal_sourcemod());
  }
  if (from._internal_rtncode() != 0) {
    _internal_set_rtncode(from._internal_rtncode());
  }
  if (from._internal_counter() != 0) {
    _internal_set_counter(from._internal_counter());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_OperationCode::CopyFrom(const PB_OperationCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_OperationCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_OperationCode::IsInitialized() const {
  return true;
}

void PB_OperationCode::InternalSwap(PB_OperationCode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_OperationCode, counter_)
      + sizeof(PB_OperationCode::counter_)
      - PROTOBUF_FIELD_OFFSET(PB_OperationCode, request_id_)>(
          reinterpret_cast<char*>(&request_id_),
          reinterpret_cast<char*>(&other->request_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_OperationCode::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[158]);
}

// ===================================================================

class PB_AD_RedLightReEnSet::_Internal {
 public:
};

PB_AD_RedLightReEnSet::PB_AD_RedLightReEnSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_RedLightReEnSet)
}
PB_AD_RedLightReEnSet::PB_AD_RedLightReEnSet(const PB_AD_RedLightReEnSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ad_redlightremindenable_ = from.ad_redlightremindenable_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_RedLightReEnSet)
}

inline void PB_AD_RedLightReEnSet::SharedCtor() {
ad_redlightremindenable_ = 0u;
}

PB_AD_RedLightReEnSet::~PB_AD_RedLightReEnSet() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_RedLightReEnSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_RedLightReEnSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_AD_RedLightReEnSet::ArenaDtor(void* object) {
  PB_AD_RedLightReEnSet* _this = reinterpret_cast< PB_AD_RedLightReEnSet* >(object);
  (void)_this;
}
void PB_AD_RedLightReEnSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_RedLightReEnSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_RedLightReEnSet::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_RedLightReEnSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ad_redlightremindenable_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_RedLightReEnSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_RedLightRemindEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_redlightremindenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_RedLightReEnSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_RedLightReEnSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_RedLightRemindEnable = 1;
  if (this->_internal_ad_redlightremindenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_redlightremindenable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_RedLightReEnSet)
  return target;
}

size_t PB_AD_RedLightReEnSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_RedLightReEnSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_RedLightRemindEnable = 1;
  if (this->_internal_ad_redlightremindenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_redlightremindenable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_RedLightReEnSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_RedLightReEnSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_RedLightReEnSet::GetClassData() const { return &_class_data_; }

void PB_AD_RedLightReEnSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_RedLightReEnSet *>(to)->MergeFrom(
      static_cast<const PB_AD_RedLightReEnSet &>(from));
}


void PB_AD_RedLightReEnSet::MergeFrom(const PB_AD_RedLightReEnSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_RedLightReEnSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_redlightremindenable() != 0) {
    _internal_set_ad_redlightremindenable(from._internal_ad_redlightremindenable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_RedLightReEnSet::CopyFrom(const PB_AD_RedLightReEnSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_RedLightReEnSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_RedLightReEnSet::IsInitialized() const {
  return true;
}

void PB_AD_RedLightReEnSet::InternalSwap(PB_AD_RedLightReEnSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(ad_redlightremindenable_, other->ad_redlightremindenable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_RedLightReEnSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[159]);
}

// ===================================================================

class PB_AD_APADynrecommdData::_Internal {
 public:
};

PB_AD_APADynrecommdData::PB_AD_APADynrecommdData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_APADynrecommdData)
}
PB_AD_APADynrecommdData::PB_AD_APADynrecommdData(const PB_AD_APADynrecommdData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ad_apapocdirrecommd_, &from.ad_apapocdirrecommd_,
    static_cast<size_t>(reinterpret_cast<char*>(&ad_apacustavlsta_) -
    reinterpret_cast<char*>(&ad_apapocdirrecommd_)) + sizeof(ad_apacustavlsta_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_APADynrecommdData)
}

inline void PB_AD_APADynrecommdData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ad_apapocdirrecommd_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ad_apacustavlsta_) -
    reinterpret_cast<char*>(&ad_apapocdirrecommd_)) + sizeof(ad_apacustavlsta_));
}

PB_AD_APADynrecommdData::~PB_AD_APADynrecommdData() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_APADynrecommdData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_APADynrecommdData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_AD_APADynrecommdData::ArenaDtor(void* object) {
  PB_AD_APADynrecommdData* _this = reinterpret_cast< PB_AD_APADynrecommdData* >(object);
  (void)_this;
}
void PB_AD_APADynrecommdData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_APADynrecommdData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_APADynrecommdData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_APADynrecommdData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ad_apapocdirrecommd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ad_apacustavlsta_) -
      reinterpret_cast<char*>(&ad_apapocdirrecommd_)) + sizeof(ad_apacustavlsta_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_APADynrecommdData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_APAPocDirRecommd = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_apapocdirrecommd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APAParkinModeRecommd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ad_apaparkinmoderecommd_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APAGetOff = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ad_apagetoff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APACustAvlSta = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ad_apacustavlsta_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_APADynrecommdData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_APADynrecommdData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_APAPocDirRecommd = 1;
  if (this->_internal_ad_apapocdirrecommd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_apapocdirrecommd(), target);
  }

  // uint32 AD_APAParkinModeRecommd = 2;
  if (this->_internal_ad_apaparkinmoderecommd() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ad_apaparkinmoderecommd(), target);
  }

  // uint32 AD_APAGetOff = 3;
  if (this->_internal_ad_apagetoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ad_apagetoff(), target);
  }

  // uint32 AD_APACustAvlSta = 4;
  if (this->_internal_ad_apacustavlsta() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_ad_apacustavlsta(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_APADynrecommdData)
  return target;
}

size_t PB_AD_APADynrecommdData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_APADynrecommdData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_APAPocDirRecommd = 1;
  if (this->_internal_ad_apapocdirrecommd() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apapocdirrecommd());
  }

  // uint32 AD_APAParkinModeRecommd = 2;
  if (this->_internal_ad_apaparkinmoderecommd() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apaparkinmoderecommd());
  }

  // uint32 AD_APAGetOff = 3;
  if (this->_internal_ad_apagetoff() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apagetoff());
  }

  // uint32 AD_APACustAvlSta = 4;
  if (this->_internal_ad_apacustavlsta() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apacustavlsta());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_APADynrecommdData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_APADynrecommdData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_APADynrecommdData::GetClassData() const { return &_class_data_; }

void PB_AD_APADynrecommdData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_APADynrecommdData *>(to)->MergeFrom(
      static_cast<const PB_AD_APADynrecommdData &>(from));
}


void PB_AD_APADynrecommdData::MergeFrom(const PB_AD_APADynrecommdData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_APADynrecommdData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_apapocdirrecommd() != 0) {
    _internal_set_ad_apapocdirrecommd(from._internal_ad_apapocdirrecommd());
  }
  if (from._internal_ad_apaparkinmoderecommd() != 0) {
    _internal_set_ad_apaparkinmoderecommd(from._internal_ad_apaparkinmoderecommd());
  }
  if (from._internal_ad_apagetoff() != 0) {
    _internal_set_ad_apagetoff(from._internal_ad_apagetoff());
  }
  if (from._internal_ad_apacustavlsta() != 0) {
    _internal_set_ad_apacustavlsta(from._internal_ad_apacustavlsta());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_APADynrecommdData::CopyFrom(const PB_AD_APADynrecommdData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_APADynrecommdData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_APADynrecommdData::IsInitialized() const {
  return true;
}

void PB_AD_APADynrecommdData::InternalSwap(PB_AD_APADynrecommdData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_AD_APADynrecommdData, ad_apacustavlsta_)
      + sizeof(PB_AD_APADynrecommdData::ad_apacustavlsta_)
      - PROTOBUF_FIELD_OFFSET(PB_AD_APADynrecommdData, ad_apapocdirrecommd_)>(
          reinterpret_cast<char*>(&ad_apapocdirrecommd_),
          reinterpret_cast<char*>(&other->ad_apapocdirrecommd_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_APADynrecommdData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[160]);
}

// ===================================================================

class PB_TarposeData::_Internal {
 public:
};

PB_TarposeData::PB_TarposeData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TarposeData)
}
PB_TarposeData::PB_TarposeData(const PB_TarposeData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&theta_) -
    reinterpret_cast<char*>(&x_)) + sizeof(theta_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TarposeData)
}

inline void PB_TarposeData::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&theta_) -
    reinterpret_cast<char*>(&x_)) + sizeof(theta_));
}

PB_TarposeData::~PB_TarposeData() {
  // @@protoc_insertion_point(destructor:Soa.PB_TarposeData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TarposeData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TarposeData::ArenaDtor(void* object) {
  PB_TarposeData* _this = reinterpret_cast< PB_TarposeData* >(object);
  (void)_this;
}
void PB_TarposeData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TarposeData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TarposeData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TarposeData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&theta_) -
      reinterpret_cast<char*>(&x_)) + sizeof(theta_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TarposeData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float theta = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          theta_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TarposeData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TarposeData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
  }

  // float theta = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_theta = this->_internal_theta();
  uint32_t raw_theta;
  memcpy(&raw_theta, &tmp_theta, sizeof(tmp_theta));
  if (raw_theta != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_theta(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TarposeData)
  return target;
}

size_t PB_TarposeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TarposeData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_x());
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_y());
  }

  // float theta = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_theta = this->_internal_theta();
  uint32_t raw_theta;
  memcpy(&raw_theta, &tmp_theta, sizeof(tmp_theta));
  if (raw_theta != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TarposeData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TarposeData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TarposeData::GetClassData() const { return &_class_data_; }

void PB_TarposeData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TarposeData *>(to)->MergeFrom(
      static_cast<const PB_TarposeData &>(from));
}


void PB_TarposeData::MergeFrom(const PB_TarposeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TarposeData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _internal_set_y(from._internal_y());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_theta = from._internal_theta();
  uint32_t raw_theta;
  memcpy(&raw_theta, &tmp_theta, sizeof(tmp_theta));
  if (raw_theta != 0) {
    _internal_set_theta(from._internal_theta());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TarposeData::CopyFrom(const PB_TarposeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TarposeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TarposeData::IsInitialized() const {
  return true;
}

void PB_TarposeData::InternalSwap(PB_TarposeData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_TarposeData, theta_)
      + sizeof(PB_TarposeData::theta_)
      - PROTOBUF_FIELD_OFFSET(PB_TarposeData, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TarposeData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[161]);
}

// ===================================================================

class PB_HUset_UDLCEnable::_Internal {
 public:
};

PB_HUset_UDLCEnable::PB_HUset_UDLCEnable(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_UDLCEnable)
}
PB_HUset_UDLCEnable::PB_HUset_UDLCEnable(const PB_HUset_UDLCEnable& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_udlcenable_ = from.hu_udlcenable_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_UDLCEnable)
}

inline void PB_HUset_UDLCEnable::SharedCtor() {
hu_udlcenable_ = 0u;
}

PB_HUset_UDLCEnable::~PB_HUset_UDLCEnable() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_UDLCEnable)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_UDLCEnable::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_UDLCEnable::ArenaDtor(void* object) {
  PB_HUset_UDLCEnable* _this = reinterpret_cast< PB_HUset_UDLCEnable* >(object);
  (void)_this;
}
void PB_HUset_UDLCEnable::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_UDLCEnable::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_UDLCEnable::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_UDLCEnable)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_udlcenable_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_UDLCEnable::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_UDLCEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_udlcenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_UDLCEnable::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_UDLCEnable)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_UDLCEnable = 1;
  if (this->_internal_hu_udlcenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_udlcenable(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_UDLCEnable)
  return target;
}

size_t PB_HUset_UDLCEnable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_UDLCEnable)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_UDLCEnable = 1;
  if (this->_internal_hu_udlcenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_udlcenable());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_UDLCEnable::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_UDLCEnable::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_UDLCEnable::GetClassData() const { return &_class_data_; }

void PB_HUset_UDLCEnable::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_UDLCEnable *>(to)->MergeFrom(
      static_cast<const PB_HUset_UDLCEnable &>(from));
}


void PB_HUset_UDLCEnable::MergeFrom(const PB_HUset_UDLCEnable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_UDLCEnable)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_udlcenable() != 0) {
    _internal_set_hu_udlcenable(from._internal_hu_udlcenable());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_UDLCEnable::CopyFrom(const PB_HUset_UDLCEnable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_UDLCEnable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_UDLCEnable::IsInitialized() const {
  return true;
}

void PB_HUset_UDLCEnable::InternalSwap(PB_HUset_UDLCEnable* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_udlcenable_, other->hu_udlcenable_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_UDLCEnable::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[162]);
}

// ===================================================================

class PB_C2_IACCFamlrRdModSwtFbSet::_Internal {
 public:
};

PB_C2_IACCFamlrRdModSwtFbSet::PB_C2_IACCFamlrRdModSwtFbSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_C2_IACCFamlrRdModSwtFbSet)
}
PB_C2_IACCFamlrRdModSwtFbSet::PB_C2_IACCFamlrRdModSwtFbSet(const PB_C2_IACCFamlrRdModSwtFbSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  c2_iaccfamlrrdmodswtfb_ = from.c2_iaccfamlrrdmodswtfb_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_C2_IACCFamlrRdModSwtFbSet)
}

inline void PB_C2_IACCFamlrRdModSwtFbSet::SharedCtor() {
c2_iaccfamlrrdmodswtfb_ = 0u;
}

PB_C2_IACCFamlrRdModSwtFbSet::~PB_C2_IACCFamlrRdModSwtFbSet() {
  // @@protoc_insertion_point(destructor:Soa.PB_C2_IACCFamlrRdModSwtFbSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_C2_IACCFamlrRdModSwtFbSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_C2_IACCFamlrRdModSwtFbSet::ArenaDtor(void* object) {
  PB_C2_IACCFamlrRdModSwtFbSet* _this = reinterpret_cast< PB_C2_IACCFamlrRdModSwtFbSet* >(object);
  (void)_this;
}
void PB_C2_IACCFamlrRdModSwtFbSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_C2_IACCFamlrRdModSwtFbSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_C2_IACCFamlrRdModSwtFbSet::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_C2_IACCFamlrRdModSwtFbSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  c2_iaccfamlrrdmodswtfb_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_C2_IACCFamlrRdModSwtFbSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 C2_IACCFamlrRdModSwtFb = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          c2_iaccfamlrrdmodswtfb_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_C2_IACCFamlrRdModSwtFbSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_C2_IACCFamlrRdModSwtFbSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 C2_IACCFamlrRdModSwtFb = 1;
  if (this->_internal_c2_iaccfamlrrdmodswtfb() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_c2_iaccfamlrrdmodswtfb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_C2_IACCFamlrRdModSwtFbSet)
  return target;
}

size_t PB_C2_IACCFamlrRdModSwtFbSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_C2_IACCFamlrRdModSwtFbSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 C2_IACCFamlrRdModSwtFb = 1;
  if (this->_internal_c2_iaccfamlrrdmodswtfb() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_c2_iaccfamlrrdmodswtfb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_C2_IACCFamlrRdModSwtFbSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_C2_IACCFamlrRdModSwtFbSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_C2_IACCFamlrRdModSwtFbSet::GetClassData() const { return &_class_data_; }

void PB_C2_IACCFamlrRdModSwtFbSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_C2_IACCFamlrRdModSwtFbSet *>(to)->MergeFrom(
      static_cast<const PB_C2_IACCFamlrRdModSwtFbSet &>(from));
}


void PB_C2_IACCFamlrRdModSwtFbSet::MergeFrom(const PB_C2_IACCFamlrRdModSwtFbSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_C2_IACCFamlrRdModSwtFbSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_c2_iaccfamlrrdmodswtfb() != 0) {
    _internal_set_c2_iaccfamlrrdmodswtfb(from._internal_c2_iaccfamlrrdmodswtfb());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_C2_IACCFamlrRdModSwtFbSet::CopyFrom(const PB_C2_IACCFamlrRdModSwtFbSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_C2_IACCFamlrRdModSwtFbSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_C2_IACCFamlrRdModSwtFbSet::IsInitialized() const {
  return true;
}

void PB_C2_IACCFamlrRdModSwtFbSet::InternalSwap(PB_C2_IACCFamlrRdModSwtFbSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(c2_iaccfamlrrdmodswtfb_, other->c2_iaccfamlrrdmodswtfb_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_C2_IACCFamlrRdModSwtFbSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[163]);
}

// ===================================================================

class PB_Point2DStruct::_Internal {
 public:
};

PB_Point2DStruct::PB_Point2DStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Point2DStruct)
}
PB_Point2DStruct::PB_Point2DStruct(const PB_Point2DStruct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&theta_) -
    reinterpret_cast<char*>(&x_)) + sizeof(theta_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Point2DStruct)
}

inline void PB_Point2DStruct::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&x_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&theta_) -
    reinterpret_cast<char*>(&x_)) + sizeof(theta_));
}

PB_Point2DStruct::~PB_Point2DStruct() {
  // @@protoc_insertion_point(destructor:Soa.PB_Point2DStruct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Point2DStruct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_Point2DStruct::ArenaDtor(void* object) {
  PB_Point2DStruct* _this = reinterpret_cast< PB_Point2DStruct* >(object);
  (void)_this;
}
void PB_Point2DStruct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Point2DStruct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Point2DStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Point2DStruct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&theta_) -
      reinterpret_cast<char*>(&x_)) + sizeof(theta_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Point2DStruct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float theta = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          theta_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Point2DStruct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Point2DStruct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
  }

  // float theta = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_theta = this->_internal_theta();
  uint32_t raw_theta;
  memcpy(&raw_theta, &tmp_theta, sizeof(tmp_theta));
  if (raw_theta != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_theta(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Point2DStruct)
  return target;
}

size_t PB_Point2DStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Point2DStruct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_x());
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_y());
  }

  // float theta = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_theta = this->_internal_theta();
  uint32_t raw_theta;
  memcpy(&raw_theta, &tmp_theta, sizeof(tmp_theta));
  if (raw_theta != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Point2DStruct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Point2DStruct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Point2DStruct::GetClassData() const { return &_class_data_; }

void PB_Point2DStruct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Point2DStruct *>(to)->MergeFrom(
      static_cast<const PB_Point2DStruct &>(from));
}


void PB_Point2DStruct::MergeFrom(const PB_Point2DStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Point2DStruct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _internal_set_y(from._internal_y());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_theta = from._internal_theta();
  uint32_t raw_theta;
  memcpy(&raw_theta, &tmp_theta, sizeof(tmp_theta));
  if (raw_theta != 0) {
    _internal_set_theta(from._internal_theta());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Point2DStruct::CopyFrom(const PB_Point2DStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Point2DStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Point2DStruct::IsInitialized() const {
  return true;
}

void PB_Point2DStruct::InternalSwap(PB_Point2DStruct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_Point2DStruct, theta_)
      + sizeof(PB_Point2DStruct::theta_)
      - PROTOBUF_FIELD_OFFSET(PB_Point2DStruct, x_)>(
          reinterpret_cast<char*>(&x_),
          reinterpret_cast<char*>(&other->x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Point2DStruct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[164]);
}

// ===================================================================

class PB_RvsLiActCtrlInfo::_Internal {
 public:
};

PB_RvsLiActCtrlInfo::PB_RvsLiActCtrlInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_RvsLiActCtrlInfo)
}
PB_RvsLiActCtrlInfo::PB_RvsLiActCtrlInfo(const PB_RvsLiActCtrlInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_actctrlst_, &from.le_actctrlst_,
    static_cast<size_t>(reinterpret_cast<char*>(&ri_actctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_RvsLiActCtrlInfo)
}

inline void PB_RvsLiActCtrlInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_actctrlst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ri_actctrlst_) -
    reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
}

PB_RvsLiActCtrlInfo::~PB_RvsLiActCtrlInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_RvsLiActCtrlInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_RvsLiActCtrlInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_RvsLiActCtrlInfo::ArenaDtor(void* object) {
  PB_RvsLiActCtrlInfo* _this = reinterpret_cast< PB_RvsLiActCtrlInfo* >(object);
  (void)_this;
}
void PB_RvsLiActCtrlInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_RvsLiActCtrlInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_RvsLiActCtrlInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_RvsLiActCtrlInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_actctrlst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ri_actctrlst_) -
      reinterpret_cast<char*>(&le_actctrlst_)) + sizeof(ri_actctrlst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_RvsLiActCtrlInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_ActCtrlSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_ActCtrlSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_actctrlst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_RvsLiActCtrlInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_RvsLiActCtrlInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_actctrlst(), target);
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_actctrlst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_RvsLiActCtrlInfo)
  return target;
}

size_t PB_RvsLiActCtrlInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_RvsLiActCtrlInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_ActCtrlSt = 1;
  if (this->_internal_le_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_actctrlst());
  }

  // uint32 Ri_ActCtrlSt = 2;
  if (this->_internal_ri_actctrlst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_actctrlst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_RvsLiActCtrlInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_RvsLiActCtrlInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_RvsLiActCtrlInfo::GetClassData() const { return &_class_data_; }

void PB_RvsLiActCtrlInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_RvsLiActCtrlInfo *>(to)->MergeFrom(
      static_cast<const PB_RvsLiActCtrlInfo &>(from));
}


void PB_RvsLiActCtrlInfo::MergeFrom(const PB_RvsLiActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_RvsLiActCtrlInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_actctrlst() != 0) {
    _internal_set_le_actctrlst(from._internal_le_actctrlst());
  }
  if (from._internal_ri_actctrlst() != 0) {
    _internal_set_ri_actctrlst(from._internal_ri_actctrlst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_RvsLiActCtrlInfo::CopyFrom(const PB_RvsLiActCtrlInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_RvsLiActCtrlInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_RvsLiActCtrlInfo::IsInitialized() const {
  return true;
}

void PB_RvsLiActCtrlInfo::InternalSwap(PB_RvsLiActCtrlInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_RvsLiActCtrlInfo, ri_actctrlst_)
      + sizeof(PB_RvsLiActCtrlInfo::ri_actctrlst_)
      - PROTOBUF_FIELD_OFFSET(PB_RvsLiActCtrlInfo, le_actctrlst_)>(
          reinterpret_cast<char*>(&le_actctrlst_),
          reinterpret_cast<char*>(&other->le_actctrlst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_RvsLiActCtrlInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[165]);
}

// ===================================================================

class PB_PhyStWinAll_Struct::_Internal {
 public:
};

PB_PhyStWinAll_Struct::PB_PhyStWinAll_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  phystwinall_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_PhyStWinAll_Struct)
}
PB_PhyStWinAll_Struct::PB_PhyStWinAll_Struct(const PB_PhyStWinAll_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      phystwinall_(from.phystwinall_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_PhyStWinAll_Struct)
}

inline void PB_PhyStWinAll_Struct::SharedCtor() {
}

PB_PhyStWinAll_Struct::~PB_PhyStWinAll_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_PhyStWinAll_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_PhyStWinAll_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_PhyStWinAll_Struct::ArenaDtor(void* object) {
  PB_PhyStWinAll_Struct* _this = reinterpret_cast< PB_PhyStWinAll_Struct* >(object);
  (void)_this;
}
void PB_PhyStWinAll_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_PhyStWinAll_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_PhyStWinAll_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_PhyStWinAll_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phystwinall_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_PhyStWinAll_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 PhyStWinAll = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_phystwinall(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_phystwinall(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_PhyStWinAll_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_PhyStWinAll_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 PhyStWinAll = 1;
  {
    int byte_size = _phystwinall_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_phystwinall(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_PhyStWinAll_Struct)
  return target;
}

size_t PB_PhyStWinAll_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_PhyStWinAll_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 PhyStWinAll = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->phystwinall_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _phystwinall_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_PhyStWinAll_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_PhyStWinAll_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_PhyStWinAll_Struct::GetClassData() const { return &_class_data_; }

void PB_PhyStWinAll_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_PhyStWinAll_Struct *>(to)->MergeFrom(
      static_cast<const PB_PhyStWinAll_Struct &>(from));
}


void PB_PhyStWinAll_Struct::MergeFrom(const PB_PhyStWinAll_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_PhyStWinAll_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  phystwinall_.MergeFrom(from.phystwinall_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_PhyStWinAll_Struct::CopyFrom(const PB_PhyStWinAll_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_PhyStWinAll_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_PhyStWinAll_Struct::IsInitialized() const {
  return true;
}

void PB_PhyStWinAll_Struct::InternalSwap(PB_PhyStWinAll_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  phystwinall_.InternalSwap(&other->phystwinall_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_PhyStWinAll_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[166]);
}

// ===================================================================

class PB_CrashStsInfo::_Internal {
 public:
};

PB_CrashStsInfo::PB_CrashStsInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_CrashStsInfo)
}
PB_CrashStsInfo::PB_CrashStsInfo(const PB_CrashStsInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&srscrashoutpsts_, &from.srscrashoutpsts_,
    static_cast<size_t>(reinterpret_cast<char*>(&reserved4_) -
    reinterpret_cast<char*>(&srscrashoutpsts_)) + sizeof(reserved4_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_CrashStsInfo)
}

inline void PB_CrashStsInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&srscrashoutpsts_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&reserved4_) -
    reinterpret_cast<char*>(&srscrashoutpsts_)) + sizeof(reserved4_));
}

PB_CrashStsInfo::~PB_CrashStsInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_CrashStsInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_CrashStsInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_CrashStsInfo::ArenaDtor(void* object) {
  PB_CrashStsInfo* _this = reinterpret_cast< PB_CrashStsInfo* >(object);
  (void)_this;
}
void PB_CrashStsInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_CrashStsInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_CrashStsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_CrashStsInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&srscrashoutpsts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserved4_) -
      reinterpret_cast<char*>(&srscrashoutpsts_)) + sizeof(reserved4_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_CrashStsInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 SrsCrashOutpSts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          srscrashoutpsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SrsCrashOutpStsChks = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          srscrashoutpstschks_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SRSCrashOutFront = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          srscrashoutfront_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SRSCrashOutLeft = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          srscrashoutleft_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SRSCrashOutMicro = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          srscrashoutmicro_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SRSCrashOutRear = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          srscrashoutrear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SRSCrashOutRight = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          srscrashoutright_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SRSCrashOutRollover = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          srscrashoutrollover_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SRSCrashOutCedr = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          srscrashoutcedr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SrsWarnLampSts = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          srswarnlampsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LostComFltSts1 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          lostcomfltsts1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LostComFltSts2 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          lostcomfltsts2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved1 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          reserved1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved2 = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          reserved2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved3 = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          reserved3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved4 = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          reserved4_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_CrashStsInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_CrashStsInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SrsCrashOutpSts = 1;
  if (this->_internal_srscrashoutpsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_srscrashoutpsts(), target);
  }

  // uint32 SrsCrashOutpStsChks = 2;
  if (this->_internal_srscrashoutpstschks() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_srscrashoutpstschks(), target);
  }

  // uint32 SRSCrashOutFront = 3;
  if (this->_internal_srscrashoutfront() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_srscrashoutfront(), target);
  }

  // uint32 SRSCrashOutLeft = 4;
  if (this->_internal_srscrashoutleft() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_srscrashoutleft(), target);
  }

  // uint32 SRSCrashOutMicro = 5;
  if (this->_internal_srscrashoutmicro() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_srscrashoutmicro(), target);
  }

  // uint32 SRSCrashOutRear = 6;
  if (this->_internal_srscrashoutrear() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_srscrashoutrear(), target);
  }

  // uint32 SRSCrashOutRight = 7;
  if (this->_internal_srscrashoutright() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_srscrashoutright(), target);
  }

  // uint32 SRSCrashOutRollover = 8;
  if (this->_internal_srscrashoutrollover() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_srscrashoutrollover(), target);
  }

  // uint32 SRSCrashOutCedr = 9;
  if (this->_internal_srscrashoutcedr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_srscrashoutcedr(), target);
  }

  // uint32 SrsWarnLampSts = 10;
  if (this->_internal_srswarnlampsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_srswarnlampsts(), target);
  }

  // uint32 LostComFltSts1 = 11;
  if (this->_internal_lostcomfltsts1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_lostcomfltsts1(), target);
  }

  // uint32 LostComFltSts2 = 12;
  if (this->_internal_lostcomfltsts2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_lostcomfltsts2(), target);
  }

  // uint32 reserved1 = 13;
  if (this->_internal_reserved1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(13, this->_internal_reserved1(), target);
  }

  // uint32 reserved2 = 14;
  if (this->_internal_reserved2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(14, this->_internal_reserved2(), target);
  }

  // uint32 reserved3 = 15;
  if (this->_internal_reserved3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(15, this->_internal_reserved3(), target);
  }

  // uint32 reserved4 = 16;
  if (this->_internal_reserved4() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(16, this->_internal_reserved4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_CrashStsInfo)
  return target;
}

size_t PB_CrashStsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_CrashStsInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 SrsCrashOutpSts = 1;
  if (this->_internal_srscrashoutpsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srscrashoutpsts());
  }

  // uint32 SrsCrashOutpStsChks = 2;
  if (this->_internal_srscrashoutpstschks() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srscrashoutpstschks());
  }

  // uint32 SRSCrashOutFront = 3;
  if (this->_internal_srscrashoutfront() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srscrashoutfront());
  }

  // uint32 SRSCrashOutLeft = 4;
  if (this->_internal_srscrashoutleft() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srscrashoutleft());
  }

  // uint32 SRSCrashOutMicro = 5;
  if (this->_internal_srscrashoutmicro() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srscrashoutmicro());
  }

  // uint32 SRSCrashOutRear = 6;
  if (this->_internal_srscrashoutrear() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srscrashoutrear());
  }

  // uint32 SRSCrashOutRight = 7;
  if (this->_internal_srscrashoutright() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srscrashoutright());
  }

  // uint32 SRSCrashOutRollover = 8;
  if (this->_internal_srscrashoutrollover() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srscrashoutrollover());
  }

  // uint32 SRSCrashOutCedr = 9;
  if (this->_internal_srscrashoutcedr() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srscrashoutcedr());
  }

  // uint32 SrsWarnLampSts = 10;
  if (this->_internal_srswarnlampsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srswarnlampsts());
  }

  // uint32 LostComFltSts1 = 11;
  if (this->_internal_lostcomfltsts1() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lostcomfltsts1());
  }

  // uint32 LostComFltSts2 = 12;
  if (this->_internal_lostcomfltsts2() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lostcomfltsts2());
  }

  // uint32 reserved1 = 13;
  if (this->_internal_reserved1() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved1());
  }

  // uint32 reserved2 = 14;
  if (this->_internal_reserved2() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved2());
  }

  // uint32 reserved3 = 15;
  if (this->_internal_reserved3() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved3());
  }

  // uint32 reserved4 = 16;
  if (this->_internal_reserved4() != 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reserved4());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_CrashStsInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_CrashStsInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_CrashStsInfo::GetClassData() const { return &_class_data_; }

void PB_CrashStsInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_CrashStsInfo *>(to)->MergeFrom(
      static_cast<const PB_CrashStsInfo &>(from));
}


void PB_CrashStsInfo::MergeFrom(const PB_CrashStsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_CrashStsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_srscrashoutpsts() != 0) {
    _internal_set_srscrashoutpsts(from._internal_srscrashoutpsts());
  }
  if (from._internal_srscrashoutpstschks() != 0) {
    _internal_set_srscrashoutpstschks(from._internal_srscrashoutpstschks());
  }
  if (from._internal_srscrashoutfront() != 0) {
    _internal_set_srscrashoutfront(from._internal_srscrashoutfront());
  }
  if (from._internal_srscrashoutleft() != 0) {
    _internal_set_srscrashoutleft(from._internal_srscrashoutleft());
  }
  if (from._internal_srscrashoutmicro() != 0) {
    _internal_set_srscrashoutmicro(from._internal_srscrashoutmicro());
  }
  if (from._internal_srscrashoutrear() != 0) {
    _internal_set_srscrashoutrear(from._internal_srscrashoutrear());
  }
  if (from._internal_srscrashoutright() != 0) {
    _internal_set_srscrashoutright(from._internal_srscrashoutright());
  }
  if (from._internal_srscrashoutrollover() != 0) {
    _internal_set_srscrashoutrollover(from._internal_srscrashoutrollover());
  }
  if (from._internal_srscrashoutcedr() != 0) {
    _internal_set_srscrashoutcedr(from._internal_srscrashoutcedr());
  }
  if (from._internal_srswarnlampsts() != 0) {
    _internal_set_srswarnlampsts(from._internal_srswarnlampsts());
  }
  if (from._internal_lostcomfltsts1() != 0) {
    _internal_set_lostcomfltsts1(from._internal_lostcomfltsts1());
  }
  if (from._internal_lostcomfltsts2() != 0) {
    _internal_set_lostcomfltsts2(from._internal_lostcomfltsts2());
  }
  if (from._internal_reserved1() != 0) {
    _internal_set_reserved1(from._internal_reserved1());
  }
  if (from._internal_reserved2() != 0) {
    _internal_set_reserved2(from._internal_reserved2());
  }
  if (from._internal_reserved3() != 0) {
    _internal_set_reserved3(from._internal_reserved3());
  }
  if (from._internal_reserved4() != 0) {
    _internal_set_reserved4(from._internal_reserved4());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_CrashStsInfo::CopyFrom(const PB_CrashStsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_CrashStsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_CrashStsInfo::IsInitialized() const {
  return true;
}

void PB_CrashStsInfo::InternalSwap(PB_CrashStsInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_CrashStsInfo, reserved4_)
      + sizeof(PB_CrashStsInfo::reserved4_)
      - PROTOBUF_FIELD_OFFSET(PB_CrashStsInfo, srscrashoutpsts_)>(
          reinterpret_cast<char*>(&srscrashoutpsts_),
          reinterpret_cast<char*>(&other->srscrashoutpsts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_CrashStsInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[167]);
}

// ===================================================================

class PB_GpsDatas::_Internal {
 public:
};

PB_GpsDatas::PB_GpsDatas(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  gpstime_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_GpsDatas)
}
PB_GpsDatas::PB_GpsDatas(const PB_GpsDatas& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      gpstime_(from.gpstime_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lng_, &from.lng_,
    static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&lng_)) + sizeof(direction_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_GpsDatas)
}

inline void PB_GpsDatas::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lng_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&direction_) -
    reinterpret_cast<char*>(&lng_)) + sizeof(direction_));
}

PB_GpsDatas::~PB_GpsDatas() {
  // @@protoc_insertion_point(destructor:Soa.PB_GpsDatas)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_GpsDatas::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_GpsDatas::ArenaDtor(void* object) {
  PB_GpsDatas* _this = reinterpret_cast< PB_GpsDatas* >(object);
  (void)_this;
}
void PB_GpsDatas::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_GpsDatas::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_GpsDatas::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_GpsDatas)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gpstime_.Clear();
  ::memset(&lng_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&direction_) -
      reinterpret_cast<char*>(&lng_)) + sizeof(direction_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_GpsDatas::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 lng = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lng_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 lat = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          lat_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 alti = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          alti_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated uint32 gpsTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_gpstime(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_gpstime(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 satNum = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          satnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 heading = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          heading_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 status = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 NS = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          ns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 EW = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          ew_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 speed = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 decline = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          decline_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 direction = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          direction_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_GpsDatas::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_GpsDatas)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 lng = 1;
  if (this->_internal_lng() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_lng(), target);
  }

  // uint32 lat = 2;
  if (this->_internal_lat() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_lat(), target);
  }

  // uint32 alti = 3;
  if (this->_internal_alti() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_alti(), target);
  }

  // repeated uint32 gpsTime = 4;
  {
    int byte_size = _gpstime_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          4, _internal_gpstime(), byte_size, target);
    }
  }

  // uint32 satNum = 5;
  if (this->_internal_satnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_satnum(), target);
  }

  // uint32 heading = 6;
  if (this->_internal_heading() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_heading(), target);
  }

  // uint32 status = 7;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_status(), target);
  }

  // uint32 NS = 8;
  if (this->_internal_ns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_ns(), target);
  }

  // uint32 EW = 9;
  if (this->_internal_ew() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_ew(), target);
  }

  // uint32 speed = 10;
  if (this->_internal_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_speed(), target);
  }

  // uint32 decline = 11;
  if (this->_internal_decline() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_decline(), target);
  }

  // uint32 direction = 12;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_direction(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_GpsDatas)
  return target;
}

size_t PB_GpsDatas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_GpsDatas)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 gpsTime = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->gpstime_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _gpstime_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint32 lng = 1;
  if (this->_internal_lng() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lng());
  }

  // uint32 lat = 2;
  if (this->_internal_lat() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lat());
  }

  // uint32 alti = 3;
  if (this->_internal_alti() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_alti());
  }

  // uint32 satNum = 5;
  if (this->_internal_satnum() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_satnum());
  }

  // uint32 heading = 6;
  if (this->_internal_heading() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_heading());
  }

  // uint32 status = 7;
  if (this->_internal_status() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_status());
  }

  // uint32 NS = 8;
  if (this->_internal_ns() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ns());
  }

  // uint32 EW = 9;
  if (this->_internal_ew() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ew());
  }

  // uint32 speed = 10;
  if (this->_internal_speed() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_speed());
  }

  // uint32 decline = 11;
  if (this->_internal_decline() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_decline());
  }

  // uint32 direction = 12;
  if (this->_internal_direction() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_direction());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_GpsDatas::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_GpsDatas::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_GpsDatas::GetClassData() const { return &_class_data_; }

void PB_GpsDatas::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_GpsDatas *>(to)->MergeFrom(
      static_cast<const PB_GpsDatas &>(from));
}


void PB_GpsDatas::MergeFrom(const PB_GpsDatas& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_GpsDatas)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  gpstime_.MergeFrom(from.gpstime_);
  if (from._internal_lng() != 0) {
    _internal_set_lng(from._internal_lng());
  }
  if (from._internal_lat() != 0) {
    _internal_set_lat(from._internal_lat());
  }
  if (from._internal_alti() != 0) {
    _internal_set_alti(from._internal_alti());
  }
  if (from._internal_satnum() != 0) {
    _internal_set_satnum(from._internal_satnum());
  }
  if (from._internal_heading() != 0) {
    _internal_set_heading(from._internal_heading());
  }
  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  if (from._internal_ns() != 0) {
    _internal_set_ns(from._internal_ns());
  }
  if (from._internal_ew() != 0) {
    _internal_set_ew(from._internal_ew());
  }
  if (from._internal_speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  if (from._internal_decline() != 0) {
    _internal_set_decline(from._internal_decline());
  }
  if (from._internal_direction() != 0) {
    _internal_set_direction(from._internal_direction());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_GpsDatas::CopyFrom(const PB_GpsDatas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_GpsDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_GpsDatas::IsInitialized() const {
  return true;
}

void PB_GpsDatas::InternalSwap(PB_GpsDatas* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  gpstime_.InternalSwap(&other->gpstime_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_GpsDatas, direction_)
      + sizeof(PB_GpsDatas::direction_)
      - PROTOBUF_FIELD_OFFSET(PB_GpsDatas, lng_)>(
          reinterpret_cast<char*>(&lng_),
          reinterpret_cast<char*>(&other->lng_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_GpsDatas::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[168]);
}

// ===================================================================

class PB_float_Struct::_Internal {
 public:
};

PB_float_Struct::PB_float_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_float_Struct)
}
PB_float_Struct::PB_float_Struct(const PB_float_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  data_ = from.data_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_float_Struct)
}

inline void PB_float_Struct::SharedCtor() {
data_ = 0;
}

PB_float_Struct::~PB_float_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_float_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_float_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_float_Struct::ArenaDtor(void* object) {
  PB_float_Struct* _this = reinterpret_cast< PB_float_Struct* >(object);
  (void)_this;
}
void PB_float_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_float_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_float_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_float_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_float_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // float data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 13)) {
          data_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_float_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_float_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // float data = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_data = this->_internal_data();
  uint32_t raw_data;
  memcpy(&raw_data, &tmp_data, sizeof(tmp_data));
  if (raw_data != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_float_Struct)
  return target;
}

size_t PB_float_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_float_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // float data = 1;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_data = this->_internal_data();
  uint32_t raw_data;
  memcpy(&raw_data, &tmp_data, sizeof(tmp_data));
  if (raw_data != 0) {
    total_size += 1 + 4;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_float_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_float_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_float_Struct::GetClassData() const { return &_class_data_; }

void PB_float_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_float_Struct *>(to)->MergeFrom(
      static_cast<const PB_float_Struct &>(from));
}


void PB_float_Struct::MergeFrom(const PB_float_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_float_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_data = from._internal_data();
  uint32_t raw_data;
  memcpy(&raw_data, &tmp_data, sizeof(tmp_data));
  if (raw_data != 0) {
    _internal_set_data(from._internal_data());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_float_Struct::CopyFrom(const PB_float_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_float_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_float_Struct::IsInitialized() const {
  return true;
}

void PB_float_Struct::InternalSwap(PB_float_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_float_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[169]);
}

// ===================================================================

class PB_HUset_ADCurveStyle::_Internal {
 public:
};

PB_HUset_ADCurveStyle::PB_HUset_ADCurveStyle(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_ADCurveStyle)
}
PB_HUset_ADCurveStyle::PB_HUset_ADCurveStyle(const PB_HUset_ADCurveStyle& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_adcurvestyle_ = from.hu_adcurvestyle_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_ADCurveStyle)
}

inline void PB_HUset_ADCurveStyle::SharedCtor() {
hu_adcurvestyle_ = 0u;
}

PB_HUset_ADCurveStyle::~PB_HUset_ADCurveStyle() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_ADCurveStyle)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_ADCurveStyle::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_ADCurveStyle::ArenaDtor(void* object) {
  PB_HUset_ADCurveStyle* _this = reinterpret_cast< PB_HUset_ADCurveStyle* >(object);
  (void)_this;
}
void PB_HUset_ADCurveStyle::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_ADCurveStyle::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_ADCurveStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_ADCurveStyle)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_adcurvestyle_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_ADCurveStyle::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_ADCurveStyle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_adcurvestyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_ADCurveStyle::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_ADCurveStyle)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_ADCurveStyle = 1;
  if (this->_internal_hu_adcurvestyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_adcurvestyle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_ADCurveStyle)
  return target;
}

size_t PB_HUset_ADCurveStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_ADCurveStyle)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_ADCurveStyle = 1;
  if (this->_internal_hu_adcurvestyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_adcurvestyle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_ADCurveStyle::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_ADCurveStyle::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_ADCurveStyle::GetClassData() const { return &_class_data_; }

void PB_HUset_ADCurveStyle::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_ADCurveStyle *>(to)->MergeFrom(
      static_cast<const PB_HUset_ADCurveStyle &>(from));
}


void PB_HUset_ADCurveStyle::MergeFrom(const PB_HUset_ADCurveStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_ADCurveStyle)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_adcurvestyle() != 0) {
    _internal_set_hu_adcurvestyle(from._internal_hu_adcurvestyle());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_ADCurveStyle::CopyFrom(const PB_HUset_ADCurveStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_ADCurveStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_ADCurveStyle::IsInitialized() const {
  return true;
}

void PB_HUset_ADCurveStyle::InternalSwap(PB_HUset_ADCurveStyle* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_adcurvestyle_, other->hu_adcurvestyle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_ADCurveStyle::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[170]);
}

// ===================================================================

class PB_TarSlotData::_Internal {
 public:
};

PB_TarSlotData::PB_TarSlotData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  ad_apatarslot_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TarSlotData)
}
PB_TarSlotData::PB_TarSlotData(const PB_TarSlotData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ad_apatarslot_(from.ad_apatarslot_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ad_apapreviewsts_ = from.ad_apapreviewsts_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TarSlotData)
}

inline void PB_TarSlotData::SharedCtor() {
ad_apapreviewsts_ = 0u;
}

PB_TarSlotData::~PB_TarSlotData() {
  // @@protoc_insertion_point(destructor:Soa.PB_TarSlotData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TarSlotData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TarSlotData::ArenaDtor(void* object) {
  PB_TarSlotData* _this = reinterpret_cast< PB_TarSlotData* >(object);
  (void)_this;
}
void PB_TarSlotData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TarSlotData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TarSlotData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TarSlotData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ad_apatarslot_.Clear();
  ad_apapreviewsts_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TarSlotData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Soa.PB_Point2DStruct AD_APATarSlot = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ad_apatarslot(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APAPreviewSts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ad_apapreviewsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TarSlotData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TarSlotData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct AD_APATarSlot = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ad_apatarslot_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_ad_apatarslot(i), target, stream);
  }

  // uint32 AD_APAPreviewSts = 2;
  if (this->_internal_ad_apapreviewsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ad_apapreviewsts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TarSlotData)
  return target;
}

size_t PB_TarSlotData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TarSlotData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct AD_APATarSlot = 1;
  total_size += 1UL * this->_internal_ad_apatarslot_size();
  for (const auto& msg : this->ad_apatarslot_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 AD_APAPreviewSts = 2;
  if (this->_internal_ad_apapreviewsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apapreviewsts());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TarSlotData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TarSlotData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TarSlotData::GetClassData() const { return &_class_data_; }

void PB_TarSlotData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TarSlotData *>(to)->MergeFrom(
      static_cast<const PB_TarSlotData &>(from));
}


void PB_TarSlotData::MergeFrom(const PB_TarSlotData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TarSlotData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  ad_apatarslot_.MergeFrom(from.ad_apatarslot_);
  if (from._internal_ad_apapreviewsts() != 0) {
    _internal_set_ad_apapreviewsts(from._internal_ad_apapreviewsts());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TarSlotData::CopyFrom(const PB_TarSlotData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TarSlotData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TarSlotData::IsInitialized() const {
  return true;
}

void PB_TarSlotData::InternalSwap(PB_TarSlotData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ad_apatarslot_.InternalSwap(&other->ad_apatarslot_);
  swap(ad_apapreviewsts_, other->ad_apapreviewsts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TarSlotData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[171]);
}

// ===================================================================

class PB_LineCurveValid::_Internal {
 public:
};

PB_LineCurveValid::PB_LineCurveValid(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_LineCurveValid)
}
PB_LineCurveValid::PB_LineCurveValid(const PB_LineCurveValid& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&linecruvevalid_5m_, &from.linecruvevalid_5m_,
    static_cast<size_t>(reinterpret_cast<char*>(&linecruvevalid_30m_) -
    reinterpret_cast<char*>(&linecruvevalid_5m_)) + sizeof(linecruvevalid_30m_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_LineCurveValid)
}

inline void PB_LineCurveValid::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&linecruvevalid_5m_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&linecruvevalid_30m_) -
    reinterpret_cast<char*>(&linecruvevalid_5m_)) + sizeof(linecruvevalid_30m_));
}

PB_LineCurveValid::~PB_LineCurveValid() {
  // @@protoc_insertion_point(destructor:Soa.PB_LineCurveValid)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_LineCurveValid::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_LineCurveValid::ArenaDtor(void* object) {
  PB_LineCurveValid* _this = reinterpret_cast< PB_LineCurveValid* >(object);
  (void)_this;
}
void PB_LineCurveValid::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_LineCurveValid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_LineCurveValid::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_LineCurveValid)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&linecruvevalid_5m_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&linecruvevalid_30m_) -
      reinterpret_cast<char*>(&linecruvevalid_5m_)) + sizeof(linecruvevalid_30m_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_LineCurveValid::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 LinecruveValid_5m = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          linecruvevalid_5m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LinecruveValid_10m = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          linecruvevalid_10m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LinecruveValid_15m = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          linecruvevalid_15m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LinecruveValid_20m = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          linecruvevalid_20m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LinecruveValid_25m = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          linecruvevalid_25m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LinecruveValid_30m = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          linecruvevalid_30m_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_LineCurveValid::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_LineCurveValid)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 LinecruveValid_5m = 1;
  if (this->_internal_linecruvevalid_5m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_linecruvevalid_5m(), target);
  }

  // uint32 LinecruveValid_10m = 2;
  if (this->_internal_linecruvevalid_10m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_linecruvevalid_10m(), target);
  }

  // uint32 LinecruveValid_15m = 3;
  if (this->_internal_linecruvevalid_15m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_linecruvevalid_15m(), target);
  }

  // uint32 LinecruveValid_20m = 4;
  if (this->_internal_linecruvevalid_20m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_linecruvevalid_20m(), target);
  }

  // uint32 LinecruveValid_25m = 5;
  if (this->_internal_linecruvevalid_25m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_linecruvevalid_25m(), target);
  }

  // uint32 LinecruveValid_30m = 6;
  if (this->_internal_linecruvevalid_30m() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_linecruvevalid_30m(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_LineCurveValid)
  return target;
}

size_t PB_LineCurveValid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_LineCurveValid)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 LinecruveValid_5m = 1;
  if (this->_internal_linecruvevalid_5m() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_linecruvevalid_5m());
  }

  // uint32 LinecruveValid_10m = 2;
  if (this->_internal_linecruvevalid_10m() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_linecruvevalid_10m());
  }

  // uint32 LinecruveValid_15m = 3;
  if (this->_internal_linecruvevalid_15m() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_linecruvevalid_15m());
  }

  // uint32 LinecruveValid_20m = 4;
  if (this->_internal_linecruvevalid_20m() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_linecruvevalid_20m());
  }

  // uint32 LinecruveValid_25m = 5;
  if (this->_internal_linecruvevalid_25m() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_linecruvevalid_25m());
  }

  // uint32 LinecruveValid_30m = 6;
  if (this->_internal_linecruvevalid_30m() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_linecruvevalid_30m());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_LineCurveValid::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_LineCurveValid::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_LineCurveValid::GetClassData() const { return &_class_data_; }

void PB_LineCurveValid::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_LineCurveValid *>(to)->MergeFrom(
      static_cast<const PB_LineCurveValid &>(from));
}


void PB_LineCurveValid::MergeFrom(const PB_LineCurveValid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_LineCurveValid)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_linecruvevalid_5m() != 0) {
    _internal_set_linecruvevalid_5m(from._internal_linecruvevalid_5m());
  }
  if (from._internal_linecruvevalid_10m() != 0) {
    _internal_set_linecruvevalid_10m(from._internal_linecruvevalid_10m());
  }
  if (from._internal_linecruvevalid_15m() != 0) {
    _internal_set_linecruvevalid_15m(from._internal_linecruvevalid_15m());
  }
  if (from._internal_linecruvevalid_20m() != 0) {
    _internal_set_linecruvevalid_20m(from._internal_linecruvevalid_20m());
  }
  if (from._internal_linecruvevalid_25m() != 0) {
    _internal_set_linecruvevalid_25m(from._internal_linecruvevalid_25m());
  }
  if (from._internal_linecruvevalid_30m() != 0) {
    _internal_set_linecruvevalid_30m(from._internal_linecruvevalid_30m());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_LineCurveValid::CopyFrom(const PB_LineCurveValid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_LineCurveValid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LineCurveValid::IsInitialized() const {
  return true;
}

void PB_LineCurveValid::InternalSwap(PB_LineCurveValid* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_LineCurveValid, linecruvevalid_30m_)
      + sizeof(PB_LineCurveValid::linecruvevalid_30m_)
      - PROTOBUF_FIELD_OFFSET(PB_LineCurveValid, linecruvevalid_5m_)>(
          reinterpret_cast<char*>(&linecruvevalid_5m_),
          reinterpret_cast<char*>(&other->linecruvevalid_5m_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_LineCurveValid::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[172]);
}

// ===================================================================

class PB_BucSwtSts::_Internal {
 public:
};

PB_BucSwtSts::PB_BucSwtSts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_BucSwtSts)
}
PB_BucSwtSts::PB_BucSwtSts(const PB_BucSwtSts& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&srsdrvrbucswtsts_, &from.srsdrvrbucswtsts_,
    static_cast<size_t>(reinterpret_cast<char*>(&reserved3_) -
    reinterpret_cast<char*>(&srsdrvrbucswtsts_)) + sizeof(reserved3_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_BucSwtSts)
}

inline void PB_BucSwtSts::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&srsdrvrbucswtsts_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&reserved3_) -
    reinterpret_cast<char*>(&srsdrvrbucswtsts_)) + sizeof(reserved3_));
}

PB_BucSwtSts::~PB_BucSwtSts() {
  // @@protoc_insertion_point(destructor:Soa.PB_BucSwtSts)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_BucSwtSts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_BucSwtSts::ArenaDtor(void* object) {
  PB_BucSwtSts* _this = reinterpret_cast< PB_BucSwtSts* >(object);
  (void)_this;
}
void PB_BucSwtSts::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_BucSwtSts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_BucSwtSts::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_BucSwtSts)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&srsdrvrbucswtsts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reserved3_) -
      reinterpret_cast<char*>(&srsdrvrbucswtsts_)) + sizeof(reserved3_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_BucSwtSts::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 SrsDrvrBucSwtSts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          srsdrvrbucswtsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SrsPassBucSwtSts = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          srspassbucswtsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SrsLe2ndBucSwtSts = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          srsle2ndbucswtsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SrsMid2ndBucSwtSts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          srsmid2ndbucswtsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SrsRi2ndBucSwtSts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          srsri2ndbucswtsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SrsLe3rdBucSwtSts = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          srsle3rdbucswtsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SrsMid3rdBucSwtSts = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          srsmid3rdbucswtsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SrsRi3rdBucSwtSts = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          srsri3rdbucswtsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 LostComFltSts1 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          lostcomfltsts1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved1 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          reserved1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved2 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          reserved2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 reserved3 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          reserved3_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_BucSwtSts::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_BucSwtSts)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SrsDrvrBucSwtSts = 1;
  if (this->_internal_srsdrvrbucswtsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_srsdrvrbucswtsts(), target);
  }

  // uint32 SrsPassBucSwtSts = 2;
  if (this->_internal_srspassbucswtsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_srspassbucswtsts(), target);
  }

  // uint32 SrsLe2ndBucSwtSts = 3;
  if (this->_internal_srsle2ndbucswtsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_srsle2ndbucswtsts(), target);
  }

  // uint32 SrsMid2ndBucSwtSts = 4;
  if (this->_internal_srsmid2ndbucswtsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_srsmid2ndbucswtsts(), target);
  }

  // uint32 SrsRi2ndBucSwtSts = 5;
  if (this->_internal_srsri2ndbucswtsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_srsri2ndbucswtsts(), target);
  }

  // uint32 SrsLe3rdBucSwtSts = 6;
  if (this->_internal_srsle3rdbucswtsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_srsle3rdbucswtsts(), target);
  }

  // uint32 SrsMid3rdBucSwtSts = 7;
  if (this->_internal_srsmid3rdbucswtsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_srsmid3rdbucswtsts(), target);
  }

  // uint32 SrsRi3rdBucSwtSts = 8;
  if (this->_internal_srsri3rdbucswtsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_srsri3rdbucswtsts(), target);
  }

  // uint32 LostComFltSts1 = 9;
  if (this->_internal_lostcomfltsts1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_lostcomfltsts1(), target);
  }

  // uint32 reserved1 = 10;
  if (this->_internal_reserved1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_reserved1(), target);
  }

  // uint32 reserved2 = 11;
  if (this->_internal_reserved2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_reserved2(), target);
  }

  // uint32 reserved3 = 12;
  if (this->_internal_reserved3() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(12, this->_internal_reserved3(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_BucSwtSts)
  return target;
}

size_t PB_BucSwtSts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_BucSwtSts)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 SrsDrvrBucSwtSts = 1;
  if (this->_internal_srsdrvrbucswtsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srsdrvrbucswtsts());
  }

  // uint32 SrsPassBucSwtSts = 2;
  if (this->_internal_srspassbucswtsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srspassbucswtsts());
  }

  // uint32 SrsLe2ndBucSwtSts = 3;
  if (this->_internal_srsle2ndbucswtsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srsle2ndbucswtsts());
  }

  // uint32 SrsMid2ndBucSwtSts = 4;
  if (this->_internal_srsmid2ndbucswtsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srsmid2ndbucswtsts());
  }

  // uint32 SrsRi2ndBucSwtSts = 5;
  if (this->_internal_srsri2ndbucswtsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srsri2ndbucswtsts());
  }

  // uint32 SrsLe3rdBucSwtSts = 6;
  if (this->_internal_srsle3rdbucswtsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srsle3rdbucswtsts());
  }

  // uint32 SrsMid3rdBucSwtSts = 7;
  if (this->_internal_srsmid3rdbucswtsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srsmid3rdbucswtsts());
  }

  // uint32 SrsRi3rdBucSwtSts = 8;
  if (this->_internal_srsri3rdbucswtsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_srsri3rdbucswtsts());
  }

  // uint32 LostComFltSts1 = 9;
  if (this->_internal_lostcomfltsts1() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lostcomfltsts1());
  }

  // uint32 reserved1 = 10;
  if (this->_internal_reserved1() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved1());
  }

  // uint32 reserved2 = 11;
  if (this->_internal_reserved2() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved2());
  }

  // uint32 reserved3 = 12;
  if (this->_internal_reserved3() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_reserved3());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_BucSwtSts::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_BucSwtSts::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_BucSwtSts::GetClassData() const { return &_class_data_; }

void PB_BucSwtSts::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_BucSwtSts *>(to)->MergeFrom(
      static_cast<const PB_BucSwtSts &>(from));
}


void PB_BucSwtSts::MergeFrom(const PB_BucSwtSts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_BucSwtSts)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_srsdrvrbucswtsts() != 0) {
    _internal_set_srsdrvrbucswtsts(from._internal_srsdrvrbucswtsts());
  }
  if (from._internal_srspassbucswtsts() != 0) {
    _internal_set_srspassbucswtsts(from._internal_srspassbucswtsts());
  }
  if (from._internal_srsle2ndbucswtsts() != 0) {
    _internal_set_srsle2ndbucswtsts(from._internal_srsle2ndbucswtsts());
  }
  if (from._internal_srsmid2ndbucswtsts() != 0) {
    _internal_set_srsmid2ndbucswtsts(from._internal_srsmid2ndbucswtsts());
  }
  if (from._internal_srsri2ndbucswtsts() != 0) {
    _internal_set_srsri2ndbucswtsts(from._internal_srsri2ndbucswtsts());
  }
  if (from._internal_srsle3rdbucswtsts() != 0) {
    _internal_set_srsle3rdbucswtsts(from._internal_srsle3rdbucswtsts());
  }
  if (from._internal_srsmid3rdbucswtsts() != 0) {
    _internal_set_srsmid3rdbucswtsts(from._internal_srsmid3rdbucswtsts());
  }
  if (from._internal_srsri3rdbucswtsts() != 0) {
    _internal_set_srsri3rdbucswtsts(from._internal_srsri3rdbucswtsts());
  }
  if (from._internal_lostcomfltsts1() != 0) {
    _internal_set_lostcomfltsts1(from._internal_lostcomfltsts1());
  }
  if (from._internal_reserved1() != 0) {
    _internal_set_reserved1(from._internal_reserved1());
  }
  if (from._internal_reserved2() != 0) {
    _internal_set_reserved2(from._internal_reserved2());
  }
  if (from._internal_reserved3() != 0) {
    _internal_set_reserved3(from._internal_reserved3());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_BucSwtSts::CopyFrom(const PB_BucSwtSts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_BucSwtSts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BucSwtSts::IsInitialized() const {
  return true;
}

void PB_BucSwtSts::InternalSwap(PB_BucSwtSts* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_BucSwtSts, reserved3_)
      + sizeof(PB_BucSwtSts::reserved3_)
      - PROTOBUF_FIELD_OFFSET(PB_BucSwtSts, srsdrvrbucswtsts_)>(
          reinterpret_cast<char*>(&srsdrvrbucswtsts_),
          reinterpret_cast<char*>(&other->srsdrvrbucswtsts_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_BucSwtSts::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[173]);
}

// ===================================================================

class PB_VIUPwrPinRstInfo::_Internal {
 public:
};

PB_VIUPwrPinRstInfo::PB_VIUPwrPinRstInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_VIUPwrPinRstInfo)
}
PB_VIUPwrPinRstInfo::PB_VIUPwrPinRstInfo(const PB_VIUPwrPinRstInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&pwrpinid_, &from.pwrpinid_,
    static_cast<size_t>(reinterpret_cast<char*>(&pwrpinrstcnt_) -
    reinterpret_cast<char*>(&pwrpinid_)) + sizeof(pwrpinrstcnt_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_VIUPwrPinRstInfo)
}

inline void PB_VIUPwrPinRstInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&pwrpinid_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&pwrpinrstcnt_) -
    reinterpret_cast<char*>(&pwrpinid_)) + sizeof(pwrpinrstcnt_));
}

PB_VIUPwrPinRstInfo::~PB_VIUPwrPinRstInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_VIUPwrPinRstInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_VIUPwrPinRstInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_VIUPwrPinRstInfo::ArenaDtor(void* object) {
  PB_VIUPwrPinRstInfo* _this = reinterpret_cast< PB_VIUPwrPinRstInfo* >(object);
  (void)_this;
}
void PB_VIUPwrPinRstInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_VIUPwrPinRstInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_VIUPwrPinRstInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_VIUPwrPinRstInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&pwrpinid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pwrpinrstcnt_) -
      reinterpret_cast<char*>(&pwrpinid_)) + sizeof(pwrpinrstcnt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_VIUPwrPinRstInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 PwrPinID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          pwrpinid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 PwrPinRstCnt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          pwrpinrstcnt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_VIUPwrPinRstInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_VIUPwrPinRstInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 PwrPinID = 1;
  if (this->_internal_pwrpinid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_pwrpinid(), target);
  }

  // uint32 PwrPinRstCnt = 2;
  if (this->_internal_pwrpinrstcnt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_pwrpinrstcnt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_VIUPwrPinRstInfo)
  return target;
}

size_t PB_VIUPwrPinRstInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_VIUPwrPinRstInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 PwrPinID = 1;
  if (this->_internal_pwrpinid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_pwrpinid());
  }

  // uint32 PwrPinRstCnt = 2;
  if (this->_internal_pwrpinrstcnt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_pwrpinrstcnt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_VIUPwrPinRstInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_VIUPwrPinRstInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_VIUPwrPinRstInfo::GetClassData() const { return &_class_data_; }

void PB_VIUPwrPinRstInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_VIUPwrPinRstInfo *>(to)->MergeFrom(
      static_cast<const PB_VIUPwrPinRstInfo &>(from));
}


void PB_VIUPwrPinRstInfo::MergeFrom(const PB_VIUPwrPinRstInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_VIUPwrPinRstInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_pwrpinid() != 0) {
    _internal_set_pwrpinid(from._internal_pwrpinid());
  }
  if (from._internal_pwrpinrstcnt() != 0) {
    _internal_set_pwrpinrstcnt(from._internal_pwrpinrstcnt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_VIUPwrPinRstInfo::CopyFrom(const PB_VIUPwrPinRstInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_VIUPwrPinRstInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_VIUPwrPinRstInfo::IsInitialized() const {
  return true;
}

void PB_VIUPwrPinRstInfo::InternalSwap(PB_VIUPwrPinRstInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_VIUPwrPinRstInfo, pwrpinrstcnt_)
      + sizeof(PB_VIUPwrPinRstInfo::pwrpinrstcnt_)
      - PROTOBUF_FIELD_OFFSET(PB_VIUPwrPinRstInfo, pwrpinid_)>(
          reinterpret_cast<char*>(&pwrpinid_),
          reinterpret_cast<char*>(&other->pwrpinid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_VIUPwrPinRstInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[174]);
}

// ===================================================================

class PB_DRLFltInfo::_Internal {
 public:
};

PB_DRLFltInfo::PB_DRLFltInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_DRLFltInfo)
}
PB_DRLFltInfo::PB_DRLFltInfo(const PB_DRLFltInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_fltst_, &from.le_fltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&ri_fltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_DRLFltInfo)
}

inline void PB_DRLFltInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_fltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ri_fltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
}

PB_DRLFltInfo::~PB_DRLFltInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_DRLFltInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_DRLFltInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_DRLFltInfo::ArenaDtor(void* object) {
  PB_DRLFltInfo* _this = reinterpret_cast< PB_DRLFltInfo* >(object);
  (void)_this;
}
void PB_DRLFltInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_DRLFltInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_DRLFltInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_DRLFltInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_fltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ri_fltst_) -
      reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_DRLFltInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_FltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_FltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_DRLFltInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_DRLFltInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_fltst(), target);
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_fltst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_DRLFltInfo)
  return target;
}

size_t PB_DRLFltInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_DRLFltInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_fltst());
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_fltst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_DRLFltInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_DRLFltInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_DRLFltInfo::GetClassData() const { return &_class_data_; }

void PB_DRLFltInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_DRLFltInfo *>(to)->MergeFrom(
      static_cast<const PB_DRLFltInfo &>(from));
}


void PB_DRLFltInfo::MergeFrom(const PB_DRLFltInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_DRLFltInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_fltst() != 0) {
    _internal_set_le_fltst(from._internal_le_fltst());
  }
  if (from._internal_ri_fltst() != 0) {
    _internal_set_ri_fltst(from._internal_ri_fltst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_DRLFltInfo::CopyFrom(const PB_DRLFltInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_DRLFltInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_DRLFltInfo::IsInitialized() const {
  return true;
}

void PB_DRLFltInfo::InternalSwap(PB_DRLFltInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_DRLFltInfo, ri_fltst_)
      + sizeof(PB_DRLFltInfo::ri_fltst_)
      - PROTOBUF_FIELD_OFFSET(PB_DRLFltInfo, le_fltst_)>(
          reinterpret_cast<char*>(&le_fltst_),
          reinterpret_cast<char*>(&other->le_fltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_DRLFltInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[175]);
}

// ===================================================================

class PB_TurnLiFltMonrSt::_Internal {
 public:
};

PB_TurnLiFltMonrSt::PB_TurnLiFltMonrSt(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_TurnLiFltMonrSt)
}
PB_TurnLiFltMonrSt::PB_TurnLiFltMonrSt(const PB_TurnLiFltMonrSt& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&lesideturnliflt_, &from.lesideturnliflt_,
    static_cast<size_t>(reinterpret_cast<char*>(&turnlifblineflt_) -
    reinterpret_cast<char*>(&lesideturnliflt_)) + sizeof(turnlifblineflt_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_TurnLiFltMonrSt)
}

inline void PB_TurnLiFltMonrSt::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&lesideturnliflt_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&turnlifblineflt_) -
    reinterpret_cast<char*>(&lesideturnliflt_)) + sizeof(turnlifblineflt_));
}

PB_TurnLiFltMonrSt::~PB_TurnLiFltMonrSt() {
  // @@protoc_insertion_point(destructor:Soa.PB_TurnLiFltMonrSt)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_TurnLiFltMonrSt::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_TurnLiFltMonrSt::ArenaDtor(void* object) {
  PB_TurnLiFltMonrSt* _this = reinterpret_cast< PB_TurnLiFltMonrSt* >(object);
  (void)_this;
}
void PB_TurnLiFltMonrSt::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_TurnLiFltMonrSt::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_TurnLiFltMonrSt::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_TurnLiFltMonrSt)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&lesideturnliflt_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&turnlifblineflt_) -
      reinterpret_cast<char*>(&lesideturnliflt_)) + sizeof(turnlifblineflt_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_TurnLiFltMonrSt::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 LeSideTurnLiFlt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          lesideturnliflt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 RiSideTurnLiFlt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          risideturnliflt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 TurnLiFbLineFlt = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          turnlifblineflt_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_TurnLiFltMonrSt::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_TurnLiFltMonrSt)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 LeSideTurnLiFlt = 1;
  if (this->_internal_lesideturnliflt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_lesideturnliflt(), target);
  }

  // uint32 RiSideTurnLiFlt = 2;
  if (this->_internal_risideturnliflt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_risideturnliflt(), target);
  }

  // uint32 TurnLiFbLineFlt = 3;
  if (this->_internal_turnlifblineflt() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_turnlifblineflt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_TurnLiFltMonrSt)
  return target;
}

size_t PB_TurnLiFltMonrSt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_TurnLiFltMonrSt)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 LeSideTurnLiFlt = 1;
  if (this->_internal_lesideturnliflt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_lesideturnliflt());
  }

  // uint32 RiSideTurnLiFlt = 2;
  if (this->_internal_risideturnliflt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_risideturnliflt());
  }

  // uint32 TurnLiFbLineFlt = 3;
  if (this->_internal_turnlifblineflt() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_turnlifblineflt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_TurnLiFltMonrSt::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_TurnLiFltMonrSt::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_TurnLiFltMonrSt::GetClassData() const { return &_class_data_; }

void PB_TurnLiFltMonrSt::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_TurnLiFltMonrSt *>(to)->MergeFrom(
      static_cast<const PB_TurnLiFltMonrSt &>(from));
}


void PB_TurnLiFltMonrSt::MergeFrom(const PB_TurnLiFltMonrSt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_TurnLiFltMonrSt)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_lesideturnliflt() != 0) {
    _internal_set_lesideturnliflt(from._internal_lesideturnliflt());
  }
  if (from._internal_risideturnliflt() != 0) {
    _internal_set_risideturnliflt(from._internal_risideturnliflt());
  }
  if (from._internal_turnlifblineflt() != 0) {
    _internal_set_turnlifblineflt(from._internal_turnlifblineflt());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_TurnLiFltMonrSt::CopyFrom(const PB_TurnLiFltMonrSt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_TurnLiFltMonrSt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_TurnLiFltMonrSt::IsInitialized() const {
  return true;
}

void PB_TurnLiFltMonrSt::InternalSwap(PB_TurnLiFltMonrSt* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_TurnLiFltMonrSt, turnlifblineflt_)
      + sizeof(PB_TurnLiFltMonrSt::turnlifblineflt_)
      - PROTOBUF_FIELD_OFFSET(PB_TurnLiFltMonrSt, lesideturnliflt_)>(
          reinterpret_cast<char*>(&lesideturnliflt_),
          reinterpret_cast<char*>(&other->lesideturnliflt_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_TurnLiFltMonrSt::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[176]);
}

// ===================================================================

class PB_HiBeamFltInfo::_Internal {
 public:
};

PB_HiBeamFltInfo::PB_HiBeamFltInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HiBeamFltInfo)
}
PB_HiBeamFltInfo::PB_HiBeamFltInfo(const PB_HiBeamFltInfo& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&le_fltst_, &from.le_fltst_,
    static_cast<size_t>(reinterpret_cast<char*>(&ri_fltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HiBeamFltInfo)
}

inline void PB_HiBeamFltInfo::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&le_fltst_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ri_fltst_) -
    reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
}

PB_HiBeamFltInfo::~PB_HiBeamFltInfo() {
  // @@protoc_insertion_point(destructor:Soa.PB_HiBeamFltInfo)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HiBeamFltInfo::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HiBeamFltInfo::ArenaDtor(void* object) {
  PB_HiBeamFltInfo* _this = reinterpret_cast< PB_HiBeamFltInfo* >(object);
  (void)_this;
}
void PB_HiBeamFltInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HiBeamFltInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HiBeamFltInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HiBeamFltInfo)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&le_fltst_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ri_fltst_) -
      reinterpret_cast<char*>(&le_fltst_)) + sizeof(ri_fltst_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HiBeamFltInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 Le_FltSt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          le_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 Ri_FltSt = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ri_fltst_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HiBeamFltInfo::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HiBeamFltInfo)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_le_fltst(), target);
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ri_fltst(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HiBeamFltInfo)
  return target;
}

size_t PB_HiBeamFltInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HiBeamFltInfo)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 Le_FltSt = 1;
  if (this->_internal_le_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_le_fltst());
  }

  // uint32 Ri_FltSt = 2;
  if (this->_internal_ri_fltst() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ri_fltst());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HiBeamFltInfo::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HiBeamFltInfo::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HiBeamFltInfo::GetClassData() const { return &_class_data_; }

void PB_HiBeamFltInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HiBeamFltInfo *>(to)->MergeFrom(
      static_cast<const PB_HiBeamFltInfo &>(from));
}


void PB_HiBeamFltInfo::MergeFrom(const PB_HiBeamFltInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HiBeamFltInfo)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_le_fltst() != 0) {
    _internal_set_le_fltst(from._internal_le_fltst());
  }
  if (from._internal_ri_fltst() != 0) {
    _internal_set_ri_fltst(from._internal_ri_fltst());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HiBeamFltInfo::CopyFrom(const PB_HiBeamFltInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HiBeamFltInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HiBeamFltInfo::IsInitialized() const {
  return true;
}

void PB_HiBeamFltInfo::InternalSwap(PB_HiBeamFltInfo* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_HiBeamFltInfo, ri_fltst_)
      + sizeof(PB_HiBeamFltInfo::ri_fltst_)
      - PROTOBUF_FIELD_OFFSET(PB_HiBeamFltInfo, le_fltst_)>(
          reinterpret_cast<char*>(&le_fltst_),
          reinterpret_cast<char*>(&other->le_fltst_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HiBeamFltInfo::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[177]);
}

// ===================================================================

class PB_EDC_APAParkInSelectData::_Internal {
 public:
};

PB_EDC_APAParkInSelectData::PB_EDC_APAParkInSelectData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_APAParkInSelectData)
}
PB_EDC_APAParkInSelectData::PB_EDC_APAParkInSelectData(const PB_EDC_APAParkInSelectData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_apaparkinselect_ = from.edc_apaparkinselect_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_APAParkInSelectData)
}

inline void PB_EDC_APAParkInSelectData::SharedCtor() {
edc_apaparkinselect_ = 0u;
}

PB_EDC_APAParkInSelectData::~PB_EDC_APAParkInSelectData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_APAParkInSelectData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_APAParkInSelectData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_APAParkInSelectData::ArenaDtor(void* object) {
  PB_EDC_APAParkInSelectData* _this = reinterpret_cast< PB_EDC_APAParkInSelectData* >(object);
  (void)_this;
}
void PB_EDC_APAParkInSelectData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_APAParkInSelectData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_APAParkInSelectData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_APAParkInSelectData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apaparkinselect_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_APAParkInSelectData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_APAParkInSelect = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_apaparkinselect_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_APAParkInSelectData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_APAParkInSelectData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_APAParkInSelect = 1;
  if (this->_internal_edc_apaparkinselect() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_apaparkinselect(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_APAParkInSelectData)
  return target;
}

size_t PB_EDC_APAParkInSelectData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_APAParkInSelectData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_APAParkInSelect = 1;
  if (this->_internal_edc_apaparkinselect() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_apaparkinselect());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_APAParkInSelectData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_APAParkInSelectData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_APAParkInSelectData::GetClassData() const { return &_class_data_; }

void PB_EDC_APAParkInSelectData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_APAParkInSelectData *>(to)->MergeFrom(
      static_cast<const PB_EDC_APAParkInSelectData &>(from));
}


void PB_EDC_APAParkInSelectData::MergeFrom(const PB_EDC_APAParkInSelectData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_APAParkInSelectData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_apaparkinselect() != 0) {
    _internal_set_edc_apaparkinselect(from._internal_edc_apaparkinselect());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_APAParkInSelectData::CopyFrom(const PB_EDC_APAParkInSelectData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_APAParkInSelectData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_APAParkInSelectData::IsInitialized() const {
  return true;
}

void PB_EDC_APAParkInSelectData::InternalSwap(PB_EDC_APAParkInSelectData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_apaparkinselect_, other->edc_apaparkinselect_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_APAParkInSelectData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[178]);
}

// ===================================================================

class PB_ADASSecureSet::_Internal {
 public:
};

PB_ADASSecureSet::PB_ADASSecureSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_ADASSecureSet)
}
PB_ADASSecureSet::PB_ADASSecureSet(const PB_ADASSecureSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&ad_elkenable_, &from.ad_elkenable_,
    static_cast<size_t>(reinterpret_cast<char*>(&ad_rearcolliasttype_) -
    reinterpret_cast<char*>(&ad_elkenable_)) + sizeof(ad_rearcolliasttype_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_ADASSecureSet)
}

inline void PB_ADASSecureSet::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&ad_elkenable_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&ad_rearcolliasttype_) -
    reinterpret_cast<char*>(&ad_elkenable_)) + sizeof(ad_rearcolliasttype_));
}

PB_ADASSecureSet::~PB_ADASSecureSet() {
  // @@protoc_insertion_point(destructor:Soa.PB_ADASSecureSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_ADASSecureSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_ADASSecureSet::ArenaDtor(void* object) {
  PB_ADASSecureSet* _this = reinterpret_cast< PB_ADASSecureSet* >(object);
  (void)_this;
}
void PB_ADASSecureSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_ADASSecureSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_ADASSecureSet::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_ADASSecureSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&ad_elkenable_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ad_rearcolliasttype_) -
      reinterpret_cast<char*>(&ad_elkenable_)) + sizeof(ad_rearcolliasttype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_ADASSecureSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 AD_ELKEnable = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          ad_elkenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_CESEnable = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ad_cesenable_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_LASModeSelectionStatus = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          ad_lasmodeselectionstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_LASIntellgentModeSelectionStatus = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          ad_lasintellgentmodeselectionstatus_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_LASWarningModeSelectionSts = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          ad_laswarningmodeselectionsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_ForwardColliAstType = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          ad_forwardcolliasttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_ForwardColliAstSenStyle = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          ad_forwardcolliastsenstyle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_RearColliAstType = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          ad_rearcolliasttype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_ADASSecureSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_ADASSecureSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 AD_ELKEnable = 1;
  if (this->_internal_ad_elkenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_ad_elkenable(), target);
  }

  // uint32 AD_CESEnable = 2;
  if (this->_internal_ad_cesenable() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ad_cesenable(), target);
  }

  // uint32 AD_LASModeSelectionStatus = 3;
  if (this->_internal_ad_lasmodeselectionstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_ad_lasmodeselectionstatus(), target);
  }

  // uint32 AD_LASIntellgentModeSelectionStatus = 4;
  if (this->_internal_ad_lasintellgentmodeselectionstatus() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_ad_lasintellgentmodeselectionstatus(), target);
  }

  // uint32 AD_LASWarningModeSelectionSts = 5;
  if (this->_internal_ad_laswarningmodeselectionsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_ad_laswarningmodeselectionsts(), target);
  }

  // uint32 AD_ForwardColliAstType = 6;
  if (this->_internal_ad_forwardcolliasttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_ad_forwardcolliasttype(), target);
  }

  // uint32 AD_ForwardColliAstSenStyle = 7;
  if (this->_internal_ad_forwardcolliastsenstyle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_ad_forwardcolliastsenstyle(), target);
  }

  // uint32 AD_RearColliAstType = 8;
  if (this->_internal_ad_rearcolliasttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_ad_rearcolliasttype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_ADASSecureSet)
  return target;
}

size_t PB_ADASSecureSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_ADASSecureSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 AD_ELKEnable = 1;
  if (this->_internal_ad_elkenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_elkenable());
  }

  // uint32 AD_CESEnable = 2;
  if (this->_internal_ad_cesenable() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_cesenable());
  }

  // uint32 AD_LASModeSelectionStatus = 3;
  if (this->_internal_ad_lasmodeselectionstatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_lasmodeselectionstatus());
  }

  // uint32 AD_LASIntellgentModeSelectionStatus = 4;
  if (this->_internal_ad_lasintellgentmodeselectionstatus() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_lasintellgentmodeselectionstatus());
  }

  // uint32 AD_LASWarningModeSelectionSts = 5;
  if (this->_internal_ad_laswarningmodeselectionsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_laswarningmodeselectionsts());
  }

  // uint32 AD_ForwardColliAstType = 6;
  if (this->_internal_ad_forwardcolliasttype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_forwardcolliasttype());
  }

  // uint32 AD_ForwardColliAstSenStyle = 7;
  if (this->_internal_ad_forwardcolliastsenstyle() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_forwardcolliastsenstyle());
  }

  // uint32 AD_RearColliAstType = 8;
  if (this->_internal_ad_rearcolliasttype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_rearcolliasttype());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_ADASSecureSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_ADASSecureSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_ADASSecureSet::GetClassData() const { return &_class_data_; }

void PB_ADASSecureSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_ADASSecureSet *>(to)->MergeFrom(
      static_cast<const PB_ADASSecureSet &>(from));
}


void PB_ADASSecureSet::MergeFrom(const PB_ADASSecureSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_ADASSecureSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_ad_elkenable() != 0) {
    _internal_set_ad_elkenable(from._internal_ad_elkenable());
  }
  if (from._internal_ad_cesenable() != 0) {
    _internal_set_ad_cesenable(from._internal_ad_cesenable());
  }
  if (from._internal_ad_lasmodeselectionstatus() != 0) {
    _internal_set_ad_lasmodeselectionstatus(from._internal_ad_lasmodeselectionstatus());
  }
  if (from._internal_ad_lasintellgentmodeselectionstatus() != 0) {
    _internal_set_ad_lasintellgentmodeselectionstatus(from._internal_ad_lasintellgentmodeselectionstatus());
  }
  if (from._internal_ad_laswarningmodeselectionsts() != 0) {
    _internal_set_ad_laswarningmodeselectionsts(from._internal_ad_laswarningmodeselectionsts());
  }
  if (from._internal_ad_forwardcolliasttype() != 0) {
    _internal_set_ad_forwardcolliasttype(from._internal_ad_forwardcolliasttype());
  }
  if (from._internal_ad_forwardcolliastsenstyle() != 0) {
    _internal_set_ad_forwardcolliastsenstyle(from._internal_ad_forwardcolliastsenstyle());
  }
  if (from._internal_ad_rearcolliasttype() != 0) {
    _internal_set_ad_rearcolliasttype(from._internal_ad_rearcolliasttype());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_ADASSecureSet::CopyFrom(const PB_ADASSecureSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_ADASSecureSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_ADASSecureSet::IsInitialized() const {
  return true;
}

void PB_ADASSecureSet::InternalSwap(PB_ADASSecureSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_ADASSecureSet, ad_rearcolliasttype_)
      + sizeof(PB_ADASSecureSet::ad_rearcolliasttype_)
      - PROTOBUF_FIELD_OFFSET(PB_ADASSecureSet, ad_elkenable_)>(
          reinterpret_cast<char*>(&ad_elkenable_),
          reinterpret_cast<char*>(&other->ad_elkenable_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_ADASSecureSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[179]);
}

// ===================================================================

class PB_HUset_CSLmode::_Internal {
 public:
};

PB_HUset_CSLmode::PB_HUset_CSLmode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_CSLmode)
}
PB_HUset_CSLmode::PB_HUset_CSLmode(const PB_HUset_CSLmode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_cslmode_ = from.hu_cslmode_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_CSLmode)
}

inline void PB_HUset_CSLmode::SharedCtor() {
hu_cslmode_ = 0u;
}

PB_HUset_CSLmode::~PB_HUset_CSLmode() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_CSLmode)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_CSLmode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_CSLmode::ArenaDtor(void* object) {
  PB_HUset_CSLmode* _this = reinterpret_cast< PB_HUset_CSLmode* >(object);
  (void)_this;
}
void PB_HUset_CSLmode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_CSLmode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_CSLmode::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_CSLmode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_cslmode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_CSLmode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_CSLmode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_cslmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_CSLmode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_CSLmode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_CSLmode = 1;
  if (this->_internal_hu_cslmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_cslmode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_CSLmode)
  return target;
}

size_t PB_HUset_CSLmode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_CSLmode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_CSLmode = 1;
  if (this->_internal_hu_cslmode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_cslmode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_CSLmode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_CSLmode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_CSLmode::GetClassData() const { return &_class_data_; }

void PB_HUset_CSLmode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_CSLmode *>(to)->MergeFrom(
      static_cast<const PB_HUset_CSLmode &>(from));
}


void PB_HUset_CSLmode::MergeFrom(const PB_HUset_CSLmode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_CSLmode)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_cslmode() != 0) {
    _internal_set_hu_cslmode(from._internal_hu_cslmode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_CSLmode::CopyFrom(const PB_HUset_CSLmode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_CSLmode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_CSLmode::IsInitialized() const {
  return true;
}

void PB_HUset_CSLmode::InternalSwap(PB_HUset_CSLmode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_cslmode_, other->hu_cslmode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_CSLmode::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[180]);
}

// ===================================================================

class PB_AD_APACustSlotData::_Internal {
 public:
};

PB_AD_APACustSlotData::PB_AD_APACustSlotData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  ad_apacustslotini_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_AD_APACustSlotData)
}
PB_AD_APACustSlotData::PB_AD_APACustSlotData(const PB_AD_APACustSlotData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ad_apacustslotini_(from.ad_apacustslotini_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ad_apacustslotvld_ = from.ad_apacustslotvld_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_AD_APACustSlotData)
}

inline void PB_AD_APACustSlotData::SharedCtor() {
ad_apacustslotvld_ = 0u;
}

PB_AD_APACustSlotData::~PB_AD_APACustSlotData() {
  // @@protoc_insertion_point(destructor:Soa.PB_AD_APACustSlotData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_AD_APACustSlotData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_AD_APACustSlotData::ArenaDtor(void* object) {
  PB_AD_APACustSlotData* _this = reinterpret_cast< PB_AD_APACustSlotData* >(object);
  (void)_this;
}
void PB_AD_APACustSlotData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_AD_APACustSlotData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_AD_APACustSlotData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_AD_APACustSlotData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ad_apacustslotini_.Clear();
  ad_apacustslotvld_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_AD_APACustSlotData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .Soa.PB_Point2DStruct AD_APACustSlotIni = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_ad_apacustslotini(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 AD_APACustSlotVld = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          ad_apacustslotvld_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_AD_APACustSlotData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_AD_APACustSlotData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct AD_APACustSlotIni = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_ad_apacustslotini_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_ad_apacustslotini(i), target, stream);
  }

  // uint32 AD_APACustSlotVld = 2;
  if (this->_internal_ad_apacustslotvld() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_ad_apacustslotvld(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_AD_APACustSlotData)
  return target;
}

size_t PB_AD_APACustSlotData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_AD_APACustSlotData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Soa.PB_Point2DStruct AD_APACustSlotIni = 1;
  total_size += 1UL * this->_internal_ad_apacustslotini_size();
  for (const auto& msg : this->ad_apacustslotini_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 AD_APACustSlotVld = 2;
  if (this->_internal_ad_apacustslotvld() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_ad_apacustslotvld());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_AD_APACustSlotData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_AD_APACustSlotData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_AD_APACustSlotData::GetClassData() const { return &_class_data_; }

void PB_AD_APACustSlotData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_AD_APACustSlotData *>(to)->MergeFrom(
      static_cast<const PB_AD_APACustSlotData &>(from));
}


void PB_AD_APACustSlotData::MergeFrom(const PB_AD_APACustSlotData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_AD_APACustSlotData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  ad_apacustslotini_.MergeFrom(from.ad_apacustslotini_);
  if (from._internal_ad_apacustslotvld() != 0) {
    _internal_set_ad_apacustslotvld(from._internal_ad_apacustslotvld());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_AD_APACustSlotData::CopyFrom(const PB_AD_APACustSlotData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_AD_APACustSlotData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_AD_APACustSlotData::IsInitialized() const {
  return true;
}

void PB_AD_APACustSlotData::InternalSwap(PB_AD_APACustSlotData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ad_apacustslotini_.InternalSwap(&other->ad_apacustslotini_);
  swap(ad_apacustslotvld_, other->ad_apacustslotvld_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_AD_APACustSlotData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[181]);
}

// ===================================================================

class PB_HUset_BSDLCARemindmode::_Internal {
 public:
};

PB_HUset_BSDLCARemindmode::PB_HUset_BSDLCARemindmode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_HUset_BSDLCARemindmode)
}
PB_HUset_BSDLCARemindmode::PB_HUset_BSDLCARemindmode(const PB_HUset_BSDLCARemindmode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  hu_bsdlcaremindmode_ = from.hu_bsdlcaremindmode_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_HUset_BSDLCARemindmode)
}

inline void PB_HUset_BSDLCARemindmode::SharedCtor() {
hu_bsdlcaremindmode_ = 0u;
}

PB_HUset_BSDLCARemindmode::~PB_HUset_BSDLCARemindmode() {
  // @@protoc_insertion_point(destructor:Soa.PB_HUset_BSDLCARemindmode)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_HUset_BSDLCARemindmode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_HUset_BSDLCARemindmode::ArenaDtor(void* object) {
  PB_HUset_BSDLCARemindmode* _this = reinterpret_cast< PB_HUset_BSDLCARemindmode* >(object);
  (void)_this;
}
void PB_HUset_BSDLCARemindmode::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_HUset_BSDLCARemindmode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_HUset_BSDLCARemindmode::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_HUset_BSDLCARemindmode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hu_bsdlcaremindmode_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_HUset_BSDLCARemindmode::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 HU_BSDLCARemindmode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          hu_bsdlcaremindmode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_HUset_BSDLCARemindmode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_HUset_BSDLCARemindmode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 HU_BSDLCARemindmode = 1;
  if (this->_internal_hu_bsdlcaremindmode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_hu_bsdlcaremindmode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_HUset_BSDLCARemindmode)
  return target;
}

size_t PB_HUset_BSDLCARemindmode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_HUset_BSDLCARemindmode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 HU_BSDLCARemindmode = 1;
  if (this->_internal_hu_bsdlcaremindmode() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_hu_bsdlcaremindmode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_HUset_BSDLCARemindmode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_HUset_BSDLCARemindmode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_HUset_BSDLCARemindmode::GetClassData() const { return &_class_data_; }

void PB_HUset_BSDLCARemindmode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_HUset_BSDLCARemindmode *>(to)->MergeFrom(
      static_cast<const PB_HUset_BSDLCARemindmode &>(from));
}


void PB_HUset_BSDLCARemindmode::MergeFrom(const PB_HUset_BSDLCARemindmode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_HUset_BSDLCARemindmode)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_hu_bsdlcaremindmode() != 0) {
    _internal_set_hu_bsdlcaremindmode(from._internal_hu_bsdlcaremindmode());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_HUset_BSDLCARemindmode::CopyFrom(const PB_HUset_BSDLCARemindmode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_HUset_BSDLCARemindmode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_HUset_BSDLCARemindmode::IsInitialized() const {
  return true;
}

void PB_HUset_BSDLCARemindmode::InternalSwap(PB_HUset_BSDLCARemindmode* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(hu_bsdlcaremindmode_, other->hu_bsdlcaremindmode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_HUset_BSDLCARemindmode::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[182]);
}

// ===================================================================

class PB_SenWarningSet::_Internal {
 public:
};

PB_SenWarningSet::PB_SenWarningSet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_SenWarningSet)
}
PB_SenWarningSet::PB_SenWarningSet(const PB_SenWarningSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&senwarningsettype_, &from.senwarningsettype_,
    static_cast<size_t>(reinterpret_cast<char*>(&senwarningsetphone_) -
    reinterpret_cast<char*>(&senwarningsettype_)) + sizeof(senwarningsetphone_));
  // @@protoc_insertion_point(copy_constructor:Soa.PB_SenWarningSet)
}

inline void PB_SenWarningSet::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&senwarningsettype_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&senwarningsetphone_) -
    reinterpret_cast<char*>(&senwarningsettype_)) + sizeof(senwarningsetphone_));
}

PB_SenWarningSet::~PB_SenWarningSet() {
  // @@protoc_insertion_point(destructor:Soa.PB_SenWarningSet)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_SenWarningSet::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_SenWarningSet::ArenaDtor(void* object) {
  PB_SenWarningSet* _this = reinterpret_cast< PB_SenWarningSet* >(object);
  (void)_this;
}
void PB_SenWarningSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_SenWarningSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_SenWarningSet::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_SenWarningSet)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&senwarningsettype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&senwarningsetphone_) -
      reinterpret_cast<char*>(&senwarningsettype_)) + sizeof(senwarningsetphone_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_SenWarningSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 SenWarningSetType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          senwarningsettype_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SenWarningSetSwitch = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          senwarningsetswitch_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SenWarningSetHonk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          senwarningsethonk_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SenWarningSetLight = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          senwarningsetlight_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 SenWarningSetPhone = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          senwarningsetphone_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_SenWarningSet::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_SenWarningSet)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 SenWarningSetType = 1;
  if (this->_internal_senwarningsettype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_senwarningsettype(), target);
  }

  // uint32 SenWarningSetSwitch = 2;
  if (this->_internal_senwarningsetswitch() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_senwarningsetswitch(), target);
  }

  // uint32 SenWarningSetHonk = 3;
  if (this->_internal_senwarningsethonk() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_senwarningsethonk(), target);
  }

  // uint32 SenWarningSetLight = 4;
  if (this->_internal_senwarningsetlight() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_senwarningsetlight(), target);
  }

  // uint32 SenWarningSetPhone = 5;
  if (this->_internal_senwarningsetphone() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_senwarningsetphone(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_SenWarningSet)
  return target;
}

size_t PB_SenWarningSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_SenWarningSet)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 SenWarningSetType = 1;
  if (this->_internal_senwarningsettype() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_senwarningsettype());
  }

  // uint32 SenWarningSetSwitch = 2;
  if (this->_internal_senwarningsetswitch() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_senwarningsetswitch());
  }

  // uint32 SenWarningSetHonk = 3;
  if (this->_internal_senwarningsethonk() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_senwarningsethonk());
  }

  // uint32 SenWarningSetLight = 4;
  if (this->_internal_senwarningsetlight() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_senwarningsetlight());
  }

  // uint32 SenWarningSetPhone = 5;
  if (this->_internal_senwarningsetphone() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_senwarningsetphone());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_SenWarningSet::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_SenWarningSet::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_SenWarningSet::GetClassData() const { return &_class_data_; }

void PB_SenWarningSet::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_SenWarningSet *>(to)->MergeFrom(
      static_cast<const PB_SenWarningSet &>(from));
}


void PB_SenWarningSet::MergeFrom(const PB_SenWarningSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_SenWarningSet)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_senwarningsettype() != 0) {
    _internal_set_senwarningsettype(from._internal_senwarningsettype());
  }
  if (from._internal_senwarningsetswitch() != 0) {
    _internal_set_senwarningsetswitch(from._internal_senwarningsetswitch());
  }
  if (from._internal_senwarningsethonk() != 0) {
    _internal_set_senwarningsethonk(from._internal_senwarningsethonk());
  }
  if (from._internal_senwarningsetlight() != 0) {
    _internal_set_senwarningsetlight(from._internal_senwarningsetlight());
  }
  if (from._internal_senwarningsetphone() != 0) {
    _internal_set_senwarningsetphone(from._internal_senwarningsetphone());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_SenWarningSet::CopyFrom(const PB_SenWarningSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_SenWarningSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_SenWarningSet::IsInitialized() const {
  return true;
}

void PB_SenWarningSet::InternalSwap(PB_SenWarningSet* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_SenWarningSet, senwarningsetphone_)
      + sizeof(PB_SenWarningSet::senwarningsetphone_)
      - PROTOBUF_FIELD_OFFSET(PB_SenWarningSet, senwarningsettype_)>(
          reinterpret_cast<char*>(&senwarningsettype_),
          reinterpret_cast<char*>(&other->senwarningsettype_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_SenWarningSet::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[183]);
}

// ===================================================================

class PB_BLERpaData_Struct::_Internal {
 public:
};

PB_BLERpaData_Struct::PB_BLERpaData_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  blerpadata_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_BLERpaData_Struct)
}
PB_BLERpaData_Struct::PB_BLERpaData_Struct(const PB_BLERpaData_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      blerpadata_(from.blerpadata_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_BLERpaData_Struct)
}

inline void PB_BLERpaData_Struct::SharedCtor() {
}

PB_BLERpaData_Struct::~PB_BLERpaData_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_BLERpaData_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_BLERpaData_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_BLERpaData_Struct::ArenaDtor(void* object) {
  PB_BLERpaData_Struct* _this = reinterpret_cast< PB_BLERpaData_Struct* >(object);
  (void)_this;
}
void PB_BLERpaData_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_BLERpaData_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_BLERpaData_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_BLERpaData_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blerpadata_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_BLERpaData_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 BLERpaData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_blerpadata(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_blerpadata(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_BLERpaData_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_BLERpaData_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 BLERpaData = 1;
  {
    int byte_size = _blerpadata_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_blerpadata(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_BLERpaData_Struct)
  return target;
}

size_t PB_BLERpaData_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_BLERpaData_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 BLERpaData = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->blerpadata_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _blerpadata_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_BLERpaData_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_BLERpaData_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_BLERpaData_Struct::GetClassData() const { return &_class_data_; }

void PB_BLERpaData_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_BLERpaData_Struct *>(to)->MergeFrom(
      static_cast<const PB_BLERpaData_Struct &>(from));
}


void PB_BLERpaData_Struct::MergeFrom(const PB_BLERpaData_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_BLERpaData_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  blerpadata_.MergeFrom(from.blerpadata_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_BLERpaData_Struct::CopyFrom(const PB_BLERpaData_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_BLERpaData_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BLERpaData_Struct::IsInitialized() const {
  return true;
}

void PB_BLERpaData_Struct::InternalSwap(PB_BLERpaData_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  blerpadata_.InternalSwap(&other->blerpadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_BLERpaData_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[184]);
}

// ===================================================================

class PB_EDC_APADrvrReqOnOffData::_Internal {
 public:
};

PB_EDC_APADrvrReqOnOffData::PB_EDC_APADrvrReqOnOffData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EDC_APADrvrReqOnOffData)
}
PB_EDC_APADrvrReqOnOffData::PB_EDC_APADrvrReqOnOffData(const PB_EDC_APADrvrReqOnOffData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  edc_apadrvrreqonoff_ = from.edc_apadrvrreqonoff_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EDC_APADrvrReqOnOffData)
}

inline void PB_EDC_APADrvrReqOnOffData::SharedCtor() {
edc_apadrvrreqonoff_ = 0u;
}

PB_EDC_APADrvrReqOnOffData::~PB_EDC_APADrvrReqOnOffData() {
  // @@protoc_insertion_point(destructor:Soa.PB_EDC_APADrvrReqOnOffData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EDC_APADrvrReqOnOffData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EDC_APADrvrReqOnOffData::ArenaDtor(void* object) {
  PB_EDC_APADrvrReqOnOffData* _this = reinterpret_cast< PB_EDC_APADrvrReqOnOffData* >(object);
  (void)_this;
}
void PB_EDC_APADrvrReqOnOffData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EDC_APADrvrReqOnOffData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EDC_APADrvrReqOnOffData::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EDC_APADrvrReqOnOffData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  edc_apadrvrreqonoff_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EDC_APADrvrReqOnOffData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 EDC_APADrvrReqOnOff = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          edc_apadrvrreqonoff_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EDC_APADrvrReqOnOffData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EDC_APADrvrReqOnOffData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 EDC_APADrvrReqOnOff = 1;
  if (this->_internal_edc_apadrvrreqonoff() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_edc_apadrvrreqonoff(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EDC_APADrvrReqOnOffData)
  return target;
}

size_t PB_EDC_APADrvrReqOnOffData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EDC_APADrvrReqOnOffData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 EDC_APADrvrReqOnOff = 1;
  if (this->_internal_edc_apadrvrreqonoff() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_edc_apadrvrreqonoff());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EDC_APADrvrReqOnOffData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EDC_APADrvrReqOnOffData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EDC_APADrvrReqOnOffData::GetClassData() const { return &_class_data_; }

void PB_EDC_APADrvrReqOnOffData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EDC_APADrvrReqOnOffData *>(to)->MergeFrom(
      static_cast<const PB_EDC_APADrvrReqOnOffData &>(from));
}


void PB_EDC_APADrvrReqOnOffData::MergeFrom(const PB_EDC_APADrvrReqOnOffData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EDC_APADrvrReqOnOffData)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_edc_apadrvrreqonoff() != 0) {
    _internal_set_edc_apadrvrreqonoff(from._internal_edc_apadrvrreqonoff());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EDC_APADrvrReqOnOffData::CopyFrom(const PB_EDC_APADrvrReqOnOffData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EDC_APADrvrReqOnOffData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EDC_APADrvrReqOnOffData::IsInitialized() const {
  return true;
}

void PB_EDC_APADrvrReqOnOffData::InternalSwap(PB_EDC_APADrvrReqOnOffData* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(edc_apadrvrreqonoff_, other->edc_apadrvrreqonoff_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EDC_APADrvrReqOnOffData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[185]);
}

// ===================================================================

class PB_EleAirSuspAutoModSts::_Internal {
 public:
};

PB_EleAirSuspAutoModSts::PB_EleAirSuspAutoModSts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_EleAirSuspAutoModSts)
}
PB_EleAirSuspAutoModSts::PB_EleAirSuspAutoModSts(const PB_EleAirSuspAutoModSts& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  vmcautomodsts_ = from.vmcautomodsts_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_EleAirSuspAutoModSts)
}

inline void PB_EleAirSuspAutoModSts::SharedCtor() {
vmcautomodsts_ = 0u;
}

PB_EleAirSuspAutoModSts::~PB_EleAirSuspAutoModSts() {
  // @@protoc_insertion_point(destructor:Soa.PB_EleAirSuspAutoModSts)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_EleAirSuspAutoModSts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_EleAirSuspAutoModSts::ArenaDtor(void* object) {
  PB_EleAirSuspAutoModSts* _this = reinterpret_cast< PB_EleAirSuspAutoModSts* >(object);
  (void)_this;
}
void PB_EleAirSuspAutoModSts::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_EleAirSuspAutoModSts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_EleAirSuspAutoModSts::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_EleAirSuspAutoModSts)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vmcautomodsts_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_EleAirSuspAutoModSts::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 VMCAutoModSts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          vmcautomodsts_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_EleAirSuspAutoModSts::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_EleAirSuspAutoModSts)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 VMCAutoModSts = 1;
  if (this->_internal_vmcautomodsts() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_vmcautomodsts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_EleAirSuspAutoModSts)
  return target;
}

size_t PB_EleAirSuspAutoModSts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_EleAirSuspAutoModSts)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 VMCAutoModSts = 1;
  if (this->_internal_vmcautomodsts() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_vmcautomodsts());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_EleAirSuspAutoModSts::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_EleAirSuspAutoModSts::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_EleAirSuspAutoModSts::GetClassData() const { return &_class_data_; }

void PB_EleAirSuspAutoModSts::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_EleAirSuspAutoModSts *>(to)->MergeFrom(
      static_cast<const PB_EleAirSuspAutoModSts &>(from));
}


void PB_EleAirSuspAutoModSts::MergeFrom(const PB_EleAirSuspAutoModSts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_EleAirSuspAutoModSts)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_vmcautomodsts() != 0) {
    _internal_set_vmcautomodsts(from._internal_vmcautomodsts());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_EleAirSuspAutoModSts::CopyFrom(const PB_EleAirSuspAutoModSts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_EleAirSuspAutoModSts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_EleAirSuspAutoModSts::IsInitialized() const {
  return true;
}

void PB_EleAirSuspAutoModSts::InternalSwap(PB_EleAirSuspAutoModSts* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(vmcautomodsts_, other->vmcautomodsts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_EleAirSuspAutoModSts::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[186]);
}

// ===================================================================

class PB_BattHVSts::_Internal {
 public:
};

PB_BattHVSts::PB_BattHVSts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_BattHVSts)
}
PB_BattHVSts::PB_BattHVSts(const PB_BattHVSts& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  bcuopermod_ = from.bcuopermod_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_BattHVSts)
}

inline void PB_BattHVSts::SharedCtor() {
bcuopermod_ = 0u;
}

PB_BattHVSts::~PB_BattHVSts() {
  // @@protoc_insertion_point(destructor:Soa.PB_BattHVSts)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_BattHVSts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_BattHVSts::ArenaDtor(void* object) {
  PB_BattHVSts* _this = reinterpret_cast< PB_BattHVSts* >(object);
  (void)_this;
}
void PB_BattHVSts::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_BattHVSts::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_BattHVSts::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_BattHVSts)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bcuopermod_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_BattHVSts::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 BcuOperMod = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          bcuopermod_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_BattHVSts::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_BattHVSts)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 BcuOperMod = 1;
  if (this->_internal_bcuopermod() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_bcuopermod(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_BattHVSts)
  return target;
}

size_t PB_BattHVSts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_BattHVSts)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 BcuOperMod = 1;
  if (this->_internal_bcuopermod() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_bcuopermod());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_BattHVSts::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_BattHVSts::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_BattHVSts::GetClassData() const { return &_class_data_; }

void PB_BattHVSts::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_BattHVSts *>(to)->MergeFrom(
      static_cast<const PB_BattHVSts &>(from));
}


void PB_BattHVSts::MergeFrom(const PB_BattHVSts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_BattHVSts)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bcuopermod() != 0) {
    _internal_set_bcuopermod(from._internal_bcuopermod());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_BattHVSts::CopyFrom(const PB_BattHVSts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_BattHVSts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_BattHVSts::IsInitialized() const {
  return true;
}

void PB_BattHVSts::InternalSwap(PB_BattHVSts* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(bcuopermod_, other->bcuopermod_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_BattHVSts::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[187]);
}

// ===================================================================

class PB_LockStAll_Struct::_Internal {
 public:
};

PB_LockStAll_Struct::PB_LockStAll_Struct(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  lockstall_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_LockStAll_Struct)
}
PB_LockStAll_Struct::PB_LockStAll_Struct(const PB_LockStAll_Struct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      lockstall_(from.lockstall_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Soa.PB_LockStAll_Struct)
}

inline void PB_LockStAll_Struct::SharedCtor() {
}

PB_LockStAll_Struct::~PB_LockStAll_Struct() {
  // @@protoc_insertion_point(destructor:Soa.PB_LockStAll_Struct)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_LockStAll_Struct::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PB_LockStAll_Struct::ArenaDtor(void* object) {
  PB_LockStAll_Struct* _this = reinterpret_cast< PB_LockStAll_Struct* >(object);
  (void)_this;
}
void PB_LockStAll_Struct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_LockStAll_Struct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_LockStAll_Struct::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_LockStAll_Struct)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  lockstall_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_LockStAll_Struct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated uint32 LockStAll = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_lockstall(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 8) {
          _internal_add_lockstall(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_LockStAll_Struct::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_LockStAll_Struct)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 LockStAll = 1;
  {
    int byte_size = _lockstall_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          1, _internal_lockstall(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_LockStAll_Struct)
  return target;
}

size_t PB_LockStAll_Struct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_LockStAll_Struct)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 LockStAll = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->lockstall_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<int32_t>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _lockstall_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_LockStAll_Struct::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_LockStAll_Struct::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_LockStAll_Struct::GetClassData() const { return &_class_data_; }

void PB_LockStAll_Struct::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_LockStAll_Struct *>(to)->MergeFrom(
      static_cast<const PB_LockStAll_Struct &>(from));
}


void PB_LockStAll_Struct::MergeFrom(const PB_LockStAll_Struct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_LockStAll_Struct)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  lockstall_.MergeFrom(from.lockstall_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_LockStAll_Struct::CopyFrom(const PB_LockStAll_Struct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_LockStAll_Struct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_LockStAll_Struct::IsInitialized() const {
  return true;
}

void PB_LockStAll_Struct::InternalSwap(PB_LockStAll_Struct* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  lockstall_.InternalSwap(&other->lockstall_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_LockStAll_Struct::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Common_2eproto_getter, &descriptor_table_Common_2eproto_once,
      file_level_metadata_Common_2eproto[188]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Soa
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Soa::PB_APAsetnotice* Arena::CreateMaybeMessage< ::Soa::PB_APAsetnotice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_APAsetnotice >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ReturnCode* Arena::CreateMaybeMessage< ::Soa::PB_ReturnCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ReturnCode >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_RWiperFltSt* Arena::CreateMaybeMessage< ::Soa::PB_RWiperFltSt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_RWiperFltSt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_FunEnEvt* Arena::CreateMaybeMessage< ::Soa::PB_FunEnEvt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_FunEnEvt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TurnLiFltInfo* Arena::CreateMaybeMessage< ::Soa::PB_TurnLiFltInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TurnLiFltInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_ADLanechangeStyle* Arena::CreateMaybeMessage< ::Soa::PB_HUset_ADLanechangeStyle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_ADLanechangeStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_APACustSlotData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_APACustSlotData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_APACustSlotData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_NIDAudioWarStyle* Arena::CreateMaybeMessage< ::Soa::PB_HUset_NIDAudioWarStyle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_NIDAudioWarStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_LASIntellgentModeSelection* Arena::CreateMaybeMessage< ::Soa::PB_HUset_LASIntellgentModeSelection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_LASIntellgentModeSelection >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_SEAOnOff* Arena::CreateMaybeMessage< ::Soa::PB_HUset_SEAOnOff >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_SEAOnOff >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_RPAVoiceCtrlFbData* Arena::CreateMaybeMessage< ::Soa::PB_AD_RPAVoiceCtrlFbData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_RPAVoiceCtrlFbData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_UploadResult* Arena::CreateMaybeMessage< ::Soa::PB_UploadResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_UploadResult >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_RelOverSpdWarnOffset* Arena::CreateMaybeMessage< ::Soa::PB_HUset_RelOverSpdWarnOffset >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_RelOverSpdWarnOffset >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EleAirSuspHighModCHASts* Arena::CreateMaybeMessage< ::Soa::PB_EleAirSuspHighModCHASts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EleAirSuspHighModCHASts >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_Destination* Arena::CreateMaybeMessage< ::Soa::PB_Destination >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Destination >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_CampWarningSet* Arena::CreateMaybeMessage< ::Soa::PB_CampWarningSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_CampWarningSet >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_LaneChangeReq* Arena::CreateMaybeMessage< ::Soa::PB_HUset_LaneChangeReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_LaneChangeReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TailGateSysSwFltSt_Struct* Arena::CreateMaybeMessage< ::Soa::PB_TailGateSysSwFltSt_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TailGateSysSwFltSt_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_LASWarningModeSelection* Arena::CreateMaybeMessage< ::Soa::PB_HUset_LASWarningModeSelection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_LASWarningModeSelection >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EleAirSuspIntenModSts* Arena::CreateMaybeMessage< ::Soa::PB_EleAirSuspIntenModSts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EleAirSuspIntenModSts >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_C2_ADASStorageTimes* Arena::CreateMaybeMessage< ::Soa::PB_C2_ADASStorageTimes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_C2_ADASStorageTimes >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_RequestInfo* Arena::CreateMaybeMessage< ::Soa::PB_RequestInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_RequestInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TrigEvt* Arena::CreateMaybeMessage< ::Soa::PB_TrigEvt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TrigEvt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_C2DmdPrmInfo* Arena::CreateMaybeMessage< ::Soa::PB_C2DmdPrmInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_C2DmdPrmInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ViuGearShiftPosnInfo* Arena::CreateMaybeMessage< ::Soa::PB_ViuGearShiftPosnInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ViuGearShiftPosnInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_uint8_Struct* Arena::CreateMaybeMessage< ::Soa::PB_uint8_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_uint8_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_BLERpaCmdRsp* Arena::CreateMaybeMessage< ::Soa::PB_BLERpaCmdRsp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_BLERpaCmdRsp >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_PosnLiFltInfo* Arena::CreateMaybeMessage< ::Soa::PB_PosnLiFltInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_PosnLiFltInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_APAControleReq* Arena::CreateMaybeMessage< ::Soa::PB_APAControleReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_APAControleReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDCset_EducatingModeOnOff* Arena::CreateMaybeMessage< ::Soa::PB_EDCset_EducatingModeOnOff >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDCset_EducatingModeOnOff >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_RADSDrvrReqData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_RADSDrvrReqData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_RADSDrvrReqData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_MirrStsInfo* Arena::CreateMaybeMessage< ::Soa::PB_MirrStsInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_MirrStsInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EleAirSuspHighModSts* Arena::CreateMaybeMessage< ::Soa::PB_EleAirSuspHighModSts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EleAirSuspHighModSts >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_APAFctnStaData* Arena::CreateMaybeMessage< ::Soa::PB_AD_APAFctnStaData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_APAFctnStaData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_ADStartStyle* Arena::CreateMaybeMessage< ::Soa::PB_HUset_ADStartStyle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_ADStartStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ADASCruiseSet* Arena::CreateMaybeMessage< ::Soa::PB_ADASCruiseSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ADASCruiseSet >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_CSLWarnOffsetTp* Arena::CreateMaybeMessage< ::Soa::PB_HUset_CSLWarnOffsetTp >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_CSLWarnOffsetTp >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_DoorDrvStAll_Struct* Arena::CreateMaybeMessage< ::Soa::PB_DoorDrvStAll_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_DoorDrvStAll_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_LaneLedFltSt* Arena::CreateMaybeMessage< ::Soa::PB_LaneLedFltSt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_LaneLedFltSt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDCset_NIDSelfLrngReq* Arena::CreateMaybeMessage< ::Soa::PB_EDCset_NIDSelfLrngReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDCset_NIDSelfLrngReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDCset_PopUpWindowOperate* Arena::CreateMaybeMessage< ::Soa::PB_EDCset_PopUpWindowOperate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDCset_PopUpWindowOperate >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ResponseInfo* Arena::CreateMaybeMessage< ::Soa::PB_ResponseInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ResponseInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_FileEntity* Arena::CreateMaybeMessage< ::Soa::PB_FileEntity >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_FileEntity >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_AutoDriveStyle* Arena::CreateMaybeMessage< ::Soa::PB_HUset_AutoDriveStyle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_AutoDriveStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_C2TripSum* Arena::CreateMaybeMessage< ::Soa::PB_C2TripSum >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_C2TripSum >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_BLERpaCmdReq* Arena::CreateMaybeMessage< ::Soa::PB_BLERpaCmdReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_BLERpaCmdReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_uint32_Struct* Arena::CreateMaybeMessage< ::Soa::PB_uint32_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_uint32_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_MFSSwtInfo* Arena::CreateMaybeMessage< ::Soa::PB_MFSSwtInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_MFSSwtInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_Point2Dguideline_Struct* Arena::CreateMaybeMessage< ::Soa::PB_Point2Dguideline_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Point2Dguideline_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDCset_MainScreenOperate* Arena::CreateMaybeMessage< ::Soa::PB_EDCset_MainScreenOperate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDCset_MainScreenOperate >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_FogActCtrlInfo* Arena::CreateMaybeMessage< ::Soa::PB_FogActCtrlInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_FogActCtrlInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_VIUPwrPortRstInfo_Struct* Arena::CreateMaybeMessage< ::Soa::PB_VIUPwrPortRstInfo_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_VIUPwrPortRstInfo_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_APAVoiceCtrlFbData* Arena::CreateMaybeMessage< ::Soa::PB_AD_APAVoiceCtrlFbData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_APAVoiceCtrlFbData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_PwrCtr* Arena::CreateMaybeMessage< ::Soa::PB_PwrCtr >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_PwrCtr >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ADAS_MapTrafficSign* Arena::CreateMaybeMessage< ::Soa::PB_ADAS_MapTrafficSign >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ADAS_MapTrafficSign >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_VC_ACCactive* Arena::CreateMaybeMessage< ::Soa::PB_HUset_VC_ACCactive >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_VC_ACCactive >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_APADrvrReqSlotIDData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_APADrvrReqSlotIDData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_APADrvrReqSlotIDData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_int32_Struct* Arena::CreateMaybeMessage< ::Soa::PB_int32_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_int32_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_DDSPayload_Struct* Arena::CreateMaybeMessage< ::Soa::PB_DDSPayload_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_DDSPayload_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_FWiperFltSt* Arena::CreateMaybeMessage< ::Soa::PB_FWiperFltSt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_FWiperFltSt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_LaneChangeFrequency* Arena::CreateMaybeMessage< ::Soa::PB_HUset_LaneChangeFrequency >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_LaneChangeFrequency >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_ForwardColliAstSenStyle* Arena::CreateMaybeMessage< ::Soa::PB_HUset_ForwardColliAstSenStyle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_ForwardColliAstSenStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_LoBeamActCtrlInfo* Arena::CreateMaybeMessage< ::Soa::PB_LoBeamActCtrlInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_LoBeamActCtrlInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_BLERpaCmdRspData_Struct* Arena::CreateMaybeMessage< ::Soa::PB_BLERpaCmdRspData_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_BLERpaCmdRspData_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_ELKEnable* Arena::CreateMaybeMessage< ::Soa::PB_HUset_ELKEnable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_ELKEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_VC_CruiseSetSpeed* Arena::CreateMaybeMessage< ::Soa::PB_HUset_VC_CruiseSetSpeed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_VC_CruiseSetSpeed >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TireWarnInfo* Arena::CreateMaybeMessage< ::Soa::PB_TireWarnInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TireWarnInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_C2_ADASScore* Arena::CreateMaybeMessage< ::Soa::PB_C2_ADASScore >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_C2_ADASScore >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDCset_slot_ID* Arena::CreateMaybeMessage< ::Soa::PB_EDCset_slot_ID >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDCset_slot_ID >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_SwitSetResult* Arena::CreateMaybeMessage< ::Soa::PB_SwitSetResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_SwitSetResult >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HzrdKeySwtSt* Arena::CreateMaybeMessage< ::Soa::PB_HzrdKeySwtSt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HzrdKeySwtSt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ClusterTurnLiSt* Arena::CreateMaybeMessage< ::Soa::PB_ClusterTurnLiSt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ClusterTurnLiSt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_LoBeamFltInfo* Arena::CreateMaybeMessage< ::Soa::PB_LoBeamFltInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_LoBeamFltInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_APAAudioRmnSetData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_APAAudioRmnSetData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_APAAudioRmnSetData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_SentrySwitchParam* Arena::CreateMaybeMessage< ::Soa::PB_SentrySwitchParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_SentrySwitchParam >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ADAS_MapCommonSignal* Arena::CreateMaybeMessage< ::Soa::PB_ADAS_MapCommonSignal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ADAS_MapCommonSignal >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_APA_availablepoint_Struct* Arena::CreateMaybeMessage< ::Soa::PB_APA_availablepoint_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_APA_availablepoint_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_RedLightRemindEnable* Arena::CreateMaybeMessage< ::Soa::PB_HUset_RedLightRemindEnable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_RedLightRemindEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_BSDLCAOnOffSet* Arena::CreateMaybeMessage< ::Soa::PB_AD_BSDLCAOnOffSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_BSDLCAOnOffSet >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_APAPOCDirSelData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_APAPOCDirSelData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_APAPOCDirSelData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_SeatInfo* Arena::CreateMaybeMessage< ::Soa::PB_SeatInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_SeatInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_CSLAEnable* Arena::CreateMaybeMessage< ::Soa::PB_HUset_CSLAEnable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_CSLAEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_OverspeedSoundWarEnable* Arena::CreateMaybeMessage< ::Soa::PB_HUset_OverspeedSoundWarEnable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_OverspeedSoundWarEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_DTCArrayInfo_Struct* Arena::CreateMaybeMessage< ::Soa::PB_DTCArrayInfo_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_DTCArrayInfo_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_APAFctnIndnMsgData* Arena::CreateMaybeMessage< ::Soa::PB_AD_APAFctnIndnMsgData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_APAFctnIndnMsgData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TurnLiCtrlCmd* Arena::CreateMaybeMessage< ::Soa::PB_TurnLiCtrlCmd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TurnLiCtrlCmd >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_double_Struct* Arena::CreateMaybeMessage< ::Soa::PB_double_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_double_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_RLSSts* Arena::CreateMaybeMessage< ::Soa::PB_RLSSts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_RLSSts >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_String_Struct* Arena::CreateMaybeMessage< ::Soa::PB_String_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_String_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_PosnLiActCtrlInfo* Arena::CreateMaybeMessage< ::Soa::PB_PosnLiActCtrlInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_PosnLiActCtrlInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_LASModeSelection* Arena::CreateMaybeMessage< ::Soa::PB_HUset_LASModeSelection >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_LASModeSelection >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_LineCurve* Arena::CreateMaybeMessage< ::Soa::PB_LineCurve >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_LineCurve >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_DrSeatSts* Arena::CreateMaybeMessage< ::Soa::PB_DrSeatSts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_DrSeatSts >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_SEAOnOffStsSet* Arena::CreateMaybeMessage< ::Soa::PB_AD_SEAOnOffStsSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_SEAOnOffStsSet >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ObjStTypeDoorAll_Struct* Arena::CreateMaybeMessage< ::Soa::PB_ObjStTypeDoorAll_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ObjStTypeDoorAll_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_ForwardColliAstType* Arena::CreateMaybeMessage< ::Soa::PB_HUset_ForwardColliAstType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_ForwardColliAstType >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_VehicleStartRemindEnable* Arena::CreateMaybeMessage< ::Soa::PB_HUset_VehicleStartRemindEnable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_VehicleStartRemindEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_FWiperStsInfo* Arena::CreateMaybeMessage< ::Soa::PB_FWiperStsInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_FWiperStsInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_UserNotiConfirEvt* Arena::CreateMaybeMessage< ::Soa::PB_UserNotiConfirEvt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_UserNotiConfirEvt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_Point2DArray_Struct* Arena::CreateMaybeMessage< ::Soa::PB_Point2DArray_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Point2DArray_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_BrkLiActCtrlInfo* Arena::CreateMaybeMessage< ::Soa::PB_BrkLiActCtrlInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_BrkLiActCtrlInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_APADynamicOperateData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_APADynamicOperateData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_APADynamicOperateData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_RvsLiFltInfo* Arena::CreateMaybeMessage< ::Soa::PB_RvsLiFltInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_RvsLiFltInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_NIDSelfLrngFbset* Arena::CreateMaybeMessage< ::Soa::PB_AD_NIDSelfLrngFbset >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_NIDSelfLrngFbset >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_VideoParam* Arena::CreateMaybeMessage< ::Soa::PB_VideoParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_VideoParam >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ADAS_MapNavigationSignal* Arena::CreateMaybeMessage< ::Soa::PB_ADAS_MapNavigationSignal >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ADAS_MapNavigationSignal >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_APAReqreply* Arena::CreateMaybeMessage< ::Soa::PB_APAReqreply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_APAReqreply >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ReevTotalMilg* Arena::CreateMaybeMessage< ::Soa::PB_ReevTotalMilg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ReevTotalMilg >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_int8_Struct* Arena::CreateMaybeMessage< ::Soa::PB_int8_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_int8_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_OperationInfo* Arena::CreateMaybeMessage< ::Soa::PB_OperationInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_OperationInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_BrkLiFltInfo* Arena::CreateMaybeMessage< ::Soa::PB_BrkLiFltInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_BrkLiFltInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_BSDLCASetting* Arena::CreateMaybeMessage< ::Soa::PB_HUset_BSDLCASetting >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_BSDLCASetting >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_InfoSetResult* Arena::CreateMaybeMessage< ::Soa::PB_InfoSetResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_InfoSetResult >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDCset_APAvoicecontrol* Arena::CreateMaybeMessage< ::Soa::PB_EDCset_APAvoicecontrol >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDCset_APAvoicecontrol >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_RMAset_APP_MainScreenOperate* Arena::CreateMaybeMessage< ::Soa::PB_RMAset_APP_MainScreenOperate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_RMAset_APP_MainScreenOperate >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_DDSData_Msg* Arena::CreateMaybeMessage< ::Soa::PB_DDSData_Msg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_DDSData_Msg >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_GpsTime_Struct* Arena::CreateMaybeMessage< ::Soa::PB_GpsTime_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_GpsTime_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_APAVoiceCtrlData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_APAVoiceCtrlData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_APAVoiceCtrlData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_CuriseMode* Arena::CreateMaybeMessage< ::Soa::PB_HUset_CuriseMode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_CuriseMode >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_APAFunctionReq* Arena::CreateMaybeMessage< ::Soa::PB_APAFunctionReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_APAFunctionReq >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_VC_CruiseSetDistance* Arena::CreateMaybeMessage< ::Soa::PB_HUset_VC_CruiseSetDistance >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_VC_CruiseSetDistance >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_RPAVoiceCtrlData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_RPAVoiceCtrlData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_RPAVoiceCtrlData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_ADACCStyle* Arena::CreateMaybeMessage< ::Soa::PB_HUset_ADACCStyle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_ADACCStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_APAFunctionRes* Arena::CreateMaybeMessage< ::Soa::PB_APAFunctionRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_APAFunctionRes >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HiBeamActCtrlInfo* Arena::CreateMaybeMessage< ::Soa::PB_HiBeamActCtrlInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HiBeamActCtrlInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TurnLiActCtrlInfo* Arena::CreateMaybeMessage< ::Soa::PB_TurnLiActCtrlInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TurnLiActCtrlInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_SeatPosInfo* Arena::CreateMaybeMessage< ::Soa::PB_SeatPosInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_SeatPosInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_BLEPhyKeyBascInfo* Arena::CreateMaybeMessage< ::Soa::PB_BLEPhyKeyBascInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_BLEPhyKeyBascInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TailGateSysSwSt_Struct* Arena::CreateMaybeMessage< ::Soa::PB_TailGateSysSwSt_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TailGateSysSwSt_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_BSDLCAOnOff* Arena::CreateMaybeMessage< ::Soa::PB_HUset_BSDLCAOnOff >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_BSDLCAOnOff >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_uint64_Struct* Arena::CreateMaybeMessage< ::Soa::PB_uint64_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_uint64_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_C2_GetADASScore* Arena::CreateMaybeMessage< ::Soa::PB_C2_GetADASScore >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_C2_GetADASScore >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_RCWEnable* Arena::CreateMaybeMessage< ::Soa::PB_HUset_RCWEnable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_RCWEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_SEAMode* Arena::CreateMaybeMessage< ::Soa::PB_HUset_SEAMode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_SEAMode >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_Track_Point1* Arena::CreateMaybeMessage< ::Soa::PB_Track_Point1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Track_Point1 >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_PwrPortCtr_Struct* Arena::CreateMaybeMessage< ::Soa::PB_PwrPortCtr_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_PwrPortCtr_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_FogFltInfo* Arena::CreateMaybeMessage< ::Soa::PB_FogFltInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_FogFltInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_APASelfdefnSlotData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_APASelfdefnSlotData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_APASelfdefnSlotData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ObjStTypeCurPosVITAll_Struct* Arena::CreateMaybeMessage< ::Soa::PB_ObjStTypeCurPosVITAll_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ObjStTypeCurPosVITAll_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_APAParkOutSelectData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_APAParkOutSelectData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_APAParkOutSelectData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_CamLinesCurve* Arena::CreateMaybeMessage< ::Soa::PB_CamLinesCurve >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_CamLinesCurve >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_APA_apaguidepoint_Struct* Arena::CreateMaybeMessage< ::Soa::PB_APA_apaguidepoint_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_APA_apaguidepoint_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TurnLiSt* Arena::CreateMaybeMessage< ::Soa::PB_TurnLiSt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TurnLiSt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_CESEnable* Arena::CreateMaybeMessage< ::Soa::PB_HUset_CESEnable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_CESEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_IDAEnable* Arena::CreateMaybeMessage< ::Soa::PB_HUset_IDAEnable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_IDAEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_RearColliAstType* Arena::CreateMaybeMessage< ::Soa::PB_HUset_RearColliAstType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_RearColliAstType >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_VideoRequestParam* Arena::CreateMaybeMessage< ::Soa::PB_VideoRequestParam >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_VideoRequestParam >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ThrLiActCtrlInfo* Arena::CreateMaybeMessage< ::Soa::PB_ThrLiActCtrlInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ThrLiActCtrlInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TurnLiKeySwtSt* Arena::CreateMaybeMessage< ::Soa::PB_TurnLiKeySwtSt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TurnLiKeySwtSt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_SenMoInfoSet* Arena::CreateMaybeMessage< ::Soa::PB_SenMoInfoSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_SenMoInfoSet >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_MFSFltStInfo* Arena::CreateMaybeMessage< ::Soa::PB_MFSFltStInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_MFSFltStInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_AbsOverSpdWarnOffset* Arena::CreateMaybeMessage< ::Soa::PB_HUset_AbsOverSpdWarnOffset >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_AbsOverSpdWarnOffset >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_uint16_Struct* Arena::CreateMaybeMessage< ::Soa::PB_uint16_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_uint16_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_LogoActCtrlInfo* Arena::CreateMaybeMessage< ::Soa::PB_LogoActCtrlInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_LogoActCtrlInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HornCtrlCmd* Arena::CreateMaybeMessage< ::Soa::PB_HornCtrlCmd >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HornCtrlCmd >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_DRLActCtrlInfo* Arena::CreateMaybeMessage< ::Soa::PB_DRLActCtrlInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_DRLActCtrlInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_APADynguidanceData* Arena::CreateMaybeMessage< ::Soa::PB_AD_APADynguidanceData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_APADynguidanceData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_IACCFamlrRdModSwt* Arena::CreateMaybeMessage< ::Soa::PB_HUset_IACCFamlrRdModSwt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_IACCFamlrRdModSwt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_OperationCode* Arena::CreateMaybeMessage< ::Soa::PB_OperationCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_OperationCode >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_RedLightReEnSet* Arena::CreateMaybeMessage< ::Soa::PB_AD_RedLightReEnSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_RedLightReEnSet >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_APADynrecommdData* Arena::CreateMaybeMessage< ::Soa::PB_AD_APADynrecommdData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_APADynrecommdData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TarposeData* Arena::CreateMaybeMessage< ::Soa::PB_TarposeData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TarposeData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_UDLCEnable* Arena::CreateMaybeMessage< ::Soa::PB_HUset_UDLCEnable >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_UDLCEnable >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_C2_IACCFamlrRdModSwtFbSet* Arena::CreateMaybeMessage< ::Soa::PB_C2_IACCFamlrRdModSwtFbSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_C2_IACCFamlrRdModSwtFbSet >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_Point2DStruct* Arena::CreateMaybeMessage< ::Soa::PB_Point2DStruct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Point2DStruct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_RvsLiActCtrlInfo* Arena::CreateMaybeMessage< ::Soa::PB_RvsLiActCtrlInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_RvsLiActCtrlInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_PhyStWinAll_Struct* Arena::CreateMaybeMessage< ::Soa::PB_PhyStWinAll_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_PhyStWinAll_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_CrashStsInfo* Arena::CreateMaybeMessage< ::Soa::PB_CrashStsInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_CrashStsInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_GpsDatas* Arena::CreateMaybeMessage< ::Soa::PB_GpsDatas >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_GpsDatas >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_float_Struct* Arena::CreateMaybeMessage< ::Soa::PB_float_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_float_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_ADCurveStyle* Arena::CreateMaybeMessage< ::Soa::PB_HUset_ADCurveStyle >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_ADCurveStyle >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TarSlotData* Arena::CreateMaybeMessage< ::Soa::PB_TarSlotData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TarSlotData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_LineCurveValid* Arena::CreateMaybeMessage< ::Soa::PB_LineCurveValid >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_LineCurveValid >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_BucSwtSts* Arena::CreateMaybeMessage< ::Soa::PB_BucSwtSts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_BucSwtSts >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_VIUPwrPinRstInfo* Arena::CreateMaybeMessage< ::Soa::PB_VIUPwrPinRstInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_VIUPwrPinRstInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_DRLFltInfo* Arena::CreateMaybeMessage< ::Soa::PB_DRLFltInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_DRLFltInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_TurnLiFltMonrSt* Arena::CreateMaybeMessage< ::Soa::PB_TurnLiFltMonrSt >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_TurnLiFltMonrSt >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HiBeamFltInfo* Arena::CreateMaybeMessage< ::Soa::PB_HiBeamFltInfo >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HiBeamFltInfo >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_APAParkInSelectData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_APAParkInSelectData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_APAParkInSelectData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_ADASSecureSet* Arena::CreateMaybeMessage< ::Soa::PB_ADASSecureSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_ADASSecureSet >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_CSLmode* Arena::CreateMaybeMessage< ::Soa::PB_HUset_CSLmode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_CSLmode >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_AD_APACustSlotData* Arena::CreateMaybeMessage< ::Soa::PB_AD_APACustSlotData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_AD_APACustSlotData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_HUset_BSDLCARemindmode* Arena::CreateMaybeMessage< ::Soa::PB_HUset_BSDLCARemindmode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_HUset_BSDLCARemindmode >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_SenWarningSet* Arena::CreateMaybeMessage< ::Soa::PB_SenWarningSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_SenWarningSet >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_BLERpaData_Struct* Arena::CreateMaybeMessage< ::Soa::PB_BLERpaData_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_BLERpaData_Struct >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EDC_APADrvrReqOnOffData* Arena::CreateMaybeMessage< ::Soa::PB_EDC_APADrvrReqOnOffData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EDC_APADrvrReqOnOffData >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_EleAirSuspAutoModSts* Arena::CreateMaybeMessage< ::Soa::PB_EleAirSuspAutoModSts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_EleAirSuspAutoModSts >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_BattHVSts* Arena::CreateMaybeMessage< ::Soa::PB_BattHVSts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_BattHVSts >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_LockStAll_Struct* Arena::CreateMaybeMessage< ::Soa::PB_LockStAll_Struct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_LockStAll_Struct >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
