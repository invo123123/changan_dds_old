// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Basc_VideoRecordServer.proto

#include "Basc_VideoRecordServer.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Soa {
constexpr PB_Basc_VideoRecordServer_RR_Init_In::PB_Basc_VideoRecordServer_RR_Init_In(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requestinfo_(nullptr)
  , videoparam_(nullptr){}
struct PB_Basc_VideoRecordServer_RR_Init_InDefaultTypeInternal {
  constexpr PB_Basc_VideoRecordServer_RR_Init_InDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_Basc_VideoRecordServer_RR_Init_InDefaultTypeInternal() {}
  union {
    PB_Basc_VideoRecordServer_RR_Init_In _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_Basc_VideoRecordServer_RR_Init_InDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_Init_In_default_instance_;
constexpr PB_Basc_VideoRecordServer_RR_Uinit_In::PB_Basc_VideoRecordServer_RR_Uinit_In(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requestinfo_(nullptr)
  , camera_(0u){}
struct PB_Basc_VideoRecordServer_RR_Uinit_InDefaultTypeInternal {
  constexpr PB_Basc_VideoRecordServer_RR_Uinit_InDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_Basc_VideoRecordServer_RR_Uinit_InDefaultTypeInternal() {}
  union {
    PB_Basc_VideoRecordServer_RR_Uinit_In _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_Basc_VideoRecordServer_RR_Uinit_InDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_Uinit_In_default_instance_;
constexpr PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : requestinfo_(nullptr)
  , videorequestparam_(nullptr){}
struct PB_Basc_VideoRecordServer_RR_RequestVideoFile_InDefaultTypeInternal {
  constexpr PB_Basc_VideoRecordServer_RR_RequestVideoFile_InDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_Basc_VideoRecordServer_RR_RequestVideoFile_InDefaultTypeInternal() {}
  union {
    PB_Basc_VideoRecordServer_RR_RequestVideoFile_In _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_Basc_VideoRecordServer_RR_RequestVideoFile_InDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_RequestVideoFile_In_default_instance_;
constexpr PB_Basc_VideoRecordServer_RR_Init_Out::PB_Basc_VideoRecordServer_RR_Init_Out(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : return__(nullptr){}
struct PB_Basc_VideoRecordServer_RR_Init_OutDefaultTypeInternal {
  constexpr PB_Basc_VideoRecordServer_RR_Init_OutDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_Basc_VideoRecordServer_RR_Init_OutDefaultTypeInternal() {}
  union {
    PB_Basc_VideoRecordServer_RR_Init_Out _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_Basc_VideoRecordServer_RR_Init_OutDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_Init_Out_default_instance_;
constexpr PB_Basc_VideoRecordServer_RR_Uinit_Out::PB_Basc_VideoRecordServer_RR_Uinit_Out(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : return__(nullptr){}
struct PB_Basc_VideoRecordServer_RR_Uinit_OutDefaultTypeInternal {
  constexpr PB_Basc_VideoRecordServer_RR_Uinit_OutDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_Basc_VideoRecordServer_RR_Uinit_OutDefaultTypeInternal() {}
  union {
    PB_Basc_VideoRecordServer_RR_Uinit_Out _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_Basc_VideoRecordServer_RR_Uinit_OutDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_Uinit_Out_default_instance_;
constexpr PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : return__(nullptr){}
struct PB_Basc_VideoRecordServer_RR_RequestVideoFile_OutDefaultTypeInternal {
  constexpr PB_Basc_VideoRecordServer_RR_RequestVideoFile_OutDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PB_Basc_VideoRecordServer_RR_RequestVideoFile_OutDefaultTypeInternal() {}
  union {
    PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PB_Basc_VideoRecordServer_RR_RequestVideoFile_OutDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out_default_instance_;
}  // namespace Soa
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Basc_5fVideoRecordServer_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Basc_5fVideoRecordServer_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Basc_5fVideoRecordServer_2eproto = nullptr;

const uint32_t TableStruct_Basc_5fVideoRecordServer_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_Init_In, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_Init_In, requestinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_Init_In, videoparam_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_Uinit_In, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_Uinit_In, requestinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_Uinit_In, camera_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In, requestinfo_),
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In, videorequestparam_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_Init_Out, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_Init_Out, return__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_Uinit_Out, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_Uinit_Out, return__),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out, return__),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::Soa::PB_Basc_VideoRecordServer_RR_Init_In)},
  { 8, -1, -1, sizeof(::Soa::PB_Basc_VideoRecordServer_RR_Uinit_In)},
  { 16, -1, -1, sizeof(::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)},
  { 24, -1, -1, sizeof(::Soa::PB_Basc_VideoRecordServer_RR_Init_Out)},
  { 31, -1, -1, sizeof(::Soa::PB_Basc_VideoRecordServer_RR_Uinit_Out)},
  { 38, -1, -1, sizeof(::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Basc_VideoRecordServer_RR_Init_In_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Basc_VideoRecordServer_RR_Uinit_In_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Basc_VideoRecordServer_RR_RequestVideoFile_In_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Basc_VideoRecordServer_RR_Init_Out_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Basc_VideoRecordServer_RR_Uinit_Out_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Soa::_PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out_default_instance_),
};

const char descriptor_table_protodef_Basc_5fVideoRecordServer_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034Basc_VideoRecordServer.proto\022\003Soa\032\014Com"
  "mon.proto\"x\n$PB_Basc_VideoRecordServer_R"
  "R_Init_In\022(\n\013RequestInfo\030\001 \001(\0132\023.Soa.PB_"
  "RequestInfo\022&\n\nVideoParam\030\002 \001(\0132\022.Soa.PB"
  "_VideoParam\"a\n%PB_Basc_VideoRecordServer"
  "_RR_Uinit_In\022(\n\013RequestInfo\030\001 \001(\0132\023.Soa."
  "PB_RequestInfo\022\016\n\006camera\030\002 \001(\r\"\222\001\n0PB_Ba"
  "sc_VideoRecordServer_RR_RequestVideoFile"
  "_In\022(\n\013RequestInfo\030\001 \001(\0132\023.Soa.PB_Reques"
  "tInfo\0224\n\021VideoRequestParam\030\002 \001(\0132\031.Soa.P"
  "B_VideoRequestParam\"N\n%PB_Basc_VideoReco"
  "rdServer_RR_Init_Out\022%\n\007return_\030\001 \001(\0132\024."
  "Soa.PB_ResponseInfo\"O\n&PB_Basc_VideoReco"
  "rdServer_RR_Uinit_Out\022%\n\007return_\030\001 \001(\0132\024"
  ".Soa.PB_ResponseInfo\"Z\n1PB_Basc_VideoRec"
  "ordServer_RR_RequestVideoFile_Out\022%\n\007ret"
  "urn_\030\001 \001(\0132\024.Soa.PB_ResponseInfob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Basc_5fVideoRecordServer_2eproto_deps[1] = {
  &::descriptor_table_Common_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Basc_5fVideoRecordServer_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Basc_5fVideoRecordServer_2eproto = {
  false, false, 680, descriptor_table_protodef_Basc_5fVideoRecordServer_2eproto, "Basc_VideoRecordServer.proto", 
  &descriptor_table_Basc_5fVideoRecordServer_2eproto_once, descriptor_table_Basc_5fVideoRecordServer_2eproto_deps, 1, 6,
  schemas, file_default_instances, TableStruct_Basc_5fVideoRecordServer_2eproto::offsets,
  file_level_metadata_Basc_5fVideoRecordServer_2eproto, file_level_enum_descriptors_Basc_5fVideoRecordServer_2eproto, file_level_service_descriptors_Basc_5fVideoRecordServer_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_Basc_5fVideoRecordServer_2eproto_getter() {
  return &descriptor_table_Basc_5fVideoRecordServer_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_Basc_5fVideoRecordServer_2eproto(&descriptor_table_Basc_5fVideoRecordServer_2eproto);
namespace Soa {

// ===================================================================

class PB_Basc_VideoRecordServer_RR_Init_In::_Internal {
 public:
  static const ::Soa::PB_RequestInfo& requestinfo(const PB_Basc_VideoRecordServer_RR_Init_In* msg);
  static const ::Soa::PB_VideoParam& videoparam(const PB_Basc_VideoRecordServer_RR_Init_In* msg);
};

const ::Soa::PB_RequestInfo&
PB_Basc_VideoRecordServer_RR_Init_In::_Internal::requestinfo(const PB_Basc_VideoRecordServer_RR_Init_In* msg) {
  return *msg->requestinfo_;
}
const ::Soa::PB_VideoParam&
PB_Basc_VideoRecordServer_RR_Init_In::_Internal::videoparam(const PB_Basc_VideoRecordServer_RR_Init_In* msg) {
  return *msg->videoparam_;
}
void PB_Basc_VideoRecordServer_RR_Init_In::clear_requestinfo() {
  if (GetArenaForAllocation() == nullptr && requestinfo_ != nullptr) {
    delete requestinfo_;
  }
  requestinfo_ = nullptr;
}
void PB_Basc_VideoRecordServer_RR_Init_In::clear_videoparam() {
  if (GetArenaForAllocation() == nullptr && videoparam_ != nullptr) {
    delete videoparam_;
  }
  videoparam_ = nullptr;
}
PB_Basc_VideoRecordServer_RR_Init_In::PB_Basc_VideoRecordServer_RR_Init_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Basc_VideoRecordServer_RR_Init_In)
}
PB_Basc_VideoRecordServer_RR_Init_In::PB_Basc_VideoRecordServer_RR_Init_In(const PB_Basc_VideoRecordServer_RR_Init_In& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_requestinfo()) {
    requestinfo_ = new ::Soa::PB_RequestInfo(*from.requestinfo_);
  } else {
    requestinfo_ = nullptr;
  }
  if (from._internal_has_videoparam()) {
    videoparam_ = new ::Soa::PB_VideoParam(*from.videoparam_);
  } else {
    videoparam_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Basc_VideoRecordServer_RR_Init_In)
}

inline void PB_Basc_VideoRecordServer_RR_Init_In::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&requestinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&videoparam_) -
    reinterpret_cast<char*>(&requestinfo_)) + sizeof(videoparam_));
}

PB_Basc_VideoRecordServer_RR_Init_In::~PB_Basc_VideoRecordServer_RR_Init_In() {
  // @@protoc_insertion_point(destructor:Soa.PB_Basc_VideoRecordServer_RR_Init_In)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Basc_VideoRecordServer_RR_Init_In::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete requestinfo_;
  if (this != internal_default_instance()) delete videoparam_;
}

void PB_Basc_VideoRecordServer_RR_Init_In::ArenaDtor(void* object) {
  PB_Basc_VideoRecordServer_RR_Init_In* _this = reinterpret_cast< PB_Basc_VideoRecordServer_RR_Init_In* >(object);
  (void)_this;
}
void PB_Basc_VideoRecordServer_RR_Init_In::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Basc_VideoRecordServer_RR_Init_In::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Basc_VideoRecordServer_RR_Init_In::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Basc_VideoRecordServer_RR_Init_In)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && requestinfo_ != nullptr) {
    delete requestinfo_;
  }
  requestinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && videoparam_ != nullptr) {
    delete videoparam_;
  }
  videoparam_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Basc_VideoRecordServer_RR_Init_In::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Soa.PB_RequestInfo RequestInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Soa.PB_VideoParam VideoParam = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_videoparam(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Basc_VideoRecordServer_RR_Init_In::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Basc_VideoRecordServer_RR_Init_In)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Soa.PB_RequestInfo RequestInfo = 1;
  if (this->_internal_has_requestinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::requestinfo(this), target, stream);
  }

  // .Soa.PB_VideoParam VideoParam = 2;
  if (this->_internal_has_videoparam()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::videoparam(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Basc_VideoRecordServer_RR_Init_In)
  return target;
}

size_t PB_Basc_VideoRecordServer_RR_Init_In::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Basc_VideoRecordServer_RR_Init_In)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Soa.PB_RequestInfo RequestInfo = 1;
  if (this->_internal_has_requestinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *requestinfo_);
  }

  // .Soa.PB_VideoParam VideoParam = 2;
  if (this->_internal_has_videoparam()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *videoparam_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Basc_VideoRecordServer_RR_Init_In::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Basc_VideoRecordServer_RR_Init_In::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Basc_VideoRecordServer_RR_Init_In::GetClassData() const { return &_class_data_; }

void PB_Basc_VideoRecordServer_RR_Init_In::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Basc_VideoRecordServer_RR_Init_In *>(to)->MergeFrom(
      static_cast<const PB_Basc_VideoRecordServer_RR_Init_In &>(from));
}


void PB_Basc_VideoRecordServer_RR_Init_In::MergeFrom(const PB_Basc_VideoRecordServer_RR_Init_In& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Basc_VideoRecordServer_RR_Init_In)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_requestinfo()) {
    _internal_mutable_requestinfo()->::Soa::PB_RequestInfo::MergeFrom(from._internal_requestinfo());
  }
  if (from._internal_has_videoparam()) {
    _internal_mutable_videoparam()->::Soa::PB_VideoParam::MergeFrom(from._internal_videoparam());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Basc_VideoRecordServer_RR_Init_In::CopyFrom(const PB_Basc_VideoRecordServer_RR_Init_In& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Basc_VideoRecordServer_RR_Init_In)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Basc_VideoRecordServer_RR_Init_In::IsInitialized() const {
  return true;
}

void PB_Basc_VideoRecordServer_RR_Init_In::InternalSwap(PB_Basc_VideoRecordServer_RR_Init_In* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_Basc_VideoRecordServer_RR_Init_In, videoparam_)
      + sizeof(PB_Basc_VideoRecordServer_RR_Init_In::videoparam_)
      - PROTOBUF_FIELD_OFFSET(PB_Basc_VideoRecordServer_RR_Init_In, requestinfo_)>(
          reinterpret_cast<char*>(&requestinfo_),
          reinterpret_cast<char*>(&other->requestinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Basc_VideoRecordServer_RR_Init_In::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Basc_5fVideoRecordServer_2eproto_getter, &descriptor_table_Basc_5fVideoRecordServer_2eproto_once,
      file_level_metadata_Basc_5fVideoRecordServer_2eproto[0]);
}

// ===================================================================

class PB_Basc_VideoRecordServer_RR_Uinit_In::_Internal {
 public:
  static const ::Soa::PB_RequestInfo& requestinfo(const PB_Basc_VideoRecordServer_RR_Uinit_In* msg);
};

const ::Soa::PB_RequestInfo&
PB_Basc_VideoRecordServer_RR_Uinit_In::_Internal::requestinfo(const PB_Basc_VideoRecordServer_RR_Uinit_In* msg) {
  return *msg->requestinfo_;
}
void PB_Basc_VideoRecordServer_RR_Uinit_In::clear_requestinfo() {
  if (GetArenaForAllocation() == nullptr && requestinfo_ != nullptr) {
    delete requestinfo_;
  }
  requestinfo_ = nullptr;
}
PB_Basc_VideoRecordServer_RR_Uinit_In::PB_Basc_VideoRecordServer_RR_Uinit_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In)
}
PB_Basc_VideoRecordServer_RR_Uinit_In::PB_Basc_VideoRecordServer_RR_Uinit_In(const PB_Basc_VideoRecordServer_RR_Uinit_In& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_requestinfo()) {
    requestinfo_ = new ::Soa::PB_RequestInfo(*from.requestinfo_);
  } else {
    requestinfo_ = nullptr;
  }
  camera_ = from.camera_;
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In)
}

inline void PB_Basc_VideoRecordServer_RR_Uinit_In::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&requestinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&camera_) -
    reinterpret_cast<char*>(&requestinfo_)) + sizeof(camera_));
}

PB_Basc_VideoRecordServer_RR_Uinit_In::~PB_Basc_VideoRecordServer_RR_Uinit_In() {
  // @@protoc_insertion_point(destructor:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Basc_VideoRecordServer_RR_Uinit_In::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete requestinfo_;
}

void PB_Basc_VideoRecordServer_RR_Uinit_In::ArenaDtor(void* object) {
  PB_Basc_VideoRecordServer_RR_Uinit_In* _this = reinterpret_cast< PB_Basc_VideoRecordServer_RR_Uinit_In* >(object);
  (void)_this;
}
void PB_Basc_VideoRecordServer_RR_Uinit_In::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Basc_VideoRecordServer_RR_Uinit_In::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Basc_VideoRecordServer_RR_Uinit_In::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && requestinfo_ != nullptr) {
    delete requestinfo_;
  }
  requestinfo_ = nullptr;
  camera_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Basc_VideoRecordServer_RR_Uinit_In::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Soa.PB_RequestInfo RequestInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 camera = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          camera_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Basc_VideoRecordServer_RR_Uinit_In::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Soa.PB_RequestInfo RequestInfo = 1;
  if (this->_internal_has_requestinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::requestinfo(this), target, stream);
  }

  // uint32 camera = 2;
  if (this->_internal_camera() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_camera(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In)
  return target;
}

size_t PB_Basc_VideoRecordServer_RR_Uinit_In::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Soa.PB_RequestInfo RequestInfo = 1;
  if (this->_internal_has_requestinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *requestinfo_);
  }

  // uint32 camera = 2;
  if (this->_internal_camera() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_camera());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Basc_VideoRecordServer_RR_Uinit_In::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Basc_VideoRecordServer_RR_Uinit_In::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Basc_VideoRecordServer_RR_Uinit_In::GetClassData() const { return &_class_data_; }

void PB_Basc_VideoRecordServer_RR_Uinit_In::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Basc_VideoRecordServer_RR_Uinit_In *>(to)->MergeFrom(
      static_cast<const PB_Basc_VideoRecordServer_RR_Uinit_In &>(from));
}


void PB_Basc_VideoRecordServer_RR_Uinit_In::MergeFrom(const PB_Basc_VideoRecordServer_RR_Uinit_In& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_requestinfo()) {
    _internal_mutable_requestinfo()->::Soa::PB_RequestInfo::MergeFrom(from._internal_requestinfo());
  }
  if (from._internal_camera() != 0) {
    _internal_set_camera(from._internal_camera());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Basc_VideoRecordServer_RR_Uinit_In::CopyFrom(const PB_Basc_VideoRecordServer_RR_Uinit_In& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Basc_VideoRecordServer_RR_Uinit_In::IsInitialized() const {
  return true;
}

void PB_Basc_VideoRecordServer_RR_Uinit_In::InternalSwap(PB_Basc_VideoRecordServer_RR_Uinit_In* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_Basc_VideoRecordServer_RR_Uinit_In, camera_)
      + sizeof(PB_Basc_VideoRecordServer_RR_Uinit_In::camera_)
      - PROTOBUF_FIELD_OFFSET(PB_Basc_VideoRecordServer_RR_Uinit_In, requestinfo_)>(
          reinterpret_cast<char*>(&requestinfo_),
          reinterpret_cast<char*>(&other->requestinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Basc_VideoRecordServer_RR_Uinit_In::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Basc_5fVideoRecordServer_2eproto_getter, &descriptor_table_Basc_5fVideoRecordServer_2eproto_once,
      file_level_metadata_Basc_5fVideoRecordServer_2eproto[1]);
}

// ===================================================================

class PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_Internal {
 public:
  static const ::Soa::PB_RequestInfo& requestinfo(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* msg);
  static const ::Soa::PB_VideoRequestParam& videorequestparam(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* msg);
};

const ::Soa::PB_RequestInfo&
PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_Internal::requestinfo(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* msg) {
  return *msg->requestinfo_;
}
const ::Soa::PB_VideoRequestParam&
PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_Internal::videorequestparam(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* msg) {
  return *msg->videorequestparam_;
}
void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::clear_requestinfo() {
  if (GetArenaForAllocation() == nullptr && requestinfo_ != nullptr) {
    delete requestinfo_;
  }
  requestinfo_ = nullptr;
}
void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::clear_videorequestparam() {
  if (GetArenaForAllocation() == nullptr && videorequestparam_ != nullptr) {
    delete videorequestparam_;
  }
  videorequestparam_ = nullptr;
}
PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)
}
PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_requestinfo()) {
    requestinfo_ = new ::Soa::PB_RequestInfo(*from.requestinfo_);
  } else {
    requestinfo_ = nullptr;
  }
  if (from._internal_has_videorequestparam()) {
    videorequestparam_ = new ::Soa::PB_VideoRequestParam(*from.videorequestparam_);
  } else {
    videorequestparam_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)
}

inline void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&requestinfo_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&videorequestparam_) -
    reinterpret_cast<char*>(&requestinfo_)) + sizeof(videorequestparam_));
}

PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::~PB_Basc_VideoRecordServer_RR_RequestVideoFile_In() {
  // @@protoc_insertion_point(destructor:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete requestinfo_;
  if (this != internal_default_instance()) delete videorequestparam_;
}

void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::ArenaDtor(void* object) {
  PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* _this = reinterpret_cast< PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* >(object);
  (void)_this;
}
void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && requestinfo_ != nullptr) {
    delete requestinfo_;
  }
  requestinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && videorequestparam_ != nullptr) {
    delete videorequestparam_;
  }
  videorequestparam_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Soa.PB_RequestInfo RequestInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_requestinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .Soa.PB_VideoRequestParam VideoRequestParam = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_videorequestparam(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Soa.PB_RequestInfo RequestInfo = 1;
  if (this->_internal_has_requestinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::requestinfo(this), target, stream);
  }

  // .Soa.PB_VideoRequestParam VideoRequestParam = 2;
  if (this->_internal_has_videorequestparam()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::videorequestparam(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)
  return target;
}

size_t PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Soa.PB_RequestInfo RequestInfo = 1;
  if (this->_internal_has_requestinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *requestinfo_);
  }

  // .Soa.PB_VideoRequestParam VideoRequestParam = 2;
  if (this->_internal_has_videorequestparam()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *videorequestparam_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::GetClassData() const { return &_class_data_; }

void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Basc_VideoRecordServer_RR_RequestVideoFile_In *>(to)->MergeFrom(
      static_cast<const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In &>(from));
}


void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::MergeFrom(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_requestinfo()) {
    _internal_mutable_requestinfo()->::Soa::PB_RequestInfo::MergeFrom(from._internal_requestinfo());
  }
  if (from._internal_has_videorequestparam()) {
    _internal_mutable_videorequestparam()->::Soa::PB_VideoRequestParam::MergeFrom(from._internal_videorequestparam());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::CopyFrom(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::IsInitialized() const {
  return true;
}

void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::InternalSwap(PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PB_Basc_VideoRecordServer_RR_RequestVideoFile_In, videorequestparam_)
      + sizeof(PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::videorequestparam_)
      - PROTOBUF_FIELD_OFFSET(PB_Basc_VideoRecordServer_RR_RequestVideoFile_In, requestinfo_)>(
          reinterpret_cast<char*>(&requestinfo_),
          reinterpret_cast<char*>(&other->requestinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Basc_5fVideoRecordServer_2eproto_getter, &descriptor_table_Basc_5fVideoRecordServer_2eproto_once,
      file_level_metadata_Basc_5fVideoRecordServer_2eproto[2]);
}

// ===================================================================

class PB_Basc_VideoRecordServer_RR_Init_Out::_Internal {
 public:
  static const ::Soa::PB_ResponseInfo& return_(const PB_Basc_VideoRecordServer_RR_Init_Out* msg);
};

const ::Soa::PB_ResponseInfo&
PB_Basc_VideoRecordServer_RR_Init_Out::_Internal::return_(const PB_Basc_VideoRecordServer_RR_Init_Out* msg) {
  return *msg->return__;
}
void PB_Basc_VideoRecordServer_RR_Init_Out::clear_return_() {
  if (GetArenaForAllocation() == nullptr && return__ != nullptr) {
    delete return__;
  }
  return__ = nullptr;
}
PB_Basc_VideoRecordServer_RR_Init_Out::PB_Basc_VideoRecordServer_RR_Init_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Basc_VideoRecordServer_RR_Init_Out)
}
PB_Basc_VideoRecordServer_RR_Init_Out::PB_Basc_VideoRecordServer_RR_Init_Out(const PB_Basc_VideoRecordServer_RR_Init_Out& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_return_()) {
    return__ = new ::Soa::PB_ResponseInfo(*from.return__);
  } else {
    return__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Basc_VideoRecordServer_RR_Init_Out)
}

inline void PB_Basc_VideoRecordServer_RR_Init_Out::SharedCtor() {
return__ = nullptr;
}

PB_Basc_VideoRecordServer_RR_Init_Out::~PB_Basc_VideoRecordServer_RR_Init_Out() {
  // @@protoc_insertion_point(destructor:Soa.PB_Basc_VideoRecordServer_RR_Init_Out)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Basc_VideoRecordServer_RR_Init_Out::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete return__;
}

void PB_Basc_VideoRecordServer_RR_Init_Out::ArenaDtor(void* object) {
  PB_Basc_VideoRecordServer_RR_Init_Out* _this = reinterpret_cast< PB_Basc_VideoRecordServer_RR_Init_Out* >(object);
  (void)_this;
}
void PB_Basc_VideoRecordServer_RR_Init_Out::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Basc_VideoRecordServer_RR_Init_Out::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Basc_VideoRecordServer_RR_Init_Out::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Basc_VideoRecordServer_RR_Init_Out)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && return__ != nullptr) {
    delete return__;
  }
  return__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Basc_VideoRecordServer_RR_Init_Out::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Soa.PB_ResponseInfo return_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_return_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Basc_VideoRecordServer_RR_Init_Out::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Basc_VideoRecordServer_RR_Init_Out)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Soa.PB_ResponseInfo return_ = 1;
  if (this->_internal_has_return_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::return_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Basc_VideoRecordServer_RR_Init_Out)
  return target;
}

size_t PB_Basc_VideoRecordServer_RR_Init_Out::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Basc_VideoRecordServer_RR_Init_Out)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Soa.PB_ResponseInfo return_ = 1;
  if (this->_internal_has_return_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *return__);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Basc_VideoRecordServer_RR_Init_Out::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Basc_VideoRecordServer_RR_Init_Out::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Basc_VideoRecordServer_RR_Init_Out::GetClassData() const { return &_class_data_; }

void PB_Basc_VideoRecordServer_RR_Init_Out::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Basc_VideoRecordServer_RR_Init_Out *>(to)->MergeFrom(
      static_cast<const PB_Basc_VideoRecordServer_RR_Init_Out &>(from));
}


void PB_Basc_VideoRecordServer_RR_Init_Out::MergeFrom(const PB_Basc_VideoRecordServer_RR_Init_Out& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Basc_VideoRecordServer_RR_Init_Out)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_return_()) {
    _internal_mutable_return_()->::Soa::PB_ResponseInfo::MergeFrom(from._internal_return_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Basc_VideoRecordServer_RR_Init_Out::CopyFrom(const PB_Basc_VideoRecordServer_RR_Init_Out& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Basc_VideoRecordServer_RR_Init_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Basc_VideoRecordServer_RR_Init_Out::IsInitialized() const {
  return true;
}

void PB_Basc_VideoRecordServer_RR_Init_Out::InternalSwap(PB_Basc_VideoRecordServer_RR_Init_Out* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(return__, other->return__);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Basc_VideoRecordServer_RR_Init_Out::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Basc_5fVideoRecordServer_2eproto_getter, &descriptor_table_Basc_5fVideoRecordServer_2eproto_once,
      file_level_metadata_Basc_5fVideoRecordServer_2eproto[3]);
}

// ===================================================================

class PB_Basc_VideoRecordServer_RR_Uinit_Out::_Internal {
 public:
  static const ::Soa::PB_ResponseInfo& return_(const PB_Basc_VideoRecordServer_RR_Uinit_Out* msg);
};

const ::Soa::PB_ResponseInfo&
PB_Basc_VideoRecordServer_RR_Uinit_Out::_Internal::return_(const PB_Basc_VideoRecordServer_RR_Uinit_Out* msg) {
  return *msg->return__;
}
void PB_Basc_VideoRecordServer_RR_Uinit_Out::clear_return_() {
  if (GetArenaForAllocation() == nullptr && return__ != nullptr) {
    delete return__;
  }
  return__ = nullptr;
}
PB_Basc_VideoRecordServer_RR_Uinit_Out::PB_Basc_VideoRecordServer_RR_Uinit_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out)
}
PB_Basc_VideoRecordServer_RR_Uinit_Out::PB_Basc_VideoRecordServer_RR_Uinit_Out(const PB_Basc_VideoRecordServer_RR_Uinit_Out& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_return_()) {
    return__ = new ::Soa::PB_ResponseInfo(*from.return__);
  } else {
    return__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out)
}

inline void PB_Basc_VideoRecordServer_RR_Uinit_Out::SharedCtor() {
return__ = nullptr;
}

PB_Basc_VideoRecordServer_RR_Uinit_Out::~PB_Basc_VideoRecordServer_RR_Uinit_Out() {
  // @@protoc_insertion_point(destructor:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Basc_VideoRecordServer_RR_Uinit_Out::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete return__;
}

void PB_Basc_VideoRecordServer_RR_Uinit_Out::ArenaDtor(void* object) {
  PB_Basc_VideoRecordServer_RR_Uinit_Out* _this = reinterpret_cast< PB_Basc_VideoRecordServer_RR_Uinit_Out* >(object);
  (void)_this;
}
void PB_Basc_VideoRecordServer_RR_Uinit_Out::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Basc_VideoRecordServer_RR_Uinit_Out::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Basc_VideoRecordServer_RR_Uinit_Out::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && return__ != nullptr) {
    delete return__;
  }
  return__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Basc_VideoRecordServer_RR_Uinit_Out::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Soa.PB_ResponseInfo return_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_return_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Basc_VideoRecordServer_RR_Uinit_Out::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Soa.PB_ResponseInfo return_ = 1;
  if (this->_internal_has_return_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::return_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out)
  return target;
}

size_t PB_Basc_VideoRecordServer_RR_Uinit_Out::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Soa.PB_ResponseInfo return_ = 1;
  if (this->_internal_has_return_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *return__);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Basc_VideoRecordServer_RR_Uinit_Out::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Basc_VideoRecordServer_RR_Uinit_Out::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Basc_VideoRecordServer_RR_Uinit_Out::GetClassData() const { return &_class_data_; }

void PB_Basc_VideoRecordServer_RR_Uinit_Out::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Basc_VideoRecordServer_RR_Uinit_Out *>(to)->MergeFrom(
      static_cast<const PB_Basc_VideoRecordServer_RR_Uinit_Out &>(from));
}


void PB_Basc_VideoRecordServer_RR_Uinit_Out::MergeFrom(const PB_Basc_VideoRecordServer_RR_Uinit_Out& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_return_()) {
    _internal_mutable_return_()->::Soa::PB_ResponseInfo::MergeFrom(from._internal_return_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Basc_VideoRecordServer_RR_Uinit_Out::CopyFrom(const PB_Basc_VideoRecordServer_RR_Uinit_Out& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Basc_VideoRecordServer_RR_Uinit_Out::IsInitialized() const {
  return true;
}

void PB_Basc_VideoRecordServer_RR_Uinit_Out::InternalSwap(PB_Basc_VideoRecordServer_RR_Uinit_Out* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(return__, other->return__);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Basc_VideoRecordServer_RR_Uinit_Out::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Basc_5fVideoRecordServer_2eproto_getter, &descriptor_table_Basc_5fVideoRecordServer_2eproto_once,
      file_level_metadata_Basc_5fVideoRecordServer_2eproto[4]);
}

// ===================================================================

class PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::_Internal {
 public:
  static const ::Soa::PB_ResponseInfo& return_(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* msg);
};

const ::Soa::PB_ResponseInfo&
PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::_Internal::return_(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* msg) {
  return *msg->return__;
}
void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::clear_return_() {
  if (GetArenaForAllocation() == nullptr && return__ != nullptr) {
    delete return__;
  }
  return__ = nullptr;
}
PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)
}
PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_return_()) {
    return__ = new ::Soa::PB_ResponseInfo(*from.return__);
  } else {
    return__ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)
}

inline void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::SharedCtor() {
return__ = nullptr;
}

PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::~PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out() {
  // @@protoc_insertion_point(destructor:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete return__;
}

void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::ArenaDtor(void* object) {
  PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* _this = reinterpret_cast< PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* >(object);
  (void)_this;
}
void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::Clear() {
// @@protoc_insertion_point(message_clear_start:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && return__ != nullptr) {
    delete return__;
  }
  return__ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .Soa.PB_ResponseInfo return_ = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_return_(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .Soa.PB_ResponseInfo return_ = 1;
  if (this->_internal_has_return_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::return_(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)
  return target;
}

size_t PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Soa.PB_ResponseInfo return_ = 1;
  if (this->_internal_has_return_()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *return__);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::GetClassData() const { return &_class_data_; }

void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out *>(to)->MergeFrom(
      static_cast<const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out &>(from));
}


void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::MergeFrom(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_return_()) {
    _internal_mutable_return_()->::Soa::PB_ResponseInfo::MergeFrom(from._internal_return_());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::CopyFrom(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::IsInitialized() const {
  return true;
}

void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::InternalSwap(PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(return__, other->return__);
}

::PROTOBUF_NAMESPACE_ID::Metadata PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_Basc_5fVideoRecordServer_2eproto_getter, &descriptor_table_Basc_5fVideoRecordServer_2eproto_once,
      file_level_metadata_Basc_5fVideoRecordServer_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Soa
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Soa::PB_Basc_VideoRecordServer_RR_Init_In* Arena::CreateMaybeMessage< ::Soa::PB_Basc_VideoRecordServer_RR_Init_In >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Basc_VideoRecordServer_RR_Init_In >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_Basc_VideoRecordServer_RR_Uinit_In* Arena::CreateMaybeMessage< ::Soa::PB_Basc_VideoRecordServer_RR_Uinit_In >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Basc_VideoRecordServer_RR_Uinit_In >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* Arena::CreateMaybeMessage< ::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_Basc_VideoRecordServer_RR_Init_Out* Arena::CreateMaybeMessage< ::Soa::PB_Basc_VideoRecordServer_RR_Init_Out >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Basc_VideoRecordServer_RR_Init_Out >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_Basc_VideoRecordServer_RR_Uinit_Out* Arena::CreateMaybeMessage< ::Soa::PB_Basc_VideoRecordServer_RR_Uinit_Out >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Basc_VideoRecordServer_RR_Uinit_Out >(arena);
}
template<> PROTOBUF_NOINLINE ::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* Arena::CreateMaybeMessage< ::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
