/****************************************************************
  Generated by ChangAn Code Generator,Do Not Modify
  AppVersion： mADC_Application_Service-V1.5
  ServiceVersion: 
  CmVersion： v2.0.3
  ServiceLatestModifyTime: 
  Generate Time: 2023-12-11 18:07:58
*****************************************************************/
#ifndef CAR_CONTROL_R_SKELETON_HPP
#define CAR_CONTROL_R_SKELETON_HPP
#include "changan/common_data_types.h"
#include "changan/global_config.hpp"
#include "changan/dds_util.h"
#include "changan/Car_Control.h"
#include "changan/base_wait.hpp"
#include <mutex>
namespace com {
	namespace changan {
		namespace carControl {
			namespace skeleton {
				extern void on_carControl_r_request_data_available(int32_t reader, void* arg);

				class CarControlRSkeleton:public IBaseWait
				{
				public:
					static CarControlRSkeleton& get_instance();
					void init(std::string config="");
					int32_t send(const void* data);
		  			void wait_client_online();
					int32_t send_reply(const void* data);
		  			std::unordered_map<std::string, EventReceiveHandler<const ConsumerMatchedStatus&>> get_registered_consumer_matched_handler();
			  		void register_consumer_matched_handler(std::string name,EventReceiveHandler<const ConsumerMatchedStatus&> handler);
				  	void set_last_consumer_matched_status(ConsumerMatchedStatus status);
				private:
				  	ConsumerMatchedStatus consumer_matched_status={};
				  	std::unordered_map<std::string, EventReceiveHandler<const ConsumerMatchedStatus&>> consumer_matched_handler_map;
					dds_rpc_handle_t dds_mcu_rpc_handle = { -1,-1,-1 };
					dds_rpc_handle_t dds_mcu_notify_handle = { -1,-1,-1 };
					bool init_flag=false;
					std::mutex init_mutex;
					std::string config;
					CarControlRSkeleton();
					CarControlRSkeleton(const CarControlRSkeleton& signal);
					const CarControlRSkeleton& operator=(const CarControlRSkeleton& signal);
				};
			}
		}
	}
}
#endif // !CAR_CONTROL_SKELETON_HPP

