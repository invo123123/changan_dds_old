/****************************************************************
  Generated by ChangAn Code Generator,Do Not Modify
  AppVersion： mADC_Application_Service-V1.5
  CmVersion： v2.0.3
  ServiceVersion: V1.2.0
  ServiceLatestModifyTime: 2023-11-21T11:51:51
  Generate Time: 2023-12-11 18:07:59
*****************************************************************/
#ifndef Basc_ADASCruiseSet_SKELETON_HPP
#define Basc_ADASCruiseSet_SKELETON_HPP
#include "changan/common_data_types.h"
#include "Common.h"
#include "changan/dds_util.h"
#include "changan/Basc_ADASCruiseSet.h"
#include "changan/base_skeleton.hpp"
#include "changan/base_wait.hpp"
#include <iostream>
#include <string.h>
#include <mutex>
namespace com {
namespace changan {
namespace carDrive {
namespace C2Controller {
namespace skeleton {
	namespace events {
        class Basc_ADASCruiseSet_Ntf_ADASCruiseSet{
            private:
                dds_rpc_handle_t dds_Ntf_ADASCruiseSet_event_handle = { -1, -1, -1 };
				std::string _topic_name = "Basc_ADASCruiseSet_skeleton_Ntf_ADASCruiseSet";
			public:
			    void init(std::string config = "") {
					DDSUtil::event_pub_init(DDS_DOMAIN_ID, _topic_name, &carDrive_Basc_ADASCruiseSet_Ntf_desc, &dds_Ntf_ADASCruiseSet_event_handle,NULL, {PROXY_TOKEN, PROXY_TOKEN, ""}, config);
			    }
				bool destroy() {
					return DDSUtil::dds_client_destroy(&dds_Ntf_ADASCruiseSet_event_handle);
				}
				void send(const ADASCruiseSet &data) {
					carDrive_Basc_ADASCruiseSet_Ntf event_data;
					event_data.data._d = carDrive_Basc_ADASCruiseSet_Ntf_ADASCruiseSet_Hash;
					event_data.data._u.Basc_ADASCruiseSet_Ntf_ADASCruiseSet = data;
                    dds_write(dds_Ntf_ADASCruiseSet_event_handle.writer, &event_data);
				}
        };
        class Basc_ADASCruiseSet_Ntf_C2_IACCFamlrRdModSwtFb{
            private:
                dds_rpc_handle_t dds_Ntf_C2_IACCFamlrRdModSwtFb_event_handle = { -1, -1, -1 };
				std::string _topic_name = "Basc_ADASCruiseSet_skeleton_Ntf_C2_IACCFamlrRdModSwtFb";
			public:
			    void init(std::string config = "") {
					DDSUtil::event_pub_init(DDS_DOMAIN_ID, _topic_name, &carDrive_Basc_ADASCruiseSet_Ntf_desc, &dds_Ntf_C2_IACCFamlrRdModSwtFb_event_handle,NULL, {PROXY_TOKEN, PROXY_TOKEN, ""}, config);
			    }
				bool destroy() {
					return DDSUtil::dds_client_destroy(&dds_Ntf_C2_IACCFamlrRdModSwtFb_event_handle);
				}
				void send(const C2_IACCFamlrRdModSwtFbSet &data) {
					carDrive_Basc_ADASCruiseSet_Ntf event_data;
					event_data.data._d = carDrive_Basc_ADASCruiseSet_Ntf_C2_IACCFamlrRdModSwtFb_Hash;
					event_data.data._u.Basc_ADASCruiseSet_Ntf_C2_IACCFamlrRdModSwtFb = data;
                    dds_write(dds_Ntf_C2_IACCFamlrRdModSwtFb_event_handle.writer, &event_data);
				}
        };
        class Basc_ADASCruiseSet_Ntf_AD_NIDSelfLrngFb{
            private:
                dds_rpc_handle_t dds_Ntf_AD_NIDSelfLrngFb_event_handle = { -1, -1, -1 };
				std::string _topic_name = "Basc_ADASCruiseSet_skeleton_Ntf_AD_NIDSelfLrngFb";
			public:
			    void init(std::string config = "") {
					DDSUtil::event_pub_init(DDS_DOMAIN_ID, _topic_name, &carDrive_Basc_ADASCruiseSet_Ntf_desc, &dds_Ntf_AD_NIDSelfLrngFb_event_handle,NULL, {PROXY_TOKEN, PROXY_TOKEN, ""}, config);
			    }
				bool destroy() {
					return DDSUtil::dds_client_destroy(&dds_Ntf_AD_NIDSelfLrngFb_event_handle);
				}
				void send(const AD_NIDSelfLrngFbset &data) {
					carDrive_Basc_ADASCruiseSet_Ntf event_data;
					event_data.data._d = carDrive_Basc_ADASCruiseSet_Ntf_AD_NIDSelfLrngFb_Hash;
					event_data.data._u.Basc_ADASCruiseSet_Ntf_AD_NIDSelfLrngFb = data;
                    dds_write(dds_Ntf_AD_NIDSelfLrngFb_event_handle.writer, &event_data);
				}
        };
        class Basc_ADASCruiseSet_Ntf_AD_BSDLCAOnOffSet{
            private:
                dds_rpc_handle_t dds_Ntf_AD_BSDLCAOnOffSet_event_handle = { -1, -1, -1 };
				std::string _topic_name = "Basc_ADASCruiseSet_skeleton_Ntf_AD_BSDLCAOnOffSet";
			public:
			    void init(std::string config = "") {
					DDSUtil::event_pub_init(DDS_DOMAIN_ID, _topic_name, &carDrive_Basc_ADASCruiseSet_Ntf_desc, &dds_Ntf_AD_BSDLCAOnOffSet_event_handle,NULL, {PROXY_TOKEN, PROXY_TOKEN, ""}, config);
			    }
				bool destroy() {
					return DDSUtil::dds_client_destroy(&dds_Ntf_AD_BSDLCAOnOffSet_event_handle);
				}
				void send(const AD_BSDLCAOnOffSet &data) {
					carDrive_Basc_ADASCruiseSet_Ntf event_data;
					event_data.data._d = carDrive_Basc_ADASCruiseSet_Ntf_AD_BSDLCAOnOffSet_Hash;
					event_data.data._u.Basc_ADASCruiseSet_Ntf_AD_BSDLCAOnOffSet = data;
                    dds_write(dds_Ntf_AD_BSDLCAOnOffSet_event_handle.writer, &event_data);
				}
        };
        class Basc_ADASCruiseSet_Ntf_AD_SEAOnOffSts{
            private:
                dds_rpc_handle_t dds_Ntf_AD_SEAOnOffSts_event_handle = { -1, -1, -1 };
				std::string _topic_name = "Basc_ADASCruiseSet_skeleton_Ntf_AD_SEAOnOffSts";
			public:
			    void init(std::string config = "") {
					DDSUtil::event_pub_init(DDS_DOMAIN_ID, _topic_name, &carDrive_Basc_ADASCruiseSet_Ntf_desc, &dds_Ntf_AD_SEAOnOffSts_event_handle,NULL, {PROXY_TOKEN, PROXY_TOKEN, ""}, config);
			    }
				bool destroy() {
					return DDSUtil::dds_client_destroy(&dds_Ntf_AD_SEAOnOffSts_event_handle);
				}
				void send(const AD_SEAOnOffStsSet &data) {
					carDrive_Basc_ADASCruiseSet_Ntf event_data;
					event_data.data._d = carDrive_Basc_ADASCruiseSet_Ntf_AD_SEAOnOffSts_Hash;
					event_data.data._u.Basc_ADASCruiseSet_Ntf_AD_SEAOnOffSts = data;
                    dds_write(dds_Ntf_AD_SEAOnOffSts_event_handle.writer, &event_data);
				}
        };
	}
	extern void on_carDrive_Basc_ADASCruiseSet_request_data_available(int32_t reader, void* arg);

	class Basc_ADASCruiseSet_service_interface {
	public:
	    virtual ~Basc_ADASCruiseSet_service_interface() = default;

		virtual ADASCruiseSet Get_ADASCruiseSet() = 0;
		virtual ResponseInfo RR_HU_CuriseMode(const HUset_CuriseMode &HUset_CuriseMode,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_IDAEnable(const HUset_IDAEnable &HUset_IDAEnable,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_LaneChangeFrequency(const HUset_LaneChangeFrequency &HUset_LaneChangeFrequency,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_UDLCEnable(const HUset_UDLCEnable &HUset_UDLCEnable,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_NIDAudioWarStyle(const HUset_NIDAudioWarStyle &HUset_NIDAudioWarStyle,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_CSLAEnable(const HUset_CSLAEnable &HUset_CSLAEnable,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_CSLmode(const HUset_CSLmode &HUset_CSLmode,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_OverspeedSoundWarEnable(const HUset_OverspeedSoundWarEnable &HUset_OverspeedSoundWarEnable,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_CSLWarnOffsetTp(const HUset_CSLWarnOffsetTp &HUset_CSLWarnOffsetTp,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_AbsOverSpdWarnOffset(const HUset_AbsOverSpdWarnOffset &HUset_AbsOverSpdWarnOffset,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_RelOverSpdWarnOffset(const HUset_RelOverSpdWarnOffset &HUset_RelOverSpdWarnOffset,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_AutoDriveStyle(const HUset_AutoDriveStyle &HUset_AutoDriveStyle,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_ADACCStyle(const HUset_ADACCStyle &HUset_ADACCStyle,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_ADStartStyle(const HUset_ADStartStyle &HUset_ADStartStyle,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_ADCurveStyle(const HUset_ADCurveStyle &HUset_ADCurveStyle,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_ADLanechangeStyle(const HUset_ADLanechangeStyle &HUset_ADLanechangeStyle,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_VehicleStartRemindEnable(const HUset_VehicleStartRemindEnable &HUset_VehicleStartRemindEnable,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_RCWEnable(const HUset_RCWEnable &HUset_RCWEnable,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_SEAMode(const HUset_SEAMode &HUset_SEAMode,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_BSDLCASetting(const HUset_BSDLCASetting &HUset_BSDLCASetting,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_BSDLCARemindmode(const HUset_BSDLCARemindmode &HUset_BSDLCARemindmode,const RequestInfo &Requestinfo) = 0;
		virtual ResponseInfo RR_HU_IACCFamlrRdModSwt(const HUset_IACCFamlrRdModSwt &HUset_IACCFamlrRdModSwt,const RequestInfo &RequestInfo) = 0;
		virtual C2_IACCFamlrRdModSwtFbSet Get_C2_IACCFamlrRdModSwtFb() = 0;
		virtual AD_NIDSelfLrngFbset Get_AD_NIDSelfLrngFb() = 0;
		virtual AD_NIDSelfLrngFbset RR_EDC_NIDSelfLrngReq(const EDCset_NIDSelfLrngReq &EDCset_NIDSelfLrngReq,const RequestInfo &RequestInfo) = 0;
		virtual AD_BSDLCAOnOffSet Get_AD_BSDLCAOnOffSet() = 0;
		virtual AD_BSDLCAOnOffSet RR_HU_BSDLCAOnOff(const HUset_BSDLCAOnOff &HUset_BSDLCAOnOff,const RequestInfo &RequestInfo) = 0;
		virtual AD_SEAOnOffStsSet Get_AD_SEAOnOffSts() = 0;
		virtual AD_SEAOnOffStsSet RR_HU_SEAOnOff(const HUset_SEAOnOff &HUset_SEAOnOff,const RequestInfo &RequestInfo) = 0;
	};
    class Basc_ADASCruiseSet_Skeleton :public Basc_ADASCruiseSet_service_interface, public IBaseWait,public IBaseSkeleton,public ConsumerMatchedStatusHandler{
		public:
			Basc_ADASCruiseSet_Skeleton(Basc_ADASCruiseSet_service_interface* service,std::string config="");
			bool init();
			bool destroy();
			void wait_client_online();
            const std::string get_service_name() {
				return this->service_name;
			}
			ADASCruiseSet Get_ADASCruiseSet() {
				return this->_service->Get_ADASCruiseSet();
			}
			ResponseInfo RR_HU_CuriseMode(const HUset_CuriseMode &HUset_CuriseMode,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_CuriseMode(HUset_CuriseMode,Requestinfo);
			}
			ResponseInfo RR_HU_IDAEnable(const HUset_IDAEnable &HUset_IDAEnable,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_IDAEnable(HUset_IDAEnable,Requestinfo);
			}
			ResponseInfo RR_HU_LaneChangeFrequency(const HUset_LaneChangeFrequency &HUset_LaneChangeFrequency,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_LaneChangeFrequency(HUset_LaneChangeFrequency,Requestinfo);
			}
			ResponseInfo RR_HU_UDLCEnable(const HUset_UDLCEnable &HUset_UDLCEnable,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_UDLCEnable(HUset_UDLCEnable,Requestinfo);
			}
			ResponseInfo RR_HU_NIDAudioWarStyle(const HUset_NIDAudioWarStyle &HUset_NIDAudioWarStyle,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_NIDAudioWarStyle(HUset_NIDAudioWarStyle,Requestinfo);
			}
			ResponseInfo RR_HU_CSLAEnable(const HUset_CSLAEnable &HUset_CSLAEnable,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_CSLAEnable(HUset_CSLAEnable,Requestinfo);
			}
			ResponseInfo RR_HU_CSLmode(const HUset_CSLmode &HUset_CSLmode,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_CSLmode(HUset_CSLmode,Requestinfo);
			}
			ResponseInfo RR_HU_OverspeedSoundWarEnable(const HUset_OverspeedSoundWarEnable &HUset_OverspeedSoundWarEnable,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_OverspeedSoundWarEnable(HUset_OverspeedSoundWarEnable,Requestinfo);
			}
			ResponseInfo RR_HU_CSLWarnOffsetTp(const HUset_CSLWarnOffsetTp &HUset_CSLWarnOffsetTp,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_CSLWarnOffsetTp(HUset_CSLWarnOffsetTp,Requestinfo);
			}
			ResponseInfo RR_HU_AbsOverSpdWarnOffset(const HUset_AbsOverSpdWarnOffset &HUset_AbsOverSpdWarnOffset,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_AbsOverSpdWarnOffset(HUset_AbsOverSpdWarnOffset,Requestinfo);
			}
			ResponseInfo RR_HU_RelOverSpdWarnOffset(const HUset_RelOverSpdWarnOffset &HUset_RelOverSpdWarnOffset,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_RelOverSpdWarnOffset(HUset_RelOverSpdWarnOffset,Requestinfo);
			}
			ResponseInfo RR_HU_AutoDriveStyle(const HUset_AutoDriveStyle &HUset_AutoDriveStyle,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_AutoDriveStyle(HUset_AutoDriveStyle,Requestinfo);
			}
			ResponseInfo RR_HU_ADACCStyle(const HUset_ADACCStyle &HUset_ADACCStyle,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_ADACCStyle(HUset_ADACCStyle,Requestinfo);
			}
			ResponseInfo RR_HU_ADStartStyle(const HUset_ADStartStyle &HUset_ADStartStyle,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_ADStartStyle(HUset_ADStartStyle,Requestinfo);
			}
			ResponseInfo RR_HU_ADCurveStyle(const HUset_ADCurveStyle &HUset_ADCurveStyle,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_ADCurveStyle(HUset_ADCurveStyle,Requestinfo);
			}
			ResponseInfo RR_HU_ADLanechangeStyle(const HUset_ADLanechangeStyle &HUset_ADLanechangeStyle,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_ADLanechangeStyle(HUset_ADLanechangeStyle,Requestinfo);
			}
			ResponseInfo RR_HU_VehicleStartRemindEnable(const HUset_VehicleStartRemindEnable &HUset_VehicleStartRemindEnable,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_VehicleStartRemindEnable(HUset_VehicleStartRemindEnable,Requestinfo);
			}
			ResponseInfo RR_HU_RCWEnable(const HUset_RCWEnable &HUset_RCWEnable,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_RCWEnable(HUset_RCWEnable,Requestinfo);
			}
			ResponseInfo RR_HU_SEAMode(const HUset_SEAMode &HUset_SEAMode,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_SEAMode(HUset_SEAMode,Requestinfo);
			}
			ResponseInfo RR_HU_BSDLCASetting(const HUset_BSDLCASetting &HUset_BSDLCASetting,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_BSDLCASetting(HUset_BSDLCASetting,Requestinfo);
			}
			ResponseInfo RR_HU_BSDLCARemindmode(const HUset_BSDLCARemindmode &HUset_BSDLCARemindmode,const RequestInfo &Requestinfo) {
				return this->_service->RR_HU_BSDLCARemindmode(HUset_BSDLCARemindmode,Requestinfo);
			}
			ResponseInfo RR_HU_IACCFamlrRdModSwt(const HUset_IACCFamlrRdModSwt &HUset_IACCFamlrRdModSwt,const RequestInfo &RequestInfo) {
				return this->_service->RR_HU_IACCFamlrRdModSwt(HUset_IACCFamlrRdModSwt,RequestInfo);
			}
			C2_IACCFamlrRdModSwtFbSet Get_C2_IACCFamlrRdModSwtFb() {
				return this->_service->Get_C2_IACCFamlrRdModSwtFb();
			}
			AD_NIDSelfLrngFbset Get_AD_NIDSelfLrngFb() {
				return this->_service->Get_AD_NIDSelfLrngFb();
			}
			AD_NIDSelfLrngFbset RR_EDC_NIDSelfLrngReq(const EDCset_NIDSelfLrngReq &EDCset_NIDSelfLrngReq,const RequestInfo &RequestInfo) {
				return this->_service->RR_EDC_NIDSelfLrngReq(EDCset_NIDSelfLrngReq,RequestInfo);
			}
			AD_BSDLCAOnOffSet Get_AD_BSDLCAOnOffSet() {
				return this->_service->Get_AD_BSDLCAOnOffSet();
			}
			AD_BSDLCAOnOffSet RR_HU_BSDLCAOnOff(const HUset_BSDLCAOnOff &HUset_BSDLCAOnOff,const RequestInfo &RequestInfo) {
				return this->_service->RR_HU_BSDLCAOnOff(HUset_BSDLCAOnOff,RequestInfo);
			}
			AD_SEAOnOffStsSet Get_AD_SEAOnOffSts() {
				return this->_service->Get_AD_SEAOnOffSts();
			}
			AD_SEAOnOffStsSet RR_HU_SEAOnOff(const HUset_SEAOnOff &HUset_SEAOnOff,const RequestInfo &RequestInfo) {
				return this->_service->RR_HU_SEAOnOff(HUset_SEAOnOff,RequestInfo);
			}
            dds_return_t send_reply(carDrive_Basc_ADASCruiseSet_Reply* reply);
            events::Basc_ADASCruiseSet_Ntf_ADASCruiseSet Ntf_ADASCruiseSet;
            events::Basc_ADASCruiseSet_Ntf_C2_IACCFamlrRdModSwtFb Ntf_C2_IACCFamlrRdModSwtFb;
            events::Basc_ADASCruiseSet_Ntf_AD_NIDSelfLrngFb Ntf_AD_NIDSelfLrngFb;
            events::Basc_ADASCruiseSet_Ntf_AD_BSDLCAOnOffSet Ntf_AD_BSDLCAOnOffSet;
            events::Basc_ADASCruiseSet_Ntf_AD_SEAOnOffSts Ntf_AD_SEAOnOffSts;

		private:
		    std::string _config;
			bool init_flag=false;
			std::mutex init_mutex;

			const std::string service_name="Basc_ADASCruiseSet_skeleton";
			Basc_ADASCruiseSet_service_interface * _service;
			dds_rpc_handle_t dds_rpc_request_handle= { -1, -1, -1 };
			dds_rpc_handle_t dds_rpc_reply_handle= { -1, -1, -1 };

	};

}
}
}
}
}
#endif

