// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hmi_basic_objfusion32.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_hmi_5fbasic_5fobjfusion32_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_hmi_5fbasic_5fobjfusion32_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_hmi_5fbasic_5fobjfusion32_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_hmi_5fbasic_5fobjfusion32_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_hmi_5fbasic_5fobjfusion32_2eproto;
namespace HmiInterface {
class ADObjfusion;
struct ADObjfusionDefaultTypeInternal;
extern ADObjfusionDefaultTypeInternal _ADObjfusion_default_instance_;
class BasicObjfusion32;
struct BasicObjfusion32DefaultTypeInternal;
extern BasicObjfusion32DefaultTypeInternal _BasicObjfusion32_default_instance_;
}  // namespace HmiInterface
PROTOBUF_NAMESPACE_OPEN
template<> ::HmiInterface::ADObjfusion* Arena::CreateMaybeMessage<::HmiInterface::ADObjfusion>(Arena*);
template<> ::HmiInterface::BasicObjfusion32* Arena::CreateMaybeMessage<::HmiInterface::BasicObjfusion32>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace HmiInterface {

// ===================================================================

class ADObjfusion final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HmiInterface.ADObjfusion) */ {
 public:
  inline ADObjfusion() : ADObjfusion(nullptr) {}
  ~ADObjfusion() override;
  explicit constexpr ADObjfusion(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ADObjfusion(const ADObjfusion& from);
  ADObjfusion(ADObjfusion&& from) noexcept
    : ADObjfusion() {
    *this = ::std::move(from);
  }

  inline ADObjfusion& operator=(const ADObjfusion& from) {
    CopyFrom(from);
    return *this;
  }
  inline ADObjfusion& operator=(ADObjfusion&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ADObjfusion& default_instance() {
    return *internal_default_instance();
  }
  static inline const ADObjfusion* internal_default_instance() {
    return reinterpret_cast<const ADObjfusion*>(
               &_ADObjfusion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ADObjfusion& a, ADObjfusion& b) {
    a.Swap(&b);
  }
  inline void Swap(ADObjfusion* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ADObjfusion* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ADObjfusion* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ADObjfusion>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ADObjfusion& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ADObjfusion& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ADObjfusion* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HmiInterface.ADObjfusion";
  }
  protected:
  explicit ADObjfusion(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjxLongVelRelFieldNumber = 1,
    kObjxLatVelRelFieldNumber = 2,
    kObjxReferPointsTypeFieldNumber = 3,
    kObjxReferPointslongitudinalDistanceFieldNumber = 4,
    kObjxReferPointslateralDistanceFieldNumber = 5,
    kObjxTrackidFieldNumber = 6,
    kObjxTypeFieldNumber = 7,
    kObjxStatusFieldNumber = 8,
    kObjxConfidenceFieldNumber = 9,
    kObjxHeadingangleFieldNumber = 10,
    kObjxLongRelFieldNumber = 11,
    kObjxLatRelFieldNumber = 12,
    kObjxLongVelFieldNumber = 13,
    kObjxLatVelFieldNumber = 14,
    kObjxLongAccFieldNumber = 15,
    kObjxLatAccFieldNumber = 16,
    kObjxHighFieldNumber = 17,
    kObjxLengthFieldNumber = 18,
    kObjxWidthFieldNumber = 19,
    kObjxAgeFieldNumber = 20,
    kObjxCrosslaneflagFieldNumber = 21,
    kObjxCrosslanevalueFieldNumber = 22,
    kObjxCutStatusFieldNumber = 23,
    kObjxLeftLightstatusFieldNumber = 24,
    kObjxObstacleareaFieldNumber = 25,
    kObjxRightLightstatusFieldNumber = 26,
    kObjxWaringLightstatusFieldNumber = 27,
    kObjxBrakeLightstatusFieldNumber = 28,
    kObjxFoglightstatusFieldNumber = 29,
    kObjxDetectionFieldNumber = 30,
    kObjxBsdStatusFieldNumber = 31,
    kObjxLdcFieldNumber = 32,
    kObjxOaFieldNumber = 33,
    kObjxSoundIdFieldNumber = 34,
  };
  // float objx_long_vel_rel = 1;
  void clear_objx_long_vel_rel();
  float objx_long_vel_rel() const;
  void set_objx_long_vel_rel(float value);
  private:
  float _internal_objx_long_vel_rel() const;
  void _internal_set_objx_long_vel_rel(float value);
  public:

  // float objx_lat_vel_rel = 2;
  void clear_objx_lat_vel_rel();
  float objx_lat_vel_rel() const;
  void set_objx_lat_vel_rel(float value);
  private:
  float _internal_objx_lat_vel_rel() const;
  void _internal_set_objx_lat_vel_rel(float value);
  public:

  // uint32 objx_refer_points_type = 3;
  void clear_objx_refer_points_type();
  uint32_t objx_refer_points_type() const;
  void set_objx_refer_points_type(uint32_t value);
  private:
  uint32_t _internal_objx_refer_points_type() const;
  void _internal_set_objx_refer_points_type(uint32_t value);
  public:

  // float objx_refer_pointslongitudinal_distance = 4;
  void clear_objx_refer_pointslongitudinal_distance();
  float objx_refer_pointslongitudinal_distance() const;
  void set_objx_refer_pointslongitudinal_distance(float value);
  private:
  float _internal_objx_refer_pointslongitudinal_distance() const;
  void _internal_set_objx_refer_pointslongitudinal_distance(float value);
  public:

  // float objx_refer_pointslateral_distance = 5;
  void clear_objx_refer_pointslateral_distance();
  float objx_refer_pointslateral_distance() const;
  void set_objx_refer_pointslateral_distance(float value);
  private:
  float _internal_objx_refer_pointslateral_distance() const;
  void _internal_set_objx_refer_pointslateral_distance(float value);
  public:

  // uint32 objx_trackid = 6;
  void clear_objx_trackid();
  uint32_t objx_trackid() const;
  void set_objx_trackid(uint32_t value);
  private:
  uint32_t _internal_objx_trackid() const;
  void _internal_set_objx_trackid(uint32_t value);
  public:

  // uint32 objx_type = 7;
  void clear_objx_type();
  uint32_t objx_type() const;
  void set_objx_type(uint32_t value);
  private:
  uint32_t _internal_objx_type() const;
  void _internal_set_objx_type(uint32_t value);
  public:

  // uint32 objx_status = 8;
  void clear_objx_status();
  uint32_t objx_status() const;
  void set_objx_status(uint32_t value);
  private:
  uint32_t _internal_objx_status() const;
  void _internal_set_objx_status(uint32_t value);
  public:

  // float objx_confidence = 9;
  void clear_objx_confidence();
  float objx_confidence() const;
  void set_objx_confidence(float value);
  private:
  float _internal_objx_confidence() const;
  void _internal_set_objx_confidence(float value);
  public:

  // float objx_headingangle = 10;
  void clear_objx_headingangle();
  float objx_headingangle() const;
  void set_objx_headingangle(float value);
  private:
  float _internal_objx_headingangle() const;
  void _internal_set_objx_headingangle(float value);
  public:

  // float objx_long_rel = 11;
  void clear_objx_long_rel();
  float objx_long_rel() const;
  void set_objx_long_rel(float value);
  private:
  float _internal_objx_long_rel() const;
  void _internal_set_objx_long_rel(float value);
  public:

  // float objx_lat_rel = 12;
  void clear_objx_lat_rel();
  float objx_lat_rel() const;
  void set_objx_lat_rel(float value);
  private:
  float _internal_objx_lat_rel() const;
  void _internal_set_objx_lat_rel(float value);
  public:

  // float objx_long_vel = 13;
  void clear_objx_long_vel();
  float objx_long_vel() const;
  void set_objx_long_vel(float value);
  private:
  float _internal_objx_long_vel() const;
  void _internal_set_objx_long_vel(float value);
  public:

  // float objx_lat_vel = 14;
  void clear_objx_lat_vel();
  float objx_lat_vel() const;
  void set_objx_lat_vel(float value);
  private:
  float _internal_objx_lat_vel() const;
  void _internal_set_objx_lat_vel(float value);
  public:

  // float objx_long_acc = 15;
  void clear_objx_long_acc();
  float objx_long_acc() const;
  void set_objx_long_acc(float value);
  private:
  float _internal_objx_long_acc() const;
  void _internal_set_objx_long_acc(float value);
  public:

  // float objx_lat_acc = 16;
  void clear_objx_lat_acc();
  float objx_lat_acc() const;
  void set_objx_lat_acc(float value);
  private:
  float _internal_objx_lat_acc() const;
  void _internal_set_objx_lat_acc(float value);
  public:

  // float objx_high = 17;
  void clear_objx_high();
  float objx_high() const;
  void set_objx_high(float value);
  private:
  float _internal_objx_high() const;
  void _internal_set_objx_high(float value);
  public:

  // float objx_length = 18;
  void clear_objx_length();
  float objx_length() const;
  void set_objx_length(float value);
  private:
  float _internal_objx_length() const;
  void _internal_set_objx_length(float value);
  public:

  // float objx_width = 19;
  void clear_objx_width();
  float objx_width() const;
  void set_objx_width(float value);
  private:
  float _internal_objx_width() const;
  void _internal_set_objx_width(float value);
  public:

  // uint32 objx_age = 20;
  void clear_objx_age();
  uint32_t objx_age() const;
  void set_objx_age(uint32_t value);
  private:
  uint32_t _internal_objx_age() const;
  void _internal_set_objx_age(uint32_t value);
  public:

  // uint32 objx_crosslaneflag = 21;
  void clear_objx_crosslaneflag();
  uint32_t objx_crosslaneflag() const;
  void set_objx_crosslaneflag(uint32_t value);
  private:
  uint32_t _internal_objx_crosslaneflag() const;
  void _internal_set_objx_crosslaneflag(uint32_t value);
  public:

  // float objx_crosslanevalue = 22;
  void clear_objx_crosslanevalue();
  float objx_crosslanevalue() const;
  void set_objx_crosslanevalue(float value);
  private:
  float _internal_objx_crosslanevalue() const;
  void _internal_set_objx_crosslanevalue(float value);
  public:

  // uint32 objx_cut_status = 23;
  void clear_objx_cut_status();
  uint32_t objx_cut_status() const;
  void set_objx_cut_status(uint32_t value);
  private:
  uint32_t _internal_objx_cut_status() const;
  void _internal_set_objx_cut_status(uint32_t value);
  public:

  // uint32 objx_left_lightstatus = 24;
  void clear_objx_left_lightstatus();
  uint32_t objx_left_lightstatus() const;
  void set_objx_left_lightstatus(uint32_t value);
  private:
  uint32_t _internal_objx_left_lightstatus() const;
  void _internal_set_objx_left_lightstatus(uint32_t value);
  public:

  // uint32 objx_obstaclearea = 25;
  void clear_objx_obstaclearea();
  uint32_t objx_obstaclearea() const;
  void set_objx_obstaclearea(uint32_t value);
  private:
  uint32_t _internal_objx_obstaclearea() const;
  void _internal_set_objx_obstaclearea(uint32_t value);
  public:

  // uint32 objx_right_lightstatus = 26;
  void clear_objx_right_lightstatus();
  uint32_t objx_right_lightstatus() const;
  void set_objx_right_lightstatus(uint32_t value);
  private:
  uint32_t _internal_objx_right_lightstatus() const;
  void _internal_set_objx_right_lightstatus(uint32_t value);
  public:

  // uint32 objx_waring_lightstatus = 27;
  void clear_objx_waring_lightstatus();
  uint32_t objx_waring_lightstatus() const;
  void set_objx_waring_lightstatus(uint32_t value);
  private:
  uint32_t _internal_objx_waring_lightstatus() const;
  void _internal_set_objx_waring_lightstatus(uint32_t value);
  public:

  // uint32 objx_brake_lightstatus = 28;
  void clear_objx_brake_lightstatus();
  uint32_t objx_brake_lightstatus() const;
  void set_objx_brake_lightstatus(uint32_t value);
  private:
  uint32_t _internal_objx_brake_lightstatus() const;
  void _internal_set_objx_brake_lightstatus(uint32_t value);
  public:

  // uint32 objx_foglightstatus = 29;
  void clear_objx_foglightstatus();
  uint32_t objx_foglightstatus() const;
  void set_objx_foglightstatus(uint32_t value);
  private:
  uint32_t _internal_objx_foglightstatus() const;
  void _internal_set_objx_foglightstatus(uint32_t value);
  public:

  // uint32 objx_detection = 30;
  void clear_objx_detection();
  uint32_t objx_detection() const;
  void set_objx_detection(uint32_t value);
  private:
  uint32_t _internal_objx_detection() const;
  void _internal_set_objx_detection(uint32_t value);
  public:

  // uint32 objx_bsd_status = 31;
  void clear_objx_bsd_status();
  uint32_t objx_bsd_status() const;
  void set_objx_bsd_status(uint32_t value);
  private:
  uint32_t _internal_objx_bsd_status() const;
  void _internal_set_objx_bsd_status(uint32_t value);
  public:

  // uint32 objx_ldc = 32;
  void clear_objx_ldc();
  uint32_t objx_ldc() const;
  void set_objx_ldc(uint32_t value);
  private:
  uint32_t _internal_objx_ldc() const;
  void _internal_set_objx_ldc(uint32_t value);
  public:

  // uint32 objx_oa = 33;
  void clear_objx_oa();
  uint32_t objx_oa() const;
  void set_objx_oa(uint32_t value);
  private:
  uint32_t _internal_objx_oa() const;
  void _internal_set_objx_oa(uint32_t value);
  public:

  // uint32 objx_sound_id = 34;
  void clear_objx_sound_id();
  uint32_t objx_sound_id() const;
  void set_objx_sound_id(uint32_t value);
  private:
  uint32_t _internal_objx_sound_id() const;
  void _internal_set_objx_sound_id(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:HmiInterface.ADObjfusion)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float objx_long_vel_rel_;
  float objx_lat_vel_rel_;
  uint32_t objx_refer_points_type_;
  float objx_refer_pointslongitudinal_distance_;
  float objx_refer_pointslateral_distance_;
  uint32_t objx_trackid_;
  uint32_t objx_type_;
  uint32_t objx_status_;
  float objx_confidence_;
  float objx_headingangle_;
  float objx_long_rel_;
  float objx_lat_rel_;
  float objx_long_vel_;
  float objx_lat_vel_;
  float objx_long_acc_;
  float objx_lat_acc_;
  float objx_high_;
  float objx_length_;
  float objx_width_;
  uint32_t objx_age_;
  uint32_t objx_crosslaneflag_;
  float objx_crosslanevalue_;
  uint32_t objx_cut_status_;
  uint32_t objx_left_lightstatus_;
  uint32_t objx_obstaclearea_;
  uint32_t objx_right_lightstatus_;
  uint32_t objx_waring_lightstatus_;
  uint32_t objx_brake_lightstatus_;
  uint32_t objx_foglightstatus_;
  uint32_t objx_detection_;
  uint32_t objx_bsd_status_;
  uint32_t objx_ldc_;
  uint32_t objx_oa_;
  uint32_t objx_sound_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5fbasic_5fobjfusion32_2eproto;
};
// -------------------------------------------------------------------

class BasicObjfusion32 final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:HmiInterface.BasicObjfusion32) */ {
 public:
  inline BasicObjfusion32() : BasicObjfusion32(nullptr) {}
  ~BasicObjfusion32() override;
  explicit constexpr BasicObjfusion32(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BasicObjfusion32(const BasicObjfusion32& from);
  BasicObjfusion32(BasicObjfusion32&& from) noexcept
    : BasicObjfusion32() {
    *this = ::std::move(from);
  }

  inline BasicObjfusion32& operator=(const BasicObjfusion32& from) {
    CopyFrom(from);
    return *this;
  }
  inline BasicObjfusion32& operator=(BasicObjfusion32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BasicObjfusion32& default_instance() {
    return *internal_default_instance();
  }
  static inline const BasicObjfusion32* internal_default_instance() {
    return reinterpret_cast<const BasicObjfusion32*>(
               &_BasicObjfusion32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(BasicObjfusion32& a, BasicObjfusion32& b) {
    a.Swap(&b);
  }
  inline void Swap(BasicObjfusion32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BasicObjfusion32* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BasicObjfusion32* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<BasicObjfusion32>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const BasicObjfusion32& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const BasicObjfusion32& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BasicObjfusion32* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "HmiInterface.BasicObjfusion32";
  }
  protected:
  explicit BasicObjfusion32(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAdObjfusionFieldNumber = 1,
  };
  // repeated .HmiInterface.ADObjfusion ad_objfusion = 1;
  int ad_objfusion_size() const;
  private:
  int _internal_ad_objfusion_size() const;
  public:
  void clear_ad_objfusion();
  ::HmiInterface::ADObjfusion* mutable_ad_objfusion(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HmiInterface::ADObjfusion >*
      mutable_ad_objfusion();
  private:
  const ::HmiInterface::ADObjfusion& _internal_ad_objfusion(int index) const;
  ::HmiInterface::ADObjfusion* _internal_add_ad_objfusion();
  public:
  const ::HmiInterface::ADObjfusion& ad_objfusion(int index) const;
  ::HmiInterface::ADObjfusion* add_ad_objfusion();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HmiInterface::ADObjfusion >&
      ad_objfusion() const;

  // @@protoc_insertion_point(class_scope:HmiInterface.BasicObjfusion32)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HmiInterface::ADObjfusion > ad_objfusion_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_hmi_5fbasic_5fobjfusion32_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ADObjfusion

// float objx_long_vel_rel = 1;
inline void ADObjfusion::clear_objx_long_vel_rel() {
  objx_long_vel_rel_ = 0;
}
inline float ADObjfusion::_internal_objx_long_vel_rel() const {
  return objx_long_vel_rel_;
}
inline float ADObjfusion::objx_long_vel_rel() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_long_vel_rel)
  return _internal_objx_long_vel_rel();
}
inline void ADObjfusion::_internal_set_objx_long_vel_rel(float value) {
  
  objx_long_vel_rel_ = value;
}
inline void ADObjfusion::set_objx_long_vel_rel(float value) {
  _internal_set_objx_long_vel_rel(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_long_vel_rel)
}

// float objx_lat_vel_rel = 2;
inline void ADObjfusion::clear_objx_lat_vel_rel() {
  objx_lat_vel_rel_ = 0;
}
inline float ADObjfusion::_internal_objx_lat_vel_rel() const {
  return objx_lat_vel_rel_;
}
inline float ADObjfusion::objx_lat_vel_rel() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_lat_vel_rel)
  return _internal_objx_lat_vel_rel();
}
inline void ADObjfusion::_internal_set_objx_lat_vel_rel(float value) {
  
  objx_lat_vel_rel_ = value;
}
inline void ADObjfusion::set_objx_lat_vel_rel(float value) {
  _internal_set_objx_lat_vel_rel(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_lat_vel_rel)
}

// uint32 objx_refer_points_type = 3;
inline void ADObjfusion::clear_objx_refer_points_type() {
  objx_refer_points_type_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_refer_points_type() const {
  return objx_refer_points_type_;
}
inline uint32_t ADObjfusion::objx_refer_points_type() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_refer_points_type)
  return _internal_objx_refer_points_type();
}
inline void ADObjfusion::_internal_set_objx_refer_points_type(uint32_t value) {
  
  objx_refer_points_type_ = value;
}
inline void ADObjfusion::set_objx_refer_points_type(uint32_t value) {
  _internal_set_objx_refer_points_type(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_refer_points_type)
}

// float objx_refer_pointslongitudinal_distance = 4;
inline void ADObjfusion::clear_objx_refer_pointslongitudinal_distance() {
  objx_refer_pointslongitudinal_distance_ = 0;
}
inline float ADObjfusion::_internal_objx_refer_pointslongitudinal_distance() const {
  return objx_refer_pointslongitudinal_distance_;
}
inline float ADObjfusion::objx_refer_pointslongitudinal_distance() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_refer_pointslongitudinal_distance)
  return _internal_objx_refer_pointslongitudinal_distance();
}
inline void ADObjfusion::_internal_set_objx_refer_pointslongitudinal_distance(float value) {
  
  objx_refer_pointslongitudinal_distance_ = value;
}
inline void ADObjfusion::set_objx_refer_pointslongitudinal_distance(float value) {
  _internal_set_objx_refer_pointslongitudinal_distance(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_refer_pointslongitudinal_distance)
}

// float objx_refer_pointslateral_distance = 5;
inline void ADObjfusion::clear_objx_refer_pointslateral_distance() {
  objx_refer_pointslateral_distance_ = 0;
}
inline float ADObjfusion::_internal_objx_refer_pointslateral_distance() const {
  return objx_refer_pointslateral_distance_;
}
inline float ADObjfusion::objx_refer_pointslateral_distance() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_refer_pointslateral_distance)
  return _internal_objx_refer_pointslateral_distance();
}
inline void ADObjfusion::_internal_set_objx_refer_pointslateral_distance(float value) {
  
  objx_refer_pointslateral_distance_ = value;
}
inline void ADObjfusion::set_objx_refer_pointslateral_distance(float value) {
  _internal_set_objx_refer_pointslateral_distance(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_refer_pointslateral_distance)
}

// uint32 objx_trackid = 6;
inline void ADObjfusion::clear_objx_trackid() {
  objx_trackid_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_trackid() const {
  return objx_trackid_;
}
inline uint32_t ADObjfusion::objx_trackid() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_trackid)
  return _internal_objx_trackid();
}
inline void ADObjfusion::_internal_set_objx_trackid(uint32_t value) {
  
  objx_trackid_ = value;
}
inline void ADObjfusion::set_objx_trackid(uint32_t value) {
  _internal_set_objx_trackid(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_trackid)
}

// uint32 objx_type = 7;
inline void ADObjfusion::clear_objx_type() {
  objx_type_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_type() const {
  return objx_type_;
}
inline uint32_t ADObjfusion::objx_type() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_type)
  return _internal_objx_type();
}
inline void ADObjfusion::_internal_set_objx_type(uint32_t value) {
  
  objx_type_ = value;
}
inline void ADObjfusion::set_objx_type(uint32_t value) {
  _internal_set_objx_type(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_type)
}

// uint32 objx_status = 8;
inline void ADObjfusion::clear_objx_status() {
  objx_status_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_status() const {
  return objx_status_;
}
inline uint32_t ADObjfusion::objx_status() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_status)
  return _internal_objx_status();
}
inline void ADObjfusion::_internal_set_objx_status(uint32_t value) {
  
  objx_status_ = value;
}
inline void ADObjfusion::set_objx_status(uint32_t value) {
  _internal_set_objx_status(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_status)
}

// float objx_confidence = 9;
inline void ADObjfusion::clear_objx_confidence() {
  objx_confidence_ = 0;
}
inline float ADObjfusion::_internal_objx_confidence() const {
  return objx_confidence_;
}
inline float ADObjfusion::objx_confidence() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_confidence)
  return _internal_objx_confidence();
}
inline void ADObjfusion::_internal_set_objx_confidence(float value) {
  
  objx_confidence_ = value;
}
inline void ADObjfusion::set_objx_confidence(float value) {
  _internal_set_objx_confidence(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_confidence)
}

// float objx_headingangle = 10;
inline void ADObjfusion::clear_objx_headingangle() {
  objx_headingangle_ = 0;
}
inline float ADObjfusion::_internal_objx_headingangle() const {
  return objx_headingangle_;
}
inline float ADObjfusion::objx_headingangle() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_headingangle)
  return _internal_objx_headingangle();
}
inline void ADObjfusion::_internal_set_objx_headingangle(float value) {
  
  objx_headingangle_ = value;
}
inline void ADObjfusion::set_objx_headingangle(float value) {
  _internal_set_objx_headingangle(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_headingangle)
}

// float objx_long_rel = 11;
inline void ADObjfusion::clear_objx_long_rel() {
  objx_long_rel_ = 0;
}
inline float ADObjfusion::_internal_objx_long_rel() const {
  return objx_long_rel_;
}
inline float ADObjfusion::objx_long_rel() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_long_rel)
  return _internal_objx_long_rel();
}
inline void ADObjfusion::_internal_set_objx_long_rel(float value) {
  
  objx_long_rel_ = value;
}
inline void ADObjfusion::set_objx_long_rel(float value) {
  _internal_set_objx_long_rel(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_long_rel)
}

// float objx_lat_rel = 12;
inline void ADObjfusion::clear_objx_lat_rel() {
  objx_lat_rel_ = 0;
}
inline float ADObjfusion::_internal_objx_lat_rel() const {
  return objx_lat_rel_;
}
inline float ADObjfusion::objx_lat_rel() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_lat_rel)
  return _internal_objx_lat_rel();
}
inline void ADObjfusion::_internal_set_objx_lat_rel(float value) {
  
  objx_lat_rel_ = value;
}
inline void ADObjfusion::set_objx_lat_rel(float value) {
  _internal_set_objx_lat_rel(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_lat_rel)
}

// float objx_long_vel = 13;
inline void ADObjfusion::clear_objx_long_vel() {
  objx_long_vel_ = 0;
}
inline float ADObjfusion::_internal_objx_long_vel() const {
  return objx_long_vel_;
}
inline float ADObjfusion::objx_long_vel() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_long_vel)
  return _internal_objx_long_vel();
}
inline void ADObjfusion::_internal_set_objx_long_vel(float value) {
  
  objx_long_vel_ = value;
}
inline void ADObjfusion::set_objx_long_vel(float value) {
  _internal_set_objx_long_vel(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_long_vel)
}

// float objx_lat_vel = 14;
inline void ADObjfusion::clear_objx_lat_vel() {
  objx_lat_vel_ = 0;
}
inline float ADObjfusion::_internal_objx_lat_vel() const {
  return objx_lat_vel_;
}
inline float ADObjfusion::objx_lat_vel() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_lat_vel)
  return _internal_objx_lat_vel();
}
inline void ADObjfusion::_internal_set_objx_lat_vel(float value) {
  
  objx_lat_vel_ = value;
}
inline void ADObjfusion::set_objx_lat_vel(float value) {
  _internal_set_objx_lat_vel(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_lat_vel)
}

// float objx_long_acc = 15;
inline void ADObjfusion::clear_objx_long_acc() {
  objx_long_acc_ = 0;
}
inline float ADObjfusion::_internal_objx_long_acc() const {
  return objx_long_acc_;
}
inline float ADObjfusion::objx_long_acc() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_long_acc)
  return _internal_objx_long_acc();
}
inline void ADObjfusion::_internal_set_objx_long_acc(float value) {
  
  objx_long_acc_ = value;
}
inline void ADObjfusion::set_objx_long_acc(float value) {
  _internal_set_objx_long_acc(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_long_acc)
}

// float objx_lat_acc = 16;
inline void ADObjfusion::clear_objx_lat_acc() {
  objx_lat_acc_ = 0;
}
inline float ADObjfusion::_internal_objx_lat_acc() const {
  return objx_lat_acc_;
}
inline float ADObjfusion::objx_lat_acc() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_lat_acc)
  return _internal_objx_lat_acc();
}
inline void ADObjfusion::_internal_set_objx_lat_acc(float value) {
  
  objx_lat_acc_ = value;
}
inline void ADObjfusion::set_objx_lat_acc(float value) {
  _internal_set_objx_lat_acc(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_lat_acc)
}

// float objx_high = 17;
inline void ADObjfusion::clear_objx_high() {
  objx_high_ = 0;
}
inline float ADObjfusion::_internal_objx_high() const {
  return objx_high_;
}
inline float ADObjfusion::objx_high() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_high)
  return _internal_objx_high();
}
inline void ADObjfusion::_internal_set_objx_high(float value) {
  
  objx_high_ = value;
}
inline void ADObjfusion::set_objx_high(float value) {
  _internal_set_objx_high(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_high)
}

// float objx_length = 18;
inline void ADObjfusion::clear_objx_length() {
  objx_length_ = 0;
}
inline float ADObjfusion::_internal_objx_length() const {
  return objx_length_;
}
inline float ADObjfusion::objx_length() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_length)
  return _internal_objx_length();
}
inline void ADObjfusion::_internal_set_objx_length(float value) {
  
  objx_length_ = value;
}
inline void ADObjfusion::set_objx_length(float value) {
  _internal_set_objx_length(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_length)
}

// float objx_width = 19;
inline void ADObjfusion::clear_objx_width() {
  objx_width_ = 0;
}
inline float ADObjfusion::_internal_objx_width() const {
  return objx_width_;
}
inline float ADObjfusion::objx_width() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_width)
  return _internal_objx_width();
}
inline void ADObjfusion::_internal_set_objx_width(float value) {
  
  objx_width_ = value;
}
inline void ADObjfusion::set_objx_width(float value) {
  _internal_set_objx_width(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_width)
}

// uint32 objx_age = 20;
inline void ADObjfusion::clear_objx_age() {
  objx_age_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_age() const {
  return objx_age_;
}
inline uint32_t ADObjfusion::objx_age() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_age)
  return _internal_objx_age();
}
inline void ADObjfusion::_internal_set_objx_age(uint32_t value) {
  
  objx_age_ = value;
}
inline void ADObjfusion::set_objx_age(uint32_t value) {
  _internal_set_objx_age(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_age)
}

// uint32 objx_crosslaneflag = 21;
inline void ADObjfusion::clear_objx_crosslaneflag() {
  objx_crosslaneflag_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_crosslaneflag() const {
  return objx_crosslaneflag_;
}
inline uint32_t ADObjfusion::objx_crosslaneflag() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_crosslaneflag)
  return _internal_objx_crosslaneflag();
}
inline void ADObjfusion::_internal_set_objx_crosslaneflag(uint32_t value) {
  
  objx_crosslaneflag_ = value;
}
inline void ADObjfusion::set_objx_crosslaneflag(uint32_t value) {
  _internal_set_objx_crosslaneflag(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_crosslaneflag)
}

// float objx_crosslanevalue = 22;
inline void ADObjfusion::clear_objx_crosslanevalue() {
  objx_crosslanevalue_ = 0;
}
inline float ADObjfusion::_internal_objx_crosslanevalue() const {
  return objx_crosslanevalue_;
}
inline float ADObjfusion::objx_crosslanevalue() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_crosslanevalue)
  return _internal_objx_crosslanevalue();
}
inline void ADObjfusion::_internal_set_objx_crosslanevalue(float value) {
  
  objx_crosslanevalue_ = value;
}
inline void ADObjfusion::set_objx_crosslanevalue(float value) {
  _internal_set_objx_crosslanevalue(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_crosslanevalue)
}

// uint32 objx_cut_status = 23;
inline void ADObjfusion::clear_objx_cut_status() {
  objx_cut_status_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_cut_status() const {
  return objx_cut_status_;
}
inline uint32_t ADObjfusion::objx_cut_status() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_cut_status)
  return _internal_objx_cut_status();
}
inline void ADObjfusion::_internal_set_objx_cut_status(uint32_t value) {
  
  objx_cut_status_ = value;
}
inline void ADObjfusion::set_objx_cut_status(uint32_t value) {
  _internal_set_objx_cut_status(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_cut_status)
}

// uint32 objx_left_lightstatus = 24;
inline void ADObjfusion::clear_objx_left_lightstatus() {
  objx_left_lightstatus_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_left_lightstatus() const {
  return objx_left_lightstatus_;
}
inline uint32_t ADObjfusion::objx_left_lightstatus() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_left_lightstatus)
  return _internal_objx_left_lightstatus();
}
inline void ADObjfusion::_internal_set_objx_left_lightstatus(uint32_t value) {
  
  objx_left_lightstatus_ = value;
}
inline void ADObjfusion::set_objx_left_lightstatus(uint32_t value) {
  _internal_set_objx_left_lightstatus(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_left_lightstatus)
}

// uint32 objx_obstaclearea = 25;
inline void ADObjfusion::clear_objx_obstaclearea() {
  objx_obstaclearea_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_obstaclearea() const {
  return objx_obstaclearea_;
}
inline uint32_t ADObjfusion::objx_obstaclearea() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_obstaclearea)
  return _internal_objx_obstaclearea();
}
inline void ADObjfusion::_internal_set_objx_obstaclearea(uint32_t value) {
  
  objx_obstaclearea_ = value;
}
inline void ADObjfusion::set_objx_obstaclearea(uint32_t value) {
  _internal_set_objx_obstaclearea(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_obstaclearea)
}

// uint32 objx_right_lightstatus = 26;
inline void ADObjfusion::clear_objx_right_lightstatus() {
  objx_right_lightstatus_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_right_lightstatus() const {
  return objx_right_lightstatus_;
}
inline uint32_t ADObjfusion::objx_right_lightstatus() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_right_lightstatus)
  return _internal_objx_right_lightstatus();
}
inline void ADObjfusion::_internal_set_objx_right_lightstatus(uint32_t value) {
  
  objx_right_lightstatus_ = value;
}
inline void ADObjfusion::set_objx_right_lightstatus(uint32_t value) {
  _internal_set_objx_right_lightstatus(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_right_lightstatus)
}

// uint32 objx_waring_lightstatus = 27;
inline void ADObjfusion::clear_objx_waring_lightstatus() {
  objx_waring_lightstatus_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_waring_lightstatus() const {
  return objx_waring_lightstatus_;
}
inline uint32_t ADObjfusion::objx_waring_lightstatus() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_waring_lightstatus)
  return _internal_objx_waring_lightstatus();
}
inline void ADObjfusion::_internal_set_objx_waring_lightstatus(uint32_t value) {
  
  objx_waring_lightstatus_ = value;
}
inline void ADObjfusion::set_objx_waring_lightstatus(uint32_t value) {
  _internal_set_objx_waring_lightstatus(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_waring_lightstatus)
}

// uint32 objx_brake_lightstatus = 28;
inline void ADObjfusion::clear_objx_brake_lightstatus() {
  objx_brake_lightstatus_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_brake_lightstatus() const {
  return objx_brake_lightstatus_;
}
inline uint32_t ADObjfusion::objx_brake_lightstatus() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_brake_lightstatus)
  return _internal_objx_brake_lightstatus();
}
inline void ADObjfusion::_internal_set_objx_brake_lightstatus(uint32_t value) {
  
  objx_brake_lightstatus_ = value;
}
inline void ADObjfusion::set_objx_brake_lightstatus(uint32_t value) {
  _internal_set_objx_brake_lightstatus(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_brake_lightstatus)
}

// uint32 objx_foglightstatus = 29;
inline void ADObjfusion::clear_objx_foglightstatus() {
  objx_foglightstatus_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_foglightstatus() const {
  return objx_foglightstatus_;
}
inline uint32_t ADObjfusion::objx_foglightstatus() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_foglightstatus)
  return _internal_objx_foglightstatus();
}
inline void ADObjfusion::_internal_set_objx_foglightstatus(uint32_t value) {
  
  objx_foglightstatus_ = value;
}
inline void ADObjfusion::set_objx_foglightstatus(uint32_t value) {
  _internal_set_objx_foglightstatus(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_foglightstatus)
}

// uint32 objx_detection = 30;
inline void ADObjfusion::clear_objx_detection() {
  objx_detection_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_detection() const {
  return objx_detection_;
}
inline uint32_t ADObjfusion::objx_detection() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_detection)
  return _internal_objx_detection();
}
inline void ADObjfusion::_internal_set_objx_detection(uint32_t value) {
  
  objx_detection_ = value;
}
inline void ADObjfusion::set_objx_detection(uint32_t value) {
  _internal_set_objx_detection(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_detection)
}

// uint32 objx_bsd_status = 31;
inline void ADObjfusion::clear_objx_bsd_status() {
  objx_bsd_status_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_bsd_status() const {
  return objx_bsd_status_;
}
inline uint32_t ADObjfusion::objx_bsd_status() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_bsd_status)
  return _internal_objx_bsd_status();
}
inline void ADObjfusion::_internal_set_objx_bsd_status(uint32_t value) {
  
  objx_bsd_status_ = value;
}
inline void ADObjfusion::set_objx_bsd_status(uint32_t value) {
  _internal_set_objx_bsd_status(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_bsd_status)
}

// uint32 objx_ldc = 32;
inline void ADObjfusion::clear_objx_ldc() {
  objx_ldc_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_ldc() const {
  return objx_ldc_;
}
inline uint32_t ADObjfusion::objx_ldc() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_ldc)
  return _internal_objx_ldc();
}
inline void ADObjfusion::_internal_set_objx_ldc(uint32_t value) {
  
  objx_ldc_ = value;
}
inline void ADObjfusion::set_objx_ldc(uint32_t value) {
  _internal_set_objx_ldc(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_ldc)
}

// uint32 objx_oa = 33;
inline void ADObjfusion::clear_objx_oa() {
  objx_oa_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_oa() const {
  return objx_oa_;
}
inline uint32_t ADObjfusion::objx_oa() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_oa)
  return _internal_objx_oa();
}
inline void ADObjfusion::_internal_set_objx_oa(uint32_t value) {
  
  objx_oa_ = value;
}
inline void ADObjfusion::set_objx_oa(uint32_t value) {
  _internal_set_objx_oa(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_oa)
}

// uint32 objx_sound_id = 34;
inline void ADObjfusion::clear_objx_sound_id() {
  objx_sound_id_ = 0u;
}
inline uint32_t ADObjfusion::_internal_objx_sound_id() const {
  return objx_sound_id_;
}
inline uint32_t ADObjfusion::objx_sound_id() const {
  // @@protoc_insertion_point(field_get:HmiInterface.ADObjfusion.objx_sound_id)
  return _internal_objx_sound_id();
}
inline void ADObjfusion::_internal_set_objx_sound_id(uint32_t value) {
  
  objx_sound_id_ = value;
}
inline void ADObjfusion::set_objx_sound_id(uint32_t value) {
  _internal_set_objx_sound_id(value);
  // @@protoc_insertion_point(field_set:HmiInterface.ADObjfusion.objx_sound_id)
}

// -------------------------------------------------------------------

// BasicObjfusion32

// repeated .HmiInterface.ADObjfusion ad_objfusion = 1;
inline int BasicObjfusion32::_internal_ad_objfusion_size() const {
  return ad_objfusion_.size();
}
inline int BasicObjfusion32::ad_objfusion_size() const {
  return _internal_ad_objfusion_size();
}
inline void BasicObjfusion32::clear_ad_objfusion() {
  ad_objfusion_.Clear();
}
inline ::HmiInterface::ADObjfusion* BasicObjfusion32::mutable_ad_objfusion(int index) {
  // @@protoc_insertion_point(field_mutable:HmiInterface.BasicObjfusion32.ad_objfusion)
  return ad_objfusion_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HmiInterface::ADObjfusion >*
BasicObjfusion32::mutable_ad_objfusion() {
  // @@protoc_insertion_point(field_mutable_list:HmiInterface.BasicObjfusion32.ad_objfusion)
  return &ad_objfusion_;
}
inline const ::HmiInterface::ADObjfusion& BasicObjfusion32::_internal_ad_objfusion(int index) const {
  return ad_objfusion_.Get(index);
}
inline const ::HmiInterface::ADObjfusion& BasicObjfusion32::ad_objfusion(int index) const {
  // @@protoc_insertion_point(field_get:HmiInterface.BasicObjfusion32.ad_objfusion)
  return _internal_ad_objfusion(index);
}
inline ::HmiInterface::ADObjfusion* BasicObjfusion32::_internal_add_ad_objfusion() {
  return ad_objfusion_.Add();
}
inline ::HmiInterface::ADObjfusion* BasicObjfusion32::add_ad_objfusion() {
  ::HmiInterface::ADObjfusion* _add = _internal_add_ad_objfusion();
  // @@protoc_insertion_point(field_add:HmiInterface.BasicObjfusion32.ad_objfusion)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::HmiInterface::ADObjfusion >&
BasicObjfusion32::ad_objfusion() const {
  // @@protoc_insertion_point(field_list:HmiInterface.BasicObjfusion32.ad_objfusion)
  return ad_objfusion_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace HmiInterface

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_hmi_5fbasic_5fobjfusion32_2eproto
