// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Basc_VideoRecordServer.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Basc_5fVideoRecordServer_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Basc_5fVideoRecordServer_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Basc_5fVideoRecordServer_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Basc_5fVideoRecordServer_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Basc_5fVideoRecordServer_2eproto;
namespace Soa {
class PB_Basc_VideoRecordServer_RR_Init_In;
struct PB_Basc_VideoRecordServer_RR_Init_InDefaultTypeInternal;
extern PB_Basc_VideoRecordServer_RR_Init_InDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_Init_In_default_instance_;
class PB_Basc_VideoRecordServer_RR_Init_Out;
struct PB_Basc_VideoRecordServer_RR_Init_OutDefaultTypeInternal;
extern PB_Basc_VideoRecordServer_RR_Init_OutDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_Init_Out_default_instance_;
class PB_Basc_VideoRecordServer_RR_RequestVideoFile_In;
struct PB_Basc_VideoRecordServer_RR_RequestVideoFile_InDefaultTypeInternal;
extern PB_Basc_VideoRecordServer_RR_RequestVideoFile_InDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_RequestVideoFile_In_default_instance_;
class PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out;
struct PB_Basc_VideoRecordServer_RR_RequestVideoFile_OutDefaultTypeInternal;
extern PB_Basc_VideoRecordServer_RR_RequestVideoFile_OutDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out_default_instance_;
class PB_Basc_VideoRecordServer_RR_Uinit_In;
struct PB_Basc_VideoRecordServer_RR_Uinit_InDefaultTypeInternal;
extern PB_Basc_VideoRecordServer_RR_Uinit_InDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_Uinit_In_default_instance_;
class PB_Basc_VideoRecordServer_RR_Uinit_Out;
struct PB_Basc_VideoRecordServer_RR_Uinit_OutDefaultTypeInternal;
extern PB_Basc_VideoRecordServer_RR_Uinit_OutDefaultTypeInternal _PB_Basc_VideoRecordServer_RR_Uinit_Out_default_instance_;
}  // namespace Soa
PROTOBUF_NAMESPACE_OPEN
template<> ::Soa::PB_Basc_VideoRecordServer_RR_Init_In* Arena::CreateMaybeMessage<::Soa::PB_Basc_VideoRecordServer_RR_Init_In>(Arena*);
template<> ::Soa::PB_Basc_VideoRecordServer_RR_Init_Out* Arena::CreateMaybeMessage<::Soa::PB_Basc_VideoRecordServer_RR_Init_Out>(Arena*);
template<> ::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* Arena::CreateMaybeMessage<::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_In>(Arena*);
template<> ::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* Arena::CreateMaybeMessage<::Soa::PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out>(Arena*);
template<> ::Soa::PB_Basc_VideoRecordServer_RR_Uinit_In* Arena::CreateMaybeMessage<::Soa::PB_Basc_VideoRecordServer_RR_Uinit_In>(Arena*);
template<> ::Soa::PB_Basc_VideoRecordServer_RR_Uinit_Out* Arena::CreateMaybeMessage<::Soa::PB_Basc_VideoRecordServer_RR_Uinit_Out>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Soa {

// ===================================================================

class PB_Basc_VideoRecordServer_RR_Init_In final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_VideoRecordServer_RR_Init_In) */ {
 public:
  inline PB_Basc_VideoRecordServer_RR_Init_In() : PB_Basc_VideoRecordServer_RR_Init_In(nullptr) {}
  ~PB_Basc_VideoRecordServer_RR_Init_In() override;
  explicit constexpr PB_Basc_VideoRecordServer_RR_Init_In(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_VideoRecordServer_RR_Init_In(const PB_Basc_VideoRecordServer_RR_Init_In& from);
  PB_Basc_VideoRecordServer_RR_Init_In(PB_Basc_VideoRecordServer_RR_Init_In&& from) noexcept
    : PB_Basc_VideoRecordServer_RR_Init_In() {
    *this = ::std::move(from);
  }

  inline PB_Basc_VideoRecordServer_RR_Init_In& operator=(const PB_Basc_VideoRecordServer_RR_Init_In& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_VideoRecordServer_RR_Init_In& operator=(PB_Basc_VideoRecordServer_RR_Init_In&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_VideoRecordServer_RR_Init_In& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_VideoRecordServer_RR_Init_In* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_VideoRecordServer_RR_Init_In*>(
               &_PB_Basc_VideoRecordServer_RR_Init_In_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PB_Basc_VideoRecordServer_RR_Init_In& a, PB_Basc_VideoRecordServer_RR_Init_In& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_VideoRecordServer_RR_Init_In* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_VideoRecordServer_RR_Init_In* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_VideoRecordServer_RR_Init_In* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_VideoRecordServer_RR_Init_In>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_VideoRecordServer_RR_Init_In& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_VideoRecordServer_RR_Init_In& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_VideoRecordServer_RR_Init_In* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_VideoRecordServer_RR_Init_In";
  }
  protected:
  explicit PB_Basc_VideoRecordServer_RR_Init_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestInfoFieldNumber = 1,
    kVideoParamFieldNumber = 2,
  };
  // .Soa.PB_RequestInfo RequestInfo = 1;
  bool has_requestinfo() const;
  private:
  bool _internal_has_requestinfo() const;
  public:
  void clear_requestinfo();
  const ::Soa::PB_RequestInfo& requestinfo() const;
  PROTOBUF_NODISCARD ::Soa::PB_RequestInfo* release_requestinfo();
  ::Soa::PB_RequestInfo* mutable_requestinfo();
  void set_allocated_requestinfo(::Soa::PB_RequestInfo* requestinfo);
  private:
  const ::Soa::PB_RequestInfo& _internal_requestinfo() const;
  ::Soa::PB_RequestInfo* _internal_mutable_requestinfo();
  public:
  void unsafe_arena_set_allocated_requestinfo(
      ::Soa::PB_RequestInfo* requestinfo);
  ::Soa::PB_RequestInfo* unsafe_arena_release_requestinfo();

  // .Soa.PB_VideoParam VideoParam = 2;
  bool has_videoparam() const;
  private:
  bool _internal_has_videoparam() const;
  public:
  void clear_videoparam();
  const ::Soa::PB_VideoParam& videoparam() const;
  PROTOBUF_NODISCARD ::Soa::PB_VideoParam* release_videoparam();
  ::Soa::PB_VideoParam* mutable_videoparam();
  void set_allocated_videoparam(::Soa::PB_VideoParam* videoparam);
  private:
  const ::Soa::PB_VideoParam& _internal_videoparam() const;
  ::Soa::PB_VideoParam* _internal_mutable_videoparam();
  public:
  void unsafe_arena_set_allocated_videoparam(
      ::Soa::PB_VideoParam* videoparam);
  ::Soa::PB_VideoParam* unsafe_arena_release_videoparam();

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_VideoRecordServer_RR_Init_In)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Soa::PB_RequestInfo* requestinfo_;
  ::Soa::PB_VideoParam* videoparam_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fVideoRecordServer_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_VideoRecordServer_RR_Uinit_In final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In) */ {
 public:
  inline PB_Basc_VideoRecordServer_RR_Uinit_In() : PB_Basc_VideoRecordServer_RR_Uinit_In(nullptr) {}
  ~PB_Basc_VideoRecordServer_RR_Uinit_In() override;
  explicit constexpr PB_Basc_VideoRecordServer_RR_Uinit_In(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_VideoRecordServer_RR_Uinit_In(const PB_Basc_VideoRecordServer_RR_Uinit_In& from);
  PB_Basc_VideoRecordServer_RR_Uinit_In(PB_Basc_VideoRecordServer_RR_Uinit_In&& from) noexcept
    : PB_Basc_VideoRecordServer_RR_Uinit_In() {
    *this = ::std::move(from);
  }

  inline PB_Basc_VideoRecordServer_RR_Uinit_In& operator=(const PB_Basc_VideoRecordServer_RR_Uinit_In& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_VideoRecordServer_RR_Uinit_In& operator=(PB_Basc_VideoRecordServer_RR_Uinit_In&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_VideoRecordServer_RR_Uinit_In& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_VideoRecordServer_RR_Uinit_In* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_VideoRecordServer_RR_Uinit_In*>(
               &_PB_Basc_VideoRecordServer_RR_Uinit_In_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PB_Basc_VideoRecordServer_RR_Uinit_In& a, PB_Basc_VideoRecordServer_RR_Uinit_In& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_VideoRecordServer_RR_Uinit_In* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_VideoRecordServer_RR_Uinit_In* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_VideoRecordServer_RR_Uinit_In* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_VideoRecordServer_RR_Uinit_In>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_VideoRecordServer_RR_Uinit_In& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_VideoRecordServer_RR_Uinit_In& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_VideoRecordServer_RR_Uinit_In* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_VideoRecordServer_RR_Uinit_In";
  }
  protected:
  explicit PB_Basc_VideoRecordServer_RR_Uinit_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestInfoFieldNumber = 1,
    kCameraFieldNumber = 2,
  };
  // .Soa.PB_RequestInfo RequestInfo = 1;
  bool has_requestinfo() const;
  private:
  bool _internal_has_requestinfo() const;
  public:
  void clear_requestinfo();
  const ::Soa::PB_RequestInfo& requestinfo() const;
  PROTOBUF_NODISCARD ::Soa::PB_RequestInfo* release_requestinfo();
  ::Soa::PB_RequestInfo* mutable_requestinfo();
  void set_allocated_requestinfo(::Soa::PB_RequestInfo* requestinfo);
  private:
  const ::Soa::PB_RequestInfo& _internal_requestinfo() const;
  ::Soa::PB_RequestInfo* _internal_mutable_requestinfo();
  public:
  void unsafe_arena_set_allocated_requestinfo(
      ::Soa::PB_RequestInfo* requestinfo);
  ::Soa::PB_RequestInfo* unsafe_arena_release_requestinfo();

  // uint32 camera = 2;
  void clear_camera();
  uint32_t camera() const;
  void set_camera(uint32_t value);
  private:
  uint32_t _internal_camera() const;
  void _internal_set_camera(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Soa::PB_RequestInfo* requestinfo_;
  uint32_t camera_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fVideoRecordServer_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_VideoRecordServer_RR_RequestVideoFile_In final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In) */ {
 public:
  inline PB_Basc_VideoRecordServer_RR_RequestVideoFile_In() : PB_Basc_VideoRecordServer_RR_RequestVideoFile_In(nullptr) {}
  ~PB_Basc_VideoRecordServer_RR_RequestVideoFile_In() override;
  explicit constexpr PB_Basc_VideoRecordServer_RR_RequestVideoFile_In(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_VideoRecordServer_RR_RequestVideoFile_In(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& from);
  PB_Basc_VideoRecordServer_RR_RequestVideoFile_In(PB_Basc_VideoRecordServer_RR_RequestVideoFile_In&& from) noexcept
    : PB_Basc_VideoRecordServer_RR_RequestVideoFile_In() {
    *this = ::std::move(from);
  }

  inline PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& operator=(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& operator=(PB_Basc_VideoRecordServer_RR_RequestVideoFile_In&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In*>(
               &_PB_Basc_VideoRecordServer_RR_RequestVideoFile_In_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& a, PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_VideoRecordServer_RR_RequestVideoFile_In>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_In& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_VideoRecordServer_RR_RequestVideoFile_In* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In";
  }
  protected:
  explicit PB_Basc_VideoRecordServer_RR_RequestVideoFile_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRequestInfoFieldNumber = 1,
    kVideoRequestParamFieldNumber = 2,
  };
  // .Soa.PB_RequestInfo RequestInfo = 1;
  bool has_requestinfo() const;
  private:
  bool _internal_has_requestinfo() const;
  public:
  void clear_requestinfo();
  const ::Soa::PB_RequestInfo& requestinfo() const;
  PROTOBUF_NODISCARD ::Soa::PB_RequestInfo* release_requestinfo();
  ::Soa::PB_RequestInfo* mutable_requestinfo();
  void set_allocated_requestinfo(::Soa::PB_RequestInfo* requestinfo);
  private:
  const ::Soa::PB_RequestInfo& _internal_requestinfo() const;
  ::Soa::PB_RequestInfo* _internal_mutable_requestinfo();
  public:
  void unsafe_arena_set_allocated_requestinfo(
      ::Soa::PB_RequestInfo* requestinfo);
  ::Soa::PB_RequestInfo* unsafe_arena_release_requestinfo();

  // .Soa.PB_VideoRequestParam VideoRequestParam = 2;
  bool has_videorequestparam() const;
  private:
  bool _internal_has_videorequestparam() const;
  public:
  void clear_videorequestparam();
  const ::Soa::PB_VideoRequestParam& videorequestparam() const;
  PROTOBUF_NODISCARD ::Soa::PB_VideoRequestParam* release_videorequestparam();
  ::Soa::PB_VideoRequestParam* mutable_videorequestparam();
  void set_allocated_videorequestparam(::Soa::PB_VideoRequestParam* videorequestparam);
  private:
  const ::Soa::PB_VideoRequestParam& _internal_videorequestparam() const;
  ::Soa::PB_VideoRequestParam* _internal_mutable_videorequestparam();
  public:
  void unsafe_arena_set_allocated_videorequestparam(
      ::Soa::PB_VideoRequestParam* videorequestparam);
  ::Soa::PB_VideoRequestParam* unsafe_arena_release_videorequestparam();

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Soa::PB_RequestInfo* requestinfo_;
  ::Soa::PB_VideoRequestParam* videorequestparam_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fVideoRecordServer_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_VideoRecordServer_RR_Init_Out final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_VideoRecordServer_RR_Init_Out) */ {
 public:
  inline PB_Basc_VideoRecordServer_RR_Init_Out() : PB_Basc_VideoRecordServer_RR_Init_Out(nullptr) {}
  ~PB_Basc_VideoRecordServer_RR_Init_Out() override;
  explicit constexpr PB_Basc_VideoRecordServer_RR_Init_Out(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_VideoRecordServer_RR_Init_Out(const PB_Basc_VideoRecordServer_RR_Init_Out& from);
  PB_Basc_VideoRecordServer_RR_Init_Out(PB_Basc_VideoRecordServer_RR_Init_Out&& from) noexcept
    : PB_Basc_VideoRecordServer_RR_Init_Out() {
    *this = ::std::move(from);
  }

  inline PB_Basc_VideoRecordServer_RR_Init_Out& operator=(const PB_Basc_VideoRecordServer_RR_Init_Out& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_VideoRecordServer_RR_Init_Out& operator=(PB_Basc_VideoRecordServer_RR_Init_Out&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_VideoRecordServer_RR_Init_Out& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_VideoRecordServer_RR_Init_Out* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_VideoRecordServer_RR_Init_Out*>(
               &_PB_Basc_VideoRecordServer_RR_Init_Out_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PB_Basc_VideoRecordServer_RR_Init_Out& a, PB_Basc_VideoRecordServer_RR_Init_Out& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_VideoRecordServer_RR_Init_Out* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_VideoRecordServer_RR_Init_Out* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_VideoRecordServer_RR_Init_Out* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_VideoRecordServer_RR_Init_Out>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_VideoRecordServer_RR_Init_Out& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_VideoRecordServer_RR_Init_Out& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_VideoRecordServer_RR_Init_Out* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_VideoRecordServer_RR_Init_Out";
  }
  protected:
  explicit PB_Basc_VideoRecordServer_RR_Init_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnFieldNumber = 1,
  };
  // .Soa.PB_ResponseInfo return_ = 1;
  bool has_return_() const;
  private:
  bool _internal_has_return_() const;
  public:
  void clear_return_();
  const ::Soa::PB_ResponseInfo& return_() const;
  PROTOBUF_NODISCARD ::Soa::PB_ResponseInfo* release_return_();
  ::Soa::PB_ResponseInfo* mutable_return_();
  void set_allocated_return_(::Soa::PB_ResponseInfo* return_);
  private:
  const ::Soa::PB_ResponseInfo& _internal_return_() const;
  ::Soa::PB_ResponseInfo* _internal_mutable_return_();
  public:
  void unsafe_arena_set_allocated_return_(
      ::Soa::PB_ResponseInfo* return_);
  ::Soa::PB_ResponseInfo* unsafe_arena_release_return_();

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_VideoRecordServer_RR_Init_Out)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Soa::PB_ResponseInfo* return__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fVideoRecordServer_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_VideoRecordServer_RR_Uinit_Out final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out) */ {
 public:
  inline PB_Basc_VideoRecordServer_RR_Uinit_Out() : PB_Basc_VideoRecordServer_RR_Uinit_Out(nullptr) {}
  ~PB_Basc_VideoRecordServer_RR_Uinit_Out() override;
  explicit constexpr PB_Basc_VideoRecordServer_RR_Uinit_Out(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_VideoRecordServer_RR_Uinit_Out(const PB_Basc_VideoRecordServer_RR_Uinit_Out& from);
  PB_Basc_VideoRecordServer_RR_Uinit_Out(PB_Basc_VideoRecordServer_RR_Uinit_Out&& from) noexcept
    : PB_Basc_VideoRecordServer_RR_Uinit_Out() {
    *this = ::std::move(from);
  }

  inline PB_Basc_VideoRecordServer_RR_Uinit_Out& operator=(const PB_Basc_VideoRecordServer_RR_Uinit_Out& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_VideoRecordServer_RR_Uinit_Out& operator=(PB_Basc_VideoRecordServer_RR_Uinit_Out&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_VideoRecordServer_RR_Uinit_Out& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_VideoRecordServer_RR_Uinit_Out* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_VideoRecordServer_RR_Uinit_Out*>(
               &_PB_Basc_VideoRecordServer_RR_Uinit_Out_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PB_Basc_VideoRecordServer_RR_Uinit_Out& a, PB_Basc_VideoRecordServer_RR_Uinit_Out& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_VideoRecordServer_RR_Uinit_Out* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_VideoRecordServer_RR_Uinit_Out* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_VideoRecordServer_RR_Uinit_Out* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_VideoRecordServer_RR_Uinit_Out>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_VideoRecordServer_RR_Uinit_Out& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_VideoRecordServer_RR_Uinit_Out& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_VideoRecordServer_RR_Uinit_Out* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out";
  }
  protected:
  explicit PB_Basc_VideoRecordServer_RR_Uinit_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnFieldNumber = 1,
  };
  // .Soa.PB_ResponseInfo return_ = 1;
  bool has_return_() const;
  private:
  bool _internal_has_return_() const;
  public:
  void clear_return_();
  const ::Soa::PB_ResponseInfo& return_() const;
  PROTOBUF_NODISCARD ::Soa::PB_ResponseInfo* release_return_();
  ::Soa::PB_ResponseInfo* mutable_return_();
  void set_allocated_return_(::Soa::PB_ResponseInfo* return_);
  private:
  const ::Soa::PB_ResponseInfo& _internal_return_() const;
  ::Soa::PB_ResponseInfo* _internal_mutable_return_();
  public:
  void unsafe_arena_set_allocated_return_(
      ::Soa::PB_ResponseInfo* return_);
  ::Soa::PB_ResponseInfo* unsafe_arena_release_return_();

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Soa::PB_ResponseInfo* return__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fVideoRecordServer_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out) */ {
 public:
  inline PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out() : PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out(nullptr) {}
  ~PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out() override;
  explicit constexpr PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& from);
  PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out(PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out&& from) noexcept
    : PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out() {
    *this = ::std::move(from);
  }

  inline PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& operator=(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& operator=(PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out*>(
               &_PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& a, PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out";
  }
  protected:
  explicit PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnFieldNumber = 1,
  };
  // .Soa.PB_ResponseInfo return_ = 1;
  bool has_return_() const;
  private:
  bool _internal_has_return_() const;
  public:
  void clear_return_();
  const ::Soa::PB_ResponseInfo& return_() const;
  PROTOBUF_NODISCARD ::Soa::PB_ResponseInfo* release_return_();
  ::Soa::PB_ResponseInfo* mutable_return_();
  void set_allocated_return_(::Soa::PB_ResponseInfo* return_);
  private:
  const ::Soa::PB_ResponseInfo& _internal_return_() const;
  ::Soa::PB_ResponseInfo* _internal_mutable_return_();
  public:
  void unsafe_arena_set_allocated_return_(
      ::Soa::PB_ResponseInfo* return_);
  ::Soa::PB_ResponseInfo* unsafe_arena_release_return_();

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Soa::PB_ResponseInfo* return__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fVideoRecordServer_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PB_Basc_VideoRecordServer_RR_Init_In

// .Soa.PB_RequestInfo RequestInfo = 1;
inline bool PB_Basc_VideoRecordServer_RR_Init_In::_internal_has_requestinfo() const {
  return this != internal_default_instance() && requestinfo_ != nullptr;
}
inline bool PB_Basc_VideoRecordServer_RR_Init_In::has_requestinfo() const {
  return _internal_has_requestinfo();
}
inline const ::Soa::PB_RequestInfo& PB_Basc_VideoRecordServer_RR_Init_In::_internal_requestinfo() const {
  const ::Soa::PB_RequestInfo* p = requestinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::Soa::PB_RequestInfo&>(
      ::Soa::_PB_RequestInfo_default_instance_);
}
inline const ::Soa::PB_RequestInfo& PB_Basc_VideoRecordServer_RR_Init_In::requestinfo() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_VideoRecordServer_RR_Init_In.RequestInfo)
  return _internal_requestinfo();
}
inline void PB_Basc_VideoRecordServer_RR_Init_In::unsafe_arena_set_allocated_requestinfo(
    ::Soa::PB_RequestInfo* requestinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestinfo_);
  }
  requestinfo_ = requestinfo;
  if (requestinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_Init_In.RequestInfo)
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_Init_In::release_requestinfo() {
  
  ::Soa::PB_RequestInfo* temp = requestinfo_;
  requestinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_Init_In::unsafe_arena_release_requestinfo() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_VideoRecordServer_RR_Init_In.RequestInfo)
  
  ::Soa::PB_RequestInfo* temp = requestinfo_;
  requestinfo_ = nullptr;
  return temp;
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_Init_In::_internal_mutable_requestinfo() {
  
  if (requestinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Soa::PB_RequestInfo>(GetArenaForAllocation());
    requestinfo_ = p;
  }
  return requestinfo_;
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_Init_In::mutable_requestinfo() {
  ::Soa::PB_RequestInfo* _msg = _internal_mutable_requestinfo();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_VideoRecordServer_RR_Init_In.RequestInfo)
  return _msg;
}
inline void PB_Basc_VideoRecordServer_RR_Init_In::set_allocated_requestinfo(::Soa::PB_RequestInfo* requestinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestinfo_);
  }
  if (requestinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestinfo));
    if (message_arena != submessage_arena) {
      requestinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestinfo, submessage_arena);
    }
    
  } else {
    
  }
  requestinfo_ = requestinfo;
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_Init_In.RequestInfo)
}

// .Soa.PB_VideoParam VideoParam = 2;
inline bool PB_Basc_VideoRecordServer_RR_Init_In::_internal_has_videoparam() const {
  return this != internal_default_instance() && videoparam_ != nullptr;
}
inline bool PB_Basc_VideoRecordServer_RR_Init_In::has_videoparam() const {
  return _internal_has_videoparam();
}
inline const ::Soa::PB_VideoParam& PB_Basc_VideoRecordServer_RR_Init_In::_internal_videoparam() const {
  const ::Soa::PB_VideoParam* p = videoparam_;
  return p != nullptr ? *p : reinterpret_cast<const ::Soa::PB_VideoParam&>(
      ::Soa::_PB_VideoParam_default_instance_);
}
inline const ::Soa::PB_VideoParam& PB_Basc_VideoRecordServer_RR_Init_In::videoparam() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_VideoRecordServer_RR_Init_In.VideoParam)
  return _internal_videoparam();
}
inline void PB_Basc_VideoRecordServer_RR_Init_In::unsafe_arena_set_allocated_videoparam(
    ::Soa::PB_VideoParam* videoparam) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(videoparam_);
  }
  videoparam_ = videoparam;
  if (videoparam) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_Init_In.VideoParam)
}
inline ::Soa::PB_VideoParam* PB_Basc_VideoRecordServer_RR_Init_In::release_videoparam() {
  
  ::Soa::PB_VideoParam* temp = videoparam_;
  videoparam_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Soa::PB_VideoParam* PB_Basc_VideoRecordServer_RR_Init_In::unsafe_arena_release_videoparam() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_VideoRecordServer_RR_Init_In.VideoParam)
  
  ::Soa::PB_VideoParam* temp = videoparam_;
  videoparam_ = nullptr;
  return temp;
}
inline ::Soa::PB_VideoParam* PB_Basc_VideoRecordServer_RR_Init_In::_internal_mutable_videoparam() {
  
  if (videoparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::Soa::PB_VideoParam>(GetArenaForAllocation());
    videoparam_ = p;
  }
  return videoparam_;
}
inline ::Soa::PB_VideoParam* PB_Basc_VideoRecordServer_RR_Init_In::mutable_videoparam() {
  ::Soa::PB_VideoParam* _msg = _internal_mutable_videoparam();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_VideoRecordServer_RR_Init_In.VideoParam)
  return _msg;
}
inline void PB_Basc_VideoRecordServer_RR_Init_In::set_allocated_videoparam(::Soa::PB_VideoParam* videoparam) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(videoparam_);
  }
  if (videoparam) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(videoparam));
    if (message_arena != submessage_arena) {
      videoparam = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, videoparam, submessage_arena);
    }
    
  } else {
    
  }
  videoparam_ = videoparam;
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_Init_In.VideoParam)
}

// -------------------------------------------------------------------

// PB_Basc_VideoRecordServer_RR_Uinit_In

// .Soa.PB_RequestInfo RequestInfo = 1;
inline bool PB_Basc_VideoRecordServer_RR_Uinit_In::_internal_has_requestinfo() const {
  return this != internal_default_instance() && requestinfo_ != nullptr;
}
inline bool PB_Basc_VideoRecordServer_RR_Uinit_In::has_requestinfo() const {
  return _internal_has_requestinfo();
}
inline const ::Soa::PB_RequestInfo& PB_Basc_VideoRecordServer_RR_Uinit_In::_internal_requestinfo() const {
  const ::Soa::PB_RequestInfo* p = requestinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::Soa::PB_RequestInfo&>(
      ::Soa::_PB_RequestInfo_default_instance_);
}
inline const ::Soa::PB_RequestInfo& PB_Basc_VideoRecordServer_RR_Uinit_In::requestinfo() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In.RequestInfo)
  return _internal_requestinfo();
}
inline void PB_Basc_VideoRecordServer_RR_Uinit_In::unsafe_arena_set_allocated_requestinfo(
    ::Soa::PB_RequestInfo* requestinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestinfo_);
  }
  requestinfo_ = requestinfo;
  if (requestinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In.RequestInfo)
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_Uinit_In::release_requestinfo() {
  
  ::Soa::PB_RequestInfo* temp = requestinfo_;
  requestinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_Uinit_In::unsafe_arena_release_requestinfo() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In.RequestInfo)
  
  ::Soa::PB_RequestInfo* temp = requestinfo_;
  requestinfo_ = nullptr;
  return temp;
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_Uinit_In::_internal_mutable_requestinfo() {
  
  if (requestinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Soa::PB_RequestInfo>(GetArenaForAllocation());
    requestinfo_ = p;
  }
  return requestinfo_;
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_Uinit_In::mutable_requestinfo() {
  ::Soa::PB_RequestInfo* _msg = _internal_mutable_requestinfo();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In.RequestInfo)
  return _msg;
}
inline void PB_Basc_VideoRecordServer_RR_Uinit_In::set_allocated_requestinfo(::Soa::PB_RequestInfo* requestinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestinfo_);
  }
  if (requestinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestinfo));
    if (message_arena != submessage_arena) {
      requestinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestinfo, submessage_arena);
    }
    
  } else {
    
  }
  requestinfo_ = requestinfo;
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In.RequestInfo)
}

// uint32 camera = 2;
inline void PB_Basc_VideoRecordServer_RR_Uinit_In::clear_camera() {
  camera_ = 0u;
}
inline uint32_t PB_Basc_VideoRecordServer_RR_Uinit_In::_internal_camera() const {
  return camera_;
}
inline uint32_t PB_Basc_VideoRecordServer_RR_Uinit_In::camera() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In.camera)
  return _internal_camera();
}
inline void PB_Basc_VideoRecordServer_RR_Uinit_In::_internal_set_camera(uint32_t value) {
  
  camera_ = value;
}
inline void PB_Basc_VideoRecordServer_RR_Uinit_In::set_camera(uint32_t value) {
  _internal_set_camera(value);
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_VideoRecordServer_RR_Uinit_In.camera)
}

// -------------------------------------------------------------------

// PB_Basc_VideoRecordServer_RR_RequestVideoFile_In

// .Soa.PB_RequestInfo RequestInfo = 1;
inline bool PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_internal_has_requestinfo() const {
  return this != internal_default_instance() && requestinfo_ != nullptr;
}
inline bool PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::has_requestinfo() const {
  return _internal_has_requestinfo();
}
inline const ::Soa::PB_RequestInfo& PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_internal_requestinfo() const {
  const ::Soa::PB_RequestInfo* p = requestinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::Soa::PB_RequestInfo&>(
      ::Soa::_PB_RequestInfo_default_instance_);
}
inline const ::Soa::PB_RequestInfo& PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::requestinfo() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In.RequestInfo)
  return _internal_requestinfo();
}
inline void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::unsafe_arena_set_allocated_requestinfo(
    ::Soa::PB_RequestInfo* requestinfo) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestinfo_);
  }
  requestinfo_ = requestinfo;
  if (requestinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In.RequestInfo)
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::release_requestinfo() {
  
  ::Soa::PB_RequestInfo* temp = requestinfo_;
  requestinfo_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::unsafe_arena_release_requestinfo() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In.RequestInfo)
  
  ::Soa::PB_RequestInfo* temp = requestinfo_;
  requestinfo_ = nullptr;
  return temp;
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_internal_mutable_requestinfo() {
  
  if (requestinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Soa::PB_RequestInfo>(GetArenaForAllocation());
    requestinfo_ = p;
  }
  return requestinfo_;
}
inline ::Soa::PB_RequestInfo* PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::mutable_requestinfo() {
  ::Soa::PB_RequestInfo* _msg = _internal_mutable_requestinfo();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In.RequestInfo)
  return _msg;
}
inline void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::set_allocated_requestinfo(::Soa::PB_RequestInfo* requestinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestinfo_);
  }
  if (requestinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(requestinfo));
    if (message_arena != submessage_arena) {
      requestinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, requestinfo, submessage_arena);
    }
    
  } else {
    
  }
  requestinfo_ = requestinfo;
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In.RequestInfo)
}

// .Soa.PB_VideoRequestParam VideoRequestParam = 2;
inline bool PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_internal_has_videorequestparam() const {
  return this != internal_default_instance() && videorequestparam_ != nullptr;
}
inline bool PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::has_videorequestparam() const {
  return _internal_has_videorequestparam();
}
inline const ::Soa::PB_VideoRequestParam& PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_internal_videorequestparam() const {
  const ::Soa::PB_VideoRequestParam* p = videorequestparam_;
  return p != nullptr ? *p : reinterpret_cast<const ::Soa::PB_VideoRequestParam&>(
      ::Soa::_PB_VideoRequestParam_default_instance_);
}
inline const ::Soa::PB_VideoRequestParam& PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::videorequestparam() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In.VideoRequestParam)
  return _internal_videorequestparam();
}
inline void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::unsafe_arena_set_allocated_videorequestparam(
    ::Soa::PB_VideoRequestParam* videorequestparam) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(videorequestparam_);
  }
  videorequestparam_ = videorequestparam;
  if (videorequestparam) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In.VideoRequestParam)
}
inline ::Soa::PB_VideoRequestParam* PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::release_videorequestparam() {
  
  ::Soa::PB_VideoRequestParam* temp = videorequestparam_;
  videorequestparam_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Soa::PB_VideoRequestParam* PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::unsafe_arena_release_videorequestparam() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In.VideoRequestParam)
  
  ::Soa::PB_VideoRequestParam* temp = videorequestparam_;
  videorequestparam_ = nullptr;
  return temp;
}
inline ::Soa::PB_VideoRequestParam* PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::_internal_mutable_videorequestparam() {
  
  if (videorequestparam_ == nullptr) {
    auto* p = CreateMaybeMessage<::Soa::PB_VideoRequestParam>(GetArenaForAllocation());
    videorequestparam_ = p;
  }
  return videorequestparam_;
}
inline ::Soa::PB_VideoRequestParam* PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::mutable_videorequestparam() {
  ::Soa::PB_VideoRequestParam* _msg = _internal_mutable_videorequestparam();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In.VideoRequestParam)
  return _msg;
}
inline void PB_Basc_VideoRecordServer_RR_RequestVideoFile_In::set_allocated_videorequestparam(::Soa::PB_VideoRequestParam* videorequestparam) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(videorequestparam_);
  }
  if (videorequestparam) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(videorequestparam));
    if (message_arena != submessage_arena) {
      videorequestparam = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, videorequestparam, submessage_arena);
    }
    
  } else {
    
  }
  videorequestparam_ = videorequestparam;
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_In.VideoRequestParam)
}

// -------------------------------------------------------------------

// PB_Basc_VideoRecordServer_RR_Init_Out

// .Soa.PB_ResponseInfo return_ = 1;
inline bool PB_Basc_VideoRecordServer_RR_Init_Out::_internal_has_return_() const {
  return this != internal_default_instance() && return__ != nullptr;
}
inline bool PB_Basc_VideoRecordServer_RR_Init_Out::has_return_() const {
  return _internal_has_return_();
}
inline const ::Soa::PB_ResponseInfo& PB_Basc_VideoRecordServer_RR_Init_Out::_internal_return_() const {
  const ::Soa::PB_ResponseInfo* p = return__;
  return p != nullptr ? *p : reinterpret_cast<const ::Soa::PB_ResponseInfo&>(
      ::Soa::_PB_ResponseInfo_default_instance_);
}
inline const ::Soa::PB_ResponseInfo& PB_Basc_VideoRecordServer_RR_Init_Out::return_() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_VideoRecordServer_RR_Init_Out.return_)
  return _internal_return_();
}
inline void PB_Basc_VideoRecordServer_RR_Init_Out::unsafe_arena_set_allocated_return_(
    ::Soa::PB_ResponseInfo* return_) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return__);
  }
  return__ = return_;
  if (return_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_Init_Out.return_)
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_Init_Out::release_return_() {
  
  ::Soa::PB_ResponseInfo* temp = return__;
  return__ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_Init_Out::unsafe_arena_release_return_() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_VideoRecordServer_RR_Init_Out.return_)
  
  ::Soa::PB_ResponseInfo* temp = return__;
  return__ = nullptr;
  return temp;
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_Init_Out::_internal_mutable_return_() {
  
  if (return__ == nullptr) {
    auto* p = CreateMaybeMessage<::Soa::PB_ResponseInfo>(GetArenaForAllocation());
    return__ = p;
  }
  return return__;
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_Init_Out::mutable_return_() {
  ::Soa::PB_ResponseInfo* _msg = _internal_mutable_return_();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_VideoRecordServer_RR_Init_Out.return_)
  return _msg;
}
inline void PB_Basc_VideoRecordServer_RR_Init_Out::set_allocated_return_(::Soa::PB_ResponseInfo* return_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(return__);
  }
  if (return_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return_));
    if (message_arena != submessage_arena) {
      return_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, return_, submessage_arena);
    }
    
  } else {
    
  }
  return__ = return_;
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_Init_Out.return_)
}

// -------------------------------------------------------------------

// PB_Basc_VideoRecordServer_RR_Uinit_Out

// .Soa.PB_ResponseInfo return_ = 1;
inline bool PB_Basc_VideoRecordServer_RR_Uinit_Out::_internal_has_return_() const {
  return this != internal_default_instance() && return__ != nullptr;
}
inline bool PB_Basc_VideoRecordServer_RR_Uinit_Out::has_return_() const {
  return _internal_has_return_();
}
inline const ::Soa::PB_ResponseInfo& PB_Basc_VideoRecordServer_RR_Uinit_Out::_internal_return_() const {
  const ::Soa::PB_ResponseInfo* p = return__;
  return p != nullptr ? *p : reinterpret_cast<const ::Soa::PB_ResponseInfo&>(
      ::Soa::_PB_ResponseInfo_default_instance_);
}
inline const ::Soa::PB_ResponseInfo& PB_Basc_VideoRecordServer_RR_Uinit_Out::return_() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out.return_)
  return _internal_return_();
}
inline void PB_Basc_VideoRecordServer_RR_Uinit_Out::unsafe_arena_set_allocated_return_(
    ::Soa::PB_ResponseInfo* return_) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return__);
  }
  return__ = return_;
  if (return_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out.return_)
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_Uinit_Out::release_return_() {
  
  ::Soa::PB_ResponseInfo* temp = return__;
  return__ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_Uinit_Out::unsafe_arena_release_return_() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out.return_)
  
  ::Soa::PB_ResponseInfo* temp = return__;
  return__ = nullptr;
  return temp;
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_Uinit_Out::_internal_mutable_return_() {
  
  if (return__ == nullptr) {
    auto* p = CreateMaybeMessage<::Soa::PB_ResponseInfo>(GetArenaForAllocation());
    return__ = p;
  }
  return return__;
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_Uinit_Out::mutable_return_() {
  ::Soa::PB_ResponseInfo* _msg = _internal_mutable_return_();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out.return_)
  return _msg;
}
inline void PB_Basc_VideoRecordServer_RR_Uinit_Out::set_allocated_return_(::Soa::PB_ResponseInfo* return_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(return__);
  }
  if (return_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return_));
    if (message_arena != submessage_arena) {
      return_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, return_, submessage_arena);
    }
    
  } else {
    
  }
  return__ = return_;
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_Uinit_Out.return_)
}

// -------------------------------------------------------------------

// PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out

// .Soa.PB_ResponseInfo return_ = 1;
inline bool PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::_internal_has_return_() const {
  return this != internal_default_instance() && return__ != nullptr;
}
inline bool PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::has_return_() const {
  return _internal_has_return_();
}
inline const ::Soa::PB_ResponseInfo& PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::_internal_return_() const {
  const ::Soa::PB_ResponseInfo* p = return__;
  return p != nullptr ? *p : reinterpret_cast<const ::Soa::PB_ResponseInfo&>(
      ::Soa::_PB_ResponseInfo_default_instance_);
}
inline const ::Soa::PB_ResponseInfo& PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::return_() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out.return_)
  return _internal_return_();
}
inline void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::unsafe_arena_set_allocated_return_(
    ::Soa::PB_ResponseInfo* return_) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return__);
  }
  return__ = return_;
  if (return_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out.return_)
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::release_return_() {
  
  ::Soa::PB_ResponseInfo* temp = return__;
  return__ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::unsafe_arena_release_return_() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out.return_)
  
  ::Soa::PB_ResponseInfo* temp = return__;
  return__ = nullptr;
  return temp;
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::_internal_mutable_return_() {
  
  if (return__ == nullptr) {
    auto* p = CreateMaybeMessage<::Soa::PB_ResponseInfo>(GetArenaForAllocation());
    return__ = p;
  }
  return return__;
}
inline ::Soa::PB_ResponseInfo* PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::mutable_return_() {
  ::Soa::PB_ResponseInfo* _msg = _internal_mutable_return_();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out.return_)
  return _msg;
}
inline void PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out::set_allocated_return_(::Soa::PB_ResponseInfo* return_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(return__);
  }
  if (return_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return_));
    if (message_arena != submessage_arena) {
      return_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, return_, submessage_arena);
    }
    
  } else {
    
  }
  return__ = return_;
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_VideoRecordServer_RR_RequestVideoFile_Out.return_)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Soa

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Basc_5fVideoRecordServer_2eproto
