/****************************************************************
  Generated by ChangAn Code Generator,Do Not Modify
  AppVersion： mADC_Application_Service-V1.5
  ServiceVersion: V2.3
  CmVersion： v2.0.3
  ServiceLatestModifyTime: 2023-07-25T12:19:34
  Generate Time: 2023-12-11 18:07:58
*****************************************************************/
#ifndef Basc_ExtrLiFltInfo_SKELETON_HPP
#define Basc_ExtrLiFltInfo_SKELETON_HPP
#include "changan/common_data_types.h"
#include "Common.h"
#include "changan/dds_util.h"
#include "changan/string_util.hpp"
#include "changan/base_skeleton.hpp"
#include "changan/base_wait.hpp"
#include <iostream>
#include <string.h>
#include "changan/Car_Control_fl_Skeleton.hpp"
#include "changan/Car_Control.h"
#include <mutex>
namespace com {
namespace changan {
namespace carControl {
namespace ExteriorLight {
namespace skeleton {
	namespace events {
		using CarControlFLSkeleton = com::changan::carControl::skeleton::CarControlFLSkeleton;
        class Basc_ExtrLiFltInfo_Ntf_PosnLiFltInfo{
            private:
                dds_rpc_handle_t dds_Ntf_PosnLiFltInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiFltInfo_skeleton_Ntf_PosnLiFltInfo";
			public:
			    Basc_ExtrLiFltInfo_Ntf_PosnLiFltInfo() {
			    }
			    ~Basc_ExtrLiFltInfo_Ntf_PosnLiFltInfo() {
                }
				void send(const carControl_Secure_Car_Control_Basc_ExtrLiFltInfo_Ntf_PosnLiFltInfo_PosnLiFltInfo &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_PosnLiFltInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiFltInfo_Ntf_PosnLiFltInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_PosnLiFltInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiFltInfo_Ntf_LoBeamFltInfo{
            private:
                dds_rpc_handle_t dds_Ntf_LoBeamFltInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiFltInfo_skeleton_Ntf_LoBeamFltInfo";
			public:
			    Basc_ExtrLiFltInfo_Ntf_LoBeamFltInfo() {
			    }
			    ~Basc_ExtrLiFltInfo_Ntf_LoBeamFltInfo() {
                }
				void send(const carControl_Secure_Car_Control_Basc_ExtrLiFltInfo_Ntf_LoBeamFltInfo_LoBeamFltInfo &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_LoBeamFltInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiFltInfo_Ntf_LoBeamFltInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_LoBeamFltInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiFltInfo_Ntf_HiBeamFltInfo{
            private:
                dds_rpc_handle_t dds_Ntf_HiBeamFltInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiFltInfo_skeleton_Ntf_HiBeamFltInfo";
			public:
			    Basc_ExtrLiFltInfo_Ntf_HiBeamFltInfo() {
			    }
			    ~Basc_ExtrLiFltInfo_Ntf_HiBeamFltInfo() {
                }
				void send(const carControl_Secure_Car_Control_Basc_ExtrLiFltInfo_Ntf_HiBeamFltInfo_HiBeamFltInfo &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_HiBeamFltInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiFltInfo_Ntf_HiBeamFltInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_HiBeamFltInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiFltInfo_Ntf_RvsLiFltInfo{
            private:
                dds_rpc_handle_t dds_Ntf_RvsLiFltInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiFltInfo_skeleton_Ntf_RvsLiFltInfo";
			public:
			    Basc_ExtrLiFltInfo_Ntf_RvsLiFltInfo() {
			    }
			    ~Basc_ExtrLiFltInfo_Ntf_RvsLiFltInfo() {
                }
                void send(const RvsLiFltInfo &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_RvsLiFltInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiFltInfo_Ntf_RvsLiFltInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_RvsLiFltInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiFltInfo_Ntf_DRLFltInfo{
            private:
                dds_rpc_handle_t dds_Ntf_DRLFltInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiFltInfo_skeleton_Ntf_DRLFltInfo";
			public:
			    Basc_ExtrLiFltInfo_Ntf_DRLFltInfo() {
			    }
			    ~Basc_ExtrLiFltInfo_Ntf_DRLFltInfo() {
                }
                void send(const DRLFltInfo &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_DRLFltInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiFltInfo_Ntf_DRLFltInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_DRLFltInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiFltInfo_Ntf_BrkLiFltInfo{
            private:
                dds_rpc_handle_t dds_Ntf_BrkLiFltInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiFltInfo_skeleton_Ntf_BrkLiFltInfo";
			public:
			    Basc_ExtrLiFltInfo_Ntf_BrkLiFltInfo() {
			    }
			    ~Basc_ExtrLiFltInfo_Ntf_BrkLiFltInfo() {
                }
				void send(const carControl_Secure_Car_Control_Basc_ExtrLiFltInfo_Ntf_BrkLiFltInfo_BrkLiFltInfo &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_BrkLiFltInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiFltInfo_Ntf_BrkLiFltInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_BrkLiFltInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiFltInfo_Ntf_TurnLiFltInfo{
            private:
                dds_rpc_handle_t dds_Ntf_TurnLiFltInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiFltInfo_skeleton_Ntf_TurnLiFltInfo";
			public:
			    Basc_ExtrLiFltInfo_Ntf_TurnLiFltInfo() {
			    }
			    ~Basc_ExtrLiFltInfo_Ntf_TurnLiFltInfo() {
                }
				void send(const carControl_Secure_Car_Control_Basc_ExtrLiFltInfo_Ntf_TurnLiFltInfo_TurnLiFltInfo &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_TurnLiFltInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiFltInfo_Ntf_TurnLiFltInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_TurnLiFltInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiFltInfo_Ntf_FogFltInfo{
            private:
                dds_rpc_handle_t dds_Ntf_FogFltInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiFltInfo_skeleton_Ntf_FogFltInfo";
			public:
			    Basc_ExtrLiFltInfo_Ntf_FogFltInfo() {
			    }
			    ~Basc_ExtrLiFltInfo_Ntf_FogFltInfo() {
                }
                void send(const FogFltInfo &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_FogFltInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiFltInfo_Ntf_FogFltInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiFltInfo_Ntf_FogFltInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
	}
	extern void on_carControl_Basc_ExtrLiFltInfo_request_data_available(int32_t reader, void* arg);

	class Basc_ExtrLiFltInfo_service_interface {
	public:
	    virtual ~Basc_ExtrLiFltInfo_service_interface() = default;

		virtual PosnLiFltInfo Get_PosnLiFltInfo() = 0;
		virtual LoBeamFltInfo Get_LoBeamFltInfo() = 0;
		virtual HiBeamFltInfo Get_HiBeamFltInfo() = 0;
		virtual RvsLiFltInfo Get_RvsLiFltInfo() = 0;
		virtual DRLFltInfo Get_DRLFltInfo() = 0;
		virtual BrkLiFltInfo Get_BrkLiFltInfo() = 0;
		virtual TurnLiFltInfo Get_TurnLiFltInfo() = 0;
		virtual FogFltInfo Get_FogFltInfo() = 0;
	};
    class Basc_ExtrLiFltInfo_Skeleton :public Basc_ExtrLiFltInfo_service_interface, public IBaseWait,public IBaseSkeleton,public ConsumerMatchedStatusHandler{
		public:
			Basc_ExtrLiFltInfo_Skeleton(Basc_ExtrLiFltInfo_service_interface* service,std::string config="");
			bool init();
			void wait_client_online();
            const std::string get_service_name() {
				return this->service_name;
			}
			PosnLiFltInfo Get_PosnLiFltInfo() {
				return this->_service->Get_PosnLiFltInfo();
			}
			LoBeamFltInfo Get_LoBeamFltInfo() {
				return this->_service->Get_LoBeamFltInfo();
			}
			HiBeamFltInfo Get_HiBeamFltInfo() {
				return this->_service->Get_HiBeamFltInfo();
			}
			RvsLiFltInfo Get_RvsLiFltInfo() {
				return this->_service->Get_RvsLiFltInfo();
			}
			DRLFltInfo Get_DRLFltInfo() {
				return this->_service->Get_DRLFltInfo();
			}
			BrkLiFltInfo Get_BrkLiFltInfo() {
				return this->_service->Get_BrkLiFltInfo();
			}
			TurnLiFltInfo Get_TurnLiFltInfo() {
				return this->_service->Get_TurnLiFltInfo();
			}
			FogFltInfo Get_FogFltInfo() {
				return this->_service->Get_FogFltInfo();
			}
            dds_return_t send_reply(carControl_Car_Control_Reply* reply);
            events::Basc_ExtrLiFltInfo_Ntf_PosnLiFltInfo Ntf_PosnLiFltInfo;
            events::Basc_ExtrLiFltInfo_Ntf_LoBeamFltInfo Ntf_LoBeamFltInfo;
            events::Basc_ExtrLiFltInfo_Ntf_HiBeamFltInfo Ntf_HiBeamFltInfo;
            events::Basc_ExtrLiFltInfo_Ntf_RvsLiFltInfo Ntf_RvsLiFltInfo;
            events::Basc_ExtrLiFltInfo_Ntf_DRLFltInfo Ntf_DRLFltInfo;
            events::Basc_ExtrLiFltInfo_Ntf_BrkLiFltInfo Ntf_BrkLiFltInfo;
            events::Basc_ExtrLiFltInfo_Ntf_TurnLiFltInfo Ntf_TurnLiFltInfo;
            events::Basc_ExtrLiFltInfo_Ntf_FogFltInfo Ntf_FogFltInfo;


		private:
		    std::string _config;
			const std::string service_name="Basc_ExtrLiFltInfo_skeleton";
			Basc_ExtrLiFltInfo_service_interface * _service;

			dds_rpc_handle_t dds_rpc_request_handle= { -1, -1, -1 };
			dds_rpc_handle_t dds_rpc_reply_handle= { -1, -1, -1 };
	};

}
}
}
}
}
#endif

