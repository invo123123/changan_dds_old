/****************************************************************
  Generated by ChangAn Code Generator,Do Not Modify
  AppVersion： mADC_Application_Service-V1.5
  CmVersion： v2.0.3
  ServiceVersion: V1.2.0
  ServiceLatestModifyTime: 2023-11-21T11:51:51
  Generate Time: 2023-12-11 18:07:59
*****************************************************************/
#ifndef Basc_ADASCruiseSet_Proxy_HPP
#define Basc_ADASCruiseSet_Proxy_HPP
#include <string.h>
#include <future>
#include <chrono>
#include "changan/common_data_types.h"
#include "Common.h"
#include "changan/dds_util.h"
#include "dds/ddsrt/sync.h"
#include "changan/Basc_ADASCruiseSet.h"
#include "changan/base_proxy.hpp"
#include "changan/base_wait.hpp"
#include "changan/dds_client.hpp"
#include <mutex>

namespace com {
namespace changan {
namespace carDrive {
namespace C2Controller {
namespace proxy {
	namespace events {
        class Basc_ADASCruiseSet_Ntf_ADASCruiseSet{
			public:
			    void set_receive_handler(const EventReceiveHandler<const ADASCruiseSet&> &handler) {
					handler_list.push_back(handler);
				};
			    void clear_receive_handler()
			  	{
				  if(!handler_list.empty())
				  {
				  	handler_list.clear();
				  }
			  	}
				void trigger(const ADASCruiseSet &data){
				  if(!handler_list.empty())
				  {
					 for(auto it :handler_list)
					 {
						it(data);
					 }
				  }
				};
				std::string get_name() {
					return this->event_name;
				}
			private:
				std::list<EventReceiveHandler<const ADASCruiseSet&>> handler_list;
			    std::string event_name="Ntf_ADASCruiseSet";
        };
        class Basc_ADASCruiseSet_Ntf_C2_IACCFamlrRdModSwtFb{
			public:
			    void set_receive_handler(const EventReceiveHandler<const C2_IACCFamlrRdModSwtFbSet&> &handler) {
					handler_list.push_back(handler);
				};
			    void clear_receive_handler()
			  	{
				  if(!handler_list.empty())
				  {
				  	handler_list.clear();
				  }
			  	}
				void trigger(const C2_IACCFamlrRdModSwtFbSet &data){
				  if(!handler_list.empty())
				  {
					 for(auto it :handler_list)
					 {
						it(data);
					 }
				  }
				};
				std::string get_name() {
					return this->event_name;
				}
			private:
				std::list<EventReceiveHandler<const C2_IACCFamlrRdModSwtFbSet&>> handler_list;
			    std::string event_name="Ntf_C2_IACCFamlrRdModSwtFb";
        };
        class Basc_ADASCruiseSet_Ntf_AD_NIDSelfLrngFb{
			public:
			    void set_receive_handler(const EventReceiveHandler<const AD_NIDSelfLrngFbset&> &handler) {
					handler_list.push_back(handler);
				};
			    void clear_receive_handler()
			  	{
				  if(!handler_list.empty())
				  {
				  	handler_list.clear();
				  }
			  	}
				void trigger(const AD_NIDSelfLrngFbset &data){
				  if(!handler_list.empty())
				  {
					 for(auto it :handler_list)
					 {
						it(data);
					 }
				  }
				};
				std::string get_name() {
					return this->event_name;
				}
			private:
				std::list<EventReceiveHandler<const AD_NIDSelfLrngFbset&>> handler_list;
			    std::string event_name="Ntf_AD_NIDSelfLrngFb";
        };
        class Basc_ADASCruiseSet_Ntf_AD_BSDLCAOnOffSet{
			public:
			    void set_receive_handler(const EventReceiveHandler<const AD_BSDLCAOnOffSet&> &handler) {
					handler_list.push_back(handler);
				};
			    void clear_receive_handler()
			  	{
				  if(!handler_list.empty())
				  {
				  	handler_list.clear();
				  }
			  	}
				void trigger(const AD_BSDLCAOnOffSet &data){
				  if(!handler_list.empty())
				  {
					 for(auto it :handler_list)
					 {
						it(data);
					 }
				  }
				};
				std::string get_name() {
					return this->event_name;
				}
			private:
				std::list<EventReceiveHandler<const AD_BSDLCAOnOffSet&>> handler_list;
			    std::string event_name="Ntf_AD_BSDLCAOnOffSet";
        };
        class Basc_ADASCruiseSet_Ntf_AD_SEAOnOffSts{
			public:
			    void set_receive_handler(const EventReceiveHandler<const AD_SEAOnOffStsSet&> &handler) {
					handler_list.push_back(handler);
				};
			    void clear_receive_handler()
			  	{
				  if(!handler_list.empty())
				  {
				  	handler_list.clear();
				  }
			  	}
				void trigger(const AD_SEAOnOffStsSet &data){
				  if(!handler_list.empty())
				  {
					 for(auto it :handler_list)
					 {
						it(data);
					 }
				  }
				};
				std::string get_name() {
					return this->event_name;
				}
			private:
				std::list<EventReceiveHandler<const AD_SEAOnOffStsSet&>> handler_list;
			    std::string event_name="Ntf_AD_SEAOnOffSts";
        };
	}
	extern void on_carDrive_Basc_ADASCruiseSet_reply_data_available(int32_t reader, void* arg);
	class Basc_ADASCruiseSet_Proxy : IBaseProxy,IBaseWait, public ProviderMatchedStatusHandler, public dds_link_count{
		public:
		    static Basc_ADASCruiseSet_Proxy& get_instance();
			bool init(std::string config="");
			void wait_server_online();
			bool destroy();
            events::Basc_ADASCruiseSet_Ntf_ADASCruiseSet Ntf_ADASCruiseSet;
            events::Basc_ADASCruiseSet_Ntf_C2_IACCFamlrRdModSwtFb Ntf_C2_IACCFamlrRdModSwtFb;
            events::Basc_ADASCruiseSet_Ntf_AD_NIDSelfLrngFb Ntf_AD_NIDSelfLrngFb;
            events::Basc_ADASCruiseSet_Ntf_AD_BSDLCAOnOffSet Ntf_AD_BSDLCAOnOffSet;
            events::Basc_ADASCruiseSet_Ntf_AD_SEAOnOffSts Ntf_AD_SEAOnOffSts;
			DDS_GuidPrefix_t guid;
			Msg<ADASCruiseSet> Get_ADASCruiseSet() {
				return this->Get_ADASCruiseSet<DEFAULT_TIMEOUT>();
			}
			template<size_t TIMEOUT>
			Msg<ADASCruiseSet> Get_ADASCruiseSet() {
				return this->Get_ADASCruiseSet( TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_CuriseMode(const HUset_CuriseMode &HUset_CuriseMode,const RequestInfo &Requestinfo) {
				return this->RR_HU_CuriseMode<DEFAULT_TIMEOUT>(HUset_CuriseMode,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_CuriseMode(const HUset_CuriseMode &HUset_CuriseMode,const RequestInfo &Requestinfo) {
				return this->RR_HU_CuriseMode(HUset_CuriseMode,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_IDAEnable(const HUset_IDAEnable &HUset_IDAEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_IDAEnable<DEFAULT_TIMEOUT>(HUset_IDAEnable,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_IDAEnable(const HUset_IDAEnable &HUset_IDAEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_IDAEnable(HUset_IDAEnable,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_LaneChangeFrequency(const HUset_LaneChangeFrequency &HUset_LaneChangeFrequency,const RequestInfo &Requestinfo) {
				return this->RR_HU_LaneChangeFrequency<DEFAULT_TIMEOUT>(HUset_LaneChangeFrequency,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_LaneChangeFrequency(const HUset_LaneChangeFrequency &HUset_LaneChangeFrequency,const RequestInfo &Requestinfo) {
				return this->RR_HU_LaneChangeFrequency(HUset_LaneChangeFrequency,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_UDLCEnable(const HUset_UDLCEnable &HUset_UDLCEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_UDLCEnable<DEFAULT_TIMEOUT>(HUset_UDLCEnable,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_UDLCEnable(const HUset_UDLCEnable &HUset_UDLCEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_UDLCEnable(HUset_UDLCEnable,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_NIDAudioWarStyle(const HUset_NIDAudioWarStyle &HUset_NIDAudioWarStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_NIDAudioWarStyle<DEFAULT_TIMEOUT>(HUset_NIDAudioWarStyle,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_NIDAudioWarStyle(const HUset_NIDAudioWarStyle &HUset_NIDAudioWarStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_NIDAudioWarStyle(HUset_NIDAudioWarStyle,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_CSLAEnable(const HUset_CSLAEnable &HUset_CSLAEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_CSLAEnable<DEFAULT_TIMEOUT>(HUset_CSLAEnable,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_CSLAEnable(const HUset_CSLAEnable &HUset_CSLAEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_CSLAEnable(HUset_CSLAEnable,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_CSLmode(const HUset_CSLmode &HUset_CSLmode,const RequestInfo &Requestinfo) {
				return this->RR_HU_CSLmode<DEFAULT_TIMEOUT>(HUset_CSLmode,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_CSLmode(const HUset_CSLmode &HUset_CSLmode,const RequestInfo &Requestinfo) {
				return this->RR_HU_CSLmode(HUset_CSLmode,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_OverspeedSoundWarEnable(const HUset_OverspeedSoundWarEnable &HUset_OverspeedSoundWarEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_OverspeedSoundWarEnable<DEFAULT_TIMEOUT>(HUset_OverspeedSoundWarEnable,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_OverspeedSoundWarEnable(const HUset_OverspeedSoundWarEnable &HUset_OverspeedSoundWarEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_OverspeedSoundWarEnable(HUset_OverspeedSoundWarEnable,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_CSLWarnOffsetTp(const HUset_CSLWarnOffsetTp &HUset_CSLWarnOffsetTp,const RequestInfo &Requestinfo) {
				return this->RR_HU_CSLWarnOffsetTp<DEFAULT_TIMEOUT>(HUset_CSLWarnOffsetTp,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_CSLWarnOffsetTp(const HUset_CSLWarnOffsetTp &HUset_CSLWarnOffsetTp,const RequestInfo &Requestinfo) {
				return this->RR_HU_CSLWarnOffsetTp(HUset_CSLWarnOffsetTp,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_AbsOverSpdWarnOffset(const HUset_AbsOverSpdWarnOffset &HUset_AbsOverSpdWarnOffset,const RequestInfo &Requestinfo) {
				return this->RR_HU_AbsOverSpdWarnOffset<DEFAULT_TIMEOUT>(HUset_AbsOverSpdWarnOffset,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_AbsOverSpdWarnOffset(const HUset_AbsOverSpdWarnOffset &HUset_AbsOverSpdWarnOffset,const RequestInfo &Requestinfo) {
				return this->RR_HU_AbsOverSpdWarnOffset(HUset_AbsOverSpdWarnOffset,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_RelOverSpdWarnOffset(const HUset_RelOverSpdWarnOffset &HUset_RelOverSpdWarnOffset,const RequestInfo &Requestinfo) {
				return this->RR_HU_RelOverSpdWarnOffset<DEFAULT_TIMEOUT>(HUset_RelOverSpdWarnOffset,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_RelOverSpdWarnOffset(const HUset_RelOverSpdWarnOffset &HUset_RelOverSpdWarnOffset,const RequestInfo &Requestinfo) {
				return this->RR_HU_RelOverSpdWarnOffset(HUset_RelOverSpdWarnOffset,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_AutoDriveStyle(const HUset_AutoDriveStyle &HUset_AutoDriveStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_AutoDriveStyle<DEFAULT_TIMEOUT>(HUset_AutoDriveStyle,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_AutoDriveStyle(const HUset_AutoDriveStyle &HUset_AutoDriveStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_AutoDriveStyle(HUset_AutoDriveStyle,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_ADACCStyle(const HUset_ADACCStyle &HUset_ADACCStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_ADACCStyle<DEFAULT_TIMEOUT>(HUset_ADACCStyle,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_ADACCStyle(const HUset_ADACCStyle &HUset_ADACCStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_ADACCStyle(HUset_ADACCStyle,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_ADStartStyle(const HUset_ADStartStyle &HUset_ADStartStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_ADStartStyle<DEFAULT_TIMEOUT>(HUset_ADStartStyle,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_ADStartStyle(const HUset_ADStartStyle &HUset_ADStartStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_ADStartStyle(HUset_ADStartStyle,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_ADCurveStyle(const HUset_ADCurveStyle &HUset_ADCurveStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_ADCurveStyle<DEFAULT_TIMEOUT>(HUset_ADCurveStyle,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_ADCurveStyle(const HUset_ADCurveStyle &HUset_ADCurveStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_ADCurveStyle(HUset_ADCurveStyle,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_ADLanechangeStyle(const HUset_ADLanechangeStyle &HUset_ADLanechangeStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_ADLanechangeStyle<DEFAULT_TIMEOUT>(HUset_ADLanechangeStyle,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_ADLanechangeStyle(const HUset_ADLanechangeStyle &HUset_ADLanechangeStyle,const RequestInfo &Requestinfo) {
				return this->RR_HU_ADLanechangeStyle(HUset_ADLanechangeStyle,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_VehicleStartRemindEnable(const HUset_VehicleStartRemindEnable &HUset_VehicleStartRemindEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_VehicleStartRemindEnable<DEFAULT_TIMEOUT>(HUset_VehicleStartRemindEnable,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_VehicleStartRemindEnable(const HUset_VehicleStartRemindEnable &HUset_VehicleStartRemindEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_VehicleStartRemindEnable(HUset_VehicleStartRemindEnable,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_RCWEnable(const HUset_RCWEnable &HUset_RCWEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_RCWEnable<DEFAULT_TIMEOUT>(HUset_RCWEnable,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_RCWEnable(const HUset_RCWEnable &HUset_RCWEnable,const RequestInfo &Requestinfo) {
				return this->RR_HU_RCWEnable(HUset_RCWEnable,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_SEAMode(const HUset_SEAMode &HUset_SEAMode,const RequestInfo &Requestinfo) {
				return this->RR_HU_SEAMode<DEFAULT_TIMEOUT>(HUset_SEAMode,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_SEAMode(const HUset_SEAMode &HUset_SEAMode,const RequestInfo &Requestinfo) {
				return this->RR_HU_SEAMode(HUset_SEAMode,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_BSDLCASetting(const HUset_BSDLCASetting &HUset_BSDLCASetting,const RequestInfo &Requestinfo) {
				return this->RR_HU_BSDLCASetting<DEFAULT_TIMEOUT>(HUset_BSDLCASetting,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_BSDLCASetting(const HUset_BSDLCASetting &HUset_BSDLCASetting,const RequestInfo &Requestinfo) {
				return this->RR_HU_BSDLCASetting(HUset_BSDLCASetting,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_BSDLCARemindmode(const HUset_BSDLCARemindmode &HUset_BSDLCARemindmode,const RequestInfo &Requestinfo) {
				return this->RR_HU_BSDLCARemindmode<DEFAULT_TIMEOUT>(HUset_BSDLCARemindmode,Requestinfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_BSDLCARemindmode(const HUset_BSDLCARemindmode &HUset_BSDLCARemindmode,const RequestInfo &Requestinfo) {
				return this->RR_HU_BSDLCARemindmode(HUset_BSDLCARemindmode,Requestinfo, TIMEOUT);
			}
			Msg<ResponseInfo> RR_HU_IACCFamlrRdModSwt(const HUset_IACCFamlrRdModSwt &HUset_IACCFamlrRdModSwt,const RequestInfo &RequestInfo) {
				return this->RR_HU_IACCFamlrRdModSwt<DEFAULT_TIMEOUT>(HUset_IACCFamlrRdModSwt,RequestInfo);
			}
			template<size_t TIMEOUT>
			Msg<ResponseInfo> RR_HU_IACCFamlrRdModSwt(const HUset_IACCFamlrRdModSwt &HUset_IACCFamlrRdModSwt,const RequestInfo &RequestInfo) {
				return this->RR_HU_IACCFamlrRdModSwt(HUset_IACCFamlrRdModSwt,RequestInfo, TIMEOUT);
			}
			Msg<C2_IACCFamlrRdModSwtFbSet> Get_C2_IACCFamlrRdModSwtFb() {
				return this->Get_C2_IACCFamlrRdModSwtFb<DEFAULT_TIMEOUT>();
			}
			template<size_t TIMEOUT>
			Msg<C2_IACCFamlrRdModSwtFbSet> Get_C2_IACCFamlrRdModSwtFb() {
				return this->Get_C2_IACCFamlrRdModSwtFb( TIMEOUT);
			}
			Msg<AD_NIDSelfLrngFbset> Get_AD_NIDSelfLrngFb() {
				return this->Get_AD_NIDSelfLrngFb<DEFAULT_TIMEOUT>();
			}
			template<size_t TIMEOUT>
			Msg<AD_NIDSelfLrngFbset> Get_AD_NIDSelfLrngFb() {
				return this->Get_AD_NIDSelfLrngFb( TIMEOUT);
			}
			Msg<AD_NIDSelfLrngFbset> RR_EDC_NIDSelfLrngReq(const EDCset_NIDSelfLrngReq &EDCset_NIDSelfLrngReq,const RequestInfo &RequestInfo) {
				return this->RR_EDC_NIDSelfLrngReq<DEFAULT_TIMEOUT>(EDCset_NIDSelfLrngReq,RequestInfo);
			}
			template<size_t TIMEOUT>
			Msg<AD_NIDSelfLrngFbset> RR_EDC_NIDSelfLrngReq(const EDCset_NIDSelfLrngReq &EDCset_NIDSelfLrngReq,const RequestInfo &RequestInfo) {
				return this->RR_EDC_NIDSelfLrngReq(EDCset_NIDSelfLrngReq,RequestInfo, TIMEOUT);
			}
			Msg<AD_BSDLCAOnOffSet> Get_AD_BSDLCAOnOffSet() {
				return this->Get_AD_BSDLCAOnOffSet<DEFAULT_TIMEOUT>();
			}
			template<size_t TIMEOUT>
			Msg<AD_BSDLCAOnOffSet> Get_AD_BSDLCAOnOffSet() {
				return this->Get_AD_BSDLCAOnOffSet( TIMEOUT);
			}
			Msg<AD_BSDLCAOnOffSet> RR_HU_BSDLCAOnOff(const HUset_BSDLCAOnOff &HUset_BSDLCAOnOff,const RequestInfo &RequestInfo) {
				return this->RR_HU_BSDLCAOnOff<DEFAULT_TIMEOUT>(HUset_BSDLCAOnOff,RequestInfo);
			}
			template<size_t TIMEOUT>
			Msg<AD_BSDLCAOnOffSet> RR_HU_BSDLCAOnOff(const HUset_BSDLCAOnOff &HUset_BSDLCAOnOff,const RequestInfo &RequestInfo) {
				return this->RR_HU_BSDLCAOnOff(HUset_BSDLCAOnOff,RequestInfo, TIMEOUT);
			}
			Msg<AD_SEAOnOffStsSet> Get_AD_SEAOnOffSts() {
				return this->Get_AD_SEAOnOffSts<DEFAULT_TIMEOUT>();
			}
			template<size_t TIMEOUT>
			Msg<AD_SEAOnOffStsSet> Get_AD_SEAOnOffSts() {
				return this->Get_AD_SEAOnOffSts( TIMEOUT);
			}
			Msg<AD_SEAOnOffStsSet> RR_HU_SEAOnOff(const HUset_SEAOnOff &HUset_SEAOnOff,const RequestInfo &RequestInfo) {
				return this->RR_HU_SEAOnOff<DEFAULT_TIMEOUT>(HUset_SEAOnOff,RequestInfo);
			}
			template<size_t TIMEOUT>
			Msg<AD_SEAOnOffStsSet> RR_HU_SEAOnOff(const HUset_SEAOnOff &HUset_SEAOnOff,const RequestInfo &RequestInfo) {
				return this->RR_HU_SEAOnOff(HUset_SEAOnOff,RequestInfo, TIMEOUT);
			}
			const std::string get_service_name() {
				return this->service_name;
			}

		private:
		    const std::string service_name = "Basc_ADASCruiseSet_skeleton";
			Msg<ADASCruiseSet> Get_ADASCruiseSet( size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_CuriseMode(const HUset_CuriseMode &HUset_CuriseMode,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_IDAEnable(const HUset_IDAEnable &HUset_IDAEnable,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_LaneChangeFrequency(const HUset_LaneChangeFrequency &HUset_LaneChangeFrequency,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_UDLCEnable(const HUset_UDLCEnable &HUset_UDLCEnable,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_NIDAudioWarStyle(const HUset_NIDAudioWarStyle &HUset_NIDAudioWarStyle,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_CSLAEnable(const HUset_CSLAEnable &HUset_CSLAEnable,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_CSLmode(const HUset_CSLmode &HUset_CSLmode,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_OverspeedSoundWarEnable(const HUset_OverspeedSoundWarEnable &HUset_OverspeedSoundWarEnable,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_CSLWarnOffsetTp(const HUset_CSLWarnOffsetTp &HUset_CSLWarnOffsetTp,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_AbsOverSpdWarnOffset(const HUset_AbsOverSpdWarnOffset &HUset_AbsOverSpdWarnOffset,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_RelOverSpdWarnOffset(const HUset_RelOverSpdWarnOffset &HUset_RelOverSpdWarnOffset,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_AutoDriveStyle(const HUset_AutoDriveStyle &HUset_AutoDriveStyle,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_ADACCStyle(const HUset_ADACCStyle &HUset_ADACCStyle,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_ADStartStyle(const HUset_ADStartStyle &HUset_ADStartStyle,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_ADCurveStyle(const HUset_ADCurveStyle &HUset_ADCurveStyle,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_ADLanechangeStyle(const HUset_ADLanechangeStyle &HUset_ADLanechangeStyle,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_VehicleStartRemindEnable(const HUset_VehicleStartRemindEnable &HUset_VehicleStartRemindEnable,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_RCWEnable(const HUset_RCWEnable &HUset_RCWEnable,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_SEAMode(const HUset_SEAMode &HUset_SEAMode,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_BSDLCASetting(const HUset_BSDLCASetting &HUset_BSDLCASetting,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_BSDLCARemindmode(const HUset_BSDLCARemindmode &HUset_BSDLCARemindmode,const RequestInfo &Requestinfo, size_t dds_rpc_time_out);
			Msg<ResponseInfo> RR_HU_IACCFamlrRdModSwt(const HUset_IACCFamlrRdModSwt &HUset_IACCFamlrRdModSwt,const RequestInfo &RequestInfo, size_t dds_rpc_time_out);
			Msg<C2_IACCFamlrRdModSwtFbSet> Get_C2_IACCFamlrRdModSwtFb( size_t dds_rpc_time_out);
			Msg<AD_NIDSelfLrngFbset> Get_AD_NIDSelfLrngFb( size_t dds_rpc_time_out);
			Msg<AD_NIDSelfLrngFbset> RR_EDC_NIDSelfLrngReq(const EDCset_NIDSelfLrngReq &EDCset_NIDSelfLrngReq,const RequestInfo &RequestInfo, size_t dds_rpc_time_out);
			Msg<AD_BSDLCAOnOffSet> Get_AD_BSDLCAOnOffSet( size_t dds_rpc_time_out);
			Msg<AD_BSDLCAOnOffSet> RR_HU_BSDLCAOnOff(const HUset_BSDLCAOnOff &HUset_BSDLCAOnOff,const RequestInfo &RequestInfo, size_t dds_rpc_time_out);
			Msg<AD_SEAOnOffStsSet> Get_AD_SEAOnOffSts( size_t dds_rpc_time_out);
			Msg<AD_SEAOnOffStsSet> RR_HU_SEAOnOff(const HUset_SEAOnOff &HUset_SEAOnOff,const RequestInfo &RequestInfo, size_t dds_rpc_time_out);

			dds_rpc_handle_t dds_rpc_request_handle = {-1,-1,-1};
			dds_rpc_handle_t dds_rpc_reply_handle = { -1,-1,-1 };
            dds_rpc_handle_t dds_Ntf_ADASCruiseSet_handle = { -1,-1,-1 };
            dds_rpc_handle_t dds_Ntf_C2_IACCFamlrRdModSwtFb_handle = { -1,-1,-1 };
            dds_rpc_handle_t dds_Ntf_AD_NIDSelfLrngFb_handle = { -1,-1,-1 };
            dds_rpc_handle_t dds_Ntf_AD_BSDLCAOnOffSet_handle = { -1,-1,-1 };
            dds_rpc_handle_t dds_Ntf_AD_SEAOnOffSts_handle = { -1,-1,-1 };

            bool init_flag = false;
            std::mutex init_mutex;

			Basc_ADASCruiseSet_Proxy();
			~Basc_ADASCruiseSet_Proxy();

			Basc_ADASCruiseSet_Proxy(const Basc_ADASCruiseSet_Proxy& signal);

			const Basc_ADASCruiseSet_Proxy& operator=(const Basc_ADASCruiseSet_Proxy& signal);
	};
}
}
}
}
}
#endif

