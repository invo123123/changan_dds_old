/****************************************************************
  Generated by ChangAn Code Generator,Do Not Modify
  AppVersion： mADC_Application_Service-V1.5
  ServiceVersion: V2.3
  CmVersion： v2.0.3
  ServiceLatestModifyTime: 2023-11-06T17:24:34
  Generate Time: 2023-12-11 18:07:58
*****************************************************************/
#ifndef Basc_ExtrLiSwtReqInfo_SKELETON_HPP
#define Basc_ExtrLiSwtReqInfo_SKELETON_HPP
#include "changan/common_data_types.h"
#include "Common.h"
#include "changan/dds_util.h"
#include "changan/string_util.hpp"
#include "changan/base_skeleton.hpp"
#include "changan/base_wait.hpp"
#include <iostream>
#include <string.h>
#include "changan/Car_Control_fl_Skeleton.hpp"
#include "changan/Car_Control.h"
#include <mutex>
namespace com {
namespace changan {
namespace carControl {
namespace ExteriorLight {
namespace skeleton {
	namespace events {
		using CarControlFLSkeleton = com::changan::carControl::skeleton::CarControlFLSkeleton;
        class Basc_ExtrLiSwtReqInfo_Ntf_HdLampSwtReqInfo{
            private:
                dds_rpc_handle_t dds_Ntf_HdLampSwtReqInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiSwtReqInfo_skeleton_Ntf_HdLampSwtReqInfo";
			public:
			    Basc_ExtrLiSwtReqInfo_Ntf_HdLampSwtReqInfo() {
			    }
			    ~Basc_ExtrLiSwtReqInfo_Ntf_HdLampSwtReqInfo() {
                }
				void send(const carControl_Secure_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HdLampSwtReqInfo_uint8 &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HdLampSwtReqInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HdLampSwtReqInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HdLampSwtReqInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiSwtReqInfo_Ntf_TurnLiSwtReqInfo{
            private:
                dds_rpc_handle_t dds_Ntf_TurnLiSwtReqInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiSwtReqInfo_skeleton_Ntf_TurnLiSwtReqInfo";
			public:
			    Basc_ExtrLiSwtReqInfo_Ntf_TurnLiSwtReqInfo() {
			    }
			    ~Basc_ExtrLiSwtReqInfo_Ntf_TurnLiSwtReqInfo() {
                }
				void send(const carControl_Secure_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_TurnLiSwtReqInfo_TurnLiKeySwtSt &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_TurnLiSwtReqInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_TurnLiSwtReqInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_TurnLiSwtReqInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiSwtReqInfo_Ntf_HzrdSwtReqInfo{
            private:
                dds_rpc_handle_t dds_Ntf_HzrdSwtReqInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiSwtReqInfo_skeleton_Ntf_HzrdSwtReqInfo";
			public:
			    Basc_ExtrLiSwtReqInfo_Ntf_HzrdSwtReqInfo() {
			    }
			    ~Basc_ExtrLiSwtReqInfo_Ntf_HzrdSwtReqInfo() {
                }
				void send(const carControl_Secure_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HzrdSwtReqInfo_HzrdKeySwtSt &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HzrdSwtReqInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HzrdSwtReqInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HzrdSwtReqInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiSwtReqInfo_Ntf_HiBeamSwtReqInfo{
            private:
                dds_rpc_handle_t dds_Ntf_HiBeamSwtReqInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiSwtReqInfo_skeleton_Ntf_HiBeamSwtReqInfo";
			public:
			    Basc_ExtrLiSwtReqInfo_Ntf_HiBeamSwtReqInfo() {
			    }
			    ~Basc_ExtrLiSwtReqInfo_Ntf_HiBeamSwtReqInfo() {
                }
				void send(const carControl_Secure_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HiBeamSwtReqInfo_uint8 &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HiBeamSwtReqInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HiBeamSwtReqInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_HiBeamSwtReqInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_ExtrLiSwtReqInfo_Ntf_OvertakeSwtReqInfo{
            private:
                dds_rpc_handle_t dds_Ntf_OvertakeSwtReqInfo_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_ExtrLiSwtReqInfo_skeleton_Ntf_OvertakeSwtReqInfo";
			public:
			    Basc_ExtrLiSwtReqInfo_Ntf_OvertakeSwtReqInfo() {
			    }
			    ~Basc_ExtrLiSwtReqInfo_Ntf_OvertakeSwtReqInfo() {
                }
                void send(const uint8_t &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_OvertakeSwtReqInfo_Hash;
					ntf_message._u.Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_OvertakeSwtReqInfo = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlFLSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlFLSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_ExtrLiSwtReqInfo_Ntf_OvertakeSwtReqInfo_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
	}
	extern void on_carControl_Basc_ExtrLiSwtReqInfo_request_data_available(int32_t reader, void* arg);

	class Basc_ExtrLiSwtReqInfo_service_interface {
	public:
	    virtual ~Basc_ExtrLiSwtReqInfo_service_interface() = default;

		virtual uint8_t Get_HdLampSwtReqInfo() = 0;
		virtual TurnLiKeySwtSt Get_TurnLiSwtReqInfo() = 0;
		virtual HzrdKeySwtSt Get_HzrdSwtReqInfo() = 0;
		virtual uint8_t Get_HiBeamSwtReqInfo() = 0;
		virtual uint8_t Get_OvertakeSwtReqInfo() = 0;
	};
    class Basc_ExtrLiSwtReqInfo_Skeleton :public Basc_ExtrLiSwtReqInfo_service_interface, public IBaseWait,public IBaseSkeleton,public ConsumerMatchedStatusHandler{
		public:
			Basc_ExtrLiSwtReqInfo_Skeleton(Basc_ExtrLiSwtReqInfo_service_interface* service,std::string config="");
			bool init();
			void wait_client_online();
            const std::string get_service_name() {
				return this->service_name;
			}
			uint8_t Get_HdLampSwtReqInfo() {
				return this->_service->Get_HdLampSwtReqInfo();
			}
			TurnLiKeySwtSt Get_TurnLiSwtReqInfo() {
				return this->_service->Get_TurnLiSwtReqInfo();
			}
			HzrdKeySwtSt Get_HzrdSwtReqInfo() {
				return this->_service->Get_HzrdSwtReqInfo();
			}
			uint8_t Get_HiBeamSwtReqInfo() {
				return this->_service->Get_HiBeamSwtReqInfo();
			}
			uint8_t Get_OvertakeSwtReqInfo() {
				return this->_service->Get_OvertakeSwtReqInfo();
			}
            dds_return_t send_reply(carControl_Car_Control_Reply* reply);
            events::Basc_ExtrLiSwtReqInfo_Ntf_HdLampSwtReqInfo Ntf_HdLampSwtReqInfo;
            events::Basc_ExtrLiSwtReqInfo_Ntf_TurnLiSwtReqInfo Ntf_TurnLiSwtReqInfo;
            events::Basc_ExtrLiSwtReqInfo_Ntf_HzrdSwtReqInfo Ntf_HzrdSwtReqInfo;
            events::Basc_ExtrLiSwtReqInfo_Ntf_HiBeamSwtReqInfo Ntf_HiBeamSwtReqInfo;
            events::Basc_ExtrLiSwtReqInfo_Ntf_OvertakeSwtReqInfo Ntf_OvertakeSwtReqInfo;


		private:
		    std::string _config;
			const std::string service_name="Basc_ExtrLiSwtReqInfo_skeleton";
			Basc_ExtrLiSwtReqInfo_service_interface * _service;

			dds_rpc_handle_t dds_rpc_request_handle= { -1, -1, -1 };
			dds_rpc_handle_t dds_rpc_reply_handle= { -1, -1, -1 };
	};

}
}
}
}
}
#endif

