// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Basc_DCFileUpload.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Basc_5fDCFileUpload_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Basc_5fDCFileUpload_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Basc_5fDCFileUpload_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Basc_5fDCFileUpload_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Basc_5fDCFileUpload_2eproto;
namespace Soa {
class PB_Basc_DCFileUpload_Ntf_UploadFile_In;
struct PB_Basc_DCFileUpload_Ntf_UploadFile_InDefaultTypeInternal;
extern PB_Basc_DCFileUpload_Ntf_UploadFile_InDefaultTypeInternal _PB_Basc_DCFileUpload_Ntf_UploadFile_In_default_instance_;
class PB_Basc_DCFileUpload_Ntf_UploadFile_Out;
struct PB_Basc_DCFileUpload_Ntf_UploadFile_OutDefaultTypeInternal;
extern PB_Basc_DCFileUpload_Ntf_UploadFile_OutDefaultTypeInternal _PB_Basc_DCFileUpload_Ntf_UploadFile_Out_default_instance_;
}  // namespace Soa
PROTOBUF_NAMESPACE_OPEN
template<> ::Soa::PB_Basc_DCFileUpload_Ntf_UploadFile_In* Arena::CreateMaybeMessage<::Soa::PB_Basc_DCFileUpload_Ntf_UploadFile_In>(Arena*);
template<> ::Soa::PB_Basc_DCFileUpload_Ntf_UploadFile_Out* Arena::CreateMaybeMessage<::Soa::PB_Basc_DCFileUpload_Ntf_UploadFile_Out>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Soa {

// ===================================================================

class PB_Basc_DCFileUpload_Ntf_UploadFile_In final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In) */ {
 public:
  inline PB_Basc_DCFileUpload_Ntf_UploadFile_In() : PB_Basc_DCFileUpload_Ntf_UploadFile_In(nullptr) {}
  ~PB_Basc_DCFileUpload_Ntf_UploadFile_In() override;
  explicit constexpr PB_Basc_DCFileUpload_Ntf_UploadFile_In(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_DCFileUpload_Ntf_UploadFile_In(const PB_Basc_DCFileUpload_Ntf_UploadFile_In& from);
  PB_Basc_DCFileUpload_Ntf_UploadFile_In(PB_Basc_DCFileUpload_Ntf_UploadFile_In&& from) noexcept
    : PB_Basc_DCFileUpload_Ntf_UploadFile_In() {
    *this = ::std::move(from);
  }

  inline PB_Basc_DCFileUpload_Ntf_UploadFile_In& operator=(const PB_Basc_DCFileUpload_Ntf_UploadFile_In& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_DCFileUpload_Ntf_UploadFile_In& operator=(PB_Basc_DCFileUpload_Ntf_UploadFile_In&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_DCFileUpload_Ntf_UploadFile_In& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_DCFileUpload_Ntf_UploadFile_In* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_DCFileUpload_Ntf_UploadFile_In*>(
               &_PB_Basc_DCFileUpload_Ntf_UploadFile_In_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PB_Basc_DCFileUpload_Ntf_UploadFile_In& a, PB_Basc_DCFileUpload_Ntf_UploadFile_In& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_DCFileUpload_Ntf_UploadFile_In* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_DCFileUpload_Ntf_UploadFile_In* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_DCFileUpload_Ntf_UploadFile_In* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_DCFileUpload_Ntf_UploadFile_In>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_DCFileUpload_Ntf_UploadFile_In& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_DCFileUpload_Ntf_UploadFile_In& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_DCFileUpload_Ntf_UploadFile_In* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In";
  }
  protected:
  explicit PB_Basc_DCFileUpload_Ntf_UploadFile_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTaskIdFieldNumber = 1,
    kEventCodeFieldNumber = 2,
    kFilesFieldNumber = 3,
  };
  // bytes taskId = 1;
  void clear_taskid();
  const std::string& taskid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_taskid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_taskid();
  PROTOBUF_NODISCARD std::string* release_taskid();
  void set_allocated_taskid(std::string* taskid);
  private:
  const std::string& _internal_taskid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_taskid(const std::string& value);
  std::string* _internal_mutable_taskid();
  public:

  // bytes eventCode = 2;
  void clear_eventcode();
  const std::string& eventcode() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_eventcode(ArgT0&& arg0, ArgT... args);
  std::string* mutable_eventcode();
  PROTOBUF_NODISCARD std::string* release_eventcode();
  void set_allocated_eventcode(std::string* eventcode);
  private:
  const std::string& _internal_eventcode() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_eventcode(const std::string& value);
  std::string* _internal_mutable_eventcode();
  public:

  // bytes files = 3;
  void clear_files();
  const std::string& files() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_files(ArgT0&& arg0, ArgT... args);
  std::string* mutable_files();
  PROTOBUF_NODISCARD std::string* release_files();
  void set_allocated_files(std::string* files);
  private:
  const std::string& _internal_files() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_files(const std::string& value);
  std::string* _internal_mutable_files();
  public:

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr taskid_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr eventcode_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr files_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fDCFileUpload_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_DCFileUpload_Ntf_UploadFile_Out final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_Out) */ {
 public:
  inline PB_Basc_DCFileUpload_Ntf_UploadFile_Out() : PB_Basc_DCFileUpload_Ntf_UploadFile_Out(nullptr) {}
  ~PB_Basc_DCFileUpload_Ntf_UploadFile_Out() override;
  explicit constexpr PB_Basc_DCFileUpload_Ntf_UploadFile_Out(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_DCFileUpload_Ntf_UploadFile_Out(const PB_Basc_DCFileUpload_Ntf_UploadFile_Out& from);
  PB_Basc_DCFileUpload_Ntf_UploadFile_Out(PB_Basc_DCFileUpload_Ntf_UploadFile_Out&& from) noexcept
    : PB_Basc_DCFileUpload_Ntf_UploadFile_Out() {
    *this = ::std::move(from);
  }

  inline PB_Basc_DCFileUpload_Ntf_UploadFile_Out& operator=(const PB_Basc_DCFileUpload_Ntf_UploadFile_Out& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_DCFileUpload_Ntf_UploadFile_Out& operator=(PB_Basc_DCFileUpload_Ntf_UploadFile_Out&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_DCFileUpload_Ntf_UploadFile_Out& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_DCFileUpload_Ntf_UploadFile_Out* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_DCFileUpload_Ntf_UploadFile_Out*>(
               &_PB_Basc_DCFileUpload_Ntf_UploadFile_Out_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PB_Basc_DCFileUpload_Ntf_UploadFile_Out& a, PB_Basc_DCFileUpload_Ntf_UploadFile_Out& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_DCFileUpload_Ntf_UploadFile_Out* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_DCFileUpload_Ntf_UploadFile_Out* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_DCFileUpload_Ntf_UploadFile_Out* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_DCFileUpload_Ntf_UploadFile_Out>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_DCFileUpload_Ntf_UploadFile_Out& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_DCFileUpload_Ntf_UploadFile_Out& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_DCFileUpload_Ntf_UploadFile_Out* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_Out";
  }
  protected:
  explicit PB_Basc_DCFileUpload_Ntf_UploadFile_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnFieldNumber = 1,
  };
  // .Soa.PB_ReturnCode return_ = 1;
  bool has_return_() const;
  private:
  bool _internal_has_return_() const;
  public:
  void clear_return_();
  const ::Soa::PB_ReturnCode& return_() const;
  PROTOBUF_NODISCARD ::Soa::PB_ReturnCode* release_return_();
  ::Soa::PB_ReturnCode* mutable_return_();
  void set_allocated_return_(::Soa::PB_ReturnCode* return_);
  private:
  const ::Soa::PB_ReturnCode& _internal_return_() const;
  ::Soa::PB_ReturnCode* _internal_mutable_return_();
  public:
  void unsafe_arena_set_allocated_return_(
      ::Soa::PB_ReturnCode* return_);
  ::Soa::PB_ReturnCode* unsafe_arena_release_return_();

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_Out)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Soa::PB_ReturnCode* return__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fDCFileUpload_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PB_Basc_DCFileUpload_Ntf_UploadFile_In

// bytes taskId = 1;
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_In::clear_taskid() {
  taskid_.ClearToEmpty();
}
inline const std::string& PB_Basc_DCFileUpload_Ntf_UploadFile_In::taskid() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.taskId)
  return _internal_taskid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PB_Basc_DCFileUpload_Ntf_UploadFile_In::set_taskid(ArgT0&& arg0, ArgT... args) {
 
 taskid_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.taskId)
}
inline std::string* PB_Basc_DCFileUpload_Ntf_UploadFile_In::mutable_taskid() {
  std::string* _s = _internal_mutable_taskid();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.taskId)
  return _s;
}
inline const std::string& PB_Basc_DCFileUpload_Ntf_UploadFile_In::_internal_taskid() const {
  return taskid_.Get();
}
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_In::_internal_set_taskid(const std::string& value) {
  
  taskid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* PB_Basc_DCFileUpload_Ntf_UploadFile_In::_internal_mutable_taskid() {
  
  return taskid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* PB_Basc_DCFileUpload_Ntf_UploadFile_In::release_taskid() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.taskId)
  return taskid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_In::set_allocated_taskid(std::string* taskid) {
  if (taskid != nullptr) {
    
  } else {
    
  }
  taskid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), taskid,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (taskid_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    taskid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.taskId)
}

// bytes eventCode = 2;
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_In::clear_eventcode() {
  eventcode_.ClearToEmpty();
}
inline const std::string& PB_Basc_DCFileUpload_Ntf_UploadFile_In::eventcode() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.eventCode)
  return _internal_eventcode();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PB_Basc_DCFileUpload_Ntf_UploadFile_In::set_eventcode(ArgT0&& arg0, ArgT... args) {
 
 eventcode_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.eventCode)
}
inline std::string* PB_Basc_DCFileUpload_Ntf_UploadFile_In::mutable_eventcode() {
  std::string* _s = _internal_mutable_eventcode();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.eventCode)
  return _s;
}
inline const std::string& PB_Basc_DCFileUpload_Ntf_UploadFile_In::_internal_eventcode() const {
  return eventcode_.Get();
}
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_In::_internal_set_eventcode(const std::string& value) {
  
  eventcode_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* PB_Basc_DCFileUpload_Ntf_UploadFile_In::_internal_mutable_eventcode() {
  
  return eventcode_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* PB_Basc_DCFileUpload_Ntf_UploadFile_In::release_eventcode() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.eventCode)
  return eventcode_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_In::set_allocated_eventcode(std::string* eventcode) {
  if (eventcode != nullptr) {
    
  } else {
    
  }
  eventcode_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), eventcode,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (eventcode_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    eventcode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.eventCode)
}

// bytes files = 3;
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_In::clear_files() {
  files_.ClearToEmpty();
}
inline const std::string& PB_Basc_DCFileUpload_Ntf_UploadFile_In::files() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.files)
  return _internal_files();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PB_Basc_DCFileUpload_Ntf_UploadFile_In::set_files(ArgT0&& arg0, ArgT... args) {
 
 files_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.files)
}
inline std::string* PB_Basc_DCFileUpload_Ntf_UploadFile_In::mutable_files() {
  std::string* _s = _internal_mutable_files();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.files)
  return _s;
}
inline const std::string& PB_Basc_DCFileUpload_Ntf_UploadFile_In::_internal_files() const {
  return files_.Get();
}
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_In::_internal_set_files(const std::string& value) {
  
  files_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* PB_Basc_DCFileUpload_Ntf_UploadFile_In::_internal_mutable_files() {
  
  return files_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* PB_Basc_DCFileUpload_Ntf_UploadFile_In::release_files() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.files)
  return files_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_In::set_allocated_files(std::string* files) {
  if (files != nullptr) {
    
  } else {
    
  }
  files_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), files,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (files_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    files_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_In.files)
}

// -------------------------------------------------------------------

// PB_Basc_DCFileUpload_Ntf_UploadFile_Out

// .Soa.PB_ReturnCode return_ = 1;
inline bool PB_Basc_DCFileUpload_Ntf_UploadFile_Out::_internal_has_return_() const {
  return this != internal_default_instance() && return__ != nullptr;
}
inline bool PB_Basc_DCFileUpload_Ntf_UploadFile_Out::has_return_() const {
  return _internal_has_return_();
}
inline const ::Soa::PB_ReturnCode& PB_Basc_DCFileUpload_Ntf_UploadFile_Out::_internal_return_() const {
  const ::Soa::PB_ReturnCode* p = return__;
  return p != nullptr ? *p : reinterpret_cast<const ::Soa::PB_ReturnCode&>(
      ::Soa::_PB_ReturnCode_default_instance_);
}
inline const ::Soa::PB_ReturnCode& PB_Basc_DCFileUpload_Ntf_UploadFile_Out::return_() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_Out.return_)
  return _internal_return_();
}
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_Out::unsafe_arena_set_allocated_return_(
    ::Soa::PB_ReturnCode* return_) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return__);
  }
  return__ = return_;
  if (return_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_Out.return_)
}
inline ::Soa::PB_ReturnCode* PB_Basc_DCFileUpload_Ntf_UploadFile_Out::release_return_() {
  
  ::Soa::PB_ReturnCode* temp = return__;
  return__ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Soa::PB_ReturnCode* PB_Basc_DCFileUpload_Ntf_UploadFile_Out::unsafe_arena_release_return_() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_Out.return_)
  
  ::Soa::PB_ReturnCode* temp = return__;
  return__ = nullptr;
  return temp;
}
inline ::Soa::PB_ReturnCode* PB_Basc_DCFileUpload_Ntf_UploadFile_Out::_internal_mutable_return_() {
  
  if (return__ == nullptr) {
    auto* p = CreateMaybeMessage<::Soa::PB_ReturnCode>(GetArenaForAllocation());
    return__ = p;
  }
  return return__;
}
inline ::Soa::PB_ReturnCode* PB_Basc_DCFileUpload_Ntf_UploadFile_Out::mutable_return_() {
  ::Soa::PB_ReturnCode* _msg = _internal_mutable_return_();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_Out.return_)
  return _msg;
}
inline void PB_Basc_DCFileUpload_Ntf_UploadFile_Out::set_allocated_return_(::Soa::PB_ReturnCode* return_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(return__);
  }
  if (return_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(return_));
    if (message_arena != submessage_arena) {
      return_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, return_, submessage_arena);
    }
    
  } else {
    
  }
  return__ = return_;
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_DCFileUpload_Ntf_UploadFile_Out.return_)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Soa

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Basc_5fDCFileUpload_2eproto
