// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Basc_SDMap.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Basc_5fSDMap_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Basc_5fSDMap_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_bases.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Basc_5fSDMap_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Basc_5fSDMap_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Basc_5fSDMap_2eproto;
namespace Soa {
class PB_Basc_SDMap_Get_LNavResidualDis_In;
struct PB_Basc_SDMap_Get_LNavResidualDis_InDefaultTypeInternal;
extern PB_Basc_SDMap_Get_LNavResidualDis_InDefaultTypeInternal _PB_Basc_SDMap_Get_LNavResidualDis_In_default_instance_;
class PB_Basc_SDMap_Get_LNavResidualDis_Out;
struct PB_Basc_SDMap_Get_LNavResidualDis_OutDefaultTypeInternal;
extern PB_Basc_SDMap_Get_LNavResidualDis_OutDefaultTypeInternal _PB_Basc_SDMap_Get_LNavResidualDis_Out_default_instance_;
class PB_Basc_SDMap_Get_NaviStatus_In;
struct PB_Basc_SDMap_Get_NaviStatus_InDefaultTypeInternal;
extern PB_Basc_SDMap_Get_NaviStatus_InDefaultTypeInternal _PB_Basc_SDMap_Get_NaviStatus_In_default_instance_;
class PB_Basc_SDMap_Get_NaviStatus_Out;
struct PB_Basc_SDMap_Get_NaviStatus_OutDefaultTypeInternal;
extern PB_Basc_SDMap_Get_NaviStatus_OutDefaultTypeInternal _PB_Basc_SDMap_Get_NaviStatus_Out_default_instance_;
class PB_Basc_SDMap_RR_NaviToDestination_In;
struct PB_Basc_SDMap_RR_NaviToDestination_InDefaultTypeInternal;
extern PB_Basc_SDMap_RR_NaviToDestination_InDefaultTypeInternal _PB_Basc_SDMap_RR_NaviToDestination_In_default_instance_;
class PB_Basc_SDMap_RR_NaviToDestination_Out;
struct PB_Basc_SDMap_RR_NaviToDestination_OutDefaultTypeInternal;
extern PB_Basc_SDMap_RR_NaviToDestination_OutDefaultTypeInternal _PB_Basc_SDMap_RR_NaviToDestination_Out_default_instance_;
}  // namespace Soa
PROTOBUF_NAMESPACE_OPEN
template<> ::Soa::PB_Basc_SDMap_Get_LNavResidualDis_In* Arena::CreateMaybeMessage<::Soa::PB_Basc_SDMap_Get_LNavResidualDis_In>(Arena*);
template<> ::Soa::PB_Basc_SDMap_Get_LNavResidualDis_Out* Arena::CreateMaybeMessage<::Soa::PB_Basc_SDMap_Get_LNavResidualDis_Out>(Arena*);
template<> ::Soa::PB_Basc_SDMap_Get_NaviStatus_In* Arena::CreateMaybeMessage<::Soa::PB_Basc_SDMap_Get_NaviStatus_In>(Arena*);
template<> ::Soa::PB_Basc_SDMap_Get_NaviStatus_Out* Arena::CreateMaybeMessage<::Soa::PB_Basc_SDMap_Get_NaviStatus_Out>(Arena*);
template<> ::Soa::PB_Basc_SDMap_RR_NaviToDestination_In* Arena::CreateMaybeMessage<::Soa::PB_Basc_SDMap_RR_NaviToDestination_In>(Arena*);
template<> ::Soa::PB_Basc_SDMap_RR_NaviToDestination_Out* Arena::CreateMaybeMessage<::Soa::PB_Basc_SDMap_RR_NaviToDestination_Out>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Soa {

// ===================================================================

class PB_Basc_SDMap_Get_NaviStatus_In final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_SDMap_Get_NaviStatus_In) */ {
 public:
  inline PB_Basc_SDMap_Get_NaviStatus_In() : PB_Basc_SDMap_Get_NaviStatus_In(nullptr) {}
  explicit constexpr PB_Basc_SDMap_Get_NaviStatus_In(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_SDMap_Get_NaviStatus_In(const PB_Basc_SDMap_Get_NaviStatus_In& from);
  PB_Basc_SDMap_Get_NaviStatus_In(PB_Basc_SDMap_Get_NaviStatus_In&& from) noexcept
    : PB_Basc_SDMap_Get_NaviStatus_In() {
    *this = ::std::move(from);
  }

  inline PB_Basc_SDMap_Get_NaviStatus_In& operator=(const PB_Basc_SDMap_Get_NaviStatus_In& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_SDMap_Get_NaviStatus_In& operator=(PB_Basc_SDMap_Get_NaviStatus_In&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_SDMap_Get_NaviStatus_In& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_SDMap_Get_NaviStatus_In* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_SDMap_Get_NaviStatus_In*>(
               &_PB_Basc_SDMap_Get_NaviStatus_In_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PB_Basc_SDMap_Get_NaviStatus_In& a, PB_Basc_SDMap_Get_NaviStatus_In& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_SDMap_Get_NaviStatus_In* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_SDMap_Get_NaviStatus_In* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_SDMap_Get_NaviStatus_In* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_SDMap_Get_NaviStatus_In>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PB_Basc_SDMap_Get_NaviStatus_In& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PB_Basc_SDMap_Get_NaviStatus_In& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_SDMap_Get_NaviStatus_In";
  }
  protected:
  explicit PB_Basc_SDMap_Get_NaviStatus_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_SDMap_Get_NaviStatus_In)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fSDMap_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_SDMap_Get_LNavResidualDis_In final :
    public ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_SDMap_Get_LNavResidualDis_In) */ {
 public:
  inline PB_Basc_SDMap_Get_LNavResidualDis_In() : PB_Basc_SDMap_Get_LNavResidualDis_In(nullptr) {}
  explicit constexpr PB_Basc_SDMap_Get_LNavResidualDis_In(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_SDMap_Get_LNavResidualDis_In(const PB_Basc_SDMap_Get_LNavResidualDis_In& from);
  PB_Basc_SDMap_Get_LNavResidualDis_In(PB_Basc_SDMap_Get_LNavResidualDis_In&& from) noexcept
    : PB_Basc_SDMap_Get_LNavResidualDis_In() {
    *this = ::std::move(from);
  }

  inline PB_Basc_SDMap_Get_LNavResidualDis_In& operator=(const PB_Basc_SDMap_Get_LNavResidualDis_In& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_SDMap_Get_LNavResidualDis_In& operator=(PB_Basc_SDMap_Get_LNavResidualDis_In&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_SDMap_Get_LNavResidualDis_In& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_SDMap_Get_LNavResidualDis_In* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_SDMap_Get_LNavResidualDis_In*>(
               &_PB_Basc_SDMap_Get_LNavResidualDis_In_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PB_Basc_SDMap_Get_LNavResidualDis_In& a, PB_Basc_SDMap_Get_LNavResidualDis_In& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_SDMap_Get_LNavResidualDis_In* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_SDMap_Get_LNavResidualDis_In* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_SDMap_Get_LNavResidualDis_In* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_SDMap_Get_LNavResidualDis_In>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PB_Basc_SDMap_Get_LNavResidualDis_In& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl(this, from);
  }
  using ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PB_Basc_SDMap_Get_LNavResidualDis_In& from) {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl(this, from);
  }
  public:

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_SDMap_Get_LNavResidualDis_In";
  }
  protected:
  explicit PB_Basc_SDMap_Get_LNavResidualDis_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_SDMap_Get_LNavResidualDis_In)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fSDMap_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_SDMap_RR_NaviToDestination_In final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_SDMap_RR_NaviToDestination_In) */ {
 public:
  inline PB_Basc_SDMap_RR_NaviToDestination_In() : PB_Basc_SDMap_RR_NaviToDestination_In(nullptr) {}
  ~PB_Basc_SDMap_RR_NaviToDestination_In() override;
  explicit constexpr PB_Basc_SDMap_RR_NaviToDestination_In(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_SDMap_RR_NaviToDestination_In(const PB_Basc_SDMap_RR_NaviToDestination_In& from);
  PB_Basc_SDMap_RR_NaviToDestination_In(PB_Basc_SDMap_RR_NaviToDestination_In&& from) noexcept
    : PB_Basc_SDMap_RR_NaviToDestination_In() {
    *this = ::std::move(from);
  }

  inline PB_Basc_SDMap_RR_NaviToDestination_In& operator=(const PB_Basc_SDMap_RR_NaviToDestination_In& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_SDMap_RR_NaviToDestination_In& operator=(PB_Basc_SDMap_RR_NaviToDestination_In&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_SDMap_RR_NaviToDestination_In& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_SDMap_RR_NaviToDestination_In* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_SDMap_RR_NaviToDestination_In*>(
               &_PB_Basc_SDMap_RR_NaviToDestination_In_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PB_Basc_SDMap_RR_NaviToDestination_In& a, PB_Basc_SDMap_RR_NaviToDestination_In& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_SDMap_RR_NaviToDestination_In* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_SDMap_RR_NaviToDestination_In* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_SDMap_RR_NaviToDestination_In* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_SDMap_RR_NaviToDestination_In>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_SDMap_RR_NaviToDestination_In& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_SDMap_RR_NaviToDestination_In& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_SDMap_RR_NaviToDestination_In* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_SDMap_RR_NaviToDestination_In";
  }
  protected:
  explicit PB_Basc_SDMap_RR_NaviToDestination_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDestinationFieldNumber = 1,
  };
  // .Soa.PB_Destination destination = 1;
  bool has_destination() const;
  private:
  bool _internal_has_destination() const;
  public:
  void clear_destination();
  const ::Soa::PB_Destination& destination() const;
  PROTOBUF_NODISCARD ::Soa::PB_Destination* release_destination();
  ::Soa::PB_Destination* mutable_destination();
  void set_allocated_destination(::Soa::PB_Destination* destination);
  private:
  const ::Soa::PB_Destination& _internal_destination() const;
  ::Soa::PB_Destination* _internal_mutable_destination();
  public:
  void unsafe_arena_set_allocated_destination(
      ::Soa::PB_Destination* destination);
  ::Soa::PB_Destination* unsafe_arena_release_destination();

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_SDMap_RR_NaviToDestination_In)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Soa::PB_Destination* destination_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fSDMap_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_SDMap_Get_NaviStatus_Out final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_SDMap_Get_NaviStatus_Out) */ {
 public:
  inline PB_Basc_SDMap_Get_NaviStatus_Out() : PB_Basc_SDMap_Get_NaviStatus_Out(nullptr) {}
  ~PB_Basc_SDMap_Get_NaviStatus_Out() override;
  explicit constexpr PB_Basc_SDMap_Get_NaviStatus_Out(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_SDMap_Get_NaviStatus_Out(const PB_Basc_SDMap_Get_NaviStatus_Out& from);
  PB_Basc_SDMap_Get_NaviStatus_Out(PB_Basc_SDMap_Get_NaviStatus_Out&& from) noexcept
    : PB_Basc_SDMap_Get_NaviStatus_Out() {
    *this = ::std::move(from);
  }

  inline PB_Basc_SDMap_Get_NaviStatus_Out& operator=(const PB_Basc_SDMap_Get_NaviStatus_Out& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_SDMap_Get_NaviStatus_Out& operator=(PB_Basc_SDMap_Get_NaviStatus_Out&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_SDMap_Get_NaviStatus_Out& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_SDMap_Get_NaviStatus_Out* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_SDMap_Get_NaviStatus_Out*>(
               &_PB_Basc_SDMap_Get_NaviStatus_Out_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PB_Basc_SDMap_Get_NaviStatus_Out& a, PB_Basc_SDMap_Get_NaviStatus_Out& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_SDMap_Get_NaviStatus_Out* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_SDMap_Get_NaviStatus_Out* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_SDMap_Get_NaviStatus_Out* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_SDMap_Get_NaviStatus_Out>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_SDMap_Get_NaviStatus_Out& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_SDMap_Get_NaviStatus_Out& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_SDMap_Get_NaviStatus_Out* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_SDMap_Get_NaviStatus_Out";
  }
  protected:
  explicit PB_Basc_SDMap_Get_NaviStatus_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnFieldNumber = 1,
  };
  // int32 return_ = 1;
  void clear_return_();
  int32_t return_() const;
  void set_return_(int32_t value);
  private:
  int32_t _internal_return_() const;
  void _internal_set_return_(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_SDMap_Get_NaviStatus_Out)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t return__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fSDMap_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_SDMap_Get_LNavResidualDis_Out final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_SDMap_Get_LNavResidualDis_Out) */ {
 public:
  inline PB_Basc_SDMap_Get_LNavResidualDis_Out() : PB_Basc_SDMap_Get_LNavResidualDis_Out(nullptr) {}
  ~PB_Basc_SDMap_Get_LNavResidualDis_Out() override;
  explicit constexpr PB_Basc_SDMap_Get_LNavResidualDis_Out(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_SDMap_Get_LNavResidualDis_Out(const PB_Basc_SDMap_Get_LNavResidualDis_Out& from);
  PB_Basc_SDMap_Get_LNavResidualDis_Out(PB_Basc_SDMap_Get_LNavResidualDis_Out&& from) noexcept
    : PB_Basc_SDMap_Get_LNavResidualDis_Out() {
    *this = ::std::move(from);
  }

  inline PB_Basc_SDMap_Get_LNavResidualDis_Out& operator=(const PB_Basc_SDMap_Get_LNavResidualDis_Out& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_SDMap_Get_LNavResidualDis_Out& operator=(PB_Basc_SDMap_Get_LNavResidualDis_Out&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_SDMap_Get_LNavResidualDis_Out& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_SDMap_Get_LNavResidualDis_Out* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_SDMap_Get_LNavResidualDis_Out*>(
               &_PB_Basc_SDMap_Get_LNavResidualDis_Out_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PB_Basc_SDMap_Get_LNavResidualDis_Out& a, PB_Basc_SDMap_Get_LNavResidualDis_Out& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_SDMap_Get_LNavResidualDis_Out* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_SDMap_Get_LNavResidualDis_Out* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_SDMap_Get_LNavResidualDis_Out* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_SDMap_Get_LNavResidualDis_Out>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_SDMap_Get_LNavResidualDis_Out& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_SDMap_Get_LNavResidualDis_Out& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_SDMap_Get_LNavResidualDis_Out* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_SDMap_Get_LNavResidualDis_Out";
  }
  protected:
  explicit PB_Basc_SDMap_Get_LNavResidualDis_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnFieldNumber = 1,
  };
  // uint64 return_ = 1;
  void clear_return_();
  uint64_t return_() const;
  void set_return_(uint64_t value);
  private:
  uint64_t _internal_return_() const;
  void _internal_set_return_(uint64_t value);
  public:

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_SDMap_Get_LNavResidualDis_Out)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint64_t return__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fSDMap_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_SDMap_RR_NaviToDestination_Out final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_SDMap_RR_NaviToDestination_Out) */ {
 public:
  inline PB_Basc_SDMap_RR_NaviToDestination_Out() : PB_Basc_SDMap_RR_NaviToDestination_Out(nullptr) {}
  ~PB_Basc_SDMap_RR_NaviToDestination_Out() override;
  explicit constexpr PB_Basc_SDMap_RR_NaviToDestination_Out(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_SDMap_RR_NaviToDestination_Out(const PB_Basc_SDMap_RR_NaviToDestination_Out& from);
  PB_Basc_SDMap_RR_NaviToDestination_Out(PB_Basc_SDMap_RR_NaviToDestination_Out&& from) noexcept
    : PB_Basc_SDMap_RR_NaviToDestination_Out() {
    *this = ::std::move(from);
  }

  inline PB_Basc_SDMap_RR_NaviToDestination_Out& operator=(const PB_Basc_SDMap_RR_NaviToDestination_Out& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_SDMap_RR_NaviToDestination_Out& operator=(PB_Basc_SDMap_RR_NaviToDestination_Out&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_SDMap_RR_NaviToDestination_Out& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_SDMap_RR_NaviToDestination_Out* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_SDMap_RR_NaviToDestination_Out*>(
               &_PB_Basc_SDMap_RR_NaviToDestination_Out_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(PB_Basc_SDMap_RR_NaviToDestination_Out& a, PB_Basc_SDMap_RR_NaviToDestination_Out& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_SDMap_RR_NaviToDestination_Out* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_SDMap_RR_NaviToDestination_Out* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_SDMap_RR_NaviToDestination_Out* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_SDMap_RR_NaviToDestination_Out>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_SDMap_RR_NaviToDestination_Out& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_SDMap_RR_NaviToDestination_Out& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_SDMap_RR_NaviToDestination_Out* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_SDMap_RR_NaviToDestination_Out";
  }
  protected:
  explicit PB_Basc_SDMap_RR_NaviToDestination_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnFieldNumber = 1,
  };
  // int32 return_ = 1;
  void clear_return_();
  int32_t return_() const;
  void set_return_(int32_t value);
  private:
  int32_t _internal_return_() const;
  void _internal_set_return_(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_SDMap_RR_NaviToDestination_Out)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t return__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fSDMap_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PB_Basc_SDMap_Get_NaviStatus_In

// -------------------------------------------------------------------

// PB_Basc_SDMap_Get_LNavResidualDis_In

// -------------------------------------------------------------------

// PB_Basc_SDMap_RR_NaviToDestination_In

// .Soa.PB_Destination destination = 1;
inline bool PB_Basc_SDMap_RR_NaviToDestination_In::_internal_has_destination() const {
  return this != internal_default_instance() && destination_ != nullptr;
}
inline bool PB_Basc_SDMap_RR_NaviToDestination_In::has_destination() const {
  return _internal_has_destination();
}
inline const ::Soa::PB_Destination& PB_Basc_SDMap_RR_NaviToDestination_In::_internal_destination() const {
  const ::Soa::PB_Destination* p = destination_;
  return p != nullptr ? *p : reinterpret_cast<const ::Soa::PB_Destination&>(
      ::Soa::_PB_Destination_default_instance_);
}
inline const ::Soa::PB_Destination& PB_Basc_SDMap_RR_NaviToDestination_In::destination() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_SDMap_RR_NaviToDestination_In.destination)
  return _internal_destination();
}
inline void PB_Basc_SDMap_RR_NaviToDestination_In::unsafe_arena_set_allocated_destination(
    ::Soa::PB_Destination* destination) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(destination_);
  }
  destination_ = destination;
  if (destination) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Soa.PB_Basc_SDMap_RR_NaviToDestination_In.destination)
}
inline ::Soa::PB_Destination* PB_Basc_SDMap_RR_NaviToDestination_In::release_destination() {
  
  ::Soa::PB_Destination* temp = destination_;
  destination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::Soa::PB_Destination* PB_Basc_SDMap_RR_NaviToDestination_In::unsafe_arena_release_destination() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_SDMap_RR_NaviToDestination_In.destination)
  
  ::Soa::PB_Destination* temp = destination_;
  destination_ = nullptr;
  return temp;
}
inline ::Soa::PB_Destination* PB_Basc_SDMap_RR_NaviToDestination_In::_internal_mutable_destination() {
  
  if (destination_ == nullptr) {
    auto* p = CreateMaybeMessage<::Soa::PB_Destination>(GetArenaForAllocation());
    destination_ = p;
  }
  return destination_;
}
inline ::Soa::PB_Destination* PB_Basc_SDMap_RR_NaviToDestination_In::mutable_destination() {
  ::Soa::PB_Destination* _msg = _internal_mutable_destination();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_SDMap_RR_NaviToDestination_In.destination)
  return _msg;
}
inline void PB_Basc_SDMap_RR_NaviToDestination_In::set_allocated_destination(::Soa::PB_Destination* destination) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(destination_);
  }
  if (destination) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<
            ::PROTOBUF_NAMESPACE_ID::MessageLite>::GetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(destination));
    if (message_arena != submessage_arena) {
      destination = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, destination, submessage_arena);
    }
    
  } else {
    
  }
  destination_ = destination;
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_SDMap_RR_NaviToDestination_In.destination)
}

// -------------------------------------------------------------------

// PB_Basc_SDMap_Get_NaviStatus_Out

// int32 return_ = 1;
inline void PB_Basc_SDMap_Get_NaviStatus_Out::clear_return_() {
  return__ = 0;
}
inline int32_t PB_Basc_SDMap_Get_NaviStatus_Out::_internal_return_() const {
  return return__;
}
inline int32_t PB_Basc_SDMap_Get_NaviStatus_Out::return_() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_SDMap_Get_NaviStatus_Out.return_)
  return _internal_return_();
}
inline void PB_Basc_SDMap_Get_NaviStatus_Out::_internal_set_return_(int32_t value) {
  
  return__ = value;
}
inline void PB_Basc_SDMap_Get_NaviStatus_Out::set_return_(int32_t value) {
  _internal_set_return_(value);
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_SDMap_Get_NaviStatus_Out.return_)
}

// -------------------------------------------------------------------

// PB_Basc_SDMap_Get_LNavResidualDis_Out

// uint64 return_ = 1;
inline void PB_Basc_SDMap_Get_LNavResidualDis_Out::clear_return_() {
  return__ = uint64_t{0u};
}
inline uint64_t PB_Basc_SDMap_Get_LNavResidualDis_Out::_internal_return_() const {
  return return__;
}
inline uint64_t PB_Basc_SDMap_Get_LNavResidualDis_Out::return_() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_SDMap_Get_LNavResidualDis_Out.return_)
  return _internal_return_();
}
inline void PB_Basc_SDMap_Get_LNavResidualDis_Out::_internal_set_return_(uint64_t value) {
  
  return__ = value;
}
inline void PB_Basc_SDMap_Get_LNavResidualDis_Out::set_return_(uint64_t value) {
  _internal_set_return_(value);
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_SDMap_Get_LNavResidualDis_Out.return_)
}

// -------------------------------------------------------------------

// PB_Basc_SDMap_RR_NaviToDestination_Out

// int32 return_ = 1;
inline void PB_Basc_SDMap_RR_NaviToDestination_Out::clear_return_() {
  return__ = 0;
}
inline int32_t PB_Basc_SDMap_RR_NaviToDestination_Out::_internal_return_() const {
  return return__;
}
inline int32_t PB_Basc_SDMap_RR_NaviToDestination_Out::return_() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_SDMap_RR_NaviToDestination_Out.return_)
  return _internal_return_();
}
inline void PB_Basc_SDMap_RR_NaviToDestination_Out::_internal_set_return_(int32_t value) {
  
  return__ = value;
}
inline void PB_Basc_SDMap_RR_NaviToDestination_Out::set_return_(int32_t value) {
  _internal_set_return_(value);
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_SDMap_RR_NaviToDestination_Out.return_)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Soa

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Basc_5fSDMap_2eproto
