/****************************************************************
  Generated by ChangAn Code Generator,Do Not Modify
  AppVersion： mADC_Application_Service-V1.5
  ServiceVersion: V1.6
  CmVersion： v2.0.3
  ServiceLatestModifyTime: 2023-08-31T19:28:30
  Generate Time: 2023-12-11 18:07:58
*****************************************************************/
#ifndef Basc_TailGateSts_SKELETON_HPP
#define Basc_TailGateSts_SKELETON_HPP
#include "changan/common_data_types.h"
#include "Common.h"
#include "changan/dds_util.h"
#include "changan/string_util.hpp"
#include "changan/base_skeleton.hpp"
#include "changan/base_wait.hpp"
#include <iostream>
#include <string.h>
#include "changan/Car_Control_r_Skeleton.hpp"
#include "changan/Car_Control.h"
#include <mutex>
namespace com {
namespace changan {
namespace carControl {
namespace Tailgate {
namespace skeleton {
	namespace events {
		using CarControlRSkeleton = com::changan::carControl::skeleton::CarControlRSkeleton;
        class Basc_TailGateSts_Ntf_LockSt{
            private:
                dds_rpc_handle_t dds_Ntf_LockSt_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_TailGateSts_skeleton_Ntf_LockSt";
			public:
			    Basc_TailGateSts_Ntf_LockSt() {
			    }
			    ~Basc_TailGateSts_Ntf_LockSt() {
                }
                void send(const uint8_t &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_TailGateSts_Ntf_LockSt_Hash;
					ntf_message._u.Car_Control_Basc_TailGateSts_Ntf_LockSt = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlRSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlRSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_TailGateSts_Ntf_LockSt_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_TailGateSts_Ntf_TailGateSysSt{
            private:
                dds_rpc_handle_t dds_Ntf_TailGateSysSt_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_TailGateSts_skeleton_Ntf_TailGateSysSt";
			public:
			    Basc_TailGateSts_Ntf_TailGateSysSt() {
			    }
			    ~Basc_TailGateSts_Ntf_TailGateSysSt() {
                }
                void send(const uint8_t &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_TailGateSts_Ntf_TailGateSysSt_Hash;
					ntf_message._u.Car_Control_Basc_TailGateSts_Ntf_TailGateSysSt = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlRSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlRSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_TailGateSts_Ntf_TailGateSysSt_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_TailGateSts_Ntf_MotCurPosVIT{
            private:
                dds_rpc_handle_t dds_Ntf_MotCurPosVIT_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_TailGateSts_skeleton_Ntf_MotCurPosVIT";
			public:
			    Basc_TailGateSts_Ntf_MotCurPosVIT() {
			    }
			    ~Basc_TailGateSts_Ntf_MotCurPosVIT() {
                }
                void send(const uint8_t &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_TailGateSts_Ntf_MotCurPosVIT_Hash;
					ntf_message._u.Car_Control_Basc_TailGateSts_Ntf_MotCurPosVIT = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlRSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlRSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_TailGateSts_Ntf_MotCurPosVIT_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_TailGateSts_Ntf_TailGateWinSt{
            private:
                dds_rpc_handle_t dds_Ntf_TailGateWinSt_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_TailGateSts_skeleton_Ntf_TailGateWinSt";
			public:
			    Basc_TailGateSts_Ntf_TailGateWinSt() {
			    }
			    ~Basc_TailGateSts_Ntf_TailGateWinSt() {
                }
                void send(const uint8_t &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_TailGateSts_Ntf_TailGateWinSt_Hash;
					ntf_message._u.Car_Control_Basc_TailGateSts_Ntf_TailGateWinSt = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlRSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlRSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_TailGateSts_Ntf_TailGateWinSt_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_TailGateSts_Ntf_WinCurPosVIT{
            private:
                dds_rpc_handle_t dds_Ntf_WinCurPosVIT_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_TailGateSts_skeleton_Ntf_WinCurPosVIT";
			public:
			    Basc_TailGateSts_Ntf_WinCurPosVIT() {
			    }
			    ~Basc_TailGateSts_Ntf_WinCurPosVIT() {
                }
                void send(const uint8_t &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_TailGateSts_Ntf_WinCurPosVIT_Hash;
					ntf_message._u.Car_Control_Basc_TailGateSts_Ntf_WinCurPosVIT = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlRSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlRSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_TailGateSts_Ntf_WinCurPosVIT_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_TailGateSts_Ntf_TailGateSysSwSt{
            private:
                dds_rpc_handle_t dds_Ntf_TailGateSysSwSt_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_TailGateSts_skeleton_Ntf_TailGateSysSwSt";
			public:
			    Basc_TailGateSts_Ntf_TailGateSysSwSt() {
			    }
			    ~Basc_TailGateSts_Ntf_TailGateSysSwSt() {
                }
                void send(const TailGateSysSwSt_Struct &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_TailGateSts_Ntf_TailGateSysSwSt_Hash;
					ntf_message._u.Car_Control_Basc_TailGateSts_Ntf_TailGateSysSwSt = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlRSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlRSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_TailGateSts_Ntf_TailGateSysSwSt_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
        class Basc_TailGateSts_Ntf_TailGateSysSwFltSt{
            private:
                dds_rpc_handle_t dds_Ntf_TailGateSysSwFltSt_event_handle = { -1, -1, -1 };
                std::string _topic_name = "Basc_TailGateSts_skeleton_Ntf_TailGateSysSwFltSt";
			public:
			    Basc_TailGateSts_Ntf_TailGateSysSwFltSt() {
			    }
			    ~Basc_TailGateSts_Ntf_TailGateSysSwFltSt() {
                }
                void send(const TailGateSysSwFltSt_Struct &data){
                    carControl_Car_Control_Ntf * notify = carControl_Car_Control_Ntf__alloc();
					carControl_Car_Control_Ntf_Message  ntf_message;
					ntf_message._d = carControl_Car_Control_Basc_TailGateSts_Ntf_TailGateSysSwFltSt_Hash;
					ntf_message._u.Car_Control_Basc_TailGateSts_Ntf_TailGateSysSwFltSt = data;
					notify->data = ntf_message;
					dds_return_t rc = CarControlRSkeleton::get_instance().send(notify);
					ASF_LOG_DEBUG_ARGS("CarControlRSkeleton::send, hashId=[%d], rc=[%d]", carControl_Car_Control_Basc_TailGateSts_Ntf_TailGateSysSwFltSt_Hash, rc);
					carControl_Car_Control_Ntf_free(notify, DDS_FREE_ALL);
				}
        };
	}
	extern void on_carControl_Basc_TailGateSts_request_data_available(int32_t reader, void* arg);

	class Basc_TailGateSts_service_interface {
	public:
	    virtual ~Basc_TailGateSts_service_interface() = default;

		virtual uint8_t Get_LockSt() = 0;
		virtual uint8_t Get_TailGateSysSt() = 0;
		virtual uint8_t Get_MotCurPosVIT() = 0;
		virtual uint8_t Get_TailGateWinSt() = 0;
		virtual uint8_t Get_WinCurPosVIT() = 0;
	};
    class Basc_TailGateSts_Skeleton :public Basc_TailGateSts_service_interface, public IBaseWait,public IBaseSkeleton,public ConsumerMatchedStatusHandler{
		public:
			Basc_TailGateSts_Skeleton(Basc_TailGateSts_service_interface* service,std::string config="");
			bool init();
			void wait_client_online();
            const std::string get_service_name() {
				return this->service_name;
			}
			uint8_t Get_LockSt() {
				return this->_service->Get_LockSt();
			}
			uint8_t Get_TailGateSysSt() {
				return this->_service->Get_TailGateSysSt();
			}
			uint8_t Get_MotCurPosVIT() {
				return this->_service->Get_MotCurPosVIT();
			}
			uint8_t Get_TailGateWinSt() {
				return this->_service->Get_TailGateWinSt();
			}
			uint8_t Get_WinCurPosVIT() {
				return this->_service->Get_WinCurPosVIT();
			}
            dds_return_t send_reply(carControl_Car_Control_Reply* reply);
            events::Basc_TailGateSts_Ntf_LockSt Ntf_LockSt;
            events::Basc_TailGateSts_Ntf_TailGateSysSt Ntf_TailGateSysSt;
            events::Basc_TailGateSts_Ntf_MotCurPosVIT Ntf_MotCurPosVIT;
            events::Basc_TailGateSts_Ntf_TailGateWinSt Ntf_TailGateWinSt;
            events::Basc_TailGateSts_Ntf_WinCurPosVIT Ntf_WinCurPosVIT;
            events::Basc_TailGateSts_Ntf_TailGateSysSwSt Ntf_TailGateSysSwSt;
            events::Basc_TailGateSts_Ntf_TailGateSysSwFltSt Ntf_TailGateSysSwFltSt;


		private:
		    std::string _config;
			const std::string service_name="Basc_TailGateSts_skeleton";
			Basc_TailGateSts_service_interface * _service;

			dds_rpc_handle_t dds_rpc_request_handle= { -1, -1, -1 };
			dds_rpc_handle_t dds_rpc_reply_handle= { -1, -1, -1 };
	};

}
}
}
}
}
#endif

