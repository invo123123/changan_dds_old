// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Basc_RemoteMove.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Basc_5fRemoteMove_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Basc_5fRemoteMove_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Basc_5fRemoteMove_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Basc_5fRemoteMove_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Basc_5fRemoteMove_2eproto;
namespace Soa {
class PB_Basc_RemoteMove_RR_FunSwitch_In;
struct PB_Basc_RemoteMove_RR_FunSwitch_InDefaultTypeInternal;
extern PB_Basc_RemoteMove_RR_FunSwitch_InDefaultTypeInternal _PB_Basc_RemoteMove_RR_FunSwitch_In_default_instance_;
class PB_Basc_RemoteMove_RR_FunSwitch_Out;
struct PB_Basc_RemoteMove_RR_FunSwitch_OutDefaultTypeInternal;
extern PB_Basc_RemoteMove_RR_FunSwitch_OutDefaultTypeInternal _PB_Basc_RemoteMove_RR_FunSwitch_Out_default_instance_;
class PB_Basc_RemoteMove_RR_ScreenCoordinate_In;
struct PB_Basc_RemoteMove_RR_ScreenCoordinate_InDefaultTypeInternal;
extern PB_Basc_RemoteMove_RR_ScreenCoordinate_InDefaultTypeInternal _PB_Basc_RemoteMove_RR_ScreenCoordinate_In_default_instance_;
class PB_Basc_RemoteMove_RR_ScreenCoordinate_Out;
struct PB_Basc_RemoteMove_RR_ScreenCoordinate_OutDefaultTypeInternal;
extern PB_Basc_RemoteMove_RR_ScreenCoordinate_OutDefaultTypeInternal _PB_Basc_RemoteMove_RR_ScreenCoordinate_Out_default_instance_;
}  // namespace Soa
PROTOBUF_NAMESPACE_OPEN
template<> ::Soa::PB_Basc_RemoteMove_RR_FunSwitch_In* Arena::CreateMaybeMessage<::Soa::PB_Basc_RemoteMove_RR_FunSwitch_In>(Arena*);
template<> ::Soa::PB_Basc_RemoteMove_RR_FunSwitch_Out* Arena::CreateMaybeMessage<::Soa::PB_Basc_RemoteMove_RR_FunSwitch_Out>(Arena*);
template<> ::Soa::PB_Basc_RemoteMove_RR_ScreenCoordinate_In* Arena::CreateMaybeMessage<::Soa::PB_Basc_RemoteMove_RR_ScreenCoordinate_In>(Arena*);
template<> ::Soa::PB_Basc_RemoteMove_RR_ScreenCoordinate_Out* Arena::CreateMaybeMessage<::Soa::PB_Basc_RemoteMove_RR_ScreenCoordinate_Out>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Soa {

// ===================================================================

class PB_Basc_RemoteMove_RR_ScreenCoordinate_In final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_In) */ {
 public:
  inline PB_Basc_RemoteMove_RR_ScreenCoordinate_In() : PB_Basc_RemoteMove_RR_ScreenCoordinate_In(nullptr) {}
  ~PB_Basc_RemoteMove_RR_ScreenCoordinate_In() override;
  explicit constexpr PB_Basc_RemoteMove_RR_ScreenCoordinate_In(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_RemoteMove_RR_ScreenCoordinate_In(const PB_Basc_RemoteMove_RR_ScreenCoordinate_In& from);
  PB_Basc_RemoteMove_RR_ScreenCoordinate_In(PB_Basc_RemoteMove_RR_ScreenCoordinate_In&& from) noexcept
    : PB_Basc_RemoteMove_RR_ScreenCoordinate_In() {
    *this = ::std::move(from);
  }

  inline PB_Basc_RemoteMove_RR_ScreenCoordinate_In& operator=(const PB_Basc_RemoteMove_RR_ScreenCoordinate_In& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_RemoteMove_RR_ScreenCoordinate_In& operator=(PB_Basc_RemoteMove_RR_ScreenCoordinate_In&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_RemoteMove_RR_ScreenCoordinate_In& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_RemoteMove_RR_ScreenCoordinate_In* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_RemoteMove_RR_ScreenCoordinate_In*>(
               &_PB_Basc_RemoteMove_RR_ScreenCoordinate_In_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PB_Basc_RemoteMove_RR_ScreenCoordinate_In& a, PB_Basc_RemoteMove_RR_ScreenCoordinate_In& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_RemoteMove_RR_ScreenCoordinate_In* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_RemoteMove_RR_ScreenCoordinate_In* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_RemoteMove_RR_ScreenCoordinate_In* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_RemoteMove_RR_ScreenCoordinate_In>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_RemoteMove_RR_ScreenCoordinate_In& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_RemoteMove_RR_ScreenCoordinate_In& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_RemoteMove_RR_ScreenCoordinate_In* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_In";
  }
  protected:
  explicit PB_Basc_RemoteMove_RR_ScreenCoordinate_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXappFieldNumber = 1,
    kYappFieldNumber = 2,
  };
  // uint32 Xapp = 1;
  void clear_xapp();
  uint32_t xapp() const;
  void set_xapp(uint32_t value);
  private:
  uint32_t _internal_xapp() const;
  void _internal_set_xapp(uint32_t value);
  public:

  // uint32 Yapp = 2;
  void clear_yapp();
  uint32_t yapp() const;
  void set_yapp(uint32_t value);
  private:
  uint32_t _internal_yapp() const;
  void _internal_set_yapp(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_In)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t xapp_;
  uint32_t yapp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fRemoteMove_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_RemoteMove_RR_FunSwitch_In final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_RemoteMove_RR_FunSwitch_In) */ {
 public:
  inline PB_Basc_RemoteMove_RR_FunSwitch_In() : PB_Basc_RemoteMove_RR_FunSwitch_In(nullptr) {}
  ~PB_Basc_RemoteMove_RR_FunSwitch_In() override;
  explicit constexpr PB_Basc_RemoteMove_RR_FunSwitch_In(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_RemoteMove_RR_FunSwitch_In(const PB_Basc_RemoteMove_RR_FunSwitch_In& from);
  PB_Basc_RemoteMove_RR_FunSwitch_In(PB_Basc_RemoteMove_RR_FunSwitch_In&& from) noexcept
    : PB_Basc_RemoteMove_RR_FunSwitch_In() {
    *this = ::std::move(from);
  }

  inline PB_Basc_RemoteMove_RR_FunSwitch_In& operator=(const PB_Basc_RemoteMove_RR_FunSwitch_In& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_RemoteMove_RR_FunSwitch_In& operator=(PB_Basc_RemoteMove_RR_FunSwitch_In&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_RemoteMove_RR_FunSwitch_In& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_RemoteMove_RR_FunSwitch_In* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_RemoteMove_RR_FunSwitch_In*>(
               &_PB_Basc_RemoteMove_RR_FunSwitch_In_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PB_Basc_RemoteMove_RR_FunSwitch_In& a, PB_Basc_RemoteMove_RR_FunSwitch_In& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_RemoteMove_RR_FunSwitch_In* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_RemoteMove_RR_FunSwitch_In* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_RemoteMove_RR_FunSwitch_In* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_RemoteMove_RR_FunSwitch_In>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_RemoteMove_RR_FunSwitch_In& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_RemoteMove_RR_FunSwitch_In& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_RemoteMove_RR_FunSwitch_In* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_RemoteMove_RR_FunSwitch_In";
  }
  protected:
  explicit PB_Basc_RemoteMove_RR_FunSwitch_In(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoomIdFieldNumber = 2,
    kStateFieldNumber = 1,
  };
  // bytes RoomId = 2;
  void clear_roomid();
  const std::string& roomid() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_roomid(ArgT0&& arg0, ArgT... args);
  std::string* mutable_roomid();
  PROTOBUF_NODISCARD std::string* release_roomid();
  void set_allocated_roomid(std::string* roomid);
  private:
  const std::string& _internal_roomid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_roomid(const std::string& value);
  std::string* _internal_mutable_roomid();
  public:

  // uint32 State = 1;
  void clear_state();
  uint32_t state() const;
  void set_state(uint32_t value);
  private:
  uint32_t _internal_state() const;
  void _internal_set_state(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_RemoteMove_RR_FunSwitch_In)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr roomid_;
  uint32_t state_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fRemoteMove_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_RemoteMove_RR_ScreenCoordinate_Out final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_Out) */ {
 public:
  inline PB_Basc_RemoteMove_RR_ScreenCoordinate_Out() : PB_Basc_RemoteMove_RR_ScreenCoordinate_Out(nullptr) {}
  ~PB_Basc_RemoteMove_RR_ScreenCoordinate_Out() override;
  explicit constexpr PB_Basc_RemoteMove_RR_ScreenCoordinate_Out(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_RemoteMove_RR_ScreenCoordinate_Out(const PB_Basc_RemoteMove_RR_ScreenCoordinate_Out& from);
  PB_Basc_RemoteMove_RR_ScreenCoordinate_Out(PB_Basc_RemoteMove_RR_ScreenCoordinate_Out&& from) noexcept
    : PB_Basc_RemoteMove_RR_ScreenCoordinate_Out() {
    *this = ::std::move(from);
  }

  inline PB_Basc_RemoteMove_RR_ScreenCoordinate_Out& operator=(const PB_Basc_RemoteMove_RR_ScreenCoordinate_Out& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_RemoteMove_RR_ScreenCoordinate_Out& operator=(PB_Basc_RemoteMove_RR_ScreenCoordinate_Out&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_RemoteMove_RR_ScreenCoordinate_Out& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_RemoteMove_RR_ScreenCoordinate_Out* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_RemoteMove_RR_ScreenCoordinate_Out*>(
               &_PB_Basc_RemoteMove_RR_ScreenCoordinate_Out_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PB_Basc_RemoteMove_RR_ScreenCoordinate_Out& a, PB_Basc_RemoteMove_RR_ScreenCoordinate_Out& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_RemoteMove_RR_ScreenCoordinate_Out* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_RemoteMove_RR_ScreenCoordinate_Out* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_RemoteMove_RR_ScreenCoordinate_Out* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_RemoteMove_RR_ScreenCoordinate_Out>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_RemoteMove_RR_ScreenCoordinate_Out& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_RemoteMove_RR_ScreenCoordinate_Out& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_RemoteMove_RR_ScreenCoordinate_Out* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_Out";
  }
  protected:
  explicit PB_Basc_RemoteMove_RR_ScreenCoordinate_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnFieldNumber = 1,
  };
  // uint32 return_ = 1;
  void clear_return_();
  uint32_t return_() const;
  void set_return_(uint32_t value);
  private:
  uint32_t _internal_return_() const;
  void _internal_set_return_(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_Out)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t return__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fRemoteMove_2eproto;
};
// -------------------------------------------------------------------

class PB_Basc_RemoteMove_RR_FunSwitch_Out final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Soa.PB_Basc_RemoteMove_RR_FunSwitch_Out) */ {
 public:
  inline PB_Basc_RemoteMove_RR_FunSwitch_Out() : PB_Basc_RemoteMove_RR_FunSwitch_Out(nullptr) {}
  ~PB_Basc_RemoteMove_RR_FunSwitch_Out() override;
  explicit constexpr PB_Basc_RemoteMove_RR_FunSwitch_Out(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PB_Basc_RemoteMove_RR_FunSwitch_Out(const PB_Basc_RemoteMove_RR_FunSwitch_Out& from);
  PB_Basc_RemoteMove_RR_FunSwitch_Out(PB_Basc_RemoteMove_RR_FunSwitch_Out&& from) noexcept
    : PB_Basc_RemoteMove_RR_FunSwitch_Out() {
    *this = ::std::move(from);
  }

  inline PB_Basc_RemoteMove_RR_FunSwitch_Out& operator=(const PB_Basc_RemoteMove_RR_FunSwitch_Out& from) {
    CopyFrom(from);
    return *this;
  }
  inline PB_Basc_RemoteMove_RR_FunSwitch_Out& operator=(PB_Basc_RemoteMove_RR_FunSwitch_Out&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PB_Basc_RemoteMove_RR_FunSwitch_Out& default_instance() {
    return *internal_default_instance();
  }
  static inline const PB_Basc_RemoteMove_RR_FunSwitch_Out* internal_default_instance() {
    return reinterpret_cast<const PB_Basc_RemoteMove_RR_FunSwitch_Out*>(
               &_PB_Basc_RemoteMove_RR_FunSwitch_Out_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PB_Basc_RemoteMove_RR_FunSwitch_Out& a, PB_Basc_RemoteMove_RR_FunSwitch_Out& b) {
    a.Swap(&b);
  }
  inline void Swap(PB_Basc_RemoteMove_RR_FunSwitch_Out* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PB_Basc_RemoteMove_RR_FunSwitch_Out* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PB_Basc_RemoteMove_RR_FunSwitch_Out* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PB_Basc_RemoteMove_RR_FunSwitch_Out>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PB_Basc_RemoteMove_RR_FunSwitch_Out& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PB_Basc_RemoteMove_RR_FunSwitch_Out& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PB_Basc_RemoteMove_RR_FunSwitch_Out* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Soa.PB_Basc_RemoteMove_RR_FunSwitch_Out";
  }
  protected:
  explicit PB_Basc_RemoteMove_RR_FunSwitch_Out(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnFieldNumber = 1,
  };
  // uint32 return_ = 1;
  void clear_return_();
  uint32_t return_() const;
  void set_return_(uint32_t value);
  private:
  uint32_t _internal_return_() const;
  void _internal_set_return_(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Soa.PB_Basc_RemoteMove_RR_FunSwitch_Out)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  uint32_t return__;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Basc_5fRemoteMove_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PB_Basc_RemoteMove_RR_ScreenCoordinate_In

// uint32 Xapp = 1;
inline void PB_Basc_RemoteMove_RR_ScreenCoordinate_In::clear_xapp() {
  xapp_ = 0u;
}
inline uint32_t PB_Basc_RemoteMove_RR_ScreenCoordinate_In::_internal_xapp() const {
  return xapp_;
}
inline uint32_t PB_Basc_RemoteMove_RR_ScreenCoordinate_In::xapp() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_In.Xapp)
  return _internal_xapp();
}
inline void PB_Basc_RemoteMove_RR_ScreenCoordinate_In::_internal_set_xapp(uint32_t value) {
  
  xapp_ = value;
}
inline void PB_Basc_RemoteMove_RR_ScreenCoordinate_In::set_xapp(uint32_t value) {
  _internal_set_xapp(value);
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_In.Xapp)
}

// uint32 Yapp = 2;
inline void PB_Basc_RemoteMove_RR_ScreenCoordinate_In::clear_yapp() {
  yapp_ = 0u;
}
inline uint32_t PB_Basc_RemoteMove_RR_ScreenCoordinate_In::_internal_yapp() const {
  return yapp_;
}
inline uint32_t PB_Basc_RemoteMove_RR_ScreenCoordinate_In::yapp() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_In.Yapp)
  return _internal_yapp();
}
inline void PB_Basc_RemoteMove_RR_ScreenCoordinate_In::_internal_set_yapp(uint32_t value) {
  
  yapp_ = value;
}
inline void PB_Basc_RemoteMove_RR_ScreenCoordinate_In::set_yapp(uint32_t value) {
  _internal_set_yapp(value);
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_In.Yapp)
}

// -------------------------------------------------------------------

// PB_Basc_RemoteMove_RR_FunSwitch_In

// uint32 State = 1;
inline void PB_Basc_RemoteMove_RR_FunSwitch_In::clear_state() {
  state_ = 0u;
}
inline uint32_t PB_Basc_RemoteMove_RR_FunSwitch_In::_internal_state() const {
  return state_;
}
inline uint32_t PB_Basc_RemoteMove_RR_FunSwitch_In::state() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_RemoteMove_RR_FunSwitch_In.State)
  return _internal_state();
}
inline void PB_Basc_RemoteMove_RR_FunSwitch_In::_internal_set_state(uint32_t value) {
  
  state_ = value;
}
inline void PB_Basc_RemoteMove_RR_FunSwitch_In::set_state(uint32_t value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_RemoteMove_RR_FunSwitch_In.State)
}

// bytes RoomId = 2;
inline void PB_Basc_RemoteMove_RR_FunSwitch_In::clear_roomid() {
  roomid_.ClearToEmpty();
}
inline const std::string& PB_Basc_RemoteMove_RR_FunSwitch_In::roomid() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_RemoteMove_RR_FunSwitch_In.RoomId)
  return _internal_roomid();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PB_Basc_RemoteMove_RR_FunSwitch_In::set_roomid(ArgT0&& arg0, ArgT... args) {
 
 roomid_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_RemoteMove_RR_FunSwitch_In.RoomId)
}
inline std::string* PB_Basc_RemoteMove_RR_FunSwitch_In::mutable_roomid() {
  std::string* _s = _internal_mutable_roomid();
  // @@protoc_insertion_point(field_mutable:Soa.PB_Basc_RemoteMove_RR_FunSwitch_In.RoomId)
  return _s;
}
inline const std::string& PB_Basc_RemoteMove_RR_FunSwitch_In::_internal_roomid() const {
  return roomid_.Get();
}
inline void PB_Basc_RemoteMove_RR_FunSwitch_In::_internal_set_roomid(const std::string& value) {
  
  roomid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* PB_Basc_RemoteMove_RR_FunSwitch_In::_internal_mutable_roomid() {
  
  return roomid_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* PB_Basc_RemoteMove_RR_FunSwitch_In::release_roomid() {
  // @@protoc_insertion_point(field_release:Soa.PB_Basc_RemoteMove_RR_FunSwitch_In.RoomId)
  return roomid_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void PB_Basc_RemoteMove_RR_FunSwitch_In::set_allocated_roomid(std::string* roomid) {
  if (roomid != nullptr) {
    
  } else {
    
  }
  roomid_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), roomid,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (roomid_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    roomid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Soa.PB_Basc_RemoteMove_RR_FunSwitch_In.RoomId)
}

// -------------------------------------------------------------------

// PB_Basc_RemoteMove_RR_ScreenCoordinate_Out

// uint32 return_ = 1;
inline void PB_Basc_RemoteMove_RR_ScreenCoordinate_Out::clear_return_() {
  return__ = 0u;
}
inline uint32_t PB_Basc_RemoteMove_RR_ScreenCoordinate_Out::_internal_return_() const {
  return return__;
}
inline uint32_t PB_Basc_RemoteMove_RR_ScreenCoordinate_Out::return_() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_Out.return_)
  return _internal_return_();
}
inline void PB_Basc_RemoteMove_RR_ScreenCoordinate_Out::_internal_set_return_(uint32_t value) {
  
  return__ = value;
}
inline void PB_Basc_RemoteMove_RR_ScreenCoordinate_Out::set_return_(uint32_t value) {
  _internal_set_return_(value);
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_RemoteMove_RR_ScreenCoordinate_Out.return_)
}

// -------------------------------------------------------------------

// PB_Basc_RemoteMove_RR_FunSwitch_Out

// uint32 return_ = 1;
inline void PB_Basc_RemoteMove_RR_FunSwitch_Out::clear_return_() {
  return__ = 0u;
}
inline uint32_t PB_Basc_RemoteMove_RR_FunSwitch_Out::_internal_return_() const {
  return return__;
}
inline uint32_t PB_Basc_RemoteMove_RR_FunSwitch_Out::return_() const {
  // @@protoc_insertion_point(field_get:Soa.PB_Basc_RemoteMove_RR_FunSwitch_Out.return_)
  return _internal_return_();
}
inline void PB_Basc_RemoteMove_RR_FunSwitch_Out::_internal_set_return_(uint32_t value) {
  
  return__ = value;
}
inline void PB_Basc_RemoteMove_RR_FunSwitch_Out::set_return_(uint32_t value) {
  _internal_set_return_(value);
  // @@protoc_insertion_point(field_set:Soa.PB_Basc_RemoteMove_RR_FunSwitch_Out.return_)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Soa

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Basc_5fRemoteMove_2eproto
